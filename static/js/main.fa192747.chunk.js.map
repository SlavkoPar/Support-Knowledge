{"version":3,"sources":["Answers/actions.ts","Categories/actions.ts","Users/actions.ts","Categories/types.ts","Categories/categoryReducer.ts","Categories/categoriesReducer.ts","Answers/reducer.ts","roleTags/actions.ts","Users/reducer.ts","Users/types.ts","roleTags/reducer.ts","Top/actions.ts","Top/reducer.ts","store/Store.tsx","ThemeContext.tsx","components/AutoSuggest.tsx","common/containers/UserName.tsx","common/components/OptionName.tsx","Categories/components/CategoryForm.tsx","Categories/containers/ContainerCategoryForm.tsx","common/Select.tsx","Categories/sourceOptions.ts","Categories/statusOptions.ts","components/AutoSuggestAnswer.tsx","common/useHover.tsx","Categories/components/QuestionAnswerRow.tsx","Answers/components/Form.tsx","Categories/components/QuestionAnswers.tsx","Categories/containers/ContainerQuestionAnswers.tsx","Categories/components/QuestionForm.tsx","Categories/containers/ContainerQuestionForm.tsx","Categories/components/QuestionRow.tsx","Categories/components/CategoryRow.tsx","Categories/components/CategoryList.tsx","Categories/containers/ContainerCategoryList.tsx","Categories/components/CategoriesPage.tsx","Categories/components/SuportPage.tsx","Categories/containers/ContainerCategoriesPage.tsx","components/Support.tsx","Answers/components/ListRow.tsx","Answers/components/List.tsx","Answers/components/Page.tsx","Answers/containers/Page.tsx","Users/components/UserForm.tsx","Users/containers/UserForm.tsx","Users/components/UserRow.tsx","Users/components/RoleRow.tsx","Users/components/UsersPage.tsx","Users/containers/UsersPage.tsx","Top/components/LoginForm.tsx","Top/containers/LoginForm.tsx","components/Landing.tsx","SideBar.tsx","components/About.tsx","App.tsx","index.tsx"],"names":["AnswerActionTypes","parseFromJson","data","map","a","parseDates","created","Date","SUPPORT_ANSWERS","QuestionActionTypes","addAnswer","dispatch","getState","type","ADD_ANSWER","createdBy","topState","top","auth","who","userId","err","console","error","storeAnswer","answer","formMode","STORE_ANSWER","Promise","resolve","answerState","answerId","cancelAnswer","CANCEL_ANSWER","g","questions","q","categoryId","answers","assigned","UserActionTypes","getQuestion","questionId","GET_QUESTION","addQuestion","text","canEdit","ADD_QUESTION","showCategoryForm","editQuestion","showQuestionForm","EDIT_QUESTION","assignQuestionAnswer","tekst","delay","ASSIGN_QUESTION_ANSWER","assignedBy","syncWithOthers","entity","addCategoryUnknown","state","categoriesState","categories","find","c","newCategory","initialCategory","title","storeCategory","then","reject","setTimeout","closeQuestionForm","CLOSE_QUESTION_FORM","openQuestionForm","OPEN_QUESTION_FORM","doSync","category","STORE_CATEGORY","updateCategory","UPDATE_CATEGORY","addAndAssignNewAnswer","initialQuestion","words","source","status","initialCategoryState","storeToStorage","STORE_QUESTION","UPDATE_QUESTION","REMOVE_QUESTION","REMOVE_QUESTION_ANSWER","aTypesToStore","Object","keys","filter","includes","reduceQuestions","categoryQuestions","action","categoryState","get","newState","myReducer","forEach","localStorage","setItem","JSON","stringify","split","set","question","questionIdMax","CANCEL_QUESTION","qa","SUPPORT_CATEGORIES","isExpanded","initialCategoriesState","undefined","Map","categoryOptions","loading","categoryIdEditing","ADD_CATEGORY","TOGGLE_CATEGORY","REMOVE_CATEGORY","getQuestions","LOAD_CATEGORIES","value","label","unshift","Math","max","questionCopy","categoryIdWas","categoryIdCopy","GET_CATEGORY","EDIT_CATEGORY","categoryCopy","CANCEL_CATEGORY","reduce","acc","push","initialAnswer","options","initialAnswerState","GET_ALL_ANSWERS","GET_ANSWER","length","EDIT_ANSWER","REMOVE_ANSWER","parseRole","users","u","TagActionTypes","getUser","GET_USER","findUser","name","usersState","roles","role","user","userName","addUser","roleId","ADD_USER","editUser","EDIT_USER","removeUser","REMOVE_USER","CREATE_OPTIONS","storeUser","STORE_USER","SUPPORT_USERS","initialUser","pwd","department","initialUserRole","color","initialUsersState","userEditing","allUsers","roleOptions","userOptions","roleIdEditing","ownerUserId","GET_ALL_USERS","log","concat","userIdMax","userRole","CANCEL_USER","userEdited","ADD_ROLE","TOGGLE_ROLE","EDIT_ROLE","group","STORE_ROLE","REMOVE_ROLE","storageTagsDemo","RoleId","storageTags","initialTagState","tags","TopActionTypes","SUPPORT_TOP","parseObj","json","visited","authenticated","authenticate","loginUser","AUTHENTICATE","AUTHENTICATE_WRONG_PWD","AUTHENTICATE_WRONG_USERNAME","initialTopState","isAuthenticated","uuid","darkMode","LOAD_TOP","authError","REGISTER","REGISTER_USERNAME_EXISTS","NAVBAR_TOGGLE","TOGGLE_MODE","UNAUTHENTICATE","rootReducer","combineReducers","tagState","GET_ALL_TAGS","tag","GET_TAG","ThemeActionKind","initialState","variant","bg","ThemeContext","createContext","themeReducer","ThemeProvider","props","initState","useReducer","Provider","children","inputAutosuggest","createRef","QuestionAutosuggestMulti","Autosuggest","AutoSuggest","onSuggestionsClearRequested","setState","suggestions","anyWord","valueWordRegex","questionWords","valWordRegex","questionWord","test","getSuggestions","highlighted","window","focus","current","this","multiSection","onSuggestionsFetchRequested","bind","onSuggestionSelected","getSuggestionValue","renderSuggestion","renderSectionTitle","getSectionSuggestions","onSuggestionHighlighted","highlightFirstSuggestion","renderInputComponent","renderSuggestionsContainer","focusInputOnSuggestionClick","inputProps","placeholder","onChange","e","changeEvent","autoFocus","event","suggestion","onSelectQuestion","params","matches","AutosuggestHighlightMatch","query","parts","AutosuggestHighlightParse","part","index","className","highlight","section","ref","restInputProps","containerProps","newValue","method","escapedValue","trim","replace","word","RegExp","React","connect","store","ownProps","id","option","CategForm","formik","useFormik","enableReinitialize","initialValues","validationSchema","Yup","required","onSubmit","values","saveForm","isEdit","Form","handleSubmit","Group","controlId","Label","Control","as","handleChange","onBlur","submitForm","style","width","rows","Text","touched","errors","UserName","toLocaleDateString","Button","size","onClick","cancel","useContext","Container","Select","disabled","selectedIndex","currentTarget","selectedOption","sourceOptions","statusOptions","AutoSuggestAnswer","setAnswerText","answersUnassigned","useHover","useState","isHovered","hoverProps","setValue","divRef","useRef","handleMouseOver","handleMouseOut","useEffect","node","addEventListener","removeEventListener","QuestionAnswerRow","hoverRef","questionAnswer","removeQuestionAnswer","fontSize","toLocaleTimeString","navigator","clipboard","writeText","stopPropagation","icon","faCopy","preventDefault","faWindowClose","AnsForm","AnswerForm","QuestionAnswers","questionAnswers","selectQuestionAnswer","copyQuestionAnswer","add","setTekst","show","setShow","handleClose","handleShow","showAssign","setShowAssign","height","overflowY","Table","responsive","striped","bordered","hover","colSpan","textAlign","Modal","onHide","animation","centered","contentClassName","Header","closeButton","Title","Body","val","joinQuestionAnswers","sort","b","QuestForm","moreThan","isDisabled","setFieldValue","ContainerQuestionAnswers","editForm","storeQuestion","updateQuestion","QuestionRow","edit","remove","ListGroup","Item","backgroundColor","borderWidth","faEdit","CategoryRow","toggleCategory","editCategory","removeCategory","onSelectCategory","faCaretDown","faCaretRight","faPlus","CategoryList","addCategory","inputEl","select","tagOptions","f","tagId","removeQuestion","getCategory","Page","useParams","fluid","Row","Col","md","border","ContainerCategoryList","borderRadius","padding","marginTop","ContainerCategoryForm","ContainerQuestionForm","SupportPage","open","lg","display","alignItems","mapStateToProps","mapDispatchToProps","CategoriesPage","supporter","Support","ListRow","usedAnswers","getCategoryQuestion","alert","List","slug","getUsedAnswers","arr","editAnswer","removeAnswer","UsrForm","min","r","onSelectUser","userRoleId","UserRow","RoleRow","toggleRole","editRole","removeRole","marginLeft","Badge","pill","UserPage","addRole","storeRole","userRoles","target","defaultValue","UsersPage","LogForm","navigate","useNavigate","isRegister","handleBlur","maxLength","login","VIEWERS","OWNER","CANCEL","Landing","signOut","toggleMode","theme","Navbar","expand","collapseOnSelect","Brand","href","Toggle","Offcanvas","placement","closeVariant","Nav","onSelect","eventKey","document","body","classList","contains","Link","faSurprise","faQuestion","faAnchor","faUserFriends","NavDropdown","faUser","menuVariant","align","Divider","marginBlockStart","marginBlockEnd","toggleNavbar","checkAuthentication","setOpen","app","path","element","About","createStore","applyMiddleware","thunk","loadedFromStorage","sCategories","getItem","categoriesJson","parse","sQuestions","sAnswers","parsed","sUserRoles","s","catch","getMessage","sTags","sessionId","floor","random","sessionStorage","toString","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.fa192747.chunk.js","sourcesContent":["// Import redux types\r\nimport { ActionCreator, Dispatch } from 'redux';\r\nimport { ThunkAction } from 'redux-thunk';\r\n// Import Answer Typing\r\nimport { IAnswer, IAnswerState, IAnswerJson } from './types';\r\n\r\nimport { IAppState } from '../store/Store';\r\n\r\nimport data from \"./data.json\"\r\nconst parseFromJson = (): IAnswer[] => {\r\n\treturn data.map(a => parseDates(a))\r\n}\r\n\r\nconst parseFromLocalStorage = (arr: IAnswerJson[]) : IAnswer[] =>  {\r\n\treturn arr.map(a => parseDates(a));\r\n}\r\n\r\nconst parseDates = (a: IAnswerJson): IAnswer => ({\r\n\t...a, \r\n\tcreated: new Date(a.created)\r\n})\r\n\r\n// localStorage\r\nexport const SUPPORT_ANSWERS = 'SUPPORT_ANSWERS';\r\n \r\n// Create Action Constants\r\nexport enum AnswerActionTypes {\r\n  GET_ALL_ANSWERS = 'GET_ALL_ANSWERS',\r\n  GET_ANSWER = 'GET_ANSWER',\r\n  ADD_ANSWER = 'ADD_ANSWER',\r\n  EDIT_ANSWER = 'EDIT_ANSWER',\r\n  REMOVE_ANSWER = 'REMOVE_ANSWER',\r\n  STORE_ANSWER = 'STORE_ANSWER',\r\n  CANCEL_ANSWER = 'CANCEL_ANSWER'\r\n}\r\n\r\n// Interface for Get All Action Type\r\nexport interface IGetAll {\r\n\ttype: AnswerActionTypes.GET_ALL_ANSWERS;\r\n\tanswers: IAnswer[];\r\n }\r\n \r\nexport interface IGet {\r\n\ttype: AnswerActionTypes.GET_ANSWER;\r\n\tanswerId: number;\r\n}\r\n\r\nexport interface IAdd {\r\n\ttype: AnswerActionTypes.ADD_ANSWER;\r\n\tcreatedBy: number\r\n}\r\n\r\nexport interface IEdit {\r\n\ttype: AnswerActionTypes.EDIT_ANSWER;\r\n\tanswerId: number;\r\n}\r\n\r\nexport interface IRemove {\r\n\ttype: AnswerActionTypes.REMOVE_ANSWER;\r\n\tanswerId: number;\r\n}\r\n\r\nexport interface IStore {\r\n\ttype: AnswerActionTypes.STORE_ANSWER;\r\n\tanswer: IAnswer;\r\n\tassignToQuestion?: boolean\r\n}\r\n\r\nexport interface ICancel {\r\n\ttype: AnswerActionTypes.CANCEL_ANSWER;\r\n}\r\n\r\n\r\n// Combine the action types with a union (we assume there are more)\r\nexport type AnswerActions = IGetAll | IGet | IAdd | IEdit | IRemove | IStore | ICancel;\r\n\r\nconst isWebStorageSupported = () => 'localStorage' in window\r\n\r\n// Get All Action <Promise<Return Type>, State Interface, Type of Param, Type of Action>\r\nexport const getAllAnswers: ActionCreator<\r\n\tThunkAction<Promise<any>, IAnswerState, null, IGetAll>\r\n> = () => {\r\n\treturn async (dispatch: Dispatch) => {\r\n\t\ttry {\r\n\t\t\t// const response = await axios.get('https://swapi.co/api/people/');\r\n\t\t\tlet answers: IAnswer[] = [];\r\n\t\t\tif (isWebStorageSupported()) {\r\n\t\t\t\tconst sAnswers = localStorage.getItem(SUPPORT_ANSWERS);\r\n\t\t\t\tconsole.log('SAnswers',  sAnswers)\r\n\t\t\t\tif (sAnswers !== null) {\r\n\t\t\t\t\tconst parsed = JSON.parse(sAnswers);\r\n\t\t\t\t\tanswers = parseFromLocalStorage(parsed);\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tanswers = parseFromJson();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tanswers = parseFromJson();\r\n\t\t\t}\r\n\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: AnswerActionTypes.GET_ALL_ANSWERS,\r\n\t\t\t\tanswers\r\n\t\t\t});\r\n\t\t} catch (err) {\r\n\t\t\tconsole.error(err);\r\n\t\t}\r\n\t};\r\n};\r\n\r\n\r\nexport const addAnswer: ActionCreator<any> = () => {\r\n  return (dispatch: Dispatch, getState: () => IAppState) => {\r\n    try {\r\n      dispatch({\r\n        type: AnswerActionTypes.ADD_ANSWER,\r\n\t\tcreatedBy: getState().topState.top!.auth!.who!.userId,\t\r\n      });\r\n    } catch (err) {\r\n      console.error(err);\r\n    }\r\n  };\r\n};\r\n\r\nexport const getAnswer: ActionCreator<\r\n\tThunkAction<Promise<any>, IAnswerState, null, IGet>\r\n> = (answerId: number) => {\r\n\treturn async (dispatch: Dispatch) => {\r\n\t\ttry {\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: AnswerActionTypes.GET_ANSWER,\r\n\t\t\t\tanswerId\r\n\t\t\t});\r\n\t\t} catch (err) {\r\n\t\t\tconsole.error(err);\r\n\t\t}\r\n\t};\r\n};\r\n\r\nexport const editAnswer: ActionCreator<\r\n\tThunkAction<Promise<any>, IAnswerState, null, IEdit>\r\n> = (answerId: number) => {\r\n\treturn async (dispatch: Dispatch) => {\r\n\t\ttry {\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: AnswerActionTypes.EDIT_ANSWER,\r\n\t\t\t\tanswerId\r\n\t\t\t});\r\n\t\t} catch (err) {\r\n\t\t\tconsole.error(err);\r\n\t\t}\r\n\t};\r\n};\r\n\r\nexport const removeAnswer: ActionCreator<\r\n\tThunkAction<Promise<any>, IAnswerState, null, IGetAll>\r\n> = (answerId: number) => {\r\n\treturn async (dispatch: Dispatch) => {\r\n\t\ttry {\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: AnswerActionTypes.REMOVE_ANSWER,\r\n\t\t\t\tanswerId\r\n\t\t\t});\r\n\t\t} catch (err) {\r\n\t\t\tconsole.error(err);\r\n\t\t}\r\n\t};\r\n};\r\n\r\n\r\nexport const storeAnswer: ActionCreator<\r\n\tThunkAction<Promise<any>, IAppState, null, IStore>\r\n> = (answer: IAnswer, formMode: string) => {\r\n\treturn async (dispatch: Dispatch, getState: () => IAppState ): Promise<any> => {\r\n\t\ttry {\r\n\t\t\tif (formMode === 'add') {\r\n\t\t\t\tdispatch({\r\n\t\t\t\t\ttype: AnswerActionTypes.STORE_ANSWER,\r\n\t\t\t\t\tanswer\r\n\t\t\t\t});\r\n\t\t\t\treturn Promise.resolve(getState().answerState.answer!.answerId)\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tdispatch({\r\n\t\t\t\t\ttype: AnswerActionTypes.STORE_ANSWER,\r\n\t\t\t\t\tanswer\r\n\t\t\t\t});\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t}\r\n\t\tcatch (err) {\r\n\t\t\tconsole.error(err);\r\n\t\t}\r\n\t};\r\n};\r\n\r\nexport const cancelAnswer: ActionCreator<any> = () => {\r\n\treturn (dispatch: Dispatch) => {\r\n\t  try {\r\n\t\t dispatch({\r\n\t\t\ttype: AnswerActionTypes.CANCEL_ANSWER\r\n\t\t });\r\n\t  } catch (err) {\r\n\t\t console.error(err);\r\n\t  }\r\n\t};\r\n };\r\n \r\n\r\n// const addAnswerToLocalStorage = (answer: IAnswer): Promise<any> => {\r\n// \treturn new Promise((resolve, reject) => {\r\n// \t\tsetTimeout(() => {\r\n// \t\t\tresolve({\r\n// \t\t\t\t'status': 200,\r\n// \t\t\t\t'content-type': 'application/json',\r\n// \t\t\t\t'data' : {\r\n// \t\t\t\t'results': answer\r\n// \t\t\t\t}\r\n// \t\t\t})\r\n// \t\t}, 50)\r\n// \t})\r\n// }\r\n\r\n","// Import redux types\r\nimport { ActionCreator, Dispatch } from 'redux';\r\nimport { ThunkAction } from 'redux-thunk';\r\n// import axios from 'axios';\r\n\r\n// Import Question Typing\r\nimport { IQuestion, ICategory, ICategoryJson, ICategoriesState, IQuestionJson, ICategoryState } from './types';\r\n\r\nimport { addAnswer, AnswerActionTypes, storeAnswer } from '../Answers/actions'\r\nimport { IAnswer, IAnswerState } from '../Answers/types';\r\n\r\n///////////////////////////////////////////////////\r\n// localStorage\r\nimport { initialCategory, SUPPORT_CATEGORIES } from './categoriesReducer';\r\n\r\nimport data from \"./data.json\"\r\nimport { IAppState } from '../store/Store';\r\nimport { reduceQuestions } from './categoryReducer';\r\n\r\nconst parseFromJson = (): ICategory[] => {\r\n\treturn data.map(g => parseDates(g));\r\n}\r\n\r\nconst parseQuestionsFromLocalStorage = (questions: IQuestionJson[]): IQuestion[] => {\r\n\treturn questions.map(q => ({\r\n\t\t\t...q,\r\n\t\t\tcategoryId: q.categoryId!,\r\n\t\t\twords: q.text.split(' '),\r\n\t\t\tanswers: q.answers.map(a => ({ ...a, assigned: new Date(a.assigned) })),\r\n\t\t\tcreated: new Date(q.created)\r\n\t\t})\r\n\t)\r\n}\r\n\r\nconst parseFromLocalStorage = (arr: ICategoryJson[]): ICategory[] => {\r\n\treturn arr.map(g => parseDates(g));\r\n}\r\n\r\nconst parseDates = (g: ICategoryJson): ICategory => {\r\n\treturn {\r\n\t\t...g,\r\n\t\tquestions: g.questions.map(q => ({\r\n\t\t\t...q,\r\n\t\t\tcategoryId: g.categoryId,\r\n\t\t\tanswers: q.answers.map(a => ({ ...a, assigned: new Date(a.assigned) })),\r\n\t\t\tcreated: new Date(q.created)\r\n\t\t})),\r\n\t\tcreated: new Date(g.created)\r\n\t}\r\n}\r\n\r\n// Create Action Constants\r\nexport enum QuestionActionTypes {\r\n\tLOAD_CATEGORIES = 'LOAD_CATEGORIES',\r\n\tGET_QUESTION = 'GET_QUESTION',\r\n\tADD_QUESTION = 'ADD_QUESTION',\r\n\tEDIT_QUESTION = 'EDIT_QUESTION',\r\n\tREMOVE_QUESTION = 'REMOVE_QUESTION',\r\n\tSTORE_QUESTION = 'STORE_QUESTION',\r\n\tUPDATE_QUESTION = 'UPDATE_QUESTION',\r\n\tCANCEL_QUESTION = 'CANCEL_QUESTION',\r\n\tCLOSE_QUESTION_FORM = 'CLOSE_QUESTION_FORM',\r\n\tOPEN_QUESTION_FORM = 'OPEN_QUESTION_FORM',\r\n\r\n\t// groups\r\n\tGET_CATEGORY = 'GET_CATEGORY',\r\n\tADD_CATEGORY = 'ADD_CATEGORY',\r\n\tTOGGLE_CATEGORY = 'EXPAND_CATEGORY',\r\n\tEDIT_CATEGORY = 'EDIT_CATEGORY',\r\n\tREMOVE_CATEGORY = 'REMOVE_CATEGORY',\r\n\tSTORE_CATEGORY = 'STORE_CATEGORY',\r\n\tUPDATE_CATEGORY = 'UPDATE_CATEGORY',\r\n\tCANCEL_CATEGORY = 'CANCEL_CATEGORY',\r\n\t// question answers\r\n\tREMOVE_QUESTION_ANSWER = 'REMOVE_QUESTION_ANSWER',\r\n\tASSIGN_QUESTION_ANSWER = 'ASSIGN_QUESTION_ANSWER',\r\n\t// localSTorage\r\n\tSET_LAST_ANSWER_ID = 'SET_LAST_ANSWER_ID'\r\n}\r\n\r\n\r\n// Interface for Get All Action Type\r\nexport interface ILoad {\r\n\ttype: QuestionActionTypes.LOAD_CATEGORIES;\r\n\tcategories: ICategory[];\r\n\tcategoryQuestions: Map<number, ICategoryState>\r\n}\r\n\r\n\r\nexport interface IGet {\r\n\ttype: QuestionActionTypes.GET_QUESTION;\r\n\tcategoryId: number;\r\n\tquestionId: number;\r\n}\r\n\r\nexport interface IAdd {\r\n\ttype: QuestionActionTypes.ADD_QUESTION;\r\n\tcreatedBy: number;\r\n\tcategoryId: number;\r\n\ttext: string;\r\n}\r\n\r\nexport interface IEdit {\r\n\ttype: QuestionActionTypes.EDIT_QUESTION;\r\n\tcategoryId: number;\r\n\tquestionId: number;\r\n\tshowQuestionForm: boolean;\r\n}\r\n\r\nexport interface IRemove {\r\n\ttype: QuestionActionTypes.REMOVE_QUESTION;\r\n\tcategoryId: number;\r\n\tquestionId: number;\r\n}\r\n\r\n\r\n\r\nexport interface IStore {\r\n\ttype: QuestionActionTypes.STORE_QUESTION;\r\n\tquestion: IQuestion;\r\n}\r\n\r\nexport interface IUpdate {\r\n\ttype: QuestionActionTypes.UPDATE_QUESTION;\r\n\tquestion: IQuestion;\r\n}\r\n\r\nexport interface ICancel {\r\n\ttype: QuestionActionTypes.CANCEL_QUESTION;\r\n}\r\n\r\nexport interface ICloseQuestionForm {\r\n\ttype: QuestionActionTypes.CLOSE_QUESTION_FORM;\r\n}\r\n\r\nexport interface IOpenQuestionForm {\r\n\ttype: QuestionActionTypes.OPEN_QUESTION_FORM;\r\n}\r\n\r\n\r\n// group\r\n\r\nexport interface IGetCategory {\r\n\ttype: QuestionActionTypes.GET_CATEGORY;\r\n\tcategoryId: number,\r\n\tshowCategoryForm: boolean\r\n}\r\n\r\nexport interface IAddCategory {\r\n\ttype: QuestionActionTypes.ADD_CATEGORY;\r\n\t//categoryId: number\r\n\tshowCategoryForm: boolean\r\n}\r\n\r\nexport interface ICancelCategory {\r\n\ttype: QuestionActionTypes.CANCEL_CATEGORY;\r\n}\r\n\r\n\r\nexport interface IToggleCategory {\r\n\ttype: QuestionActionTypes.TOGGLE_CATEGORY;\r\n\tcategoryId: number\r\n}\r\n\r\nexport interface IEditCategory {\r\n\ttype: QuestionActionTypes.EDIT_CATEGORY;\r\n\tcategoryId: number,\r\n\tshowCategoryForm: boolean\r\n}\r\n\r\nexport interface IRemoveCategory {\r\n\ttype: QuestionActionTypes.REMOVE_CATEGORY;\r\n\tcategoryId: number\r\n}\r\n\r\nexport interface IStoreCategory {\r\n\ttype: QuestionActionTypes.STORE_CATEGORY;\r\n\tcategory: ICategory;\r\n}\r\n\r\nexport interface IUpdateCategory {\r\n\ttype: QuestionActionTypes.UPDATE_CATEGORY;\r\n\tcategory: ICategory;\r\n}\r\n\r\nexport interface ICancelCategory {\r\n\ttype: QuestionActionTypes.CANCEL_CATEGORY;\r\n}\r\n\r\n\r\n// question answers\r\nexport interface IRemoveQuestionAnswer {\r\n\ttype: QuestionActionTypes.REMOVE_QUESTION_ANSWER;\r\n\tcategoryId: number,\r\n\tquestionId: number,\r\n\tanswerId: number\r\n}\r\n\r\nexport interface IAssignQuestionAnswer {\r\n\ttype: QuestionActionTypes.ASSIGN_QUESTION_ANSWER;\r\n\tcategoryId: number,\r\n\tquestionId: number,\r\n\tanswerId: number,\r\n\tassignedBy: number,\r\n\ttekst?: string\r\n}\r\n\r\nexport interface IAddAndAssignNewAnswer {\r\n\ttype: AnswerActionTypes.STORE_ANSWER;\r\n\tcategoryId: number,\r\n\tquestionId: number,\r\n\tanswer: IAnswer;\r\n}\r\n\r\n\r\n// Combine the action types with a union (we assume there are more)\r\nexport type QuestionActions = ILoad | IGet | IAdd | IEdit | IRemove | IStore | IUpdate | ICancel |\r\n\tIGetCategory | IAddCategory | IToggleCategory | IEditCategory | IRemoveCategory |\r\n\tIStoreCategory | IUpdateCategory | ICancelCategory |\r\n\tIRemoveQuestionAnswer | IAssignQuestionAnswer |\r\n\tIAddAndAssignNewAnswer |\r\n\tICloseQuestionForm | IOpenQuestionForm;\r\n\r\nconst isWebStorageSupported = () => 'localStorage' in window\r\n\r\n\r\n// Get All Action <Promise<Return Type>, State Interface, Type of Param, Type of Action>\r\nexport const loadCategories: ActionCreator<\r\n\tThunkAction<Promise<any>, ICategoriesState, null, ILoad>\r\n> = () => {\r\n\treturn async (dispatch: Dispatch) => {\r\n\t\ttry {\r\n\t\t\tlet categories: ICategory[] = [];\r\n\t\t\tlet loadedFromStorage = false;\r\n\t\t\tif (isWebStorageSupported()) {\r\n\t\t\t\tconst sCategories = localStorage.getItem(SUPPORT_CATEGORIES);\r\n\t\t\t\tif (sCategories !== null) {\r\n\t\t\t\t\t// load from storage\r\n\t\t\t\t\tconst categoriesJson = JSON.parse(sCategories);\r\n\t\t\t\t\tcategories = parseFromLocalStorage(categoriesJson);\r\n\t\t\t\t\tcategories.forEach(category => {\r\n\t\t\t\t\t\tconst sQuestions = localStorage.getItem(`CATEGORY_${category.categoryId}`);\r\n\t\t\t\t\t\tif (sQuestions) {\r\n\t\t\t\t\t\t\tconst json = JSON.parse(sQuestions);\r\n\t\t\t\t\t\t\tcategory.questions = parseQuestionsFromLocalStorage(json);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t})\r\n\t\t\t\t\tloadedFromStorage = true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tconsole.log({categories})\r\n\r\n\t\t\tif (!loadedFromStorage) {\r\n\t\t\t\t// load from data\r\n\t\t\t\tcategories = parseFromJson();\r\n\t\t\t\tfor (let category of categories) {\r\n\t\t\t\t\tcategory.questions.forEach(q => q.categoryId = category.categoryId);\r\n\t\t\t\t\tlocalStorage.setItem(`CATEGORY_${category.categoryId}`, JSON.stringify(category.questions));\r\n\t\t\t\t\tcategory.questions.forEach(q => q.words = q.text.split(' '));\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tconst categoryQuestions = new Map<number, ICategoryState>();\r\n\t\t\tfor (let category of categories) {\r\n\t\t\t\tconst categoryState: ICategoryState = {\r\n\t\t\t\t\tquestions: [...category.questions]\r\n\t\t\t\t}\r\n\t\t\t\tcategoryQuestions.set(category.categoryId, categoryState);\r\n\t\t\t\tcategory.questions = [];\r\n\t\t\t}\r\n\r\n\t\t\tif (!loadedFromStorage) {\r\n\t\t\t\tlocalStorage.setItem(SUPPORT_CATEGORIES, JSON.stringify(categories));\r\n\t\t\t}\r\n\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: QuestionActionTypes.LOAD_CATEGORIES,\r\n\t\t\t\tcategories,\r\n\t\t\t\tcategoryQuestions\r\n\t\t\t});\r\n\t\t}\r\n\t\tcatch (err) {\r\n\t\t\tconsole.error(err);\r\n\t\t}\r\n\t};\r\n};\r\n\r\n\r\n// Get Question <Promise<Return Type>, State Interface, Type of Param, Type of Action> \r\nexport const getQuestion: ActionCreator<\r\n\tThunkAction<Promise<any>, ICategoriesState, string, IGet>\r\n> = (categoryId: number, questionId: number) => {\r\n\treturn async (dispatch: Dispatch) => {\r\n\t\ttry {\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: QuestionActionTypes.GET_QUESTION,\r\n\t\t\t\tcategoryId,\r\n\t\t\t\tquestionId\r\n\t\t\t});\r\n\t\t} catch (err) {\r\n\t\t\tconsole.error(err);\r\n\t\t}\r\n\t};\r\n};\r\n\r\ninterface IMsg {\r\n\tttype: string,\r\n\tdata: object\r\n}\r\n\r\n\r\n\r\nexport const addQuestion: ActionCreator<\r\n\tThunkAction<Promise<any>, IAppState, null, IAdd>\r\n> = (categoryId: number, text: string, canEdit?: boolean) => {\r\n\treturn async (dispatch: Dispatch, getState: () => IAppState) => {\r\n\t\ttry {\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: QuestionActionTypes.ADD_QUESTION,\r\n\t\t\t\tcreatedBy: getState().topState.top!.auth!.who!.userId,\r\n\t\t\t\tcategoryId,\r\n\t\t\t\ttext,\r\n\t\t\t\tshowCategoryForm: false\r\n\t\t\t});\r\n\t\t}\r\n\t\tcatch (err) {\r\n\t\t\tconsole.error(err);\r\n\t\t}\r\n\t};\r\n};\r\n\r\nexport const editQuestion: ActionCreator<\r\n\tThunkAction<Promise<any>, ICategoriesState, null, IEdit>\r\n> = (categoryId: number, questionId: number, showQuestionForm: boolean) => {\r\n\treturn async (dispatch: Dispatch) => {\r\n\t\ttry {\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: QuestionActionTypes.EDIT_QUESTION,\r\n\t\t\t\tcategoryId,\r\n\t\t\t\tquestionId,\r\n\t\t\t\tshowCategoryForm: false,\r\n\t\t\t\tshowQuestionForm\r\n\t\t\t});\r\n\t\t} catch (err) {\r\n\t\t\tconsole.error(err);\r\n\t\t}\r\n\t};\r\n};\r\n\r\nexport const removeQuestion: ActionCreator<\r\n\tThunkAction<Promise<any>, ICategoriesState, null, IRemove>\r\n> = (doSync: boolean, categoryId: number, questionId: number) => {\r\n\treturn async (dispatch: Dispatch) => {\r\n\t\ttry {\r\n\t\t\tawait delay()\r\n\t\t\t// warning: store answer, after upodate, to local storage\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: QuestionActionTypes.REMOVE_QUESTION,\r\n\t\t\t\tcategoryId,\r\n\t\t\t\tquestionId\r\n\t\t\t});\r\n\t\t\tif (doSync)\r\n\t\t\t\tsyncWithOthers(QuestionActionTypes.REMOVE_QUESTION, { categoryId, questionId });\r\n\t\t} catch (err) {\r\n\t\t\tconsole.error(err);\r\n\t\t}\r\n\t};\r\n};\r\n\r\nexport const selectQuestionAnswer: ActionCreator<\r\n\tThunkAction<Promise<any>, ICategoriesState, null, IRemoveQuestionAnswer>\r\n> = (categoryId: number, questionId: number, answerId: number) => {\r\n\treturn async (dispatch: Dispatch) => {\r\n\t\ttry {\r\n\t\t\tawait delay()\r\n\t\t\t// warning: store answer, after upodate, to local storage\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: QuestionActionTypes.REMOVE_QUESTION_ANSWER,\r\n\t\t\t\tcategoryId: categoryId,\r\n\t\t\t\tquestionId: questionId,\r\n\t\t\t\tanswerId: answerId,\r\n\t\t\t});\r\n\t\t\t//dispatch<any>(getQuestion(questionId))\t// refresh state of question\r\n\t\t}\r\n\t\tcatch (err) {\r\n\t\t\tconsole.error(err);\r\n\t\t}\r\n\t};\r\n};\r\n\r\nexport const copyQuestionAnswer: ActionCreator<\r\n\tThunkAction<Promise<any>, ICategoriesState, null, IRemoveQuestionAnswer>\r\n> = (categoryId: number, questionId: number, answerId: number) => {\r\n\treturn async (dispatch: Dispatch) => {\r\n\t\ttry {\r\n\t\t\tawait delay()\r\n\t\t\t// warning: store answer, after upodate, to local storage\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: QuestionActionTypes.REMOVE_QUESTION_ANSWER,\r\n\t\t\t\tcategoryId: categoryId,\r\n\t\t\t\tquestionId: questionId,\r\n\t\t\t\tanswerId: answerId,\r\n\t\t\t});\r\n\t\t\t//dispatch<any>(getQuestion(questionId))\t// refresh state of question\r\n\t\t}\r\n\t\tcatch (err) {\r\n\t\t\tconsole.error(err);\r\n\t\t}\r\n\t};\r\n};\r\n\r\nexport const removeQuestionAnswer: ActionCreator<\r\n\tThunkAction<Promise<any>, ICategoriesState, null, IRemoveQuestionAnswer>\r\n> = (categoryId: number, questionId: number, answerId: number) => {\r\n\treturn async (dispatch: Dispatch) => {\r\n\t\ttry {\r\n\t\t\tawait delay()\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: QuestionActionTypes.REMOVE_QUESTION_ANSWER,\r\n\t\t\t\tcategoryId: categoryId,\r\n\t\t\t\tquestionId: questionId,\r\n\t\t\t\tanswerId: answerId,\r\n\t\t\t});\r\n\t\t\t// dispatch<any>(getQuestion(questionId))\t// refresh state of question\r\n\t\t}\r\n\t\tcatch (err) {\r\n\t\t\tconsole.error(err);\r\n\t\t}\r\n\t};\r\n};\r\n\r\n\r\nexport const assignQuestionAnswer: ActionCreator<\r\n\tThunkAction<Promise<any>, IAppState, null, IRemoveQuestionAnswer>\r\n> = (categoryId: number, questionId: number, answerId: number, tekst?: string) => {\r\n\r\n\treturn async (dispatch: Dispatch, getState: () => IAppState) => {\r\n\t\ttry {\r\n\t\t\tawait delay();\r\n\t\t\t// warning: store answer, after upodate, to local storage\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: QuestionActionTypes.ASSIGN_QUESTION_ANSWER,\r\n\t\t\t\tcategoryId,\r\n\t\t\t\tquestionId,\r\n\t\t\t\tanswerId,\r\n\t\t\t\tassignedBy: getState().topState.top!.auth!.who!.userId,\r\n\t\t\t});\r\n\t\t\t//dispatch<any>(getQuestion(questionId))\t// refresh state of question\r\n\t\t}\r\n\t\tcatch (err) {\r\n\t\t\tconsole.error(err);\r\n\t\t}\r\n\t};\r\n};\r\n\r\n\r\nconst syncWithOthers = (type: string, entity: any) => {\r\n\t/*\r\n\tconst btnSync = document.getElementById('btnSync');\r\n\tlocalStorage.setItem('syncAction', JSON.stringify({\r\n\t\t\ttype,\r\n\t\t\tentity,\r\n\t\t\tsessionId: sessionStorage.getItem('sessionId')\r\n\t\t})\r\n\t);\r\n\tbtnSync!.click();\r\n\t*/\r\n};\r\n\r\nexport const storeQuestion: ActionCreator<\r\n\tThunkAction<Promise<any>, IAppState, null, IStore>\r\n> = (doSync: boolean, question: IQuestion) => {\r\n\treturn async (dispatch: Dispatch, getState: () => IAppState) => {\r\n\t\tconst { categoryId } = question;\r\n\t\ttry {\r\n\t\t\t//await delay();\r\n\t\t\tif (categoryId === 0) {\r\n\t\t\t\tconst res = await addCategoryUnknown(getState(), dispatch);\r\n\t\t\t\tdispatch({\r\n\t\t\t\t\ttype: QuestionActionTypes.STORE_QUESTION,\r\n\t\t\t\t\tquestion\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tdispatch({\r\n\t\t\t\t\ttype: QuestionActionTypes.STORE_QUESTION,\r\n\t\t\t\t\tquestion\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\tif (doSync)\r\n\t\t\t\tsyncWithOthers(QuestionActionTypes.STORE_QUESTION, question);\r\n\t\t}\r\n\t\tcatch (err) {\r\n\t\t\tconsole.error(err);\r\n\t\t}\r\n\t};\r\n};\r\n\r\nconst addCategoryUnknown = async (state: IAppState, dispatch: Dispatch) => {\r\n\tif (state.categoriesState.categories.find(c => c.categoryId === 0))\r\n\t\treturn Promise.resolve(-1);\r\n\tconst newCategory = {\r\n\t\t...initialCategory,\r\n\t\tcategoryId: 0,\r\n\t\ttitle: 'Unknown',\r\n\t\tquestions: []\r\n\t}\r\n\treturn dispatch<any>(storeCategory(newCategory))\r\n\t\t.then((categoryId: number) => {\r\n\t\t\treturn categoryId;\r\n\t\t});\r\n}\r\n\r\nexport const updateQuestion: ActionCreator<\r\n\tThunkAction<Promise<any>, IAppState, null, IUpdate>\r\n> = (doSync: boolean, question: IQuestion) => {\r\n\treturn async (dispatch: Dispatch, getState: () => IAppState) => {\r\n\t\ttry {\r\n\t\t\tconst { categoryId } = question;\r\n\t\t\tawait delay();\r\n\t\t\tif (categoryId === 0) {\r\n\t\t\t\tconst res = await addCategoryUnknown(getState(), dispatch);\r\n\t\t\t\tdispatch({\r\n\t\t\t\t\ttype: QuestionActionTypes.UPDATE_QUESTION,\r\n\t\t\t\t\tquestion\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tdispatch({\r\n\t\t\t\t\ttype: QuestionActionTypes.UPDATE_QUESTION,\r\n\t\t\t\t\tquestion\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\tif (doSync) {\r\n\t\t\t\tquestion.categoryIdWas = getState().categoriesState.questionCopy!.categoryId;\r\n\t\t\t\tsyncWithOthers(QuestionActionTypes.UPDATE_QUESTION, question);\r\n\t\t\t}\r\n\t\t}\r\n\t\tcatch (err) {\r\n\t\t\tconsole.error(err);\r\n\t\t}\r\n\t};\r\n};\r\n\r\n\r\nconst delay = (): Promise<any> => {\r\n\treturn new Promise((resolve, reject) => {\r\n\t\tsetTimeout(() => {\r\n\t\t\tresolve({\r\n\t\t\t\t'status': 200,\r\n\t\t\t\t'content-type': 'application/json',\r\n\t\t\t\t'data': {\r\n\t\t\t\t\t'results': 1\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t}, 50)\r\n\t})\r\n}\r\n\r\nexport const cancelQuestion: ActionCreator<any> = () => {\r\n\treturn (dispatch: Dispatch) => {\r\n\t\ttry {\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: QuestionActionTypes.CANCEL_QUESTION\r\n\t\t\t});\r\n\t\t} catch (err) {\r\n\t\t\tconsole.error(err);\r\n\t\t}\r\n\t};\r\n};\r\n\r\nexport const closeQuestionForm: ActionCreator<any> = () => {\r\n\treturn (dispatch: Dispatch) => {\r\n\t\ttry {\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: QuestionActionTypes.CLOSE_QUESTION_FORM\r\n\t\t\t});\r\n\t\t} catch (err) {\r\n\t\t\tconsole.error(err);\r\n\t\t}\r\n\t};\r\n};\r\n\r\nexport const openQuestionForm: ActionCreator<any> = () => {\r\n\treturn (dispatch: Dispatch) => {\r\n\t\ttry {\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: QuestionActionTypes.OPEN_QUESTION_FORM\r\n\t\t\t});\r\n\t\t} catch (err) {\r\n\t\t\tconsole.error(err);\r\n\t\t}\r\n\t};\r\n};\r\n\r\n\r\nexport const getCategory: ActionCreator<\r\n\tThunkAction<Promise<any>, ICategoriesState, string, IGet>\r\n> = (categoryId: number, showCategoryForm: boolean) => {\r\n\treturn async (dispatch: Dispatch) => {\r\n\t\ttry {\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: QuestionActionTypes.GET_CATEGORY,\r\n\t\t\t\tcategoryId,\r\n\t\t\t\tshowCategoryForm\r\n\t\t\t});\r\n\t\t} catch (err) {\r\n\t\t\tconsole.error(err);\r\n\t\t}\r\n\t};\r\n};\r\n\r\n\r\nexport const addCategory: ActionCreator<\r\n\tThunkAction<Promise<any>, ICategoriesState, null, IAddCategory>\r\n> = () => {\r\n\treturn async (dispatch: Dispatch) => {\r\n\t\ttry {\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: QuestionActionTypes.ADD_CATEGORY,\r\n\t\t\t\tshowCategoryForm: true\r\n\t\t\t});\r\n\t\t} catch (err) {\r\n\t\t\tconsole.error(err);\r\n\t\t}\r\n\t};\r\n};\r\n\r\nexport const toggleCategory: ActionCreator<\r\n\tThunkAction<Promise<any>, ICategoriesState, null, IEditCategory>\r\n> = (categoryId: number) => {\r\n\treturn async (dispatch: Dispatch) => {\r\n\t\ttry {\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: QuestionActionTypes.TOGGLE_CATEGORY,\r\n\t\t\t\tcategoryId\r\n\t\t\t});\r\n\t\t} catch (err) {\r\n\t\t\tconsole.error(err);\r\n\t\t}\r\n\t};\r\n};\r\n\r\n\r\nexport const editCategory: ActionCreator<\r\n\tThunkAction<Promise<any>, ICategoriesState, null, IEditCategory>\r\n> = (categoryId: number) => {\r\n\treturn async (dispatch: Dispatch) => {\r\n\t\ttry {\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: QuestionActionTypes.EDIT_CATEGORY,\r\n\t\t\t\tcategoryId,\r\n\t\t\t\tshowCategoryForm: true\r\n\t\t\t});\r\n\t\t} catch (err) {\r\n\t\t\tconsole.error(err);\r\n\t\t}\r\n\t};\r\n}\r\n\r\nexport const removeCategory: ActionCreator<\r\n\tThunkAction<Promise<any>, ICategoriesState, null, IRemoveCategory>\r\n> = (doSync: boolean, categoryId: number) => {\r\n\treturn async (dispatch: Dispatch) => {\r\n\t\ttry {\r\n\t\t\tawait delay()\r\n\t\t\t// warning: store answer, after update, to local storage\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: QuestionActionTypes.REMOVE_CATEGORY,\r\n\t\t\t\tcategoryId\r\n\t\t\t});\r\n\t\t\tif (doSync)\r\n\t\t\t\tsyncWithOthers(QuestionActionTypes.REMOVE_CATEGORY, categoryId);\r\n\t\t} catch (err) {\r\n\t\t\tconsole.error(err);\r\n\t\t}\r\n\t};\r\n};\r\n\r\nexport const storeCategory: ActionCreator<\r\n\tThunkAction<Promise<any>, IAppState, null, IStoreCategory>\r\n> = (doSync: boolean, category: ICategory) => {\r\n\treturn async (dispatch: Dispatch, getState: () => IAppState) => {\r\n\t\ttry {\r\n\t\t\t// await updateCategoryFromLocalStorage(group);\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: QuestionActionTypes.STORE_CATEGORY,\r\n\t\t\t\tcategory\r\n\t\t\t});\r\n\t\t\tif (doSync)\r\n\t\t\t\tsyncWithOthers(QuestionActionTypes.STORE_CATEGORY, category);\r\n\t\t\treturn Promise.resolve(category.categoryId) //getState().categoriesState.categories.length)\r\n\t\t}\r\n\t\tcatch (err) {\r\n\t\t\tconsole.error(err);\r\n\t\t}\r\n\t};\r\n};\r\n\r\n\r\nexport const updateCategory: ActionCreator<\r\n\tThunkAction<Promise<any>, ICategoriesState, null, IStoreCategory>\r\n> = (doSync: boolean, category: ICategory) => {\r\n\treturn async (dispatch: Dispatch) => {\r\n\t\ttry {\r\n\t\t\t// await updateCategoryFromLocalStorage(group);\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: QuestionActionTypes.UPDATE_CATEGORY,\r\n\t\t\t\tcategory\r\n\t\t\t});\r\n\t\t\tif (doSync)\r\n\t\t\t\tsyncWithOthers(QuestionActionTypes.UPDATE_CATEGORY, category);\r\n\t\t}\r\n\t\tcatch (err) {\r\n\t\t\tconsole.error(err);\r\n\t\t}\r\n\t};\r\n};\r\n\r\nexport const cancelCategory: ActionCreator<any> = () => {\r\n\treturn (dispatch: Dispatch) => {\r\n\t\ttry {\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: QuestionActionTypes.CANCEL_CATEGORY\r\n\t\t\t});\r\n\t\t}\r\n\t\tcatch (err) {\r\n\t\t\tconsole.error(err);\r\n\t\t}\r\n\t};\r\n};\r\n\r\n\r\nexport const addAndAssignNewAnswer: ActionCreator<\r\n\tThunkAction<Promise<any>, IAppState, null, IStore>\r\n> = (categoryId: number, questionId: number, answer: IAnswer, formMode: string) => {\r\n\treturn async (dispatch: Dispatch, getState: () => IAppState) => {\r\n\t\ttry {\r\n\t\t\tanswer.createdBy = getState().topState.top!.auth!.who!.userId;\r\n\t\t\tdispatch<any>(addAnswer());\r\n\t\t\tdispatch<any>(storeAnswer(answer, formMode))\r\n\t\t\t\t.then((answerId: number) => {\r\n\t\t\t\t\tdispatch<any>(assignQuestionAnswer(categoryId, questionId, answerId))\r\n\t\t\t\t});\r\n\t\t}\r\n\t\tcatch (err) {\r\n\t\t\tconsole.error(err);\r\n\t\t}\r\n\t};\r\n};","// Import redux types\r\nimport { ActionCreator, Dispatch } from 'redux';\r\nimport { ThunkAction } from 'redux-thunk';\r\n// import axios from 'axios';\r\n\r\n// Import User Typing\r\nimport { IUser, IRole, IRoleJson, IUsersState } from './types';\r\n\r\n\r\n///////////////////////////////////////////////////\r\n// localStorage\r\nimport { SUPPORT_USERS } from './reducer';\r\n\r\nimport data from \"./data.json\"\r\nimport { IAppState } from '../store/Store';\r\nimport { TopActionTypes } from '../Top/actions';\r\n\r\nconst parseFromJson = (): IRole[] => {\r\n\treturn data.map(g => {\r\n\t\treturn parseRole(g)\r\n\t})\r\n}\r\n\r\nconst parseFromLocalStorage = (arr: IRoleJson[]): IRole[] => {\r\n\treturn arr.map(g => parseRole(g));\r\n}\r\n\r\nconst parseRole = (g: IRoleJson): IRole => ({\r\n\t...g,\r\n\tusers: g.users.map(u => ({ ...u, created: new Date(u.created) })),\r\n\tcreated: new Date(g.created)\r\n})\r\n\r\n\r\n// Create Action Constants\r\nexport enum UserActionTypes {\r\n\tLOAD_USER_GROUPS = 'LOAD_USER_GROUPS',\r\n\tCREATE_OPTIONS = 'CREATE_OPTIONS',\r\n\tGET_ALL_USERS = 'GET_ALL_USERS',\r\n\tGET_USER = 'GET_USER',\r\n\tADD_USER = 'ADD_USER',\r\n\tEDIT_USER = 'EDIT_USER',\r\n\tREMOVE_USER = 'REMOVE_USER',\r\n\tSTORE_USER = 'STORE_USER',\r\n\tCANCEL_USER = 'CANCEL_USER',\r\n\t// groups\r\n\tADD_ROLE = 'ADD_ROLE',\r\n\tTOGGLE_ROLE = 'EXPAND_ROLE',\r\n\tEDIT_ROLE = 'EDIT_ROLE',\r\n\tREMOVE_ROLE = 'REMOVE_ROLE',\r\n\tSTORE_ROLE = 'STORE_ROLE',\r\n\t// localSTorage\r\n\tSET_IS_DETAIL = 'SET_IS_DETAIL',\r\n}\r\n\r\n\r\n// Interface for Get All Action Type\r\nexport interface IGetAll {\r\n\ttype: UserActionTypes.GET_ALL_USERS;\r\n\troles: IRole[];\r\n}\r\n\r\nexport interface ICreateOptions {\r\n\ttype: UserActionTypes.CREATE_OPTIONS;\r\n}\r\n\r\nexport interface IGet {\r\n\ttype: UserActionTypes.GET_USER;\r\n\tuserId: number;\r\n}\r\n\r\nexport interface IAdd {\r\n\ttype: UserActionTypes.ADD_USER;\r\n\tcreatedBy: number,\r\n\troleId: number,\r\n\ttext: string\r\n\t//userId: number,\r\n}\r\n\r\nexport interface IEdit {\r\n\ttype: UserActionTypes.EDIT_USER;\r\n\troleId: number,\r\n\tuserId: number\r\n}\r\n\r\nexport interface IRemove {\r\n\ttype: UserActionTypes.REMOVE_USER;\r\n\troleId: number,\r\n\tuserId: number,\r\n}\r\n\r\nexport interface IStore {\r\n\ttype: UserActionTypes.STORE_USER;\r\n\tuser: IUser;\r\n\tformMode: string;\r\n}\r\n\r\nexport interface ICancel {\r\n\ttype: UserActionTypes.CANCEL_USER;\r\n}\r\n\r\n// group\r\nexport interface IAddRole {\r\n\ttype: UserActionTypes.ADD_ROLE;\r\n\t//roleId: number\r\n}\r\n\r\nexport interface IToggleRole {\r\n\ttype: UserActionTypes.TOGGLE_ROLE;\r\n\troleId: number\r\n}\r\n\r\nexport interface IEditRole {\r\n\ttype: UserActionTypes.EDIT_ROLE;\r\n\troleId: number\r\n}\r\n\r\nexport interface IRemoveRole {\r\n\ttype: UserActionTypes.REMOVE_ROLE;\r\n\troleId: number\r\n}\r\n\r\nexport interface IStoreRole {\r\n\ttype: UserActionTypes.STORE_ROLE;\r\n\tgroup: IRole;\r\n}\r\n\r\n\r\n// Combine the action types with a union (we assume there are more)\r\nexport type UserActions = IGetAll | IGet | IAdd | IEdit | IRemove | IStore | ICancel |\r\n\tIAddRole | IToggleRole | IEditRole | IRemoveRole | IStoreRole |\r\n\tICreateOptions;\r\n\r\nconst isWebStorageSupported = () => 'localStorage' in window\r\n\r\n\r\nexport const getAllUsers: ActionCreator<\r\n\tThunkAction<Promise<any>, IUsersState, null, IGetAll>\r\n> = () => {\r\n\treturn async (dispatch: Dispatch) => {\r\n\t\ttry {\r\n\t\t\t// const response = await axios.get('https://swapi.co/api/people/');\r\n\t\t\tlet roles: IRole[] = [];\r\n\t\t\tif (isWebStorageSupported()) {\r\n\t\t\t\tconst sUserRoles = localStorage.getItem(SUPPORT_USERS);\r\n\t\t\t\tif (sUserRoles !== null) {\r\n\t\t\t\t\t//const Users: IRole[] = JSON.parse(sUsers);\r\n\t\t\t\t\t//Users.map(g => storageUsers.push(g))\r\n\t\t\t\t\tconst parsed = JSON.parse(sUserRoles);\r\n\t\t\t\t\troles = parseFromLocalStorage(parsed);\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\troles = parseFromJson()\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\troles = parseFromJson()\r\n\t\t\t}\r\n\r\n\t\t\t//const response = await getUsersFromLocalStorage(); \r\n\t\t\tdispatch({\r\n\t\t\t\ttype: UserActionTypes.GET_ALL_USERS,\r\n\t\t\t\troles  //response.data.results,\r\n\t\t\t});\r\n\t\t\tdispatch({type: UserActionTypes.CREATE_OPTIONS})\r\n\t\t}\r\n\t\tcatch (err) {\r\n\t\t\tconsole.error(err);\r\n\t\t}\r\n\t};\r\n};\r\n\r\n\r\n\r\n// Get User <Promise<Return Type>, State Interface, Type of Param, Type of Action> \r\nexport const getUser: ActionCreator<\r\n\tThunkAction<Promise<any>, IUsersState, string, IGet>\r\n> = (userId: number) => {\r\n\treturn async (dispatch: Dispatch) => {\r\n\t\ttry {\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: UserActionTypes.GET_USER,\r\n\t\t\t\tuserId\r\n\t\t\t});\r\n\t\t} catch (err) {\r\n\t\t\tconsole.error(err);\r\n\t\t}\r\n\t};\r\n};\r\n\r\nexport const findUser: ActionCreator<\r\n\tThunkAction<Promise<any>, IAppState, string, IGet>\r\n> = (name: string) => {\r\n\treturn async (dispatch: Dispatch, getState: () => IAppState) => {\r\n\t\ttry {\r\n\t\t\tconst {usersState} = getState();\r\n\t\t\tlet user;\r\n\t\t\tfor (let role of usersState.roles) {\r\n\t\t\t\tuser = role.users.find(user => user.userName === name);\r\n\t\t\t\tif (user)\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\treturn user;\r\n\t\t}\r\n\t\tcatch (err) {\r\n\t\t\tconsole.error(err);\r\n\t\t}\r\n\t};\r\n};\r\n\r\n\r\n\r\nexport const addUser: ActionCreator<\r\n\tThunkAction<Promise<any>, IAppState, null, IAdd>\r\n> = (roleId: number, text: string, canEdit?: boolean) => {\r\n\treturn async (dispatch: Dispatch, getState: () => IAppState) => {\r\n\t\ttry {\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: UserActionTypes.ADD_USER,\r\n\t\t\t\tcreatedBy: getState().topState.top!.auth!.who!.userId,\r\n\t\t\t\troleId,\r\n\t\t\t\ttext\r\n\t\t\t});\r\n\t\t}\r\n\t\tcatch (err) {\r\n\t\t\tconsole.error(err);\r\n\t\t}\r\n\t};\r\n};\r\n\r\nexport const editUser: ActionCreator<\r\n\tThunkAction<Promise<any>, IUsersState, null, IEdit>\r\n> = (roleId: number, userId: number) => {\r\n\treturn async (dispatch: Dispatch) => {\r\n\t\ttry {\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: UserActionTypes.EDIT_USER,\r\n\t\t\t\troleId,\r\n\t\t\t\tuserId\r\n\t\t\t});\r\n\t\t} catch (err) {\r\n\t\t\tconsole.error(err);\r\n\t\t}\r\n\t};\r\n};\r\n\r\nexport const removeUser: ActionCreator<\r\n\tThunkAction<Promise<any>, IUsersState, null, IRemove>\r\n> = (roleId: number, userId: number) => {\r\n\treturn async (dispatch: Dispatch) => {\r\n\t\ttry {\r\n\t\t\tawait delay()\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: UserActionTypes.REMOVE_USER,\r\n\t\t\t\troleId,\r\n\t\t\t\tuserId\r\n\t\t\t});\r\n\t\t\tdispatch({type: UserActionTypes.CREATE_OPTIONS})\r\n\t\t}\r\n\t\tcatch (err) {\r\n\t\t\tconsole.error(err);\r\n\t\t}\r\n\t};\r\n};\r\n\r\n\r\nexport const storeUser: ActionCreator<\r\n\tThunkAction<Promise<any>, IAppState, null, IStore>\r\n> = (user: IUser, formMode: string) => {\r\n\treturn async (dispatch: Dispatch, getState: () => IAppState) => {\r\n\t\ttry {\r\n\t\t\tif (formMode === 'add') {\r\n\t\t\t\tawait delay(); \r\n\r\n\t\t\t\t// if userId == -1 nadji max\r\n\t\t\t\t// return dispatch<any>(addUser(xxx))\r\n\t\t\t\t// \t.then((categoryId: number) => {\r\n\t\t\t\t// \t\treturn categoryId;\r\n\t\t\t\t// \t});\r\n\r\n\t\t\t\tawait dispatch({\r\n\t\t\t\t\ttype: UserActionTypes.STORE_USER,\r\n\t\t\t\t\tuser,\r\n\t\t\t\t\tformMode\r\n\t\t\t\t});\r\n\t\t\t\treturn user;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tawait delay();\r\n\t\t\t\tdispatch({\r\n\t\t\t\t\ttype: UserActionTypes.STORE_USER,\r\n\t\t\t\t\tuser,\r\n\t\t\t\t\tformMode\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\tdispatch({type: UserActionTypes.CREATE_OPTIONS})\r\n\t\t} \r\n\t\tcatch (err) {\r\n\t\t\tconsole.error(err);\r\n\t\t}\r\n\t};\r\n};\r\n\r\nconst delay = (): Promise<any> => {\r\n\treturn new Promise((resolve, reject) => {\r\n\t\tsetTimeout(() => {\r\n\t\t\tresolve({\r\n\t\t\t\t'status': 200,\r\n\t\t\t\t'content-type': 'application/json',\r\n\t\t\t\t'data': {\r\n\t\t\t\t\t'results': 1\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t}, 50)\r\n\t})\r\n}\r\n\r\nexport const cancelUser: ActionCreator<any> = () => {\r\n\treturn (dispatch: Dispatch) => {\r\n\t\ttry {\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: UserActionTypes.CANCEL_USER\r\n\t\t\t});\r\n\t\t} catch (err) {\r\n\t\t\tconsole.error(err);\r\n\t\t}\r\n\t};\r\n};\r\n\r\n/*\r\n * User Roles\r\n */\r\nexport const addRole: ActionCreator<\r\n\tThunkAction<Promise<any>, IUsersState, null, IAddRole>\r\n> = () => {\r\n\treturn async (dispatch: Dispatch) => {\r\n\t\ttry {\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: UserActionTypes.ADD_ROLE\r\n\t\t\t});\r\n\t\t} catch (err) {\r\n\t\t\tconsole.error(err);\r\n\t\t}\r\n\t};\r\n};\r\n\r\nexport const toggleRole: ActionCreator<\r\n\tThunkAction<Promise<any>, IUsersState, null, IEditRole>\r\n> = (roleId: number) => {\r\n\treturn async (dispatch: Dispatch) => {\r\n\t\ttry {\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: UserActionTypes.TOGGLE_ROLE,\r\n\t\t\t\troleId\r\n\t\t\t});\r\n\t\t} catch (err) {\r\n\t\t\tconsole.error(err);\r\n\t\t}\r\n\t};\r\n};\r\n\r\n\r\nexport const editRole: ActionCreator<\r\n\tThunkAction<Promise<any>, IUsersState, null, IEditRole>\r\n> = (roleId: number) => {\r\n\treturn async (dispatch: Dispatch) => {\r\n\t\ttry {\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: UserActionTypes.EDIT_ROLE,\r\n\t\t\t\troleId\r\n\t\t\t});\r\n\t\t} catch (err) {\r\n\t\t\tconsole.error(err);\r\n\t\t}\r\n\t};\r\n};\r\n\r\nexport const removeRole: ActionCreator<\r\n\tThunkAction<Promise<any>, IUsersState, null, IRemoveRole>\r\n> = (roleId: number) => {\r\n\treturn async (dispatch: Dispatch) => {\r\n\t\ttry {\r\n\t\t\tawait delay()\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: UserActionTypes.REMOVE_ROLE,\r\n\t\t\t\troleId: roleId\r\n\t\t\t});\r\n\t\t} catch (err) {\r\n\t\t\tconsole.error(err);\r\n\t\t}\r\n\t};\r\n};\r\n\r\nexport const storeRole: ActionCreator<\r\n\tThunkAction<Promise<any>, IUsersState, null, IStoreRole>\r\n> = (group: IRole) => {\r\n\treturn async (dispatch: Dispatch) => {\r\n\t\ttry {\r\n\t\t\t// await updateRoleFromLocalStorage(group);\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: UserActionTypes.STORE_ROLE,\r\n\t\t\t\tgroup\r\n\t\t\t});\r\n\t\t} catch (err) {\r\n\t\t\tconsole.error(err);\r\n\t\t}\r\n\t};\r\n};\r\n\r\n","import { IAnswer } from '../Answers/types'\r\nimport { IOption } from '../common/types';\r\nimport { IUser } from '../Users/types';\r\nimport { IAuth } from \"../Top/types\";\r\n\r\n// Define the Question type\r\n\r\nexport interface IQuestionAnswer {\r\n\tcategoryId?: number;\r\n\tquestionId?: number;\r\n\tanswerId: number,\r\n\tassignedBy: number,\r\n\tassigned: Date,\r\n\ttext?: string\r\n}\r\n\r\nexport interface IQuestionAnswerJson extends Omit<IQuestionAnswer, 'assigned'> {\r\n\tassigned: string\r\n}\r\n\r\n\r\nexport interface IQuestion {\r\n\tcategoryId: number,\r\n\tquestionId: number,\r\n\ttext: string,\r\n\twords?: string[],\r\n\tanswers: IQuestionAnswer[],\r\n\tsource: number,\r\n\tstatus: number,\r\n\tcreatedBy: number,\r\n\tcreated: Date,\r\n\tcategoryIdWas?: number\r\n}\r\n\r\nexport interface IQuestionJson extends Omit<IQuestion, 'categoryId' | 'answers' | 'created'> {\r\n\tcategoryId?: number,\r\n\tanswers: IQuestionAnswerJson[],\r\n\tcreated: string\r\n}\r\n\r\nexport interface ICategory {\r\n\tcategoryId: number,\r\n\ttitle: string,\r\n\tquestions: IQuestion[],\r\n\tisExpanded?: boolean,\r\n\tcreatedBy: number,\r\n\tcreated: Date\r\n}\r\n\r\nexport interface ICategoryJson extends Omit<ICategory, 'created' | 'questions'> {\r\n\tquestions: IQuestionJson[],\r\n\tcreated: string\r\n}\r\n\r\nexport const initialQuestion: IQuestion = {\r\n\tcategoryId: 0,\r\n\tquestionId: 0,\r\n\ttext: '',\r\n\twords: [],\r\n\tanswers: [],\r\n\tsource: 0,\r\n\tstatus: 0,\r\n\tcreatedBy: 0,\r\n\tcreated: new Date()\r\n };\r\n\r\nexport interface ICategoriesProps {\r\n\tcategories: ICategory[];\r\n\tcategoryQuestions: Map<number, ICategoryState>,\r\n\tshowCategoryForm: boolean;\r\n\tshowQuestionForm: boolean;\r\n\tcategory: ICategory | undefined;\r\n\tquestion: IQuestion | undefined;\r\n\tformMode: string,\r\n\tcanEdit: boolean,\r\n\tauth?: IAuth,\r\n\tonSelectQuestion: (categoryId: number, questionId: number, canEdit: boolean) => void;\r\n\tadd:  (categoryId: number, text: string, canEdit?: boolean) => void;\r\n\tcloseQuestionForm: () => void;\r\n}\r\n\r\nexport interface ICategoryListProps {\r\n\tcategories: ICategory[];\r\n\tcategoryQuestions: Map<number, ICategoryState>,\r\n\tcategoryOptions: IOption<number>[],\r\n\tshowCategoryForm: boolean;\r\n\tshowQuestionForm: boolean;\r\n\tcategory: ICategory | undefined;\r\n\tquestion: IQuestion | undefined;\r\n\tlastAnswer?: IAnswer;\r\n\tformMode: string,\r\n\tcategoryIdEditing: number,\r\n\tcanEdit: boolean,\r\n\tauth?: IAuth,\r\n\tonSelectQuestion: (categoryId: number, questionId: number) => void;\r\n\tadd: (categoryId: number, text: string, canEdit?: boolean) => void;\r\n\tedit: (categoryId: number, questionId: number, showQuestionForm: boolean) => void;\r\n\tremove: (categoryId: number, questionId: number) => void;\r\n\tcloseQuestionForm: () => void;\r\n\topenQuestionForm: () => void;\r\n\r\n\t// groups\r\n\tonSelectCategory: (categoryId: number) => ICategory;\r\n\taddCategory: () => void;\r\n\ttoggleCategory: (categoryId: number) => void;\r\n\teditCategory: (categoryId: number) => void;\r\n\tremoveCategory: (categoryId: number) => void;\r\n\tstoreCategory: (group: ICategory) => void;\r\n\tupdateCategory: (group: ICategory) => void;\r\n\t// question answer\r\n\taddAndAssignNewAnswer: (categoryId: number, questionId: number, answer: IAnswer, formMode: string) => void\r\n}\r\n\r\n\r\nexport interface ICategoryState {\r\n\tquestions: IQuestion[];\r\n}\r\n\r\n\r\n// Define the Question State\r\nexport interface ICategoriesState {\r\n\treadonly categories: ICategory[];\r\n\treadonly category: ICategory | undefined;\r\n\treadonly question: IQuestion | undefined;\r\n\tshowCategoryForm: boolean,\r\n\tshowQuestionForm: boolean,\r\n\tcategoryCopy?: ICategory;\r\n\tquestionCopy?: IQuestion;\r\n\tcategoryQuestions: Map<number, ICategoryState>,\r\n\tcategoryOptions: IOption<number>[];\r\n\tloading: boolean,\r\n\tformMode: string;\r\n\tcategoryIdEditing: number;\r\n}\r\n\r\n\r\nexport interface IQuestionFormProps {\r\n\tquestion: IQuestion;\r\n\tanswers: IAnswer[];\r\n\tformMode: string;\r\n\tcanEdit: boolean,\r\n\tcategoryOptions: IOption<number>[],\r\n\thandleClose: () => void;\r\n\tcancel: () => void;\r\n\teditForm: (question: IQuestion, formMode: string) => void;\r\n \tsaveForm: (question: IQuestion, formMode: string) => void;\r\n  }\r\n\r\n  export interface ICategoryFormProps {\r\n\tcategory: ICategory | undefined;\r\n\tformMode: string;\r\n\tcanEdit: boolean,\r\n\tcancel: () => void;\r\n\tsaveForm: (category: ICategory, formMode: string) => void;\r\n  }\r\n\r\n ","// Import Reducer type\r\nimport { Reducer } from 'redux';\r\n\r\nimport {\r\n\tQuestionActions,\r\n\tQuestionActionTypes\r\n} from './actions';\r\n\r\nimport { IQuestion, ICategoryState, initialQuestion } from './types'\r\n\r\nexport const CATEGORY = 'CATEGORY';\r\n\r\n// Define the initial state\r\nexport const initialCategoryState: ICategoryState = {\r\n\tquestions: []\r\n};\r\n\r\nconst storeToStorage: string[] = [\r\n\tQuestionActionTypes.STORE_QUESTION,\r\n\tQuestionActionTypes.UPDATE_QUESTION,\r\n\tQuestionActionTypes.REMOVE_QUESTION,\r\n\tQuestionActionTypes.REMOVE_QUESTION_ANSWER,\r\n\tQuestionActionTypes.ASSIGN_QUESTION_ANSWER\r\n]\r\n\r\nconst aTypesToStore = Object.keys(QuestionActionTypes)\r\n\t.filter(a => storeToStorage.includes(a));\r\n\r\nexport const reduceQuestions = (\r\n\tcategoryQuestions: Map<number, ICategoryState>,\r\n\taction: QuestionActions,\r\n\tcategoryId: number,\r\n\tquestionId?: number\r\n): {categoryQuestions: Map<number, ICategoryState>, question: IQuestion|undefined} => {\r\n\tconst categoryState = categoryQuestions.get(categoryId)!;\r\n\tconst newState: ICategoryState = myReducer(categoryState, action);\r\n\r\n\tif (aTypesToStore.includes(action.type)) {\r\n\t\tnewState.questions.forEach(q => q.words = []);\r\n\t\tlocalStorage.setItem(`CATEGORY_${categoryId}`, JSON.stringify(newState.questions));\r\n\t\tnewState.questions.forEach(q => q.words = q.text.split(' '));\r\n\t}\r\n\tcategoryQuestions.set(categoryId, newState);\r\n\tconst question = newState.questions.find(q => q.questionId === questionId);\r\n\treturn { categoryQuestions, question }\r\n}\r\n\r\n\r\nconst myReducer: Reducer<ICategoryState, QuestionActions> = (\r\n\tstate = initialCategoryState,\r\n\taction\r\n) => {\r\n\tswitch (action.type) {\r\n\r\n\t\tcase QuestionActionTypes.GET_QUESTION: {\r\n\t\t\tconst question = state.questions.find(q => q.questionId === action.questionId);\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tquestion\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tcase QuestionActionTypes.ADD_QUESTION: {\r\n\t\t\tlet questionIdMax = 0;\r\n\t\t\tfor (let question of state.questions)\r\n\t\t\t\tif (question.questionId > questionIdMax)\r\n\t\t\t\t\tquestionIdMax = question.questionId\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tformMode: 'add',\r\n\t\t\t\tquestion: {\r\n\t\t\t\t\t...initialQuestion,\r\n\t\t\t\t\tcreatedBy: action.createdBy,\r\n\t\t\t\t\tcategoryId: action.categoryId,\r\n\t\t\t\t\tquestionId: questionIdMax + 1,\r\n\t\t\t\t\ttext: action.text,\r\n\t\t\t\t\twords: action.text.split(' ')\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tcase QuestionActionTypes.EDIT_QUESTION: {\r\n\t\t\tconst question = state.questions\r\n\t\t\t\t.find(question => question.questionId === action.questionId);\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tformMode: 'edit',\r\n\t\t\t\tquestion\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tcase QuestionActionTypes.STORE_QUESTION: {\r\n\t\t\tconst { question } = action;\r\n\t\t\tquestion.words = question.text.split(' ');\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tquestions: [...state.questions, {...question}]\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tcase QuestionActionTypes.UPDATE_QUESTION: {\r\n\t\t\tconst { question } = action;\r\n\t\t\tquestion.words = question.text.split(' ');\r\n\t\t\tconst { questionId } = question;\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tquestions: state.questions\r\n\t\t\t\t\t.map(q => q.questionId !== questionId\r\n\t\t\t\t\t\t? q\r\n\t\t\t\t\t\t: { ...question }\r\n\t\t\t\t\t)\r\n\t\t\t};\t\t\t\r\n\t\t}\r\n\r\n\t\tcase QuestionActionTypes.CANCEL_QUESTION: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tformMode: 'display'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tcase QuestionActionTypes.REMOVE_QUESTION: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tquestions: state.questions.filter(q => q.questionId !== action.questionId)\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\t// Question answers\r\n\t\tcase QuestionActionTypes.REMOVE_QUESTION_ANSWER: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tquestions: state.questions.map(q => q.questionId !== action.questionId\r\n\t\t\t\t\t? { ...q, answers: [...q.answers] }\r\n\t\t\t\t\t: { ...q, answers: q.answers.filter(qa => qa.answerId !== action.answerId) }\r\n\t\t\t\t)\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tcase QuestionActionTypes.ASSIGN_QUESTION_ANSWER: {\r\n\t\t\tconst { questionId, answerId, assignedBy } = action;\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tquestions: state.questions.map(q => q.questionId !== questionId\r\n\t\t\t\t\t? { ...q, answers: [...q.answers] }\r\n\t\t\t\t\t: { ...q, answers: [...q.answers, { answerId, assignedBy, assigned: new Date() }] }\r\n\t\t\t\t)\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n};\r\n\r\n","// Import Reducer type\r\nimport { Reducer } from 'redux';\r\n\r\nimport {\r\n\tQuestionActions,\r\n\tQuestionActionTypes\r\n} from './actions';\r\n\r\nimport { IQuestion, ICategory, ICategoriesState, ICategoryState } from './types'\r\nimport { reduceQuestions } from './categoryReducer'\r\nimport { createWatchCompilerHost } from 'typescript';\r\n\r\nexport const SUPPORT_CATEGORIES = 'SUPPORT_CATEGORIES';\r\n\r\nexport const initialQuestion: IQuestion = {\r\n\tcategoryId: 0,\r\n\tquestionId: 0,\r\n\ttext: '',\r\n\twords: [],\r\n\tsource: 0,\r\n\tstatus: 0,\r\n\tanswers: [],\r\n\tcreatedBy: 0,\r\n\tcreated: new Date()\r\n};\r\n\r\nexport const initialCategory: ICategory = {\r\n\tcategoryId: 0,\r\n\ttitle: '',\r\n\tquestions: [],\r\n\tisExpanded: false,\r\n\tcreatedBy: 0,\r\n\tcreated: new Date()\r\n};\r\n\r\n\r\n// Define the initial state\r\nexport const initialCategoriesState: ICategoriesState = {\r\n\tcategories: [],\r\n\tcategory: undefined,\r\n\tcategoryQuestions: new Map<number, ICategoryState>(),\r\n\tquestion: undefined,\r\n\tshowCategoryForm: false,\r\n\tshowQuestionForm: false,\r\n\tcategoryOptions: [],\r\n\tloading: false,\r\n\tformMode: 'display',\r\n\tcategoryIdEditing: -1\r\n};\r\n\r\nconst storeToStorage: string[] = [\r\n\tQuestionActionTypes.ADD_CATEGORY,\r\n\tQuestionActionTypes.TOGGLE_CATEGORY,\r\n\tQuestionActionTypes.STORE_CATEGORY,\r\n\tQuestionActionTypes.UPDATE_CATEGORY,\r\n\tQuestionActionTypes.REMOVE_CATEGORY\r\n]\r\n\r\nconst aTypesToStore = Object.keys(QuestionActionTypes)\r\n\t.filter(a => storeToStorage.includes(a));\r\n\r\nexport const categoriesReducer: Reducer<ICategoriesState, QuestionActions> = (state, action) => {\r\n\tconst newState = myReducer(state, action);\r\n\tif (aTypesToStore.includes(action.type)) {\r\n\t\tlocalStorage.setItem(SUPPORT_CATEGORIES, JSON.stringify(newState.categories));\r\n\t}\r\n\treturn newState;\r\n}\r\n\r\nconst getQuestions = (categoryId: number, state: ICategoriesState): IQuestion[] => {\r\n\tconst { categoryQuestions } = state;\r\n\tconst categoryState = categoryQuestions.get(categoryId)!;\r\n\treturn categoryState.questions\r\n}\r\n\r\nconst myReducer: Reducer<ICategoriesState, QuestionActions> = (\r\n\tstate = initialCategoriesState,\r\n\taction\r\n) => {\r\n\tswitch (action.type) {\r\n\r\n\t\tcase QuestionActionTypes.LOAD_CATEGORIES: {\r\n\t\t\tconst { categories, categoryQuestions } = action;\r\n\r\n\t\t\tconst categoryOptions = categories.map(g => ({ value: g.categoryId, label: g.title }))\r\n\t\t\tcategoryOptions.unshift({ value: 0, label: 'Unknown' })\r\n\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tcategories,\r\n\t\t\t\tcategoryQuestions,\r\n\t\t\t\tcategoryOptions\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tcase QuestionActionTypes.GET_QUESTION: {\r\n\t\t\tconst { categoryId, questionId } = action;\r\n\t\t\tconst questions = getQuestions(categoryId, state)\r\n\t\t\tconst question = questions.find(q => q.questionId === questionId);\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tcategory: undefined,\r\n\t\t\t\tquestion\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tcase QuestionActionTypes.ADD_QUESTION: {\r\n\t\t\tconst { categoryId } = action;\r\n\t\t\tlet questionId = 0;\r\n\t\t\tif (categoryId !== 0) {\r\n\t\t\t\tconst questions = getQuestions(categoryId, state)\r\n\t\t\t\tquestionId = Math.max(...questions.map(q => q.questionId)) + 1;\r\n\t\t\t}\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tformMode: 'add',\r\n\t\t\t\tcategory: undefined,\r\n\t\t\t\tquestion: {\r\n\t\t\t\t\t...initialQuestion,\r\n\t\t\t\t\tcreatedBy: action.createdBy,\r\n\t\t\t\t\tcategoryId,\r\n\t\t\t\t\tquestionId,\r\n\t\t\t\t\ttext: action.text\r\n\t\t\t\t},\r\n\t\t\t\tshowCategoryForm: false\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tcase QuestionActionTypes.EDIT_QUESTION: {\r\n\t\t\tconst { categoryId, questionId, showQuestionForm } = action;\r\n\t\t\tconst questions = getQuestions(categoryId, state)\r\n\t\t\tconst question = questions.find(q => q.questionId === questionId)!;\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tformMode: 'edit',\r\n\t\t\t\tquestion,\r\n\t\t\t\tquestionCopy: { ...question },\r\n\t\t\t\tshowCategoryForm: false,\r\n\t\t\t\tshowQuestionForm\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tcase QuestionActionTypes.STORE_QUESTION: {\r\n\t\t\tconst { question } = action;\r\n\t\t\tconst { categoryId, questionId } = question;\r\n\t\t\tconst { categoryQuestions } = reduceQuestions(state.categoryQuestions, action, categoryId);\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tformMode: 'edit',\r\n\t\t\t\tcategoryQuestions\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tcase QuestionActionTypes.UPDATE_QUESTION: {\r\n\t\t\tlet { questionCopy } = state;\r\n\t\t\tconst { categoryId, questionId, categoryIdWas } = action.question; // comes from other user update\r\n\t\t\tconst categoryIdCopy = categoryIdWas ? categoryIdWas : questionCopy!.categoryId;\r\n\t\t\tif (action.question.categoryId === categoryIdCopy) {\r\n\t\t\t\t// category hasn't been changed\r\n\t\t\t\tconst { categoryQuestions, question } = reduceQuestions(state.categoryQuestions, action, categoryId, questionId);\r\n\t\t\t\treturn {\r\n\t\t\t\t\t...state,\r\n\t\t\t\t\tcategoryQuestions,\r\n\t\t\t\t\tformMode: 'edit',\r\n\t\t\t\t\tquestion\r\n\t\t\t\t};\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\t// assing question to another group\r\n\t\t\t\t// 1) remove question from old category\r\n\t\t\t\tlet { categoryQuestions } = reduceQuestions(state.categoryQuestions, {\r\n\t\t\t\t\t...action,\r\n\t\t\t\t\ttype: QuestionActionTypes.REMOVE_QUESTION,\r\n\t\t\t\t\tcategoryId: categoryIdCopy,\r\n\t\t\t\t\tquestionId\r\n\t\t\t\t}, categoryIdCopy);\r\n\t\t\t\t// 2) add question  to new category\r\n\t\t\t\tcategoryQuestions = reduceQuestions(categoryQuestions, {\r\n\t\t\t\t\t...action,\r\n\t\t\t\t\ttype: QuestionActionTypes.STORE_QUESTION\r\n\t\t\t\t}, categoryId).categoryQuestions;\r\n\t\t\t\t//\r\n\t\t\t\treturn {\r\n\t\t\t\t\t...state,\r\n\t\t\t\t\tcategoryQuestions,\r\n\t\t\t\t\tformMode: 'edit'\r\n\t\t\t\t};\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tcase QuestionActionTypes.CANCEL_QUESTION: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tformMode: 'display',\r\n\t\t\t\tquestion: undefined,\r\n\t\t\t\tshowQuestionForm: false\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tcase QuestionActionTypes.REMOVE_QUESTION: {\r\n\t\t\tconst { categoryId } = action;\r\n\t\t\tconst { categoryQuestions } = reduceQuestions(state.categoryQuestions, action, categoryId);\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tcategoryQuestions,\r\n\t\t\t\tformMode: 'display',\r\n\t\t\t\tquestion: undefined\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\t\r\n\r\n\t\t// Question answers\r\n\t\tcase QuestionActionTypes.REMOVE_QUESTION_ANSWER: {\r\n\t\t\tconst { categoryId, questionId } = action;\r\n\t\t\tconst { categoryQuestions, question } = reduceQuestions(state.categoryQuestions, action, categoryId, questionId);\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tcategoryQuestions,\r\n\t\t\t\tquestion\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tcase QuestionActionTypes.ASSIGN_QUESTION_ANSWER: {\r\n\t\t\tconst { categoryId, questionId } = action;\r\n\t\t\tconst { categoryQuestions, question } = reduceQuestions(state.categoryQuestions, action, categoryId, questionId);\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tcategoryQuestions,\r\n\t\t\t\tquestion\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tcase QuestionActionTypes.CLOSE_QUESTION_FORM: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tshowQuestionForm: false\r\n\t\t\t}\r\n\t\t}\r\n\t\tcase QuestionActionTypes.OPEN_QUESTION_FORM: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tshowQuestionForm: true\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t///////////////////////////////////////////////////////////////////////////////////\r\n\t\t// groups\r\n\t\tcase QuestionActionTypes.GET_CATEGORY: {\r\n\t\t\tconst { categoryId, showCategoryForm } = action;\r\n\t\t\t//const questions = getQuestions(categoryId, state)\r\n\t\t\t//const question = questions.find(q => q.questionId === questionId);\r\n\t\t\tconst category = state.categories.find(g => g.categoryId === categoryId);\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tcategory,\r\n\t\t\t\tquestion: undefined,\r\n\t\t\t\tshowCategoryForm,\r\n\t\t\t\tshowQuestionForm: false\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tcase QuestionActionTypes.ADD_CATEGORY: {\r\n\t\t\t// const group =  state.categories.find(g => g.categoryId === action.categoryId);\r\n\t\t\tconst { categoryQuestions } = state;\r\n\t\t\tconst { showCategoryForm } = action;\r\n\t\t\tlet categoryId = Math.max(...state.categories.map(g => g.categoryId)) + 1;\r\n\t\t\tconst categoryState: ICategoryState = {\r\n\t\t\t\tquestions: []\r\n\t\t\t}\r\n\t\t\tcategoryQuestions.set(categoryId, categoryState)\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tformMode: 'add',\r\n\t\t\t\tcategoryIdEditing: categoryId,\r\n\t\t\t\tcategory: { \r\n\t\t\t\t\t...initialCategory,\r\n\t\t\t\t\ttitle: \"New Category\",\r\n\t\t\t\t\tcategoryId \r\n\t\t\t\t},\r\n\t\t\t\tquestion: undefined,\r\n\t\t\t\tshowCategoryForm,\r\n\t\t\t\tshowQuestionForm: false\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tcase QuestionActionTypes.TOGGLE_CATEGORY: {\r\n\t\t\tconst group = state.categories.find(g => g.categoryId === action.categoryId);\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tcategories: state.categories.map(g => g.categoryId !== action.categoryId\r\n\t\t\t\t\t? g\r\n\t\t\t\t\t: { ...g, isExpanded: !g.isExpanded }\r\n\t\t\t\t)\r\n\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tcase QuestionActionTypes.EDIT_CATEGORY: {\r\n\t\t\tconst { categories } = state;\r\n\t\t\tconst { categoryId, showCategoryForm } = action;\r\n\t\t\tconst category = categories.find(g => g.categoryId === categoryId)!\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tcategory,\r\n\t\t\t\tformMode: 'edit',\r\n\t\t\t\tcategoryCopy: { ...category },\r\n\t\t\t\tcategoryIdEditing: category.categoryId,\r\n\t\t\t\tshowCategoryForm,\r\n\t\t\t\tshowQuestionForm: false\r\n\t\t\t\t//,category for now lets keep inline editing\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tcase QuestionActionTypes.STORE_CATEGORY: {\r\n\t\t\t// const group = state.categories.find(g => g.categoryId === action.question.categoryId);\r\n\t\t\tconst { category } = action;\r\n\t\t\tconst { categoryQuestions } = state;\r\n\t\t\tconst categoryState: ICategoryState = {\r\n\t\t\t\tquestions: [] //...category.questions]\r\n\t\t\t}\r\n\t\t\tcategoryQuestions.set(category.categoryId, categoryState)\r\n\t\t\tcategory.questions = [];\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tformMode: 'edit',\r\n\t\t\t\tcategoryIdEditing: -1,\r\n\t\t\t\tcategories: [...state.categories, category],\r\n\t\t\t\tcategoryQuestions\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tcase QuestionActionTypes.UPDATE_CATEGORY: {\r\n\t\t\t// const group = state.categories.find(g => g.categoryId === action.question.categoryId);\r\n\t\t\tconst { category } = action;\r\n\t\t\tconst { categoryId, title } = category;\r\n\t\t\tlet { categoryCopy } = state;\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tcategoryIdEditing: -1,\r\n\t\t\t\tcategories: state.categories.map(g => g.categoryId !== categoryId\r\n\t\t\t\t\t? g\r\n\t\t\t\t\t: { ...g, title }\r\n\t\t\t\t)\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tcase QuestionActionTypes.CANCEL_CATEGORY: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tformMode: 'display',\r\n\t\t\t\tcategory: undefined\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tcase QuestionActionTypes.REMOVE_CATEGORY: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tcategories: state.categories.reduce((acc: ICategory[], g) => {\r\n\t\t\t\t\tif (g.categoryId !== action.categoryId)\r\n\t\t\t\t\t\tacc.push({ ...g, questions: [...g.questions] })\r\n\t\t\t\t\treturn acc\r\n\t\t\t\t}, [])\r\n\t\t\t};\r\n\t\t}\r\n\r\n\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n};\r\n\r\n","// Import Reducer type\r\nimport { Reducer } from 'redux';\r\nimport {\r\n\tAnswerActions,\r\n\tAnswerActionTypes,\r\n\tSUPPORT_ANSWERS\r\n} from './actions';\r\n\r\nimport { IAnswer, IAnswerState } from './types'\r\n\r\nexport const initialAnswer: IAnswer = {\r\n\tanswerId: 0,\r\n\ttext: '',\r\n\twords: [],\r\n\toptions: [],\r\n\tcreatedBy: 0,\r\n\tcreated: new Date()\r\n};\r\n\r\nconst initialAnswerState: IAnswerState = {\r\n\tanswers: [],\r\n\tanswer: undefined,\r\n\tloading: false,\r\n\tformMode: 'display'\r\n};\r\n\r\nconst aTypesToStore = Object.keys(AnswerActionTypes).filter(a => a !== AnswerActionTypes.GET_ALL_ANSWERS);\r\n\r\nexport const answerReducer: Reducer<IAnswerState, AnswerActions> = (state, action) => {\r\n\tconst newState = myReducer(state, action);\r\n\tif (aTypesToStore.includes(action.type)) {\r\n\t\tlocalStorage.setItem(SUPPORT_ANSWERS, JSON.stringify(newState.answers));\r\n\t}\r\n\treturn newState;\r\n}\r\n\r\nconst myReducer: Reducer<IAnswerState, AnswerActions> = (\r\n\tstate = initialAnswerState,\r\n\taction\r\n) => {\r\n\tswitch (action.type) {\r\n\r\n\t\tcase AnswerActionTypes.GET_ALL_ANSWERS: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tanswers: action.answers.map(answer => { return { \r\n\t\t\t\t\t...answer,\r\n\t\t\t\t\twords: answer.text.split(' ') \r\n\t\t\t\t} }),\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tcase AnswerActionTypes.GET_ANSWER: {\r\n\t\t\tconst answer = state.answers.find(a => a.answerId === action.answerId);\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tanswer\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tcase AnswerActionTypes.ADD_ANSWER: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tformMode: 'add',\r\n\t\t\t\tanswer: {\r\n\t\t\t\t\t...initialAnswer,\r\n\t\t\t\t\tcreatedBy: action.createdBy,\r\n\t\t\t\t\tanswerId: state.answers.length === 0 \r\n\t\t\t\t\t\t? 1\r\n\t\t\t\t\t\t: Math.max(...state.answers.map(a => a.answerId)) + 1\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tcase AnswerActionTypes.EDIT_ANSWER: {\r\n\t\t\tconst answer = state.answers.find(a => a.answerId === action.answerId);\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tformMode: 'edit',\r\n\t\t\t\tanswer: { ...answer!, words: answer!.text.split(' ') }\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tcase AnswerActionTypes.STORE_ANSWER: {\r\n\t\t\tconst { answer } = action;\r\n\t\t\tlet { answerId } = answer!;\r\n\t\t\tlet answers = [];\r\n\t\t\tif (state.formMode === 'add') {\r\n\t\t\t\tif (answerId === -1) {\r\n\t\t\t\t\tanswer.answerId = state.answers.length === 0\r\n\t\t\t\t\t\t? 1\r\n\t\t\t\t\t\t: Math.max(...state.answers.map(a => a.answerId)) + 1;\r\n\t\t\t\t}\r\n\t\t\t\tanswers = [...state.answers, { ...answer, words: answer.text.split(' ') }]\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tanswers = state.answers.map(a => a.answerId === answerId\r\n\t\t\t\t\t? { ...answer, words: answer.text.split(' ') }\r\n\t\t\t\t\t: a)\r\n\t\t\t}\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tformMode: 'edit',\r\n\t\t\t\tanswers,\r\n\t\t\t\tanswer\r\n\t\t\t};\r\n\t\t}\t\r\n\r\n\t\tcase AnswerActionTypes.CANCEL_ANSWER: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tformMode: 'display'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tcase AnswerActionTypes.REMOVE_ANSWER: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tformMode: 'display',\r\n\t\t\t\tanswers: state.answers.filter(a => a.answerId !== action.answerId)\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\t// case AnswerActionTypes.STORE_ANSWERS_TO_LOCAL_STORAGE: {\r\n\t\t// \tlocalStorage.setItem(SUPPORT_ANSWERS, JSON.stringify(state.answers));\r\n\t\t// \treturn state;\r\n\t\t// }   \t\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n};","// Import redux types\r\nimport { ActionCreator, Dispatch } from 'redux';\r\nimport { ThunkAction } from 'redux-thunk';\r\n// Import Tag Typing\r\nimport { ITag, ITagState } from './types';\r\nimport data from \"./data.json\"\r\nconst storageTagsDemo: ITag[] = data;\r\n\r\n// Create Action Constants\r\nexport enum TagActionTypes {\r\n\tGET_ALL_TAGS = 'GET_ALL_TAGS',\r\n  \tGET_TAG = 'GET_TAG'\r\n}\r\n\r\n// Interface for Get All Action Type\r\nexport interface IGetAll {\r\n\ttype: TagActionTypes.GET_ALL_TAGS;\r\n\ttags: ITag[];\r\n }\r\n \r\nexport interface IGet {\r\n\ttype: TagActionTypes.GET_TAG;\r\n\ttag: ITag;\r\n}\r\n\r\n// localStorage\r\nexport const SUPPORT_TAGS = 'SUPPORT_TAGS' \r\nconst storageTags: ITag[] = [\r\n]\r\n\r\n\r\n// Combine the action types with a union (we assume there are more)\r\nexport type TagActions = IGetAll | IGet;\r\n\r\nconst isWebStorageSupported = () => 'localStorage' in window\r\n\r\n// Get All Action <Promise<Return Type>, State Interface, Type of Param, Type of Action>\r\nexport const getAllTags: ActionCreator<\r\n  ThunkAction<Promise<any>, ITagState, null, IGetAll>\r\n> = () => {\r\n  return async (dispatch: Dispatch) => {\r\n    try {\r\n\t\t// const response = await axios.get('https://swapi.co/api/people/');\r\n\t\tif (isWebStorageSupported()) {\r\n\t\t\tconst sTags = localStorage.getItem(SUPPORT_TAGS);\r\n\t\t\tif (sTags !== null) {\r\n\t\t\t\tconst Tags: ITag[] = JSON.parse(sTags);\r\n\t\t\t\tTags.map(g => storageTags.push(g))\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tstorageTagsDemo.map(g => storageTags.push(g))\t\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {\r\n\t\t\tstorageTagsDemo.map(g => storageTags.push(g))\r\n\t\t}\r\n\r\n\t\t//const response = await getTagsFromLocalStorage(); \r\n      dispatch({\r\n        type: TagActionTypes.GET_ALL_TAGS,\r\n        tags: storageTags //response.data.results,\r\n      });\r\n    } catch (err) {\r\n      console.error(err);\r\n    }\r\n  };\r\n};\r\n\r\n\r\n\r\n\r\n","// Import Reducer type\r\nimport { Reducer } from 'redux';\r\n\r\nimport {\r\n\tUserActions,\r\n\tUserActionTypes\r\n} from './actions';\r\n\r\nimport { IUser, IRole, IUsersState } from './types'\r\n\r\nexport const SUPPORT_USERS = 'SUPPORT_USERS';\r\n\r\nexport const initialUser: IUser = {\r\n\troleId: 0,\r\n\tuserId: 0,\r\n\tuserName: '',\r\n\tpwd: '',\r\n\tdepartment: 'neki',\r\n\tcreatedBy: 0,\r\n\tcreated: new Date(),\r\n};\r\n\r\nexport const initialUserRole: IRole = {\r\n\troleId: 0,\r\n\ttitle: '',\r\n\tcolor: 'lightgreen',\r\n\tusers: [],\r\n\tisExpanded: false,\r\n\tcreatedBy: 0,\r\n\tcreated: new Date()\r\n};\r\n\r\n\r\n// Define the initial state\r\nexport const initialUsersState: IUsersState = {\r\n\troles: [],\r\n\tuserEditing: undefined,\r\n\tallUsers: [],\r\n\troleOptions: [],\r\n\tuserOptions: [],\r\n\tloading: false,\r\n\tformMode: 'display',\r\n\troleIdEditing: -1,\r\n\townerUserId: 101\r\n};\r\n\r\n\r\n/*\r\nconst getUser = (\r\n\t\t\troles: IRole[], \r\n\t\t\troleId: number, \r\n\t\t\tuserId: number) : IUser|undefined => {\r\n\tconst group = roles.find(g => g.roleId === roleId)\r\n\tif (!group)\r\n\t\treturn undefined;\r\n\r\n\tconst user = group\r\n\t\t\t\t\t\t\t.users\r\n\t\t\t\t\t\t\t.find(q => q.userId === userId);\r\n\treturn user;\r\n}\r\n*/\r\n\r\n\r\nconst aTypesToStore = Object.keys(UserActionTypes)\r\n\t.filter(a => a !== UserActionTypes.GET_ALL_USERS);\r\n\r\nexport const userReducer: Reducer<IUsersState, UserActions> = (state, action) => {\r\n\tconst newState = myReducer(state, action);\r\n\tif (aTypesToStore.includes(action.type)) {\r\n\t\tlocalStorage.setItem(SUPPORT_USERS, JSON.stringify(newState.roles));\r\n\t}\r\n\treturn newState;\r\n}\r\n\r\nconst myReducer: Reducer<IUsersState, UserActions> = (\r\n\tstate = initialUsersState,\r\n\taction\r\n) => {\r\n\tswitch (action.type) {\r\n\r\n\t\tcase UserActionTypes.GET_ALL_USERS: {\r\n\t\t\tconst { roles } = action;\r\n\t\t\tconsole.log('roles', roles)\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\troles\r\n\t\t\t};\r\n\t\t}\r\n\t\t//roleOptions: roles.map(g => ({ label: g.title, value: g.roleId })),\r\n\t\t//userOptions: allUsers.map(user => ({ label: user.name, value: user.userId }))\r\n\r\n\t\tcase UserActionTypes.CREATE_OPTIONS: {\r\n\t\t\tconst {roles} = state;\r\n\t\t\tlet allUsers: IUser[] = [];\r\n\t\t\troles.map(g => {\r\n\t\t\t\t//console.log('g', g)\r\n\t\t\t\tallUsers = allUsers.concat(g.users)\r\n\t\t\t});\r\n\t\t\tconsole.log('allUsers', allUsers)\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tallUsers,\r\n\t\t\t\troleOptions: roles.map(g => ({ label: g.title, value: g.roleId })),\r\n\t\t\t\tuserOptions: allUsers.map(user => ({ label: user.userName, value: user.userId }))\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tcase UserActionTypes.GET_USER: {\r\n\t\t\tlet user = undefined;\r\n\t\t\tfor (let role of state.roles) {\r\n\t\t\t\tuser = role.users\r\n\t\t\t\t\t.find(user => user.userId === action.userId);\r\n\t\t\t\tif (user)\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tuserEditing: user\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tcase UserActionTypes.ADD_USER: {\r\n\t\t\tlet userIdMax = 0;\r\n\t\t\tfor (let role of state.roles) {\r\n\t\t\t\tfor (let user of role.users) \r\n\t\t\t\t\tif (user.userId > userIdMax)\r\n\t\t\t\t\t\tuserIdMax = user.userId\r\n\t\t\t}\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tformMode: 'add',\r\n\t\t\t\tuserEditing: { \r\n\t\t\t\t\t...initialUser, \r\n\t\t\t\t\tcreatedBy: action.createdBy,\r\n\t\t\t\t\troleId: action.roleId, \r\n\t\t\t\t\tuserId: userIdMax + 1,\r\n\t\t\t\t\ttext: action.text\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tcase UserActionTypes.EDIT_USER: {\r\n\t\t\tconst userRole = state.roles.find(g => g.roleId === action.roleId);\r\n\t\t\tconst user = userRole!.users\r\n\t\t\t\t.find(user => user.userId === action.userId);\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tformMode: 'edit',\r\n\t\t\t\tuserEditing: user\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tcase UserActionTypes.STORE_USER: {\r\n\t\t\tconst { user, formMode } = action;\r\n\t\t\tif (formMode === 'add') { // state.formMode\r\n\t\t\t\tconsole.log(' UserActionTypes.STORE_USER user', user)\r\n\t\t\t\tif (user.roleId === 0 && !state.roles.map(g => g.roleId).includes(0)) {\r\n\t\t\t\t\tconsole.log('unisao')\r\n\t\t\t\t\t// do something\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\t...state,\r\n\t\t\t\t\t\tformMode: 'edit',\r\n\t\t\t\t\t\troles: [\r\n\t\t\t\t\t\t\t...state.roles,\r\n\t\t\t\t\t\t\t{ \r\n\t\t\t\t\t\t\t\t...initialUserRole, \r\n\t\t\t\t\t\t\t\troleId: 0,\r\n\t\t\t\t\t\t\t\ttitle: 'Unknown',\r\n\t\t\t\t\t\t\t\tusers: [user]\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t]\r\n\t\t\t\t\t};\r\n\t\t\t\t}\r\n\t\t\t\treturn {\r\n\t\t\t\t\t...state,\r\n\t\t\t\t\tformMode: 'edit',\r\n\t\t\t\t\troles: state.roles.map(g => g.roleId !== user.roleId ?\r\n\t\t\t\t\t\t{ ...g, users: [...g.users] }\r\n\t\t\t\t\t\t:\r\n\t\t\t\t\t\t{ ...g, users: [...g.users, { ...user }] }\r\n\t\t\t\t\t)\r\n\t\t\t\t};\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tconst { roles } = state;\r\n\t\t\t\tconst {user} = action;\r\n\t\t\t\tconst userId: number = user.roleId;\r\n\t\t\t\tconst g = roles.find(g => g.roleId === user.roleId);\r\n\t\t\t\tconst q = g!.users.find(q => q.userId === user.userId);\r\n\t\t\t\tif (q) { // change user\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\t...state,\r\n\t\t\t\t\t\tformMode: 'edit',\r\n\t\t\t\t\t\troles: roles.map(g => g.roleId !== user.roleId\r\n\t\t\t\t\t\t\t? { ...g, users: [...g.users]\t}\r\n\t\t\t\t\t\t\t: {\r\n\t\t\t\t\t\t\t\t...g, \r\n\t\t\t\t\t\t\t\tusers: g.users\r\n\t\t\t\t\t\t\t\t\t.map(q => q.userId !== user.userId ?\r\n\t\t\t\t\t\t\t\t\t\tq : { ...user }\r\n\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t};\r\n\t\t\t\t}\r\n\t\t\t\telse { // assing user to another group\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\t...state,\r\n\t\t\t\t\t\tformMode: 'edit',\r\n\t\t\t\t\t\troles: roles.map(g => g.roleId !== user.roleId\r\n\t\t\t\t\t\t\t? { ...g, users: [...g.users.filter(q=> q.userId !== user.userId)]\t}\r\n\t\t\t\t\t\t\t: {\t...g, users: [...g.users, { ...user } ]\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t};\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tcase UserActionTypes.CANCEL_USER: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tformMode: 'display',\r\n\t\t\t\tuserEdited: undefined\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tcase UserActionTypes.REMOVE_USER: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tformMode: 'display',\r\n\t\t\t\tuserEdited: undefined,\r\n\t\t\t\troles: state.roles.map(g => g.roleId !== action.roleId ?\r\n\t\t\t\t\t{ ...g, users: [...g.users] }\r\n\t\t\t\t\t:\r\n\t\t\t\t\t{ ...g, users: g.users.filter(q => q.userId !== action.userId) }\r\n\t\t\t\t)\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\t///////////////////////////////////////////////////////////////////////////////////\r\n\t\t// groups\r\n\r\n\t\tcase UserActionTypes.ADD_ROLE: {\r\n\t\t\tlet roleId = Math.max(...state.roles.map(g => g.roleId)) + 1\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\troleIdEditing: roleId,\r\n\t\t\t\troles: [...state.roles, { ...initialUserRole, title: \"New Section\", roleId: roleId }]\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tcase UserActionTypes.TOGGLE_ROLE: {\r\n\t\t\tconsole.log(action)\r\n\t\t\tconst group = state.roles.find(g => g.roleId === action.roleId);\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\troles: state.roles.map(g => g.roleId !== action.roleId\r\n\t\t\t\t\t? g\r\n\t\t\t\t\t: { ...g, isExpanded: !g.isExpanded }\r\n\t\t\t\t)\r\n\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tcase UserActionTypes.EDIT_ROLE: {\r\n\t\t\tconst group = state.roles.find(g => g.roleId === action.roleId)\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\troleIdEditing: group!.roleId\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tcase UserActionTypes.STORE_ROLE: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\troleIdEditing: -1,\r\n\t\t\t\troles: state.roles.map(g => g.roleId !== action.group.roleId ?\r\n\t\t\t\t\tg\r\n\t\t\t\t\t:\r\n\t\t\t\t\t{ ...g, title: action.group.title }\r\n\t\t\t\t)\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tcase UserActionTypes.REMOVE_ROLE: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\troles: state.roles.reduce((acc: IRole[], g) => {\r\n\t\t\t\t\tif (g.roleId !== action.roleId)\r\n\t\t\t\t\t\tacc.push({ ...g, users: [...g.users] })\r\n\t\t\t\t\treturn acc\r\n\t\t\t\t}, [])\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n};\r\n\r\n","// Define the User State\r\nimport { IOption } from '../common/types';\r\nimport { IAuth } from '../Top/types';\r\n\r\nexport interface IUser {\r\n\troleId: number,\r\n\tuserId: number,\r\n\tuserName: string;\r\n\tpwd: string,\r\n\tdepartment: string,\r\n\t\tcreatedBy: number,\r\n\t\tcreated: Date\r\n}\r\n\r\nexport interface IUserJson extends Omit<IUser, 'created'> {\r\n\tcreated: string\r\n}\r\n\r\nexport interface IRole {\r\n\troleId: number,\r\n\ttitle: string,\r\n\tcolor: string,\r\n\tusers: IUser[],\r\n\tisExpanded?: boolean,\r\n\tcreatedBy: number,\r\n\tcreated: Date\r\n}\r\n\r\n// Define the User State\r\nexport interface IUsersState {\r\n\treadonly roles: IRole[];\r\n\treadonly userEditing: IUser | undefined;\r\n\tallUsers: IUser[],\r\n\troleOptions: IOption<number>[];\r\n\tuserOptions: IOption<number>[];\r\n\tloading: boolean,\r\n\tformMode: string;\r\n\troleIdEditing: number;\r\n\townerUserId: number;\r\n}\r\n\r\n\r\nexport interface IRoleJson extends Omit<IRole, 'created' | 'users'> {\r\n\tusers: IUserJson[],\r\n\tcreated: string\r\n}\r\n\r\nexport interface IRolesProps {\r\n\twho: IUser, \r\n\troles: IRole[];\r\n\tuserEditing: IUser | undefined;\r\n\tformMode: string,\r\n\troleIdEditing: number,\r\n\tcanEdit: boolean,\r\n\tonSelectUser: (userId: number) => IUser;\r\n\tadd: (roleId: number, text: string, canEdit?: boolean) => void;\r\n\tedit: (roleId: number, userId: number) => void;\r\n\tremove: (roleId: number, userId: number) => void;\r\n\t// roles\r\n\taddRole: () => void;\r\n\ttoggleRole: (roleId: number) => void;\r\n\teditRole: (roleId: number) => void;\r\n\tremoveRole: (removeId: number) => void;\r\n\tstoreRole: (role: IRole) => void;\r\n}\r\n\r\nexport interface IFormProps {\r\n\tauth?: IAuth;\r\n\tuserEditing: IUser | undefined;\r\n\tformMode: string;\r\n\tcanEdit: boolean,\r\n\tcancel: () => void;\r\n\tsaveForm: (user: IUser, formMode: string) => void;\r\n\troleOptions: IOption<number>[];\r\n  }\r\n \r\n  export enum RoleId {\r\n\tOWNER = 11,\r\n\tADMINS = 22,\r\n\tEDITORS = 33,\r\n\tVIEWERS = 44\r\n}\r\n ","// Import Reducer type\r\nimport { Reducer } from 'redux';\r\nimport {\r\n  TagActions,\r\n  TagActionTypes\r\n} from './actions';\r\n\r\nimport {ITag, ITagState } from './types'\r\n\r\nconst initialTag: ITag = {\r\n\ttagId: 0,\r\n\tname: ''\r\n};\r\n\r\nconst initialTagState: ITagState = {\r\n\ttags: [],\r\n\tloading: false,\r\n\tformMode: 'display'\r\n};\r\n\r\n\r\nexport const tagReducer: Reducer<ITagState, TagActions> = (\r\n  state = initialTagState,\r\n  action\r\n) => {\r\n  switch (action.type) {\r\n\r\n   case TagActionTypes.GET_ALL_TAGS: {\r\n\t\treturn {\r\n        ...state,\r\n        tags: action.tags.map(tag => ({...tag}) ),\r\n      };\r\n\t} \r\n\r\n \tcase TagActionTypes.GET_TAG: {\r\n      return {\r\n\t\t  ...state,\r\n        tag: action.tag\r\n      };\r\n\t}    \r\n\r\n\tdefault:\r\n   \t\treturn state;\r\n  }\r\n};"," // Import redux types\r\nimport { ActionCreator, Dispatch } from 'redux';\r\nimport { ThunkAction } from 'redux-thunk';\r\n// Import Top Typing\r\nimport { ILogin, ITop, ITopJson, ITopState } from './types';\r\n\r\nimport { IAppState } from '../store/Store';\r\nimport { IUser, RoleId, IUsersState } from '../Users/types';\r\nimport { findUser, getUser, storeUser, UserActionTypes } from '../Users/actions';\r\nimport { ThemeContext } from '../ThemeContext';\r\nimport { useContext } from 'react';\r\n\r\n// localStorage\r\nexport const SUPPORT_TOP = 'SUPPORT_TOP';\r\n\r\n// Create Action Constants\r\nexport enum TopActionTypes {\r\n\tLOAD_TOP = \"LOAD_TOP\",\r\n\tNAVBAR_TOGGLE = 'NAVBAR_TOGGLE',\r\n\tREGISTER = 'REGISTER',\r\n\tREGISTER_USERNAME_EXISTS = 'REGISTER_USERNAME_EXISTS',\r\n\tAUTHENTICATE = 'AUTHENTICATE',\r\n\tUNAUTHENTICATE = 'UNAUTHENTICATE',\r\n\tAUTHENTICATE_WRONG_USERNAME = 'AUTHENTICATE_WRONG_USERNAME',\r\n\tAUTHENTICATE_WRONG_PWD = 'AUTHENTICATE_WRONG_PWD',\r\n\tCANCEL = 'CANCEL',\r\n\tTOGGLE_MODE = 'TOGGLE_MODE'\r\n}\r\n\r\n\r\nexport interface INavbarToggle {\r\n\ttype: TopActionTypes.NAVBAR_TOGGLE;\r\n}\r\n\r\nexport interface ILoadTop {\r\n\ttype: TopActionTypes.LOAD_TOP;\r\n\ttop: ITop\r\n}\r\n\r\nexport interface IRegister {\r\n\ttype: TopActionTypes.REGISTER;\r\n\tuser: IUser;\r\n}\r\n\r\nexport interface IRegisterUsernameExists {\r\n\ttype: TopActionTypes.REGISTER_USERNAME_EXISTS;\r\n}\r\n\r\nexport interface IAuthenticate {\r\n\ttype: TopActionTypes.AUTHENTICATE;\r\n\tuser: IUser;\r\n}\r\n\r\nexport interface IAuthenticateWrongUsername {\r\n\ttype: TopActionTypes.AUTHENTICATE_WRONG_USERNAME;\r\n}\r\n\r\nexport interface IAuthenticateWrongPwd {\r\n\ttype: TopActionTypes.AUTHENTICATE_WRONG_PWD;\r\n}\r\n\r\nexport interface IUnAuthenticate {\r\n\ttype: TopActionTypes.UNAUTHENTICATE;\r\n}\r\n\r\nexport interface ICancel {\r\n\ttype: TopActionTypes.CANCEL;\r\n}\r\n\r\nexport interface IToggleMode {\r\n\ttype: TopActionTypes.TOGGLE_MODE;\r\n}\r\n\r\n\r\n// Combine the action types with a union (we assume there are more)\r\nexport type TopActions = ILoadTop |\r\n\tINavbarToggle |\r\n\tIRegister |\r\n\tIRegisterUsernameExists |\r\n\tIAuthenticate |\r\n\tIAuthenticateWrongUsername |\r\n\tIAuthenticateWrongPwd |\r\n\tIUnAuthenticate |\r\n\tICancel |\r\n\tIToggleMode;\r\n\r\nconst isWebStorageSupported = () => 'localStorage' in window\r\n\r\nconst parseFromLocalStorage = (json: ITopJson): ITop => {\r\n\treturn parseObj(json);\r\n}\r\n\r\nconst parseObj = (json: ITopJson): ITop => {\r\n\tconst { auth } = json;\r\n\tif (!auth) {\r\n\t\treturn {\r\n\t\t\t...json,\r\n\t\t\tauth: undefined\r\n\t\t}\r\n\t}\r\n\r\n\tconst { who, visited, authenticated } = auth;\r\n\treturn {\r\n\t\t...json,\r\n\t\tauth: !auth ? undefined : {\r\n\t\t\t...auth,\r\n\t\t\twho: {\r\n\t\t\t\t...who,\r\n\t\t\t\tcreated: new Date(who.created!)\r\n\t\t\t},\r\n\t\t\tvisited: new Date(visited),\r\n\t\t\tauthenticated: new Date(authenticated)\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport const loadTop: ActionCreator<\r\n\tThunkAction<Promise<any>, IAppState, null, ILoadTop>\r\n> = () => {\r\n\treturn async (dispatch: Dispatch) => {\r\n\t\ttry {\r\n\t\t\tlet top = undefined;\r\n\r\n\t\t\tif (isWebStorageSupported()) {\r\n\t\t\t\tconst s = localStorage.getItem(SUPPORT_TOP);\r\n\t\t\t\tif (s !== null) {\r\n\t\t\t\t\t//const Users: IUserRole[] = JSON.parse(sUsers);\r\n\t\t\t\t\t//Users.map(g => storageUsers.push(g))\r\n\t\t\t\t\tconst parsed = JSON.parse(s);\r\n\t\t\t\t\tconsole.log('parsed', parsed)\r\n\t\t\t\t\ttop = parseFromLocalStorage(parsed);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (top) {\r\n\t\t\t\tdispatch({\r\n\t\t\t\t\ttype: TopActionTypes.LOAD_TOP,\r\n\t\t\t\t\ttop\r\n\t\t\t\t});\r\n\t\t\t\tif (top.auth && top.auth.who) { // check if date is older then a few months\r\n\t\t\t\t\tdispatch<any>(authenticate(top.auth!.who))\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn top;\r\n\t\t}\r\n\t\tcatch (err) {\r\n\t\t\tconsole.error(err);\r\n\t\t}\r\n\t};\r\n}\r\n\r\n\r\nexport const register: ActionCreator<\r\n\tThunkAction<Promise<any>, IAppState, null, IAuthenticate>\r\n> = (loginUser: ILogin) => {\r\n\treturn async (dispatch: Dispatch, getState: () => IAppState) => {\r\n\t\ttry {\r\n\t\t\tconst { usersState } = getState();\r\n\t\t\tconst { allUsers } = usersState;\r\n\t\t\tdispatch<any>(findUser(loginUser.userName))\r\n\t\t\t\t.then((user: IUser) => {\r\n\t\t\t\t\tif (user) {\r\n\t\t\t\t\t\tdispatch({\r\n\t\t\t\t\t\t\ttype: TopActionTypes.REGISTER_USERNAME_EXISTS\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tlet roleId = RoleId.VIEWERS;\r\n\t\t\t\t\t\tlet userId = 0;\r\n\t\t\t\t\t\tif (allUsers.length === 0) {\r\n\t\t\t\t\t\t\troleId = RoleId.OWNER;\r\n\t\t\t\t\t\t\tuserId = usersState.ownerUserId; // owner userId would be 101\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\tuserId = Math.max(...allUsers.map(u => u.userId)) + 1;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tconst user: IUser = {\r\n\t\t\t\t\t\t\troleId,\r\n\t\t\t\t\t\t\tuserId, \r\n\t\t\t\t\t\t\tuserName: loginUser.userName,\r\n\t\t\t\t\t\t\tpwd: loginUser.pwd,\r\n\t\t\t\t\t\t\tdepartment: \"dept1\",\r\n\t\t\t\t\t\t\tcreatedBy: userId, // registered user is treated as creator\r\n\t\t\t\t\t\t\tcreated: new Date()\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tdispatch<any>(storeUser(user, 'add'))\r\n\t\t\t\t\t\t\t.then((user: IUser) => {\r\n\t\t\t\t\t\t\t\tdispatch({\r\n\t\t\t\t\t\t\t\t\ttype: TopActionTypes.REGISTER,\r\n\t\t\t\t\t\t\t\t\tuser\r\n\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\tdispatch<any>(authenticate(loginUser));\r\n\t\t\t\t\t\t\t\tdispatch({type: UserActionTypes.CREATE_OPTIONS})\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t}\r\n\t\tcatch (err) {\r\n\t\t\tconsole.error(err);\r\n\t\t}\r\n\t};\r\n}\r\n\r\nexport const authenticate: ActionCreator<\r\n\tThunkAction<Promise<any>, IAppState, null, IAuthenticate>\r\n> = (loginUser: ILogin) => {\r\n\treturn async (dispatch: Dispatch, getState: () => IAppState) => {\r\n\t\ttry {\r\n\t\t\tdispatch<any>(await findUser(loginUser.userName))\r\n\t\t\t\t.then((user: IUser) => {\r\n\t\t\t\t\tif (user) {\r\n\t\t\t\t\t\tif (user.pwd === loginUser.pwd) {\r\n\t\t\t\t\t\t\tdispatch({\r\n\t\t\t\t\t\t\t\ttype: TopActionTypes.AUTHENTICATE,\r\n\t\t\t\t\t\t\t\tuser\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\tdispatch({\r\n\t\t\t\t\t\t\t\ttype: TopActionTypes.AUTHENTICATE_WRONG_PWD\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tdispatch({\r\n\t\t\t\t\t\t\ttype: TopActionTypes.AUTHENTICATE_WRONG_USERNAME\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t}\r\n\t\tcatch (err) {\r\n\t\t\tconsole.error(err);\r\n\t\t}\r\n\t};\r\n}\r\n\r\nexport const unAuthenticate: ActionCreator<\r\n\tThunkAction<Promise<any>, IAppState, null, IAuthenticate>\r\n> = () => {\r\n\treturn async (dispatch: Dispatch) => {\r\n\t\ttry {\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: TopActionTypes.UNAUTHENTICATE\r\n\t\t\t});\r\n\t\t}\r\n\t\tcatch (err) {\r\n\t\t\tconsole.error(err);\r\n\t\t}\r\n\t};\r\n}\r\n\r\nexport const cancelLogin: ActionCreator<any> = () => {\r\n\treturn (dispatch: Dispatch) => {\r\n\t\ttry {\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: TopActionTypes.CANCEL\r\n\t\t\t});\r\n\t\t} catch (err) {\r\n\t\t\tconsole.error(err);\r\n\t\t}\r\n\t};\r\n};\r\n\r\n\r\nexport const toggleMode: ActionCreator<any> = () => {\r\n\treturn (dispatch: Dispatch) => {\r\n\t\ttry {\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: TopActionTypes.TOGGLE_MODE\r\n\t\t\t});\r\n\t\t} catch (err) {\r\n\t\t\tconsole.error(err);\r\n\t\t}\r\n\t};\r\n};\r\n\r\n\r\nexport const navbarToggle: ActionCreator<any> = () => {\r\n\treturn (dispatch: Dispatch) => {\r\n\t\ttry {\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: TopActionTypes.NAVBAR_TOGGLE\r\n\t\t\t});\r\n\t\t}\r\n\t\tcatch (err) {\r\n\t\t\tconsole.error(err);\r\n\t\t}\r\n\t};\r\n};\r\n\r\n/*\r\nexport function checkAuthentication() {\r\n\treturn async (dispatch: Dispatch) => {\r\n\t  const auth = await window.localStorage.getItem(\"authenticated\");\r\n\t  const formattedAuth = typeof auth === \"string\" ?\r\n\t\tJSON.parse(auth) :\r\n\t\tnull;\r\n  \r\n\t  formattedAuth ? dispatch(authenticate()) : dispatch(unauthenticate());\r\n\t};\r\n  }\r\n*/","// Import Reducer type\r\nimport { Reducer } from 'redux';\r\nimport {\r\n\tSUPPORT_TOP, TopActions, TopActionTypes\r\n} from './actions';\r\nimport { ITop, ITopState } from './types';\r\n\r\nconst initialTop: ITop = {\r\n\tisAuthenticated: null,\r\n\tuuid: null,\r\n\tdarkMode: true\r\n};\r\n\r\nconst initialTopState: ITopState = {\r\n\ttop: initialTop\r\n};\r\n\r\nconst aTypesToStore = Object.keys(TopActionTypes).filter(a => a !== TopActionTypes.LOAD_TOP);\r\n\r\nexport const topReducer: Reducer<ITopState, TopActions> = (state, action) => {\r\n\tconst newState = myReducer(state, action);\r\n\tif (aTypesToStore.includes(action.type)) {\r\n\t\tlocalStorage.setItem(SUPPORT_TOP, JSON.stringify(newState.top));\r\n\t}\r\n\treturn newState;\r\n}\r\n\r\nconst myReducer: Reducer<ITopState, TopActions> = (\r\n\tstate = initialTopState,\r\n\taction\r\n) => {\r\n\tswitch (action.type) {\r\n\r\n\t\tcase TopActionTypes.LOAD_TOP: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\ttop: { \r\n\t\t\t\t\t...action.top, \r\n\t\t\t\t\tauthError: ''\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tcase TopActionTypes.REGISTER: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\ttop: {\r\n\t\t\t\t\tisAuthenticated: true,\r\n\t\t\t\t\tuuid: \"placeholder-uuid\",\r\n\t\t\t\t\tauth: {\r\n\t\t\t\t\t\twho: action.user,\r\n\t\t\t\t\t\tauthenticated: new Date(),\r\n\t\t\t\t\t\tvisited: new Date()\r\n\t\t\t\t\t},\r\n\t\t\t\t\tdarkMode: false\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tcase TopActionTypes.REGISTER_USERNAME_EXISTS: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\ttop: {\r\n\t\t\t\t\t...state.top,\r\n\t\t\t\t\tauthError: \"Username already exists, please chose another!\"\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t}\t\t\r\n\r\n\t\tcase TopActionTypes.NAVBAR_TOGGLE: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\ttop: {\r\n\t\t\t\t\t...state.top\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t}\t\r\n\r\n\t\tcase TopActionTypes.TOGGLE_MODE: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\ttop: {\r\n\t\t\t\t\t...state.top,\r\n\t\t\t\t\tdarkMode: !state.top.darkMode\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t}\t\r\n\r\n\t\tcase TopActionTypes.AUTHENTICATE: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\ttop: {\r\n\t\t\t\t\t...state.top,\r\n\t\t\t\t\tisAuthenticated: true,\r\n\t\t\t\t\tuuid: \"placeholder-uuid\",\r\n\t\t\t\t\tauth: {\r\n\t\t\t\t\t\twho: action.user,\r\n\t\t\t\t\t\tauthenticated: new Date(),\r\n\t\t\t\t\t\tvisited: new Date()\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tcase TopActionTypes.UNAUTHENTICATE: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\ttop: {\r\n\t\t\t\t\t...state.top,\r\n\t\t\t\t\tisAuthenticated: false,\r\n\t\t\t\t\tauth: undefined\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tcase TopActionTypes.AUTHENTICATE_WRONG_USERNAME: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\ttop: {\r\n\t\t\t\t\t...state.top,\r\n\t\t\t\t\tauthError: \"User doesn't exist!\"\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tcase TopActionTypes.AUTHENTICATE_WRONG_PWD: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\ttop: {\r\n\t\t\t\t\t...state.top,\r\n\t\t\t\t\tauthError: \"Password doesn't match!\"\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t}\r\n\r\n\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n};","import { applyMiddleware, combineReducers, createStore, Store } from 'redux';\r\nimport thunk from 'redux-thunk';\r\n\r\nimport { categoriesReducer } from '../Categories/categoriesReducer';\r\nimport { answerReducer } from '../Answers/reducer';\r\n\r\nimport { IAnswerState } from '../Answers/types';\r\nimport { ICategoriesState } from '../Categories/types';\r\nimport { IUsersState } from '../Users/types';\r\nimport { userReducer } from '../Users/reducer';\r\nimport { ITagState } from '../roleTags/types';\r\nimport { tagReducer } from '../roleTags/reducer';\r\nimport { ITopState } from '../Top/types';\r\nimport { topReducer } from '../Top/reducer';\r\n\r\nexport interface IAppState {\r\n  categoriesState: ICategoriesState;\r\n  answerState: IAnswerState;\r\n  usersState: IUsersState;\r\n  tagState: ITagState;\r\n  topState: ITopState;\r\n}\r\n\r\n// Create the root reducer\r\nconst rootReducer = combineReducers<IAppState>({\r\n  categoriesState: categoriesReducer,\r\n  answerState: answerReducer,\r\n  usersState: userReducer,\r\n  tagState: tagReducer,\r\n  topState: topReducer\r\n});\r\n\r\n// Create a configure store function of type `IAppState`\r\nexport default function configureStore(): Store<IAppState, any> {\r\n  const store = createStore(rootReducer, undefined, applyMiddleware(thunk));\r\n  return store;\r\n}","import { connect, Provider } from 'react-redux';\r\nimport { createContext, useReducer } from \"react\";\r\nimport { IAppState } from './store/Store';\r\n\r\nexport interface IThemeState {\r\n  darkMode: boolean,\r\n  variant?: string,\r\n  bg: string\r\n}\r\n\r\nenum ThemeActionKind {\r\n  LIGHTMODE = 'LIGHTMODE',\r\n  DARKMODE = 'DARKMODE',\r\n}\r\n\r\n// An interface for our actions\r\ninterface IThemeAction {\r\n  type: ThemeActionKind;\r\n}\r\n\r\nconst initialState = {\r\n  darkMode: false,\r\n  variant: 'light',\r\n  bg: 'light'\r\n};\r\n\r\nexport const ThemeContext = createContext<{ state: IThemeState; dispatch: React.Dispatch<any> }>({\r\n  state: initialState,\r\n  dispatch: () => null\r\n});\r\n\r\n\r\nconst themeReducer = (state: IThemeState, action: IThemeAction) => {\r\n  switch (action.type) {\r\n    case \"LIGHTMODE\":\r\n      return { ...state, darkMode: false, variant: 'light', bg: 'light' };\r\n    case \"DARKMODE\":\r\n      return { ...state, darkMode: true, variant: 'dark', bg: 'dark' };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport function ThemeProvider(props: { children: React.ReactNode, darkMode: boolean })\r\n{\r\n  const initState = {\r\n    ...initialState, \r\n    darkMode: props.darkMode,\r\n    variant: props.darkMode? 'dark' : 'light',\r\n    bg: props.darkMode? 'dark' : 'light'\r\n  }\r\n\r\n  const [state, dispatch] = useReducer(themeReducer, initState);\r\n  return <ThemeContext.Provider value={{ state, dispatch }}>\r\n    {props.children}\r\n  </ThemeContext.Provider>;\r\n}\r\n\r\n","import * as React from 'react';\r\nimport { createRef } from 'react'\r\n\r\nimport Autosuggest from 'react-autosuggest';\r\nimport AutosuggestHighlightMatch from \"autosuggest-highlight/match\";\r\nimport AutosuggestHighlightParse from \"autosuggest-highlight/parse\";\r\n\r\nimport { IQuestion, ICategory, ICategoryState } from '../Categories/types'\r\nimport './AutoSuggest.css'\r\n\r\n// https://developer.mozilla.org/en/docs/Web/JavaScript/Guide/Regular_Expression\r\n// s#Using_Special_Characters\r\nfunction escapeRegexCharacters(str: string): string {\r\n\treturn str.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&');\r\n}\r\n\r\n\r\nlet inputAutosuggest = createRef<HTMLInputElement>();\r\n\r\nconst QuestionAutosuggestMulti = Autosuggest as { new(): Autosuggest<IQuestion, ICategory> };\r\n\r\nexport class AutoSuggest extends React.Component<{\r\n\tcategories: ICategory[],\r\n\tcategoryQuestions: Map<number, ICategoryState>,\r\n\ttekst: string | undefined,\r\n\tonSelectQuestion: (categoryId: number, questionId: number) => void\r\n}, any\r\n> {\r\n\t// region Fields\r\n\r\n\tstate: any;\r\n\t//inputAutosuggest: React.RefObject<HTMLInputElement>;\r\n\t// endregion region Constructor\r\n\tconstructor(props: any) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tvalue: props.tekst || '',\r\n\t\t\tsuggestions: this.getSuggestions(''),\r\n\t\t\thighlighted: ''\r\n\t\t};\r\n\t\t//this.inputAutosuggest = createRef<HTMLInputElement>();\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\r\n\t\tsetTimeout(() => {\r\n\t\t\t//inputAutosuggest!.current!.focus();\r\n\t\t\tsetTimeout(() => {\r\n\t\t\t\twindow.focus()\r\n\t\t\t\tinputAutosuggest!.current!.focus();\r\n\t\t\t}, 500)\r\n\r\n\t\t}, 100)\r\n\r\n\t\t// console.log('componentDidMount', document)\r\n\t\t// console.log(document?.getElementById('inputAutoSuggest'))\r\n\t\t//document?.getElementById('inputAutoSuggest')?.focus(); \r\n\t}\r\n\r\n\t// endregion region Rendering methods\r\n\trender(): JSX.Element {\r\n\t\tconst { value, suggestions } = this.state;\r\n\r\n\t\treturn <QuestionAutosuggestMulti\r\n\t\t\tonSuggestionsClearRequested={this.onSuggestionsClearRequested}  // (sl) added\r\n\t\t\tmultiSection={true}\r\n\t\t\tsuggestions={suggestions}\r\n\t\t\tonSuggestionsFetchRequested={this.onSuggestionsFetchRequested.bind(this)}\r\n\t\t\tonSuggestionSelected={this.onSuggestionSelected.bind(this)}\r\n\t\t\tgetSuggestionValue={this.getSuggestionValue}\r\n\t\t\trenderSuggestion={this.renderSuggestion}\r\n\t\t\trenderSectionTitle={this.renderSectionTitle}\r\n\t\t\tgetSectionSuggestions={this.getSectionSuggestions}\r\n\t\t\t// onSuggestionHighlighted={this.onSuggestionHighlighted} (sl)\r\n\t\t\tonSuggestionHighlighted={this.onSuggestionHighlighted.bind(this)}\r\n\t\t\thighlightFirstSuggestion={false}\r\n\t\t\trenderInputComponent={this.renderInputComponent}\r\n\t\t\trenderSuggestionsContainer={this.renderSuggestionsContainer}\r\n\t\t\tfocusInputOnSuggestionClick={false}\r\n\t\t\tinputProps={{\r\n\t\t\t\tplaceholder: `Type 'promocode'`,\r\n\t\t\t\tvalue,\r\n\t\t\t\tonChange: (e, changeEvent) => this.onChange(e, changeEvent),\r\n\t\t\t\tautoFocus: true\r\n\t\t\t}}\r\n\t\t/>;\r\n\t}\r\n\r\n\tprotected onSuggestionsClearRequested = () => {\r\n\t\tthis.setState({\r\n\t\t\tsuggestions: []\r\n\t\t});\r\n\t};\r\n\r\n\r\n\r\n\tprotected onSuggestionSelected(event: React.FormEvent<any>, data: Autosuggest.SuggestionSelectedEventData<IQuestion>): void {\r\n\t\tconst question: IQuestion = data.suggestion;\r\n\t\t// alert(`Selected question is ${question.questionId} (${question.text}).`);\r\n\t\tthis.props.onSelectQuestion(question.categoryId, question.questionId);\r\n\t}\r\n\r\n\t/*\r\n\tprotected renderSuggestion(suggestion: Question, params: Autosuggest.RenderSuggestionParams): JSX.Element {\r\n\t\t const className = params.isHighlighted ? \"highlighted\" : undefined;\r\n\t\t return <span className={className}>{suggestion.name}</span>;\r\n\t}\r\n\t*/\r\n\r\n\tprotected renderSuggestion(suggestion: IQuestion, params: Autosuggest.RenderSuggestionParams): JSX.Element {\r\n\t\t// const className = params.isHighlighted ? \"highlighted\" : undefined;\r\n\t\t//return <span className={className}>{suggestion.name}</span>;\r\n\t\tconst matches = AutosuggestHighlightMatch(suggestion.text, params.query);\r\n\t\tconst parts = AutosuggestHighlightParse(suggestion.text, matches);\r\n\r\n\t\treturn (\r\n\t\t\t<span>\r\n\t\t\t\t{parts.map((part, index) => {\r\n\t\t\t\t\tconst className = part.highlight ? 'react-autosuggest__suggestion-match' : undefined;\r\n\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\t<span className={className} key={index}>\r\n\t\t\t\t\t\t\t{part.text}\r\n\t\t\t\t\t\t</span>\r\n\t\t\t\t\t);\r\n\t\t\t\t})}\r\n\t\t\t</span>\r\n\t\t);\r\n\t}\r\n\r\n\tprotected renderSectionTitle(section: ICategory): JSX.Element {\r\n\t\treturn <strong>{section.title}</strong>;\r\n\t}\r\n\r\n\t// protected renderInputComponent(inputProps: Autosuggest.InputProps<IQuestion>): JSX.Element {\r\n\t// \t const { onChange, onBlur, ...restInputProps } = inputProps;\r\n\t// \t return (\r\n\t// \t\t  <div>\r\n\t// \t\t\t\t<input {...restInputProps} />\r\n\t// \t\t  </div>\r\n\t// \t );\r\n\t// }\r\n\r\n\tprotected renderInputComponent(inputProps: Autosuggest.RenderInputComponentProps): JSX.Element {\r\n\t\tconst { ref, ...restInputProps } = inputProps;\r\n\t\t// if (ref !== undefined)\r\n\t\t// \tthis.inputAutosuggest = ref as React.RefObject<HTMLInputElement>;\r\n\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t<input {...restInputProps} ref={inputAutosuggest} />\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n\r\n\r\n\tprotected renderSuggestionsContainer({ containerProps, children, query }: Autosuggest.RenderSuggestionsContainerParams): JSX.Element {\r\n\t\treturn (\r\n\t\t\t<div {...containerProps}>\r\n\t\t\t\t<span>{children}</span>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n\t// endregion region Event handlers\r\n\r\n\tprotected onChange(event: /*React.ChangeEvent<HTMLInputElement>*/ React.FormEvent<any>, { newValue, method }: Autosuggest.ChangeEvent): void {\r\n\t\tthis.setState({ value: newValue });\r\n\t}\r\n\r\n\tprotected onSuggestionsFetchRequested({ value }: any): void {\r\n\t\tthis.setState({\r\n\t\t\tsuggestions: this.getSuggestions(value)\r\n\t\t});\r\n\t}\r\n\r\n\tprivate anyWord = (valueWordRegex: RegExp[], questionWords: string[]): boolean => {\r\n\t\tfor (let valWordRegex of valueWordRegex)\r\n\t\t\tfor (let questionWord of questionWords)\r\n\t\t\t\tif (valWordRegex.test(questionWord))\r\n\t\t\t\t\treturn true;\r\n\t\treturn false;\r\n\t}\r\n\t// endregion region Helper methods\r\n\tprotected getSuggestions(value: string): ICategory[] {\r\n\t\tconst escapedValue = escapeRegexCharacters(value.trim());\r\n\r\n\t\tif (escapedValue === '') {\r\n\t\t\treturn [];\r\n\t\t}\r\n\r\n\t\tconst valueWords = escapedValue.split(' ');\r\n\t\tconst valueWordRegex = valueWords.map(word => new RegExp(word, 'i'))\r\n\t\t// const regex = new RegExp('^' + escapedValue, 'i');\r\n\t\t// const regex = new RegExp(escapedValue, 'i');\r\n\r\n\t\t// return AutoSuggest.questions\t \r\n\t\t//  return this.props.categories\r\n\t\t// \t\t.map(section => {\r\n\t\t// \t\t\treturn {\r\n\t\t// \t\t\t\t\ttitle: section.title,\r\n\t\t// \t\t\t\t\tquestions: section\r\n\t\t// \t\t\t\t\t\t.questions\r\n\t\t// \t\t\t\t\t\t.filter(question => regex.test(question.text))\r\n\t\t// \t\t\t};\r\n\t\t// \t\t})\r\n\t\t// \t\t.filter(section => section.questions.length > 0);\r\n\t\tconst { categories, categoryQuestions } = this.props;\r\n\t\treturn categories\r\n\t\t\t.map(group => {\r\n\t\t\t\tconsole.log('categoryId:', group.categoryId);\r\n\t\t\t\tconsole.log('questions:', categoryQuestions.get(group.categoryId)!.questions)\r\n\t\t\t\treturn {\r\n\t\t\t\t\t...group,\r\n\t\t\t\t\tquestions: //.group.questions\r\n\t\t\t\t\t\tcategoryQuestions.get(group.categoryId)!.questions\r\n\t\t\t\t\t\t\t.filter(question => this.anyWord(valueWordRegex, question.words!))\r\n\t\t\t\t};\r\n\t\t\t})\r\n\t\t\t.filter(section => section.questions.length > 0);\r\n\t}\r\n\r\n\tprotected getSuggestionValue(suggestion: IQuestion) {\r\n\t\treturn suggestion.text;\r\n\t}\r\n\r\n\tprotected getSectionSuggestions(section: ICategory) {\r\n\t\treturn section.questions;\r\n\t}\r\n\r\n\tprotected onSuggestionHighlighted(params: Autosuggest.SuggestionHighlightedParams): void {\r\n\t\tthis.setState({\r\n\t\t\thighlighted: params.suggestion\r\n\t\t});\r\n\t}\r\n\t// endregion\r\n}\r\n\r\n","import { connect } from 'react-redux';\r\nimport { IAppState } from '../../store/Store';\r\nimport {OptionName}  from '../components/OptionName'\r\n\r\ninterface IOwnProps {\r\n\tid: number\r\n}\r\n\r\nconst mapStateToProps = (store: IAppState, ownProps: IOwnProps ) => {\r\n\treturn {\r\n\t\toptions: store.usersState.userOptions,\r\n\t\tid: ownProps.id\r\n\t};\r\n};\r\n\r\n\r\nexport default connect(mapStateToProps)(OptionName);\r\n","import { IOption, OptionValue } from \"../types\";\r\n\r\ntype Props<T extends OptionValue> = {\r\n    options: IOption<T>[];\r\n    id: T;\r\n};\r\n\r\nexport interface IProps {\r\n\toptions: IOption<number>[];\r\n  id: number;\r\n}\r\n\r\nexport function OptionName<T extends OptionValue>(props: Props<T>) {\r\n    const { id } = props;\r\n    const option: IOption<T>|undefined = props.options.find(option => option.value === id);\r\n    return (\r\n        <span>\r\n            {option\r\n                ? option!.label\r\n                : \"Unknown\"\r\n            }\r\n        </span>\r\n    );\r\n}","import React, { useContext } from 'react';\r\nimport { useFormik } from 'formik';\r\nimport * as Yup from 'yup'\r\nimport { ICategoryFormProps } from '../types';\r\n\r\nimport { ThemeContext } from \"../../ThemeContext\";\r\nimport { Button, Container, Form } from \"react-bootstrap\";\r\nimport UserName from '../../common/containers/UserName';\r\n//import { number } from 'yup/lib/locale';\r\n\r\nconst CategForm: React.FC<ICategoryFormProps> = (props: ICategoryFormProps) => {\r\n\r\n  const category = props.category!;\r\n  const { categoryId, title, questions, isExpanded, createdBy, created } = category;\r\n\r\n  const formik = useFormik({\r\n    enableReinitialize: true,\r\n    initialValues: {\r\n      categoryId,\r\n      title,\r\n      questions,\r\n      isExpanded,\r\n      createdBy,\r\n      created\r\n    },\r\n    validationSchema: Yup.object({\r\n      title: Yup.string()\r\n        .max(150, 'Must be 150 characters or less')\r\n        .required('Required'),\r\n      /*answers: Yup.string()\r\n        .max(20, 'Must be 20 characters or less')\r\n        .required('Required'),\r\n      email: Yup.string()\r\n        .email('Invalid email address')\r\n        .required('Required'),*/\r\n    }),\r\n    onSubmit: values => {\r\n      // alert(JSON.stringify(values, null, 2));\r\n      props.saveForm(values, props.formMode)\r\n    }\r\n  });\r\n\r\n  const isEdit = () => props.formMode === 'edit';\r\n\r\n  console.log('RENDERING', formik.values)\r\n  return (\r\n    <Form onSubmit={formik.handleSubmit}>\r\n\r\n      {isEdit() &&\r\n        <Form.Group controlId=\"categoryId\">\r\n          <Form.Label>Id: </Form.Label>\r\n          <span> {formik.values.categoryId}</span>\r\n        </Form.Group>\r\n      }\r\n\r\n      <Form.Group controlId=\"title\">\r\n        <Form.Label>Title</Form.Label>\r\n        <Form.Control\r\n          as=\"textarea\"\r\n          name=\"text\"\r\n          onChange={formik.handleChange}\r\n          //onBlur={formik.handleBlur}\r\n          onBlur={(e: React.FocusEvent<HTMLTextAreaElement>): void => {\r\n            if (isEdit() && formik.initialValues.title !== formik.values.title)\r\n              formik.submitForm();\r\n          }}\r\n          value={formik.values.title}\r\n          style={{ width: '100%' }}\r\n          rows={2}\r\n        />\r\n        <Form.Text className=\"text-danger\">\r\n          {formik.touched.title && formik.errors.title ? (\r\n            <div className=\"text-danger\">{formik.errors.title}</div>\r\n          ) : null}\r\n        </Form.Text>\r\n      </Form.Group>\r\n\r\n      <br />\r\n\r\n      <Form.Group controlId=\"createdBy\">\r\n        <Form.Label>Created by:</Form.Label>\r\n        <UserName id={formik.values.createdBy} />\r\n      </Form.Group>\r\n      {/* <br /> */}\r\n      <Form.Group controlId=\"created\">\r\n        <Form.Label className=\"id\">Created:</Form.Label>\r\n        <span>{formik.values.created.toLocaleDateString()}</span>\r\n      </Form.Group>\r\n      <br />\r\n      {!isEdit() &&\r\n        <div className=\"buttons\">\r\n          {props.canEdit &&\r\n            <Button\r\n              variant=\"secondary\"\r\n              size=\"sm\"\r\n              onClick={() => {\r\n                props.cancel();\r\n                //props.handleClose()\r\n              }}>\r\n              Cancel\r\n            </Button>}\r\n          {props.canEdit &&\r\n            <Button\r\n              variant=\"primary\"\r\n              size=\"sm\"\r\n              type=\"submit\"\r\n            >\r\n              Save\r\n            </Button>}\r\n        </div>\r\n      }\r\n    </Form>\r\n\r\n\r\n  );\r\n};\r\n\r\nexport const CategoryForm: React.FC<ICategoryFormProps> = (props: ICategoryFormProps) => {\r\n\r\n  const theme = useContext(ThemeContext);\r\n  const { darkMode, variant, bg } = theme.state;\r\n\r\n  return (\r\n    <Container className={`${darkMode ? \"dark\" : \"\"}`}>\r\n      <CategForm {...props} />\r\n    </Container>\r\n  )\r\n}","// import * as React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { IAppState } from '../../store/Store';\r\nimport { ICategory } from '../types'\r\n\r\nimport { Dispatch } from 'redux';  // ActionCreatorsMapObject, \r\n\r\nimport {\r\n\tstoreCategory,\r\n\tupdateCategory,\r\n\tcancelCategory,\r\n\tQuestionActions\r\n} from '../actions'\r\n\r\nimport { CategoryForm } from '../components/CategoryForm';\r\n\r\ninterface IProps {\r\n\tcanEdit: boolean\r\n}\r\n\r\n// Grab the categories from the store and make them available on props\r\nconst mapStateToProps = (store: IAppState, ownProps: IProps ) => {\r\n\tconst {categoriesState } = store;\r\n\tconst { category, formMode } = categoriesState; \r\n\treturn {\r\n\t\tcategory,\r\n\t\tformMode,\r\n\t\tcanEdit: ownProps.canEdit\r\n\t};\r\n};\r\n\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch<QuestionActions>) => {\r\n\treturn {\r\n\t\tsaveForm: (category: ICategory, formMode: string) => \r\n\t\t\tdispatch<any>(formMode==='add'?storeCategory(true, category):updateCategory(true, category)),\r\n\t\tcancel: () => dispatch<any>(cancelCategory()),\r\n\t}\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CategoryForm);\r\n","import React from \"react\";\r\nimport Form from 'react-bootstrap/Form';\r\nimport { IOption, OptionValue } from \"./types\";\r\n\r\ntype Props<T extends OptionValue> = {\r\n    options: IOption<T>[];\r\n    value: T;\r\n    onChange: (e: React.FormEvent<HTMLSelectElement>, value: T) => void;\r\n    id: string,\r\n    name: string,\r\n    disabled?: boolean\r\n};\r\n\r\nexport function Select<T extends OptionValue>(props: Props<T>) {\r\n    const disabled = props.disabled ? true : false;\r\n    function handleOnChange(e: React.FormEvent<HTMLSelectElement>) {\r\n        const { selectedIndex } = e.currentTarget;\r\n        const selectedOption: IOption<T> = props.options[selectedIndex];\r\n        props.onChange(e, selectedOption.value);\r\n    }\r\n\r\n    return (\r\n        <Form.Select\r\n            id={props.id}\r\n            value={props.value}\r\n            onChange={handleOnChange}\r\n            disabled={disabled}\r\n            size=\"sm\"\r\n        >\r\n            {props.options.map(option => (\r\n                <option key={option.value} value={option.value}>\r\n                    {option.label}\r\n                </option>\r\n            ))}\r\n        </Form.Select>\r\n    );\r\n}","export const sourceOptions = [\r\n    { label: \"Unknown\", value: 0 },\r\n    { label: \"Gmail\", value: 1 },\r\n    { label: \"Outlook\", value: 2 },\r\n    { label: \"Phone\", value: 3 },\r\n    { label: \"Chat\", value: 4 },\r\n    { label: \"Slack\", value: 5 }\r\n]","export const statusOptions = [\r\n    { label: \"Unknown\", value: 0 },\r\n    { label: \"In progress\", value: 1 },\r\n    { label: \"Can't reproduce\", value: 2 },\r\n    { label: \"Blocked\", value: 3 },\r\n    { label: \"Complete\", value: 4 }\r\n]","import * as React from 'react';\r\n\r\nimport Autosuggest from 'react-autosuggest';\r\nimport AutosuggestHighlightMatch from \"autosuggest-highlight/match\";\r\nimport AutosuggestHighlightParse from \"autosuggest-highlight/parse\";\r\n\r\nimport { IAnswer }  from '../Answers/types'\r\nimport './AutoSuggest.css'\r\nimport { IQuestion } from '../Categories/types';\r\n\r\n// https://developer.mozilla.org/en/docs/Web/JavaScript/Guide/Regular_Expression\r\n// s#Using_Special_Characters\r\nfunction escapeRegexCharacters(str: string): string {\r\n\treturn str.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&');\r\n}\r\n\r\nconst QuestionAutosuggestMulti = Autosuggest as { new (): Autosuggest<IAnswer> };\r\n\r\ninterface IProps {\r\n\tanswersUnassigned: IAnswer[], \r\n\tquestion: IQuestion,\r\n\tassignQuestionAnswer: (categoryId: number, questionId: number, answerId: number) => void\r\n\tsetAnswerText?: (val: string) => void\r\n}\r\n\r\nexport class AutoSuggestAnswer extends React.Component<IProps, any> {\r\n\r\n\tstate: any;\r\n\r\n\tconstructor(props: any) {\r\n\t\t super(props);\r\n\r\n\t\t this.state = {\r\n\t\t\t  value: '',\r\n\t\t\t  suggestions: this.getSuggestions(''),\r\n\t\t\t  highlighted: ''\r\n\t\t };\r\n\t}\r\n\t// endregion region Rendering methods\r\n\trender(): JSX.Element {\r\n\t\t const {value, suggestions} = this.state;\r\n\r\n\t\t return <QuestionAutosuggestMulti\r\n\t\t \t  onSuggestionsClearRequested={this.onSuggestionsClearRequested}  // (sl) added\r\n\t\t\t  multiSection={false}\r\n\t\t\t  suggestions={suggestions}\r\n\t\t\t  onSuggestionsFetchRequested={this.onSuggestionsFetchRequested.bind(this)}\r\n\t\t\t  onSuggestionSelected={this.onSuggestionSelected.bind(this)}\r\n\t\t\t  getSuggestionValue={this.getSuggestionValue}\r\n\t\t\t  renderSuggestion={this.renderSuggestion}\r\n\t\t\t  // onSuggestionHighlighted={this.onSuggestionHighlighted} (sl)\r\n\t\t\t  onSuggestionHighlighted={this.onSuggestionHighlighted.bind(this)}  \r\n\t\t\t  highlightFirstSuggestion={true}\r\n\t\t\t  // renderInputComponent={this.renderInputComponent}\r\n\t\t\t  renderSuggestionsContainer={this.renderSuggestionsContainer}\r\n\t\t\t  inputProps={{\r\n\t\t\t\t\tplaceholder: `Search answers...`,\r\n\t\t\t\t\tvalue,\r\n\t\t\t\t\tonChange: (e, changeEvent) => this.onChange(e, changeEvent),\r\n\t\t\t  }}/>;\r\n\t}\r\n\r\n\tprotected onSuggestionsClearRequested = () => {\r\n\t\tthis.setState({\r\n\t\t  suggestions: []\r\n\t\t});\r\n\t };\r\n  \r\n  \r\n\r\n\tprotected onSuggestionSelected(event: React.FormEvent<any>, data: Autosuggest.SuggestionSelectedEventData<IAnswer>): void {\r\n\t\t const answer: IAnswer = data.suggestion;\r\n\t\t // alert(`Selected question is ${question.answerId} (${question.text}).`);\r\n\t\t this.props.assignQuestionAnswer(\r\n\t\t\t this.props.question.categoryId,\r\n\t\t\t this.props.question.questionId, \r\n\t\t\t answer.answerId);\r\n\t\tthis.setState({\r\n\t\t\tvalue: ''\r\n\t\t})\r\n\t}\r\n\r\n\t/*\r\n\tprotected renderSuggestion(suggestion: Question, params: Autosuggest.RenderSuggestionParams): JSX.Element {\r\n\t\t const className = params.isHighlighted ? \"highlighted\" : undefined;\r\n\t\t return <span className={className}>{suggestion.name}</span>;\r\n\t}\r\n\t*/\r\n\r\n\tprotected renderSuggestion(suggestion: IAnswer, params: Autosuggest.RenderSuggestionParams): JSX.Element {\r\n\t\t// const className = params.isHighlighted ? \"highlighted\" : undefined;\r\n\t\t//return <span className={className}>{suggestion.name}</span>;\r\n\t\tconst matches = AutosuggestHighlightMatch(suggestion.text, params.query);\r\n\t\tconst parts = AutosuggestHighlightParse(suggestion.text, matches);\r\n\t \r\n\t\treturn (\r\n\t\t  <span>\r\n\t\t\t {parts.map((part, index) => {\r\n\t\t\t\tconst className = part.highlight ? 'react-autosuggest__suggestion-match' : undefined;\r\n\t \r\n\t\t\t\treturn (\r\n\t\t\t\t  <span className={className} key={index}>\r\n\t\t\t\t\t {part.text}\r\n\t\t\t\t  </span>\r\n\t\t\t\t);\r\n\t\t\t })}\r\n\t\t  </span>\r\n\t\t);\r\n\t}\r\n\r\n\t// protected renderInputComponent(inputProps: Autosuggest.InputProps<IAnswer>): JSX.Element {\r\n\t// \t const { onChange, onBlur, ...restInputProps } = inputProps;\r\n\t// \t return (\r\n\t// \t\t  <div>\r\n\t// \t\t\t\t<input {...restInputProps} />\r\n\t// \t\t  </div>\r\n\t// \t );\r\n\t// }\r\n\r\n\tprotected renderSuggestionsContainer({containerProps, children, query}: Autosuggest.RenderSuggestionsContainerParams): JSX.Element {\r\n\t\t return (\r\n\t\t\t  <div {...containerProps}>\r\n\t\t\t\t\t<span>{children}</span>\r\n\t\t\t  </div>\r\n\t\t );\r\n\t}\r\n\t// endregion region Event handlers\r\n\tprotected onChange(event: React.FormEvent<any>, {newValue, method}: Autosuggest.ChangeEvent): void {\r\n\t\tif (this.props.setAnswerText) {\r\n\t\t\tthis.props.setAnswerText(newValue);\r\n\t\t}\r\n\t\tthis.setState({value: newValue});\r\n\t}\r\n\r\n\tprotected onSuggestionsFetchRequested({value}: any): void {\r\n\t\t this.setState({\r\n\t\t\t  suggestions: this.getSuggestions(value)\r\n\t\t });\r\n\t}\r\n\r\n\tprivate anyWord = (valueWordRegex: RegExp[], questionWords: string[]) : boolean => {\r\n\t\tfor (let valWordRegex of valueWordRegex)\r\n\t\t\tfor (let questionWord of questionWords)\r\n\t\t\t\tif (valWordRegex.test(questionWord))\r\n\t\t\t\t\treturn true;\r\n\t\treturn false;\r\n\t} \r\n\t// endregion region Helper methods\r\n\tprotected getSuggestions(value: string): IAnswer[] {\r\n\t\tconst escapedValue = escapeRegexCharacters(value.trim());\r\n\r\n\t\tif (escapedValue === '') {\r\n\t\t\treturn [];\r\n\t\t}\r\n\r\n\t\tconst valueWords = escapedValue.split(' ');\r\n\t\tconst valueWordRegex = valueWords.map(word => new RegExp(word, 'i') )\r\n\t\t// const regex = new RegExp('^' + escapedValue, 'i');\r\n\t\t// const regex = new RegExp(escapedValue, 'i');\r\n\r\n\t\treturn this.props.answersUnassigned.filter(answer => this.anyWord(valueWordRegex, answer.words!))\r\n\t}\r\n\r\n\tprotected getSuggestionValue(suggestion: IAnswer) {\r\n\t\t return suggestion.text;\r\n\t}\r\n\r\n\r\n\tprotected onSuggestionHighlighted(params: Autosuggest.SuggestionHighlightedParams): void {\r\n\t\t this.setState({\r\n\t\t\t  highlighted: params.suggestion\r\n\t\t });\r\n\t}\r\n\t// endregion\r\n}\r\n\r\n","import { useRef, useState, useEffect } from 'react';\r\n\r\ninterface IHoverProps {\r\n\tisHovered: boolean;\r\n}\r\n\r\n// Hook\r\nexport function useHover() : [React.RefObject<HTMLDivElement>, IHoverProps] {\r\n\tconst [hoverProps, setValue] = useState({ isHovered: false });\r\n \r\n\tconst divRef = useRef<HTMLDivElement>(null);\r\n \r\n\tconst handleMouseOver = () => setValue({ isHovered: true });\r\n\tconst handleMouseOut = () => setValue({ isHovered: false });\r\n \r\n\tuseEffect(\r\n\t  () => {\r\n\t\t const node = divRef.current;\r\n\t\t if (node) {\r\n\t\t\tnode.addEventListener('mouseenter', () => handleMouseOver());\r\n\t\t\tnode.addEventListener('mouseleave', () => handleMouseOut());\r\n \r\n\t\t\treturn () => {\r\n\t\t\t\tnode.removeEventListener('mouseenter', () => handleMouseOver());\r\n\t\t\t\tnode.removeEventListener('mouseleave', () => handleMouseOut());\r\n\t\t\t};\r\n\t\t }\r\n\t  }, [divRef.current] // Recall only if ref changes\r\n\t);\r\n \r\n\treturn [divRef, hoverProps];\r\n}\r\n\r\n","import * as React from 'react';\r\n\r\nimport { useHover } from '../../common/useHover'\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faWindowClose, faEdit, faCopy } from '@fortawesome/free-solid-svg-icons'\r\n\r\nimport { IQuestion, IQuestionAnswer } from '../types';\r\nimport { Button } from 'react-bootstrap';\r\n\r\n\r\ninterface IQuestionAnswerRowProps {\r\n\tquestion: IQuestion;\r\n\tquestionAnswer: IQuestionAnswer;\r\n\tselectQuestionAnswer: (categoryId: number, questionId: number, answerId: number) => void;\r\n\tcopyQuestionAnswer: (categoryId: number, questionId: number, answerId: number) => void;\r\n\tremoveQuestionAnswer: (categoryId: number, questionId: number, answerId: number) => void;\r\n}\r\n\r\nconst QuestionAnswerRow: React.FC<IQuestionAnswerRowProps> = (props: IQuestionAnswerRowProps) => {\r\n\r\n\tconst [hoverRef, hoverProps] = useHover();\r\n\r\n\tconst { question, questionAnswer, removeQuestionAnswer } = props;\r\n\tconst { categoryId, questionId } = question;\r\n\tconst { answerId, text, assigned } = questionAnswer;\r\n\r\n\treturn (\r\n\t\t<div ref={hoverRef}  className=\"d-flex justify-content-start align-items-center\">\r\n\t\t\t{/* <input id={id} type=\"hidden\" value={questionAnswer.text}></input> */}\r\n\t\t\t<Button\r\n\t\t\t\tstyle={{ fontSize: '13px' }}\r\n\t\t\t\tvariant='link'\r\n\t\t\t\tsize=\"sm\"\r\n\t\t\t\tclassName=\"answer py-0 px-1 text-decoration-none\"\r\n\t\t\t\ttitle={`AnswerId:${answerId}\\nAssigned: ${assigned.toLocaleDateString()} ${assigned.toLocaleTimeString()}`}\r\n\t\t\t\tonClick={() => {\r\n\t\t\t\t\t// selectQuestionAnswer(categoryId, questionId, answerId)}\r\n\t\t\t\t\t// alert('No action for the time being')\r\n\t\t\t\t}}\r\n\t\t\t>\r\n\t\t\t\t{text}\r\n\t\t\t</Button>\r\n\t\t\t{hoverProps.isHovered &&\r\n\t\t\t\t<button className=\"button-edit\" title=\"Copy Answer to Cliboard\"\r\n\t\t\t\t\tonClick={(e) => {\r\n\t\t\t\t\t\t//const input = document.querySelector<HTMLInputElement>('#' + id);\r\n\t\t\t\t\t\tif (navigator.clipboard) {\r\n\t\t\t\t\t\t\tnavigator.clipboard.writeText(`${questionAnswer.text}`) // input!.value)\r\n\t\t\t\t\t\t\t\t.then(() => {\r\n\t\t\t\t\t\t\t\t\tconsole.log('Copied to clipboard successfully.');\r\n\t\t\t\t\t\t\t\t}, (err) => {\r\n\t\t\t\t\t\t\t\t\tconsole.log('Failed to copy the text to clipboard.', err);\r\n\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\te.stopPropagation();\r\n\t\t\t\t\t\t// copyQuestionAnswer(categoryId, questionId, answerId);\r\n\t\t\t\t\t}\r\n\t\t\t\t\t}>\r\n\t\t\t\t\t<FontAwesomeIcon icon={faCopy} color='lightblue' />\r\n\t\t\t\t</button>\r\n\t\t\t}\r\n\t\t\t{hoverProps.isHovered &&\r\n\t\t\t\t<button \r\n\t\t\t\t\tclassName=\"button-remove\"\r\n\t\t\t\t\ttitle=\"Remove\"\r\n\t\t\t\t\tonClick={(e) => {\r\n\t\t\t\t\t\t\tremoveQuestionAnswer(categoryId, questionId, answerId);\r\n\t\t\t\t\t\t\te.preventDefault();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t>\r\n\t\t\t\t\t<FontAwesomeIcon icon={faWindowClose} color='lightblue' />\r\n\t\t\t\t</button>\r\n\t\t\t}\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default QuestionAnswerRow\r\n\r\n","import React, { useContext } from 'react';\r\nimport { Button, Container, Form } from \"react-bootstrap\";\r\nimport { useFormik } from 'formik';\r\nimport * as Yup from 'yup'\r\nimport { IAnswer } from '../types';\r\nimport UserName from '../../common/containers/UserName'\r\nimport { ThemeContext } from '../../ThemeContext';\r\nimport { initialAnswer } from '../../Answers/reducer'\r\n\r\ninterface IProps {\r\n\tanswer: IAnswer;\r\n\tformMode: string;\r\n\toptions?: string[];\r\n\tcancel: () => void;\r\n\tsaveForm: (answer: IAnswer, formMode: string) => void;\r\n}\r\n\r\nconst AnsForm: React.FC<IProps> = (props: IProps) => {\r\n\r\n\tlet { answer } = props;\r\n\tif (!answer) // it is still view in modal, although hidden\r\n    \tanswer = { ...initialAnswer };\r\n\r\n\tconst formik = useFormik({\r\n\t\tenableReinitialize: true,\r\n\t\tinitialValues: {\r\n\t\t\tanswerId: answer.answerId,\r\n\t\t\ttext: answer.text,\r\n\t\t\tcreatedBy: answer.createdBy,\r\n\t\t\tcreated: answer.created\r\n\t\t},\r\n\t\tvalidationSchema: Yup.object({\r\n\t\t\ttext: Yup.string()\r\n\t\t\t\t.max(150, 'Must be 150 characters or less')\r\n\t\t\t\t.required('Required'),\r\n\t\t}),\r\n\t\tonSubmit: (values) => {\r\n\t\t\t// alert(JSON.stringify(values, null, 2));\r\n\t\t\tprops.saveForm(values, props.formMode)\r\n\t\t},\r\n\t});\r\n\r\n\tconst isEdit = () => props.formMode === 'edit';\r\n\tconsole.log('RENDERING', formik.values)\r\n\r\n\treturn (\r\n\t\t<Form onSubmit={formik.handleSubmit}>\r\n\t\t\t{isEdit() &&\r\n\t\t\t\t<Form.Group controlId=\"answerId\">\r\n\t\t\t\t\t<Form.Label>Id: </Form.Label>\r\n\t\t\t\t\t<span> {formik.values.answerId}</span>\r\n\t\t\t\t</Form.Group>\r\n\t\t\t}\r\n\r\n\t\t\t<Form.Group controlId=\"text\">\r\n\t\t\t\t<Form.Label>Answer</Form.Label>\r\n\t\t\t\t<Form.Control\r\n\t\t\t\t\tas=\"textarea\"\r\n\t\t\t\t\tname=\"text\"\r\n\t\t\t\t\tonChange={formik.handleChange}\r\n\t\t\t\t\t//onBlur={formik.handleBlur}\r\n\t\t\t\t\tonBlur={(e: React.FocusEvent<HTMLTextAreaElement>): void => {\r\n\t\t\t\t\t\tif (isEdit() && formik.initialValues.text !== formik.values.text)\r\n\t\t\t\t\t\t\tformik.submitForm();\r\n\t\t\t\t\t}}\r\n\t\t\t\t\tvalue={formik.values.text}\r\n\t\t\t\t\tstyle={{ width: '100%' }}\r\n\t\t\t\t\trows={2}\r\n\t\t\t\t/>\r\n\t\t\t\t<Form.Text className=\"text-danger\">\r\n\t\t\t\t\t{formik.touched.text && formik.errors.text ? (\r\n\t\t\t\t\t\t<div className=\"text-danger\">{formik.errors.text}</div>\r\n\t\t\t\t\t) : null}\r\n\t\t\t\t</Form.Text>\r\n\t\t\t</Form.Group>\r\n\r\n\t\t\t<Form.Group controlId=\"createdBy\">\r\n\t\t\t\t<Form.Label>Created by:</Form.Label>\r\n\t\t\t\t<UserName id={formik.values.createdBy} />\r\n\t\t\t</Form.Group>\r\n\t\t\t{/* <br /> */}\r\n\t\t\t<Form.Group controlId=\"created\">\r\n\t\t\t\t<Form.Label className=\"id\">Created:</Form.Label>\r\n\t\t\t\t<span>{formik.values.created.toLocaleDateString()}</span>\r\n\t\t\t</Form.Group>\r\n\r\n\t\t\t{!isEdit() &&\r\n\t\t\t\t<div className=\"buttons\">\r\n\t\t\t\t\t<Button\r\n\t\t\t\t\t\tvariant=\"secondary\"\r\n\t\t\t\t\t\tsize=\"sm\"\r\n\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\tprops.cancel();\r\n\t\t\t\t\t\t\t//props.handleClose()\r\n\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\tCancel\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t\t<Button\r\n\t\t\t\t\t\tvariant=\"primary\"\r\n\t\t\t\t\t\tsize=\"sm\"\r\n\t\t\t\t\t\ttype=\"submit\"\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\tSave\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t</div>\r\n\t\t\t}\r\n\t\t</Form>\r\n\t);\r\n};\r\n\r\nexport const AnswerForm: React.FC<IProps> = (props: IProps) => {\r\n\tconst theme = useContext(ThemeContext);\r\n\tconst { darkMode, variant, bg } = theme.state;\r\n\r\n\treturn (\r\n\t\t<Container className={`${darkMode ? \"dark\" : \"\"}`}>\r\n\t\t\t<AnsForm {...props} />\r\n\t\t</Container>\r\n\t)\r\n}","import * as React from 'react';\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faPlus, faWindowClose } from '@fortawesome/free-solid-svg-icons'\r\n\r\nimport { IQuestion, IQuestionAnswer } from '../types';\r\nimport { IAnswer } from '../../Answers/types';\r\nimport { AutoSuggestAnswer } from '../../components/AutoSuggestAnswer';\r\nimport QuestionAnswerRow from './QuestionAnswerRow';\r\nimport { ThemeContext } from '../../ThemeContext';\r\nimport { useContext, useState } from 'react';\r\nimport { Button, Table } from 'react-bootstrap';\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport { AnswerForm } from '../../Answers/components/Form';\r\n\r\ninterface IProps {\r\n\tquestion: IQuestion,\r\n\tquestionAnswers: IQuestionAnswer[],\r\n\tanswers?: IAnswer[],\r\n\tanswer?: IAnswer,\r\n\tcanEdit: boolean,\r\n\tformMode: string,\r\n\tselectQuestionAnswer: (categoryId: number, questionId: number, answerId: number) => void,\r\n\tcopyQuestionAnswer: (categoryId: number, questionId: number, answerId: number) => void,\r\n\tremoveQuestionAnswer: (categoryId: number, questionId: number, answerId: number) => void,\r\n\tassignQuestionAnswer: (categoryId: number, questionId: number, answerId: number, tekst?: string) => void,\r\n\tsetAnswerText?: (val: string) => void;\r\n\tadd: (categoryId: number, questionId: number) => void,\r\n\tsaveForm: (categoryId: number, questionId: number, answer: IAnswer) => void,\r\n\tcancel: () => void\r\n}\r\n\r\nconst QuestionAnswers: React.FC<IProps> = (props: IProps) => {\r\n\tconst {\r\n\t\tquestion,\r\n\t\tquestionAnswers,\r\n\t\tanswers,\r\n\t\tanswer,\r\n\t\tcanEdit,\r\n\t\tformMode,\r\n\t\tselectQuestionAnswer, copyQuestionAnswer, removeQuestionAnswer,\r\n\t\tassignQuestionAnswer, add, saveForm, cancel\r\n\t} = props;\r\n\r\n\tconst answersUnassigned = answers!.filter(a => !question.answers.map(a => a.answerId).includes(a.answerId))\r\n\r\n\tconst [tekst, setTekst] = React.useState('');\r\n\tconst setAnswerText = (val: string) => {\r\n\t\tsetTekst(val);\r\n\t}\r\n\r\n\tconst assignQuestionAnswerTekst = () => {\r\n\t\tif (assignQuestionAnswer) {\r\n\t\t\t//storeAnswer({ answerId: -1, text: tekst }, 'add')\r\n\t\t\tassignQuestionAnswer(\r\n\t\t\t\tquestion.categoryId,\r\n\t\t\t\tquestion.questionId,\r\n\t\t\t\t-1,\r\n\t\t\t\ttekst\r\n\t\t\t);\r\n\t\t}\r\n\t}\r\n\r\n\tconst assignQA = (categoryId: number, questionId: number, answerId: number) => {\r\n\t\tassignQuestionAnswer(\r\n\t\t\tcategoryId,\r\n\t\t\tquestionId,\r\n\t\t\tanswerId\r\n\t\t);\r\n\t\tsetShowAssign(false);\r\n\t}\r\n\r\n\r\n\tconst addAnswer = () => {\r\n\t\tadd(question.categoryId, question.questionId);\r\n\t\thandleShow();\r\n\t}\r\n\r\n\tconst saveAnswerForm = (answer: IAnswer, formMode: string) => {\r\n\t\tsaveForm(question.categoryId, question.questionId, answer);\r\n\t\thandleClose();\r\n\t};\r\n\r\n\tconst cancelAnswer = () => {\r\n\t\tcancel();\r\n\t\thandleClose();\r\n\t}\r\n\r\n\tconst theme = useContext(ThemeContext);\r\n\tconst { darkMode, variant, bg } = theme.state;\r\n\r\n\tconst [show, setShow] = useState(false);\r\n\tconst handleClose = () => setShow(false);\r\n\tconst handleShow = () => setShow(true);\r\n\r\n\tconst [showAssign, setShowAssign] = useState(false);\r\n\r\n\treturn (\r\n\t\t<div className=\"name-container\">\r\n\t\t\t{/* { questionAnswers.length === 0 && \r\n\t\t\t\t<div>\r\n\t\t\t\t\tNo answers yet\r\n\t\t\t\t</div>\r\n\t\t\t} */}\r\n\t\t\t{questionAnswers.length > -1 &&\r\n\t\t\t\t<div style={{ height: '100px', overflowY: 'auto' }}>\r\n\t\t\t\t\t<Table variant={variant} responsive striped bordered hover size=\"sm\">\r\n\t\t\t\t\t\t<thead>\r\n\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t<th className=\"py0 px-5\" style={{ color: 'lightblue' }}>{questionAnswers.length === 0 ? 'No answers yet' : 'Answers'}</th>\r\n\t\t\t\t\t\t\t\t{canEdit && formMode !== 'display' && <th></th>}\r\n\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t</thead>\r\n\t\t\t\t\t\t<tbody>\r\n\t\t\t\t\t\t\t{questionAnswers.map(qa =>\r\n\t\t\t\t\t\t\t\t<tr key={qa.answerId}>\r\n\t\t\t\t\t\t\t\t\t<td\r\n\t\t\t\t\t\t\t\t\t\ttitle={`AnswerId:${qa.answerId}\\nAssigned: ${qa.assigned.toLocaleDateString()} ${qa.assigned.toLocaleTimeString()}`}\r\n\t\t\t\t\t\t\t\t\t\tclassName=\"py-0 px-0\"\r\n\t\t\t\t\t\t\t\t\t\tcolSpan={2}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t<QuestionAnswerRow\r\n\t\t\t\t\t\t\t\t\t\t\tkey={qa.answerId}\r\n\t\t\t\t\t\t\t\t\t\t\tquestion={question}\r\n\t\t\t\t\t\t\t\t\t\t\tquestionAnswer={qa}\r\n\t\t\t\t\t\t\t\t\t\t\tselectQuestionAnswer={selectQuestionAnswer}\r\n\t\t\t\t\t\t\t\t\t\t\tcopyQuestionAnswer={copyQuestionAnswer}\r\n\t\t\t\t\t\t\t\t\t\t\tremoveQuestionAnswer={removeQuestionAnswer}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t\t{/* <td title={`AnswerId:${qa.answerId}\\nAssigned: ${qa.assigned.toLocaleDateString()} ${qa.assigned.toLocaleTimeString()}`}>\r\n\t\t\t\t\t\t\t\t\t{qa.text}\r\n\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t{ canEdit && formMode !== 'display' &&\r\n\t\t\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t\t\t\t<button className=\"button-remove\" title=\"Remove Answer\" \r\n\t\t\t\t\t\t\t\t\t\t\tonClick={(e) => { \r\n\t\t\t\t\t\t\t\t\t\t\t\te.stopPropagation();\r\n\t\t\t\t\t\t\t\t\t\t\t\te.preventDefault();\r\n\t\t\t\t\t\t\t\t\t\t\t\tremoveQuestionAnswer!(question.categoryId, question.questionId, qa.answerId)\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\t\t\t<FontAwesomeIcon icon={faWindowClose}  color='lightblue' />\r\n\t\t\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t} */}\r\n\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t{canEdit && formMode !== 'display' &&\r\n\t\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t\t<td className=\"py-0\">\r\n\t\t\t\t\t\t\t\t\t\t<Button size=\"sm\" className=\"button-edit\" title=\"Assign a new Answer\" onClick={\r\n\t\t\t\t\t\t\t\t\t\t\t(e) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\tsetShowAssign(true);\r\n\t\t\t\t\t\t\t\t\t\t\t\te.preventDefault()\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t}>\r\n\t\t\t\t\t\t\t\t\t\t\tAssign a new answer\r\n\t\t\t\t\t\t\t\t\t\t</Button>\r\n\r\n\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t\t<td className=\"py-0\" style={{textAlign:'right'}}>\r\n\t\t\t\t\t\t\t\t\t\t<Button size=\"sm\" className=\"button-edit\" title=\"Add a new Answer\" onClick={\r\n\t\t\t\t\t\t\t\t\t\t\t(e) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\taddAnswer();\r\n\t\t\t\t\t\t\t\t\t\t\t\te.preventDefault()\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t}>\r\n\t\t\t\t\t\t\t\t\t\t\tCreate a new answer{/* <FontAwesomeIcon icon={faPlus} color='lightblue' /> */}\r\n\t\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t</tr>}\r\n\t\t\t\t\t\t</tbody>\r\n\t\t\t\t\t</Table>\r\n\t\t\t\t</div>\r\n\t\t\t}\r\n\t\t\t<Modal show={show} onHide={handleClose} animation={true} size=\"sm\" centered\r\n\t\t\t\tclassName={`${darkMode ? \"dark\" : \"\"}`}\r\n\t\t\t\tcontentClassName={`${darkMode ? \"dark\" : \"\"}`}>\r\n\t\t\t\t<Modal.Header closeButton>\r\n\t\t\t\t\t<Modal.Title>Add answer</Modal.Title>\r\n\t\t\t\t</Modal.Header>\r\n\t\t\t\t<Modal.Body>\r\n\t\t\t\t\t<AnswerForm\r\n\t\t\t\t\t\tanswer={answer!}\r\n\t\t\t\t\t\tformMode='add'\r\n\t\t\t\t\t\tcancel={cancelAnswer}\r\n\t\t\t\t\t\tsaveForm={saveAnswerForm} />\r\n\t\t\t\t</Modal.Body>\r\n\t\t\t</Modal>\r\n\t\t\t<Modal show={showAssign} onHide={() => setShowAssign(false)} animation={true} size=\"sm\" centered\r\n\t\t\t\tclassName={`${darkMode ? \"dark\" : \"\"}`}\r\n\t\t\t\tcontentClassName={`${darkMode ? \"dark\" : \"\"}`}>\r\n\t\t\t\t<Modal.Header closeButton>\r\n\t\t\t\t\t<Modal.Title>Add answer</Modal.Title>\r\n\t\t\t\t</Modal.Header>\r\n\t\t\t\t<Modal.Body style={{height:'40vh', width:'50hw'}} className=\"question-answers\">\r\n\t\t\t\t\t<AutoSuggestAnswer\r\n\t\t\t\t\t\tquestion={question}\r\n\t\t\t\t\t\tanswersUnassigned={answersUnassigned!}\r\n\t\t\t\t\t\tassignQuestionAnswer={assignQA}\r\n\t\t\t\t\t\tsetAnswerText={setAnswerText}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</Modal.Body>\r\n\t\t\t</Modal>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default QuestionAnswers\r\n\r\n","import { connect } from 'react-redux';\r\n\r\nimport { IAppState } from '../../store/Store';\r\nimport { IQuestion, IQuestionAnswer } from '../types'\r\nimport { IAnswer } from '../../Answers/types'\r\n\r\nimport { Dispatch } from 'redux';\r\n\r\nimport {\r\n\tQuestionActions,\r\n\tremoveQuestionAnswer,\r\n\tassignQuestionAnswer,\r\n\taddAndAssignNewAnswer,\r\n\tselectQuestionAnswer,\r\n\tcopyQuestionAnswer\r\n} from '../actions'\r\n\r\nimport { addAnswer, cancelAnswer, storeAnswer } from '../../Answers/actions';\r\nimport QuestionAnswers from '../components/QuestionAnswers';\r\n\r\nconst joinQuestionAnswers = (question: IQuestion | undefined, answers: IAnswer[]): IQuestionAnswer[] => {\r\n\tif (question === undefined || question.answers.length === 0 || answers === undefined)\r\n\t\treturn [];\r\n\tconsole.log(\"question.answers\", question.answers)\r\n\tconst questionAnswers = question.answers.map(qa => ({\r\n\t\t...qa, text: answers.find(a => a.answerId === qa.answerId)!.text\r\n\t})\r\n\t);\r\n\treturn questionAnswers.sort((a, b) => a.assigned > b.assigned ? 1 : -1);\r\n}\r\n\r\ninterface IProps {\r\n\tcanEdit: boolean\r\n}\r\n\r\n// Grab the categories from the store and make them available on props\r\nconst mapStateToProps = (store: IAppState, ownProps: IProps) => { // \r\n\tconst { categoriesState, answerState } = store;\r\n\tconst { question, categoryOptions, formMode } = categoriesState;\r\n\tconst { answers, answer } = answerState;\r\n\treturn {\r\n\t\tcategoryOptions,\r\n\t\tquestion: question!,\r\n\t\tquestionAnswers: joinQuestionAnswers(question, answers),\r\n\t\tanswers,\r\n\t\tanswer,\r\n\t\tformMode,\r\n\t\tcanEdit: ownProps.canEdit\r\n\t};\r\n};\r\n\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch<QuestionActions>) => {\r\n\treturn {\r\n\t\tadd: (categoryId: number, questionId: number) => dispatch<any>(addAnswer()),\r\n\t\tsaveForm: (categoryId: number, questionId: number, answer: IAnswer) => {\r\n\t\t\tdispatch<any>(storeAnswer(answer, 'add'));\r\n\t\t\tdispatch<any>(assignQuestionAnswer(categoryId, questionId, answer.answerId))\r\n\t\t},\r\n\t\tcancel: () => dispatch<any>(cancelAnswer()),\r\n\r\n\t\tselectQuestionAnswer: (categoryId: number, questionId: number, answerId: number) =>\r\n\t\t\tdispatch<any>(selectQuestionAnswer(categoryId, questionId, answerId)),\r\n\t\tcopyQuestionAnswer: (categoryId: number, questionId: number, answerId: number) =>\r\n\t\t\tdispatch<any>(copyQuestionAnswer(categoryId, questionId, answerId)),\r\n\t\tremoveQuestionAnswer: (categoryId: number, questionId: number, answerId: number) =>\r\n\t\t\tdispatch<any>(removeQuestionAnswer(categoryId, questionId, answerId)),\r\n\r\n\t\tassignQuestionAnswer: (categoryId: number, questionId: number, answerId: number) =>\r\n\t\t\tdispatch<any>(assignQuestionAnswer(categoryId, questionId, answerId)),\r\n\r\n\t\taddAndAssignNewAnswer: (categoryId: number, questionId: number, answer: IAnswer, formMode: string) => {\r\n\t\t\tdispatch<any>(addAndAssignNewAnswer(categoryId, questionId, answer, formMode))\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(QuestionAnswers);\r\n\r\n","import React, { useState, useContext } from 'react';\r\nimport { useFormik } from 'formik';\r\nimport * as Yup from 'yup'\r\nimport { IQuestionFormProps } from '../types';\r\n\r\nimport { Select } from '../../common/Select';\r\nimport UserName from '../../common/containers/UserName';\r\n//import { number } from 'yup/lib/locale';\r\nimport { ThemeContext } from \"../../ThemeContext\";\r\nimport { Button, Container, Form } from \"react-bootstrap\";\r\n\r\nimport { sourceOptions } from '../sourceOptions'\r\nimport { statusOptions } from '../statusOptions'\r\nimport { initialQuestion } from '../categoriesReducer';\r\nimport ContainerQuestionAnswers from '../containers/ContainerQuestionAnswers';\r\n\r\nconst QuestForm: React.FC<IQuestionFormProps> = (props: IQuestionFormProps) => {\r\n\r\n  let { question } = props;\r\n  if (!question) // it is still view in modal, although hidden\r\n    question = { ...initialQuestion };\r\n\r\n  const formik = useFormik({\r\n    enableReinitialize: true,\r\n    initialValues: {\r\n      categoryId: question.categoryId,\r\n      questionId: question.questionId,\r\n      text: question.text,\r\n      source: question.source,\r\n      status: question.status,\r\n      answers: question.answers,\r\n      createdBy: question.createdBy,\r\n      created: question.created\r\n    },\r\n    validationSchema: Yup.object({\r\n      text: Yup.string()\r\n        .max(150, 'Must be 150 characters or less')\r\n        .required('Required'),\r\n      categoryId: Yup.number()\r\n        .moreThan(0, 'Select Category')\r\n        .required('Required')\r\n    }),\r\n    onSubmit: values => {\r\n      // alert(JSON.stringify(values, null, 2));\r\n      props.saveForm(values, props.formMode);\r\n      props.handleClose();\r\n    }\r\n  });\r\n\r\n  const isEdit = () => props.formMode === 'edit';\r\n  const isDisabled = props.formMode === 'display';\r\n\r\n  console.log('RENDERING', formik.values)\r\n  return (\r\n    <Form onSubmit={formik.handleSubmit} >\r\n      {isEdit() &&\r\n        <Form.Group controlId=\"questionId\">\r\n          <Form.Label>Id:</Form.Label>\r\n          <span> {formik.values.questionId}</span>\r\n        </Form.Group>\r\n      }\r\n\r\n      <Form.Group controlId=\"categoryId\">\r\n        <Form.Label>Category</Form.Label>\r\n        <Select\r\n          id=\"categoryId\"\r\n          name=\"categoryId\"\r\n          options={props.categoryOptions}\r\n          //onChange={formik.handleChange}\r\n          onChange={(e, value) => {\r\n            formik.setFieldValue(\"categoryId\", value);\r\n            if (isEdit()) formik.submitForm();\r\n          }}\r\n          value={formik.values.categoryId}\r\n          disabled={isDisabled}\r\n        />\r\n        <Form.Text className=\"text-danger\">\r\n          {formik.touched.categoryId && formik.errors.categoryId ? (\r\n            <div className=\"text-danger\">{formik.errors.categoryId}</div>\r\n          ) : null}\r\n        </Form.Text>\r\n      </Form.Group>\r\n\r\n      <Form.Group controlId=\"text\">\r\n        <Form.Label>Text</Form.Label>\r\n        <Form.Control\r\n          size=\"sm\"\r\n          as=\"textarea\"\r\n          name=\"text\"\r\n          onChange={formik.handleChange}\r\n          //onBlur={formik.handleBlur}\r\n          onBlur={(e: React.FocusEvent<HTMLTextAreaElement>): void => {\r\n            if (isEdit() && formik.initialValues.text !== formik.values.text)\r\n              formik.submitForm();\r\n          }}\r\n          value={formik.values.text}\r\n          style={{ width: '100%' }}\r\n          className=\"py-0\"\r\n          rows={2}\r\n          disabled={isDisabled}\r\n        />\r\n        <Form.Text className=\"text-danger\">\r\n          {formik.touched.text && formik.errors.text ? (\r\n            <div className=\"text-danger\">{formik.errors.text}</div>\r\n          ) : null}\r\n        </Form.Text>\r\n      </Form.Group>\r\n\r\n      <Form.Group controlId=\"source\">\r\n        <Form.Label>Source</Form.Label>\r\n        <Select\r\n          id=\"source\"\r\n          name=\"source\"\r\n          options={sourceOptions}\r\n          // onChange={formik.handleChange}\r\n          onChange={(e, value) => {\r\n            formik.setFieldValue(\"source\", value)\r\n            if (isEdit()) formik.submitForm();\r\n          }}\r\n          value={formik.values.source}\r\n          disabled={isDisabled}\r\n        />\r\n        <Form.Text className=\"text-danger\">\r\n          {formik.touched.source && formik.errors.source ? (\r\n            <div className=\"text-danger\">{formik.errors.source}</div>\r\n          ) : null}\r\n        </Form.Text>\r\n      </Form.Group>\r\n\r\n      <br />\r\n      <ContainerQuestionAnswers  canEdit={props.canEdit} />\r\n\r\n      <Form.Group controlId=\"status\">\r\n        <Form.Label>Status</Form.Label>\r\n        <Select\r\n          id=\"status\"\r\n          name=\"status\"\r\n          options={statusOptions}\r\n          //onChange={formik.handleChange}\r\n          onChange={(e, value) => {\r\n            formik.setFieldValue(\"status\", value)\r\n            if (isEdit()) formik.submitForm();\r\n          }}\r\n          value={formik.values.status}\r\n          disabled={isDisabled}\r\n        />\r\n        <Form.Text className=\"text-danger\">\r\n          {formik.touched.status && formik.errors.status ? (\r\n            <div className=\"text-danger\">{formik.errors.status}</div>\r\n          ) : null}\r\n        </Form.Text>\r\n      </Form.Group>\r\n\r\n      <br />\r\n      <Form.Group controlId=\"createdBy\">\r\n        <Form.Label>Created by:</Form.Label>\r\n        {' '}<UserName id={formik.values.createdBy} />\r\n      </Form.Group>\r\n\r\n      <Form.Group controlId=\"created\">\r\n        <Form.Label className=\"id\">Created:</Form.Label>\r\n        <span>{' '}{formik.values.created.toLocaleDateString()}</span>\r\n      </Form.Group>\r\n\r\n      {!isEdit() && !isDisabled &&\r\n        <div className=\"buttons\">\r\n          {props.canEdit &&\r\n            <Button\r\n              variant=\"secondary\"\r\n              size=\"sm\"\r\n              onClick={() => {\r\n                props.cancel();\r\n                props.handleClose()\r\n              }}>\r\n              Cancel\r\n            </Button>}\r\n          {props.canEdit &&\r\n            <Button\r\n              variant=\"primary\"\r\n              size=\"sm\"\r\n              type=\"submit\"\r\n            >\r\n              Save\r\n            </Button>}\r\n        </div>\r\n      }\r\n      {isDisabled && props.canEdit &&\r\n        <div className=\"buttons\">\r\n          <Button\r\n            variant=\"secondary\"\r\n            size=\"sm\"\r\n            onClick={() => {\r\n              props.editForm(question, props.formMode);\r\n            }}>\r\n            Edit\r\n          </Button>\r\n        </div>\r\n      }\r\n    </Form>\r\n  );\r\n};\r\n\r\n\r\nexport const QuestionForm: React.FC<IQuestionFormProps> = (props: IQuestionFormProps) => {\r\n\r\n  const theme = useContext(ThemeContext);\r\n  const { darkMode, variant, bg } = theme.state;\r\n\r\n  return (\r\n    <Container className={`mb-1 ${darkMode ? \"dark\" : \"\"}`}>\r\n      <QuestForm {...props} />\r\n    </Container>\r\n  )\r\n}","// import * as React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { IAppState } from '../../store/Store';\r\nimport { IQuestion, IQuestionAnswer, ICategory } from '../types'\r\nimport { IAnswer } from '../../Answers/types'\r\n\r\nimport { Dispatch } from 'redux';\r\n\r\nimport { QuestionActions,  \r\n\tstoreQuestion,\r\n\tupdateQuestion,\r\n\tcancelQuestion,\r\n\teditQuestion\r\n} from '../actions'\r\n\r\nimport { QuestionForm } from '../components/QuestionForm';\r\n\r\ninterface IProps {\r\n\tcanEdit: boolean,\r\n\thandleClose: () => void\r\n}\r\n\r\n// Grab the categories from the store and make them available on props\r\nconst mapStateToProps = (store: IAppState, ownProps: IProps ) => {\r\n\tconst {categoriesState, answerState } = store;\r\n\tconst { question, categoryOptions, formMode } = categoriesState; \r\n\tconst { answers } = answerState;\r\n\treturn {\r\n\t\tcategoryOptions,\r\n\t\tquestion: question!,\r\n\t\tanswers,\r\n\t\tformMode,\r\n\t\tcanEdit: ownProps.canEdit,\r\n\t\thandleClose: ownProps.handleClose\r\n\t};\r\n};\r\n\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch<QuestionActions>) => {\r\n\treturn {\r\n\t\teditForm: (question: IQuestion, formMode: string) => \r\n\t\t\tdispatch<any>(editQuestion(question.categoryId, question.questionId, true)),\r\n\t\tsaveForm: (question: IQuestion, formMode: string) => \r\n\t\t\tdispatch<any>(formMode==='add'?storeQuestion(true, question):updateQuestion(true, question)),\r\n\t\tcancel: () => dispatch<any>(cancelQuestion()),\r\n\t\r\n\t}\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(QuestionForm);\r\n\r\n","import { useContext } from 'react';\r\n\r\nimport { useHover } from '../../common/useHover'\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faWindowClose, faEdit } from '@fortawesome/free-solid-svg-icons'\r\nimport { Button, ListGroup } from 'react-bootstrap'\r\n\r\nimport { IQuestion } from '../types';\r\nimport { ThemeContext } from '../../ThemeContext';\r\n\r\n\r\ninterface IQuestionRowProps {\r\n\tquestion: IQuestion;\r\n\tonSelectQuestion: (categoryId: number, questionId: number) => void;\r\n\tedit: (categoryId: number, questionId: number, showQuestionForm: boolean) => void;\r\n\tremove: (categoryId: number, questionId: number) => void;\r\n}\r\n\r\nconst QuestionRow: React.FC<IQuestionRowProps> = (props: IQuestionRowProps) => {\r\n\r\n\tconst [hoverRef, hoverProps] = useHover();\r\n\r\n\tconst { question, onSelectQuestion, edit, remove } = props;\r\n\tconst { categoryId, questionId } = question;\r\n\r\n\tconst theme = useContext(ThemeContext);\r\n\tconst { darkMode, variant, bg } = theme.state;\r\n\r\n\treturn (\r\n\t\t<ListGroup.Item className=\"py-0\" variant={variant}>\r\n\t\t\t<div ref={hoverRef} className=\"d-flex justify-content-start align-items-center\">\r\n\t\t\t\t<Button\r\n\t\t\t\t\tstyle={{ fontSize: '13px' }}\r\n\t\t\t\t\tvariant='link'\r\n\t\t\t\t\tsize=\"sm\"\r\n\t\t\t\t\tclassName=\"py-0 px-1 text-decoration-none\"\r\n\t\t\t\t\tonClick={() => onSelectQuestion(categoryId, questionId)}>\r\n\t\t\t\t\t{question.text}\r\n\t\t\t\t</Button>\r\n\t\t\t\t{hoverProps.isHovered &&\r\n\t\t\t\t\t<Button\r\n\t\t\t\t\t\tvariant={variant}\r\n\t\t\t\t\t\tsize=\"sm\"\r\n\t\t\t\t\t\tclassName=\"py-0 px-1\"\r\n\t\t\t\t\t\tstyle={{ backgroundColor: 'transparent', borderWidth: '0' }}\r\n\t\t\t\t\t\ttitle=\"Edit\"\r\n\t\t\t\t\t\tonClick={() => edit(categoryId, questionId, true)}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<FontAwesomeIcon icon={faEdit} color={darkMode?'lightblue':'lightblue'} />\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t}\r\n\t\t\t\t{hoverProps.isHovered &&\r\n\t\t\t\t\t<Button\r\n\t\t\t\t\t\tvariant={variant}\r\n\t\t\t\t\t\tsize=\"sm\"\r\n\t\t\t\t\t\tclassName=\"py-0 px-1\"\r\n\t\t\t\t\t\tstyle={{ backgroundColor: 'transparent', borderWidth: '0' }}\r\n\t\t\t\t\t\ttitle=\"Remove\"\r\n\t\t\t\t\t\tonClick={() => remove(categoryId, questionId)}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<FontAwesomeIcon icon={faWindowClose} color={darkMode?'lightblue':'lightblue'} />\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t}\r\n\t\t\t</div>\r\n\t\t</ListGroup.Item>\r\n\t)\r\n}\r\n\r\nexport default QuestionRow\r\n\r\n","import { useContext } from 'react'\r\nimport { useHover } from '../../common/useHover'\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faWindowClose, faEdit, faCaretRight, faCaretDown, faPlus } from '@fortawesome/free-solid-svg-icons'\r\nimport { ThemeContext } from \"../../ThemeContext\";\r\nimport { Button, ListGroup } from 'react-bootstrap'\r\n\r\nimport { ICategory, IQuestion } from '../types';\r\nimport QuestionRow from './QuestionRow';\r\n\r\n\r\ninterface ICategoryRowProps {\r\n\tcategory: ICategory;\r\n\tquestions: IQuestion[];\r\n\ttoggleCategory: (categoryId: number) => void;\r\n\teditCategory: (categoryId: number) => void;\r\n\tremoveCategory: (categoryId: number) => void;\r\n\tonSelectCategory: (categoryId: number) => void;\r\n\tonSelectQuestion: (categoryId: number, questionId: number) => void;\r\n\tadd: (categoryId: number, text: string, canEdit?: boolean) => void;\r\n\tedit: (categoryId: number, questionId: number, showQuestionForm: boolean) => void;\r\n\tremove: (categoryId: number, questionId: number) => void;\r\n}\r\n\r\nconst CategoryRow: React.FC<ICategoryRowProps> = (props: ICategoryRowProps) => {\r\n\r\n\tconst [hoverRef, hoverProps] = useHover();\r\n\tconst { category, questions, toggleCategory, editCategory, removeCategory, onSelectCategory,\r\n\t\tonSelectQuestion, add, edit, remove } = props;\r\n\tconst { categoryId, title, questions: categories, isExpanded } = category;\r\n\r\n\tconst theme = useContext(ThemeContext);\r\n\tconst { darkMode, variant, bg } = theme.state;\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<ListGroup.Item\r\n\t\t\t\tvariant={variant}\r\n\t\t\t\tclassName=\"py-0 px-1\"\r\n\t\t\t\tas=\"li\"\r\n\t\t\t>\r\n\t\t\t\t<div ref={hoverRef} className=\"d-flex justify-content-start align-items-center\">\r\n\t\t\t\t\t<Button\r\n\t\t\t\t\t\tvariant='link'\r\n\t\t\t\t\t\tsize=\"sm\"\r\n\t\t\t\t\t\tclassName=\"py-0 px-1\"\r\n\t\t\t\t\t\tstyle={{ backgroundColor: 'transparent', borderWidth: '0' }}\r\n\t\t\t\t\t\tonClick={() => toggleCategory(categoryId)}\r\n\t\t\t\t\t\ttitle=\"Expand\"\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<FontAwesomeIcon icon={isExpanded ? faCaretDown : faCaretRight} color='orange' size='lg' />\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t\t<Button\r\n\t\t\t\t\t\tvariant='link'\r\n\t\t\t\t\t\tsize=\"sm\"\r\n\t\t\t\t\t\tclassName=\"py-0 mx-1 text-decoration-none\"\r\n\t\t\t\t\t\tonClick={() => onSelectCategory(categoryId)}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t{title}\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t\t<Button\r\n\t\t\t\t\t\tvariant={variant}\r\n\t\t\t\t\t\tsize=\"lg\"\r\n\t\t\t\t\t\tclassName=\"py-0 px-1\"\r\n\t\t\t\t\t\tstyle={{ backgroundColor: 'transparent', borderWidth: '0' }}\r\n\t\t\t\t\t\ttitle=\"Add a new Question\"\r\n\t\t\t\t\t\tonClick={() => add(category.categoryId, '', true)}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<FontAwesomeIcon icon={faPlus} size='xs' color='orange' />\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t\t{hoverProps.isHovered &&\r\n\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\tvariant={variant}\r\n\t\t\t\t\t\t\tsize=\"sm\"\r\n\t\t\t\t\t\t\tclassName=\"py-0 px-1\"\r\n\t\t\t\t\t\t\tstyle={{ backgroundColor: 'transparent', borderWidth: '0' }}\r\n\t\t\t\t\t\t\ttitle=\"Edit Category\"\r\n\t\t\t\t\t\t\tonClick={() => editCategory(categoryId)}>\r\n\t\t\t\t\t\t\t<FontAwesomeIcon icon={faEdit} color='lightblue' />\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t}\r\n\t\t\t\t\t{hoverProps.isHovered && questions.length === 0 &&\r\n\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\tsize=\"sm\"\r\n\t\t\t\t\t\t\tclassName=\"py-0 px-1\"\r\n\t\t\t\t\t\t\tstyle={{ backgroundColor: 'transparent', borderWidth: '0' }}\r\n\t\t\t\t\t\t\ttitle=\"Remove Category\"\r\n\t\t\t\t\t\t\tonClick={() => removeCategory(categoryId)}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<FontAwesomeIcon icon={faWindowClose} color='lightblue' />\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t}\r\n\t\t\t\t</div>\r\n\t\t\t</ListGroup.Item>\r\n\r\n\t\t\t{isExpanded &&\r\n\t\t\t\t<ListGroup.Item className=\"py-0\" variant={variant}>\r\n\t\t\t\t\t<ListGroup as=\"ul\" variant={variant} className=\"inner-list\">\r\n\t\t\t\t\t\t{questions.map(question =>\r\n\t\t\t\t\t\t\t<QuestionRow\r\n\t\t\t\t\t\t\t\tkey={question.questionId}\r\n\t\t\t\t\t\t\t\tquestion={question}\r\n\t\t\t\t\t\t\t\tonSelectQuestion={onSelectQuestion}\r\n\t\t\t\t\t\t\t\tedit={edit}\r\n\t\t\t\t\t\t\t\tremove={remove}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t</ListGroup>\r\n\t\t\t\t</ListGroup.Item>\r\n\t\t\t}\r\n\t\t</>\r\n\t)\r\n}\r\n\r\nexport default CategoryRow\r\n\r\n","import { useRef, useContext } from 'react'\r\nimport { faPlus, faWindowClose } from '@fortawesome/free-solid-svg-icons'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nimport { ThemeContext } from \"../../ThemeContext\";\r\n\r\nimport { ICategoryListProps } from '../types'\r\n\r\nimport QuestionRow from './QuestionRow';\r\nimport CategoryRow from './CategoryRow';\r\n\r\nimport { COLORS } from '../../formik/theme';\r\nimport { ListGroup } from 'react-bootstrap';\r\nconst color = 'blue';\r\n\r\nconst CategoryList: React.FC<ICategoryListProps> = (props: ICategoryListProps) => {\r\n\r\n\tconst theme = useContext(ThemeContext);\r\n\tconst { darkMode, variant, bg } = theme.state;\r\n\r\n\tconst { categories, categoryQuestions,\r\n\t\tcategoryIdEditing, onSelectCategory, onSelectQuestion, add, edit, remove, canEdit,\r\n\t\taddCategory, toggleCategory, editCategory, removeCategory, updateCategory, auth } = props;\r\n\r\n\r\n\tconst inputEl = useRef<HTMLInputElement>(null);\r\n\tsetTimeout(() => {\r\n\t\tif (inputEl.current !== null) {\r\n\t\t\tinputEl.current!.select();\r\n\t\t\tinputEl.current!.focus()\r\n\t\t}\r\n\t}, 100)\r\n\r\n\t// const expandCategory = (categoryId: number): void => {\r\n\t// \tconst div = document.querySelector<HTMLDivElement>(\"#divCategory\" + categoryId);\r\n\t// \tconsole.log(div)\r\n\t// \tdiv!.style.display = 'block';\r\n\t// }\r\n\r\n\tconsole.log('RENDERUJEM Categories ----------->>>>>>>>>>')\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<h5>Categories{' '}\r\n\t\t\t\t<button className=\"button-add-category button-edit\" title=\"Add a new Category\" onClick={() => addCategory()}>\r\n\t\t\t\t\t<FontAwesomeIcon icon={faPlus} size='xs' color='lightblue' />\r\n\t\t\t\t</button>\r\n\t\t\t</h5>\r\n\r\n\t\t\t<ListGroup as=\"ul\" variant={variant}>\r\n\t\t\t\t{categories.map(category => {\r\n\t\t\t\t\tconst { categoryId, title, isExpanded } = category;\r\n\t\t\t\t\tconst categoryState = categoryQuestions.get(categoryId);\r\n\t\t\t\t\tconst { questions } = categoryState!;\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\t// {categoryIdEditing === categoryId &&\r\n\t\t\t\t\t\t// \t<input ref={inputEl} name=\"groupTitle\" type=\"text\"\r\n\t\t\t\t\t\t// \t\tonBlur={(e) => updateCategory({ ...category, title: e.target.value })}\r\n\t\t\t\t\t\t// \t\tdefaultValue={title}\r\n\t\t\t\t\t\t// \t/>\r\n\t\t\t\t\t\t// }\r\n\t\t\t\t\t\t// {categoryIdEditing !== categoryId && (\r\n\t\t\t\t\t\t<CategoryRow\r\n\t\t\t\t\t\t\tkey={category.categoryId}\r\n\t\t\t\t\t\t\tcategory={category}\r\n\t\t\t\t\t\t\tquestions={questions}\r\n\t\t\t\t\t\t\tonSelectCategory={onSelectCategory}\r\n\t\t\t\t\t\t\ttoggleCategory={toggleCategory}\r\n\t\t\t\t\t\t\teditCategory={editCategory}\r\n\t\t\t\t\t\t\tremoveCategory={removeCategory}\r\n\t\t\t\t\t\t\tonSelectQuestion={onSelectQuestion}\r\n\t\t\t\t\t\t\tadd={add}\r\n\t\t\t\t\t\t\tedit={edit}\r\n\t\t\t\t\t\t\tremove={remove}\r\n\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t// )}\r\n\r\n\t\t\t\t\t);\r\n\t\t\t\t})\r\n\t\t\t\t}\r\n\t\t\t</ListGroup>\r\n\t\t</>\r\n\t)\r\n}\r\n\r\nexport default CategoryList","// import * as React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { IAppState } from '../../store/Store';\r\nimport { ICategory } from '../types'\r\nimport { IAnswer } from '../../Answers/types'\r\n\r\nimport { Dispatch } from 'redux';\r\n\r\nimport { QuestionActions,  \r\n\tgetQuestion, \r\n\taddQuestion, \r\n\teditQuestion,\r\n\tremoveQuestion,\r\n\tcloseQuestionForm,\r\n\topenQuestionForm,\r\n\taddCategory,\r\n\teditCategory,\r\n\tremoveCategory,\r\n\tstoreCategory,\r\n\tupdateCategory,\r\n\taddAndAssignNewAnswer,\r\n\ttoggleCategory,\r\n\tgetCategory\r\n} from '../actions'\r\n\r\nimport CategoryList from '../components/CategoryList'\r\n\r\ninterface IProps {\r\n\tcanEdit: boolean\r\n}\r\n\r\n// Grab the categories from the store and make them available on props\r\nconst mapStateToProps = (store: IAppState, ownProps: IProps ) => {\r\n\tconst {categoriesState, tagState, topState} = store;\r\n\t\r\n\tconst { \r\n\t\tcategories,\r\n\t\tcategoryQuestions,\r\n\t\tshowCategoryForm,\r\n\t\tcategory,\r\n\t\tshowQuestionForm,\r\n\t\tquestion,\r\n\t\tcategoryOptions,\r\n\t\tformMode,\r\n\t\tcategoryIdEditing\r\n\t} = categoriesState;\r\n\r\n\treturn {\r\n\t\tcategories,\r\n\t\tcategoryQuestions,\r\n\t\tcategoryOptions,\r\n\t\tshowCategoryForm,\r\n\t\tcategory,\r\n\t\tshowQuestionForm,\r\n\t\tquestion,\r\n\t\tformMode,\r\n\t\tcategoryIdEditing,\r\n\t\tcanEdit: ownProps.canEdit,\r\n\t\ttagOptions: tagState.tags.map(f => ({ label: f.name, value: f.tagId, color: f.color })),\r\n\t\tauth: topState.top.auth\r\n\t};\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch<QuestionActions>) => {\r\n\treturn {\r\n\t\tonSelectQuestion: (categoryId: number, questionId: number) => {\r\n\t\t\tdispatch<any>(getQuestion(categoryId, questionId));\r\n\t\t\tdispatch<any>(openQuestionForm());\r\n\t\t},\r\n\t\tadd: (categoryId: number, text: string, canEdit?: boolean) => {\r\n\t\t\tdispatch<any>(addQuestion(categoryId, text, canEdit))\r\n\t\t\tdispatch<any>(openQuestionForm());\r\n\t\t},\r\n\t\t//edit: (categoryId: number, questionId: number) => dispatch<any>(editQuestion(categoryId, questionId)),\r\n\t\tedit: (categoryId: number, questionId: number, showQuestionForm: boolean) => dispatch<any>(editQuestion(categoryId, questionId, showQuestionForm)),\r\n\t\tremove: (categoryId: number, questionId: number) => dispatch<any>(removeQuestion(categoryId, questionId)),\r\n\t\tcloseQuestionForm: () => dispatch<any>(closeQuestionForm()),\r\n\t\topenQuestionForm: () => dispatch<any>(openQuestionForm()),\r\n\r\n\t\t// question answer\r\n\t\taddAndAssignNewAnswer: (categoryId: number, questionId: number, answer: IAnswer, formMode: string) => {\r\n\t\t\tdispatch<any>(addAndAssignNewAnswer(categoryId, questionId, answer, formMode))\r\n\t\t},\r\n\t\t// groups\r\n\t\tonSelectCategory: (categoryId: number) => dispatch<any>(getCategory(categoryId, true)),\r\n\t\taddCategory: () => dispatch<any>(addCategory()),\r\n\t\ttoggleCategory: (categoryId: number) =>  dispatch<any>(toggleCategory(categoryId)),\r\n\t\teditCategory: (categoryId: number) =>  dispatch<any>(editCategory(categoryId)),\r\n\t\tremoveCategory: (categoryId: number) => dispatch<any>(removeCategory(true, categoryId)),\r\n\t\tstoreCategory: (group: ICategory) => dispatch<any>(storeCategory(true, group)),\r\n\t\tupdateCategory: (group: ICategory) => dispatch<any>(updateCategory(true, group)),\r\n\t}\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CategoryList)\r\n","import * as React from 'react';\r\nimport { useRef, useState, useContext } from 'react'\r\n\r\nimport { ICategoriesProps } from '../types'\r\n\r\nimport { AutoSuggest } from '../../components/AutoSuggest';\r\nimport ContainerCategoryForm from '../containers/ContainerCategoryForm';\r\nimport ContainerQuestionForm from '../containers/ContainerQuestionForm';\r\nimport { useParams } from 'react-router-dom' // useRouteMatch\r\nimport { ThemeContext } from \"../../ThemeContext\";\r\n\r\nimport { COLORS } from '../../formik/theme';\r\nimport { Col, Container, Row } from 'react-bootstrap';\r\nimport ContainerCategoryList from '../containers/ContainerCategoryList';\r\n\r\nconst color = 'blue';\r\n\r\ntype SupportParams = {\r\n\ttekst: string;\r\n};\r\n\r\nconst Page: React.FC<ICategoriesProps> = (props: ICategoriesProps) => {\r\n\r\n\tlet { tekst } = useParams<SupportParams>();\r\n\r\n\tconst { \r\n\t\tcategories, \r\n\t\tcategoryQuestions, \r\n\t\tshowCategoryForm, \r\n\t\tcategory, \r\n\t\tshowQuestionForm, \r\n\t\tquestion, \r\n\t\tformMode, \r\n\t\tcanEdit,\r\n\t\tonSelectQuestion } = props;\r\n\r\n\t//const [open, setOpen] = useState(false);\r\n\tconst open = categories && (category || question)\r\n\r\n\tconst inputEl = useRef<HTMLInputElement>(null);\r\n\tsetTimeout(() => {\r\n\t\tif (inputEl.current !== null) {\r\n\t\t\tinputEl.current!.select();\r\n\t\t\tinputEl.current!.focus()\r\n\t\t}\r\n\t}, 100)\r\n\r\n\tconsole.log('RENDERUJEM Categories ----------->>>>>>>>>>')\r\n\t\r\n\tconst theme = useContext(ThemeContext);\r\n\tconst { darkMode, variant, bg } = theme.state;\r\n\t\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Container fluid>\r\n\t\t\t\t<Row className={`${darkMode ? \"dark\" : \"light\"}`}>\r\n\t\t\t\t\t<Col md={7}>\r\n\t\t\t\t\t\t<div style={{ border: '0px solid silver' }}>\r\n\t\t\t\t\t\t\t<AutoSuggest\r\n\t\t\t\t\t\t\t\tcategories={categories}\r\n\t\t\t\t\t\t\t\tcategoryQuestions={categoryQuestions}\r\n\t\t\t\t\t\t\t\ttekst={tekst}\r\n\t\t\t\t\t\t\t\tonSelectQuestion={(categoryId: number, questionId: number) => onSelectQuestion(categoryId, questionId, canEdit)}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<hr />\r\n\t\t\t\t\t\t\t{/* <h3>Categories</h3> */}\r\n\t\t\t\t\t\t\t{categories && \r\n\t\t\t\t\t\t\t\t<ContainerCategoryList {...props} />\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t\t<Col md={5}>\r\n\t\t\t\t\t\t<div \r\n\t\t\t\t\t\t\tclassName={`${darkMode ? \"dark\" : \"light\"}`}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t{categories && showCategoryForm && category &&\r\n\t\t\t\t\t\t\t\t<div style={{ border: '1px solid silver', borderRadius: '5px', padding: '5px 5px 15px 5px' }}>\r\n\t\t\t\t\t\t\t\t\t<h4 style={{ marginTop: 0}}>Category</h4>\r\n\t\t\t\t\t\t\t\t\t<ContainerCategoryForm canEdit={formMode === 'display' ? false: canEdit} />\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t{categories && showQuestionForm && question &&\r\n\t\t\t\t\t\t\t\t<div style={{ border: '1px solid silver', borderRadius: '5px', padding: '5px 5px 15px 5px' }}>\r\n\t\t\t\t\t\t\t\t\t<h4 style={{ marginTop: 0 }}>Question</h4>\r\n\t\t\t\t\t\t\t\t\t<ContainerQuestionForm canEdit={formMode === 'display' ? false: canEdit} handleClose={() => { }} />\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t\t{/* </Collapse> */}\r\n\t\t\t\t</Row>\r\n\t\t\t</Container>\r\n\t\t</>\r\n\t);\r\n}\r\n\r\nexport default Page;","import React, { useState, useContext } from 'react';\r\nimport { useParams } from 'react-router-dom' // useRouteMatch\r\n\r\nimport { ICategoriesProps } from '../types';\r\n\r\nimport { AutoSuggest } from '../../components/AutoSuggest';\r\nimport ContainerQuestionForm from '../containers/ContainerQuestionForm'\r\nimport { ThemeContext } from \"../../ThemeContext\";\r\n\r\nimport { faPlus } from '@fortawesome/free-solid-svg-icons'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport { Col, Container, Row } from 'react-bootstrap';\r\n\r\ntype SupportParams = {\r\n\ttekst: string;\r\n};\r\n\r\nconst SupportPage: React.FC<ICategoriesProps> = (props: ICategoriesProps) => {\r\n\tlet { tekst } = useParams<SupportParams>();\r\n\tconst { categories, categoryQuestions, category, question, showQuestionForm, onSelectQuestion, add, closeQuestionForm, canEdit } = props;\r\n\tconsole.log('tekst:', tekst)\r\n\r\n\tconst [show, setShow] = useState(false);\r\n\tconst handleClose = () => setShow(false);\r\n\tconst handleShow = () => setShow(true);\r\n\tconst open = categories && (category || question)\r\n\r\n\tconst theme = useContext(ThemeContext);\r\n\tconst { darkMode, variant, bg } = theme.state;\r\n\r\n\treturn (\r\n\t\t<Container fluid>\r\n\t\t\t<Row className={`${darkMode ? \"dark\" : \"\"}`}>\r\n\t\t\t\t<Col md={open ? 6 : 12} lg={open ? 6 : 12}>\r\n\t\t\t\t\t<div style={{ display: 'flex', alignItems: 'center' }}>\r\n\t\t\t\t\t\t<AutoSuggest\r\n\t\t\t\t\t\t\tcategories={categories}\r\n\t\t\t\t\t\t\tcategoryQuestions={categoryQuestions}\r\n\t\t\t\t\t\t\ttekst={tekst}\r\n\t\t\t\t\t\t\tonSelectQuestion={(categoryId: number, questionId: number) => onSelectQuestion(categoryId, questionId, canEdit)}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\tvariant={variant}\r\n\t\t\t\t\t\t\tclassName=\"button-edit\"\r\n\t\t\t\t\t\t\ttitle=\"Create a new Question\"\r\n\t\t\t\t\t\t\tonClick={() => { add(0, tekst ?? '', true); handleShow(); }}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<FontAwesomeIcon icon={faPlus} size=\"lg\" />\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</Col>\r\n\t\t\t</Row>\r\n\t\t\t<Row>\r\n\t\t\t\t<Col md={open ? 6 : 12} lg={open ? 6 : 12}>\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t{categories && question && showQuestionForm &&\r\n\t\t\t\t\t\t\t<div style={{ border: '1px solid silver', borderRadius: '5px', padding: '5px 5px 15px 5px' }}>\r\n\t\t\t\t\t\t\t\t<h4 style={{ textAlign: 'center' }}>Question</h4>\r\n\t\t\t\t\t\t\t\t<ContainerQuestionForm canEdit={canEdit} handleClose={() => { }} />\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</Col>\r\n\t\t\t</Row>\r\n\t\t\t<Modal show={show} onHide={handleClose} animation={true} size=\"sm\" centered\r\n\t\t\t\tclassName={`${darkMode ? \"dark\" : \"\"}`}\r\n\t\t\t\tcontentClassName={`${darkMode ? \"dark\" : \"\"}`}>\r\n\t\t\t\t<Modal.Header closeButton>\r\n\t\t\t\t\t<Modal.Title>Store question</Modal.Title>\r\n\t\t\t\t</Modal.Header>\r\n\t\t\t\t<Modal.Body>\r\n\t\t\t\t\t<ContainerQuestionForm canEdit={canEdit} handleClose={handleClose} />\r\n\t\t\t\t</Modal.Body>\r\n\t\t\t\t{/* <Modal.Footer>\r\n\t\t\t\t\t<Button variant=\"secondary\" onClick={handleClose}>\r\n\t\t\t\t\t\tClose\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t\t<Button variant=\"primary\" onClick={handleClose}>\r\n\t\t\t\t\t\tSave Changes\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t</Modal.Footer> */}\r\n\t\t\t</Modal>\r\n\t\t</Container>\r\n\r\n\t);\r\n}\r\n\r\nexport default SupportPage\r\n\r\n","// import * as React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { IAppState } from '../../store/Store';\r\nimport { IQuestion, IQuestionAnswer, ICategory } from '../types'\r\nimport { IAnswer } from '../../Answers/types'\r\n\r\nimport { Dispatch } from 'redux';  // ActionCreatorsMapObject, \r\n\r\nimport { QuestionActions,  \r\n\tgetQuestion, \r\n\taddQuestion, \r\n\tcloseQuestionForm,\r\n\topenQuestionForm,\r\n\teditQuestion,\r\n} from '../actions'\r\n\r\nimport CategoriesPage from '../components/CategoriesPage'\r\nimport SupportPage from '../components/SuportPage'\r\n\r\ninterface IProps {\r\n\tcanEdit: boolean\r\n}\r\n\r\n// Grab the categories from the store and make them available on props\r\nconst mapStateToProps = (store: IAppState, ownProps: IProps ) => {\r\n\tconst {categoriesState, tagState, topState} = store;\r\n\t\r\n\tconst { \r\n\t\tcategories,\r\n\t\tcategoryQuestions,\r\n\t\tshowCategoryForm,\r\n\t\tcategory,\r\n\t\tshowQuestionForm,\r\n\t\tquestion,\r\n\t\tcategoryOptions,\r\n\t\tformMode,\r\n\t\tcategoryIdEditing,\r\n\t} = categoriesState;\r\n\r\n\treturn {\r\n\t\tcategories,\r\n\t\tcategoryQuestions,\r\n\t\tcategoryOptions,\r\n\t\tshowCategoryForm,\r\n\t\tcategory,\r\n\t\tshowQuestionForm,\r\n\t\tquestion,\r\n\t\tformMode,\r\n\t\tcategoryIdEditing,\r\n\t\tcanEdit: ownProps.canEdit,\r\n\t\ttagOptions: tagState.tags.map(f => ({ label: f.name, value: f.tagId, color: f.color })),\r\n\t\tauth: topState.top.auth\r\n\t};\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch<QuestionActions>) => {\r\n\treturn {\r\n\t\tonSelectQuestion: (categoryId: number, questionId: number, canEdit: boolean) => {\r\n\t\t\tdispatch<any>(canEdit?editQuestion(categoryId, questionId):getQuestion(categoryId, questionId));\r\n\t\t\tdispatch<any>(openQuestionForm());\r\n\t\t},\r\n\t\tadd: (categoryId: number, text: string, canEdit?: boolean) => dispatch<any>(addQuestion(categoryId, text, canEdit)),\r\n\t\tcloseQuestionForm: () => dispatch<any>(closeQuestionForm())\r\n\t}\r\n}\r\n\r\n\r\nexport default {\r\n\tcategories: connect(mapStateToProps, mapDispatchToProps)(CategoriesPage),\r\n\tsupporter: connect(mapStateToProps, mapDispatchToProps)(SupportPage)\r\n};","import * as React from 'react';\r\n\r\nimport containers from '../Categories/containers/ContainerCategoriesPage'\r\n\r\n// type TParams = { id: string };\r\n\r\n// function Product({ match }: RouteComponentProps<TParams>) {\r\n//   return <h2>This is a page for product with ID: {match.params.id} </h2>;\r\n// }\r\n\r\ninterface IMyProps {\r\n  canEdit: boolean;\r\n}\r\n\r\nconst Support: React.FC<IMyProps> = (props: IMyProps) => { \r\n  return (\r\n      <containers.supporter canEdit={props.canEdit} />\r\n  );\r\n};\r\n\r\nexport default Support;","import * as React from 'react';\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faWindowClose, faEdit } from '@fortawesome/free-solid-svg-icons'\r\n\r\nimport { IAnswer } from '../types';\r\nimport { IQuestionAnswer } from '../../Categories/types';\r\n\r\ninterface IProps {\r\n\tanswer: IAnswer,\r\n\tusedAnswers: IQuestionAnswer[],\r\n\tgetCategoryQuestion: (categoryId: number, questionId: number) => string,\r\n\tedit: (answerId: number) => void;\r\n\tremove: (answerId: number) => void;\r\n}\r\n\r\nexport const ListRow: React.FC<IProps> = (props: IProps) => {\r\n\tconst { answer, usedAnswers, getCategoryQuestion, edit, remove } = props;\r\n\treturn (\r\n\t\t<tr key={answer.answerId} >\r\n\t\t\t<td>\r\n\t\t\t\t{answer.answerId}\r\n\t\t\t</td>\r\n\t\t\t<td>\r\n\t\t\t\t{answer.text}\r\n\t\t\t</td>\r\n\t\t\t<td>\r\n\t\t\t\t<button\r\n\t\t\t\t\tclassName=\"button-edit\"\r\n\t\t\t\t\ttitle=\"Add a new Answer\"\r\n\t\t\t\t\tonClick={() => edit(answer.answerId)}>\r\n\t\t\t\t\t<FontAwesomeIcon icon={faEdit} color='lightblue' />\r\n\t\t\t\t</button>\r\n\t\t\t</td>\r\n\t\t\t<td>\r\n\t\t\t\t<button\r\n\t\t\t\t\tclassName=\"button-remove\"\r\n\t\t\t\t\ttitle=\"Remove Answer\"\r\n\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\tconst qa = usedAnswers.find(a => a.answerId === answer.answerId);\r\n\t\t\t\t\t\tif (qa)\r\n\t\t\t\t\t\t\talert(`Answer is assigned to the question: \\n\"${getCategoryQuestion(qa.categoryId!, qa.questionId!)}\". \\nFirst unassign answer from question!`)\r\n\t\t\t\t\t\telse\r\n\t\t\t\t\t\t\tremove(answer.answerId)\r\n\t\t\t\t\t}\r\n\t\t\t\t\t}>\r\n\t\t\t\t\t<FontAwesomeIcon icon={faWindowClose} color='lightblue' />\r\n\t\t\t\t</button>\r\n\t\t\t</td>\r\n\t\t</tr>\r\n\t);\r\n}\r\n\r\n","import * as React from 'react';\r\nimport { useContext } from 'react';\r\nimport { Table } from 'react-bootstrap';\r\nimport { IQuestionAnswer } from '../../Categories/types';\r\nimport { ThemeContext } from '../../ThemeContext';\r\n\r\nimport { IAnswer } from '../types';\r\nimport { ListRow } from './ListRow';\r\n\r\ninterface IProps {\r\n\tanswers: IAnswer[],\r\n\tusedAnswers: IQuestionAnswer[],\r\n\tgetCategoryQuestion: (categoryId: number, questionId: number) => string,\r\n\tedit: (answerId: number) => void;\r\n\tremove: (answerId: number) => void;\r\n}\r\n\r\nconst List: React.FC<IProps> = (props: IProps) => {\r\n\tconst { answers, usedAnswers, getCategoryQuestion, edit, remove } = props;\r\n\r\n\tconst theme = useContext(ThemeContext);\r\n\tconst { darkMode, variant, bg } = theme.state;\r\n\r\n\treturn (\r\n\t\t<Table variant={variant} responsive striped bordered hover size=\"sm\">\r\n\t\t\t<thead>\r\n\t\t\t\t<tr>\r\n\t\t\t\t\t<th>Id</th>\r\n\t\t\t\t\t<th>Answer</th>\r\n\t\t\t\t\t<th></th>\r\n\t\t\t\t\t<th></th>\r\n\t\t\t\t</tr>\r\n\t\t\t</thead>\r\n\t\t\t<tbody>\r\n\t\t\t\t{ answers.map(answer => \r\n\t\t\t\t\t<ListRow\r\n\t\t\t\t\t\tkey={answer.answerId}\r\n\t\t\t\t\t\tanswer={answer}\r\n\t\t\t\t\t\tusedAnswers={usedAnswers}\r\n\t\t\t\t\t\tgetCategoryQuestion={getCategoryQuestion}\r\n\t\t\t\t\t\tedit={edit}\r\n\t\t\t\t\t\tremove={remove}\r\n\t\t\t\t\t/>\r\n\t\t\t\t)}\r\n\t\t\t</tbody>\r\n\t\t</Table>\r\n\t);\r\n  }\r\n\r\nexport default List\r\n\r\n","import { useContext } from 'react';\r\nimport { useParams } from 'react-router-dom' // useRouteMatch\r\nimport { ThemeContext } from \"../../ThemeContext\";\r\n\r\nimport { IAnswer } from '../types';\r\nimport { AnswerForm } from './Form'\r\nimport List from './List';\r\nimport { COLORS } from '../../formik/theme';\r\nimport { IQuestionAnswer } from '../../Categories/types';\r\nimport { Button, Col, Container, Row } from 'react-bootstrap';\r\nconst color = 'blue';\r\n\r\ninterface IProps {\r\n\tanswers: IAnswer[],\r\n\tanswer: IAnswer,\r\n\tusedAnswers: IQuestionAnswer[],\r\n\tgetCategoryQuestion: (categoryId: number, questionId: number) => string,\r\n\tformMode: string,\r\n\tadd: () => void;\r\n\tedit: (answerId: number) => void;\r\n\tremove: (answerId: number) => void;\r\n\tcancel: () => void;\r\n\tsaveForm: (answer: IAnswer, formMode: string) => void;\r\n}\r\n\r\ntype MyParams = {\r\n\tslug: string;\r\n};\r\n\r\nconst Page: React.FC<IProps> = (props: IProps) => {\r\n\tlet { slug } = useParams<MyParams>();\r\n\r\n\tconst theme = useContext(ThemeContext);\r\n\tconst { darkMode, variant, bg } = theme.state;\r\n\r\n\t// slug = ''\r\n\tconst { answers, answer, usedAnswers, getCategoryQuestion, formMode, add, edit, remove, cancel, saveForm } = props;\r\n\treturn (\r\n\t\t<Container fluid>\r\n\t\t\t<Row className={`${darkMode ? \"dark\" : \"light\"}`}>\r\n\t\t\t\t<Col md={7}>\r\n\t\t\t\t\t<div className={`${darkMode ? \"dark\" : \"\"}`}>\r\n\t\t\t\t\t\t<Button variant=\"primary\" onClick={() => add()} className=\"mb-1\">Add new</Button>\r\n\t\t\t\t\t\t{answers.length === 0 ? (\r\n\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t{'No answers at all  '}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t\t: (\r\n\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t<List\r\n\t\t\t\t\t\t\t\t\tanswers={answers}\r\n\t\t\t\t\t\t\t\t\tusedAnswers={usedAnswers}\r\n\t\t\t\t\t\t\t\t\tgetCategoryQuestion={getCategoryQuestion}\r\n\t\t\t\t\t\t\t\t\tedit={edit}\r\n\t\t\t\t\t\t\t\t\tremove={remove} />\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</Col>\r\n\t\t\t\t<Col md={5}>\r\n\t\t\t\t\t<div className={`${darkMode ? \"dark\" : \"light\"}`}>\r\n\t\t\t\t\t\t{answer &&\r\n\t\t\t\t\t\t\t<div style={{ border: '1px solid silver', borderRadius: '5px', padding: '5px 5px 15px 5px' }}>\r\n\t\t\t\t\t\t\t\t<h4>\r\n\t\t\t\t\t\t\t\t\t{formMode === 'add' ? 'New Answer' : 'Answer'}\r\n\t\t\t\t\t\t\t\t</h4>\r\n\t\t\t\t\t\t\t\t<AnswerForm\r\n\t\t\t\t\t\t\t\t\tanswer={answer}\r\n\t\t\t\t\t\t\t\t\tformMode={formMode}\r\n\t\t\t\t\t\t\t\t\tcancel={cancel}\r\n\t\t\t\t\t\t\t\t\tsaveForm={(answer: IAnswer) => saveForm(answer, formMode)}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t</Col>\r\n\t\t\t</Row>\r\n\t\t</Container>\r\n\t);\r\n}\r\n\r\nexport default Page\r\n\r\n","// import * as React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Dispatch } from 'redux';\r\n\r\nimport { IAppState } from '../../store/Store';\r\n\r\nimport { AnswerActions,  addAnswer, editAnswer, removeAnswer, storeAnswer, cancelAnswer } from '../actions' // , IAddAnswer\r\n\r\nimport { IAnswer } from '../types'\r\n\r\nimport Page from '../components/Page'\r\nimport { IQuestionAnswer, ICategory, ICategoriesState } from '../../Categories/types';\r\n\r\nconst getUsedAnswers = (categoriesState: ICategoriesState) : IQuestionAnswer[]=> {\r\n\tconst { categories, categoryQuestions } = categoriesState;\r\n\tlet questionAnswers: IQuestionAnswer[] = [];\r\n\tfor (let category of categories) {\r\n\t\tconst categoryState = categoryQuestions.get(category.categoryId)!;\r\n\t\tfor (let question of categoryState.questions) {\r\n\t\t\tconst arr = question.answers.map(a => ({\r\n\t\t\t\t...a,\r\n\t\t\t\tcategoryId: category.categoryId,\r\n\t\t\t\tquestionId: question.questionId\r\n\t\t\t}))\r\n\t\t\tquestionAnswers = questionAnswers.concat(arr)\r\n\t\t}\r\n\t}\r\n\treturn questionAnswers;\r\n}\r\n\r\nconst getCategoryQuestion = (categoriesState: ICategoriesState, categoryId: number, questionId: number) : string => {\r\n\tconst { categories, categoryQuestions } = categoriesState;\r\n\tconst category = categories.find( g => g.categoryId === categoryId);\r\n\tconst categoryState = categoryQuestions.get(category!.categoryId)!;\r\n\tconst question = categoryState.questions.find(q => q.questionId === questionId);\r\n\treturn `${category!.title}/${question!.text}`;\r\n\r\n}\r\n\r\nconst mapStateToProps = (store: IAppState) => {\r\n  return {\r\n\tanswers: store.answerState.answers,\r\n\tanswer: store.answerState.answer!,\r\n\tformMode: store.answerState.formMode,\r\n\tusedAnswers: getUsedAnswers(store.categoriesState),\r\n\tgetCategoryQuestion: (categoryId: number, questionId: number): string => getCategoryQuestion(store.categoriesState, categoryId, questionId),\r\n\twho: store.topState.top.auth!.who\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch<AnswerActions>) => {\r\n\treturn {\r\n\t\t//setFormMode: (formMode: string) => dispatch<any>(setFormMode(formMode)),\r\n\t\tadd: () => dispatch<any>(addAnswer()),\r\n\t\tedit: (answerId: number) => dispatch<any>(editAnswer(answerId)),\r\n\t\tremove: (answerId: number) => dispatch<any>(removeAnswer(answerId)),\r\n\t\tsaveForm: (answer: IAnswer, formMode: string) => dispatch<any>(storeAnswer(answer, formMode)),\r\n\t\tcancel: () => dispatch<any>(cancelAnswer()),\r\n\t}\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Page);","import React, { useContext } from 'react';\r\nimport { useFormik } from 'formik';\r\nimport * as Yup from 'yup'\r\nimport { IUser } from '../types';\r\n\r\nimport { Select } from '../../common/Select';\r\nimport { IFormProps } from '../types'\r\nimport UserName from '../../common/containers/UserName';\r\n\r\nimport { Button, Container, Row, Form } from \"react-bootstrap\";\r\nimport { ThemeContext } from '../../ThemeContext';\r\n\r\nconst UsrForm: React.FC<IFormProps> = (props: IFormProps) => {\r\n  const { userEditing, auth } = props;\r\n  const { who } = auth!;\r\n  const { roleId, userId, userName, pwd, department, createdBy, created } = userEditing!;\r\n  const formik = useFormik({\r\n    enableReinitialize: true,\r\n    initialValues: {\r\n      roleId,\r\n      userId,\r\n      userName,\r\n      pwd,\r\n      department,\r\n      createdBy,\r\n      created\r\n    },\r\n    validationSchema: Yup.object({\r\n      roleId: Yup.string()\r\n        .required('Required'),\r\n      //.notOneOf(['11']),\r\n      userName: Yup.string()\r\n        .max(64, 'Must be 64 characters or less')\r\n        .required('Required'),\r\n      pwd: Yup\r\n        .string()\r\n        .min(7)\r\n        .max(16)\r\n        .required()\r\n    }),\r\n    onSubmit: values => {\r\n      alert(JSON.stringify(values, null, 2));\r\n      if (who.roleId !== 11)\r\n        alert(\"Only Owner can maintain Users\")\r\n      else\r\n        props.saveForm(values, props.formMode)\r\n    }\r\n  });\r\n\r\n  const isEdit = () => props.formMode === 'edit';\r\n\r\n  console.log('RENDERING user', formik.values)\r\n\r\n  return (\r\n    <Form onSubmit={formik.handleSubmit}>\r\n\r\n      <Form.Group controlId=\"userId\">\r\n        <Form.Label>UserId:</Form.Label><span id=\"userId\">{' '}{formik.values.userId}</span>\r\n      </Form.Group>\r\n\r\n      <Form.Group controlId=\"roleId\">\r\n        <Form.Label>Role</Form.Label>\r\n        <Select\r\n          id=\"roleId\"\r\n          name=\"roleId\"\r\n          options={roleId === 11 ? props.roleOptions : props.roleOptions.filter(r => r.value !== 11)}\r\n          //onChange={formik.handleChange}\r\n          onChange={(e, value) => {\r\n            formik.setFieldValue(\"roleId\", value);\r\n            if (isEdit()) formik.submitForm();\r\n          }}\r\n          value={formik.values.roleId}\r\n          disabled={roleId === 11}\r\n        />\r\n      </Form.Group>\r\n\r\n      <Form.Group controlId=\"userName\">\r\n        <Form.Label>Name</Form.Label>\r\n        <Form.Control\r\n          as=\"input\"\r\n          name=\"userName\"\r\n          onChange={formik.handleChange}\r\n          //onBlur={formik.handleBlur}\r\n          onBlur={(e: React.FocusEvent<HTMLTextAreaElement>): void => {\r\n            if (isEdit() && formik.initialValues.userName !== formik.values.userName)\r\n              formik.submitForm();\r\n          }}\r\n          value={formik.values.userName}\r\n          style={{ width: '100%' }}\r\n        />\r\n        <Form.Text className=\"text-danger\">\r\n          {formik.touched.userName && formik.errors.userName ? (\r\n            <div className=\"text-danger\">{formik.errors.userName}</div>\r\n          ) : null}\r\n        </Form.Text>\r\n      </Form.Group>\r\n\r\n      <Form.Group className=\"mb-3\" controlId=\"pwd\">\r\n        <Form.Label>Password</Form.Label>\r\n        <Form.Control\r\n          type=\"password\"\r\n          placeholder=\"Password\"\r\n          name=\"pwd\"\r\n          value={formik.values.pwd}\r\n          onChange={formik.handleChange}\r\n          onBlur={(e: React.FocusEvent<HTMLTextAreaElement>): void => {\r\n            if (isEdit() && formik.initialValues.pwd !== formik.values.pwd)\r\n              formik.submitForm();\r\n          }}\r\n        />\r\n        <Form.Text className=\"text-danger\">\r\n          {formik.touched.pwd && formik.errors.pwd ? (\r\n            <div className=\"text-danger\">{formik.errors.pwd}</div>\r\n          ) : null}\r\n        </Form.Text>\r\n      </Form.Group>\r\n\r\n      {/* <button type=\"submit\">Submit</button> */}\r\n      <Form.Group controlId=\"createdBy\">\r\n        <Form.Label>Created by:</Form.Label>\r\n        <UserName id={formik.values.createdBy} />\r\n      </Form.Group>\r\n\r\n      {/* <br /> */}\r\n      <Form.Group controlId=\"created\">\r\n        <Form.Label className=\"id\">Created:</Form.Label>\r\n        <span>{formik.values.created.toLocaleDateString()}</span>\r\n      </Form.Group>\r\n\r\n      {!isEdit() &&\r\n        <div className=\"buttons\">\r\n          {props.canEdit &&\r\n            <Button\r\n              variant=\"secondary\"\r\n              size=\"sm\"\r\n              onClick={() => {\r\n                props.cancel();\r\n                // props.handleClose()\r\n              }}>\r\n              Cancel\r\n            </Button>}\r\n          {props.canEdit &&\r\n            <Button\r\n              variant=\"primary\"\r\n              size=\"sm\"\r\n              type=\"submit\"\r\n            >\r\n              Save\r\n            </Button>}\r\n        </div>\r\n      }\r\n    </Form>\r\n  );\r\n};\r\n\r\n\r\nexport const UserForm: React.FC<IFormProps> = (props: IFormProps) => {\r\n  const theme = useContext(ThemeContext);\r\n  const { darkMode, variant, bg } = theme.state;\r\n  return (\r\n    <Container className={`${darkMode ? \"dark\" : \"\"}`}>\r\n      <UsrForm {...props} />\r\n    </Container>\r\n  )\r\n}","// import * as React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { IAppState } from '../../store/Store';\r\nimport { IUser, IRole } from '../types'\r\n\r\nimport { Dispatch } from 'redux';  // ActionCreatorsMapObject, \r\n\r\nimport { UserActions,  \r\n\tgetUser, \r\n\taddUser, \r\n\teditUser,\r\n\tremoveUser,\r\n\tstoreUser,\r\n\tcancelUser\r\n} from '../actions'\r\n\r\nimport {UserForm}  from '../components/UserForm'\r\n\r\ninterface IProps {\r\n\tcanEdit: boolean\r\n}\r\n\r\n// Grab the users from the store and make them available on props\r\nconst mapStateToProps = (store: IAppState, ownProps: IProps ) => {\r\n\tconst {usersState, tagState, topState} = store;\r\n\tconst { roles, userEditing, roleOptions, formMode, roleIdEditing } = usersState; \r\n\treturn {\r\n\t\tauth: topState.top.auth,\r\n\t\troles,\r\n\t\troleOptions,\r\n\t\tuserEditing,\r\n\t\tformMode,\r\n\t\troleIdEditing,\r\n\t\tcanEdit: ownProps.canEdit\r\n\t};\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch<UserActions>) => {\r\n\treturn {\r\n\t\tonSelectUser: (userId: number) => dispatch<any>(getUser(userId)),\r\n\t\tadd: (userRoleId: number, text: string, canEdit?: boolean) => dispatch<any>(addUser(userRoleId, text, canEdit)),\r\n\t\tedit: (userRoleId: number, userId: number) => dispatch<any>(editUser(userRoleId, userId)),\r\n\t\tremove: (userRoleId: number, userId: number) => dispatch<any>(removeUser(userRoleId, userId)),\r\n\t\tsaveForm: (user: IUser, formMode: string) => dispatch<any>(storeUser(user, formMode)),\r\n\t\tcancel: () => dispatch<any>(cancelUser()),\t\r\n\t}\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(UserForm);\r\n","import * as React from 'react';\r\n\r\nimport { useHover } from '../../common/useHover'\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faWindowClose, faEdit } from '@fortawesome/free-solid-svg-icons'\r\n\r\nimport { IUser } from '../types';\r\nimport { Button, ListGroup } from 'react-bootstrap';\r\nimport { ThemeContext } from '../../ThemeContext';\r\nimport { userReducer } from '../reducer';\r\n\r\n\r\ninterface IRowProps {\r\n\twho: IUser;\r\n\tuser: IUser;\r\n\tonSelectUser: (userId: number) => IUser;\r\n\tedit: (roleId: number, userId: number) => void;\r\n\tremove: (roleId: number, userId: number) => void;\r\n}\r\n\r\nconst UserRow: React.FC<IRowProps> = (props: IRowProps) => {\r\n\r\n\tconst [hoverRef, hoverProps] = useHover();\r\n\r\n\tconst { who, user, onSelectUser, edit, remove } = props;\r\n\tconst { roleId, userId, userName } = user;\r\n\r\n\tconst theme = React.useContext(ThemeContext);\r\n\tconst { darkMode, variant, bg } = theme.state;\r\n\r\n\treturn (\r\n\t\t<ListGroup.Item\r\n\t\t\tas=\"li\"\r\n\t\t\tclassName=\"py-0\"\r\n\t\t\tvariant={variant}\r\n\t\t>\r\n\t\t\t<div ref={hoverRef} className=\"d-flex justify-content-start align-items-center\">\r\n\t\t\t\t<Button\r\n\t\t\t\t\tstyle={{ fontSize: '13px' }}\r\n\t\t\t\t\tvariant='link'\r\n\t\t\t\t\tsize=\"sm\"\r\n\t\t\t\t\tclassName=\"py-0 px-1 text-decoration-none\"\r\n\t\t\t\t\tonClick={() => onSelectUser(userId)}>\r\n\t\t\t\t\t{userName} {userId}\r\n\t\t\t\t</Button>\r\n\t\t\t\t{hoverProps.isHovered &&\r\n\t\t\t\t\t<Button\r\n\t\t\t\t\t\tvariant={variant}\r\n\t\t\t\t\t\tsize=\"sm\"\r\n\t\t\t\t\t\tclassName=\"py-0 px-1\"\r\n\t\t\t\t\t\tstyle={{ backgroundColor: 'transparent', borderWidth: '0' }}\r\n\t\t\t\t\t\ttitle=\"Edit\"\r\n\t\t\t\t\t\tonClick={() => edit(roleId, userId)}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<FontAwesomeIcon icon={faEdit} color='lightblue' />\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t}\r\n\t\t\t\t{hoverProps.isHovered && who.roleId === 11 &&\r\n\t\t\t\t\t<Button\r\n\t\t\t\t\t\tvariant={variant}\r\n\t\t\t\t\t\tsize=\"sm\"\r\n\t\t\t\t\t\tclassName=\"py-0 px-1\"\r\n\t\t\t\t\t\tstyle={{ backgroundColor: 'transparent', borderWidth: '0' }}\r\n\t\t\t\t\t\ttitle=\"Remove\"\r\n\t\t\t\t\t\tonClick={() => remove(roleId, userId)}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<FontAwesomeIcon icon={faWindowClose} color='lightblue' />\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t}\r\n\t\t\t</div>\r\n\t\t</ListGroup.Item>\r\n\t)\r\n}\r\n\r\nexport default UserRow\r\n\r\n","import * as React from 'react';\r\n\r\nimport { useHover } from '../../common/useHover'\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faWindowClose, faEdit, faCaretRight, faCaretDown, faPlus, faAppleWhole } from '@fortawesome/free-solid-svg-icons'\r\nimport { Badge, Button, ListGroup } from 'react-bootstrap'\r\n\r\n\r\nimport { IRole, IUser } from '../types';\r\nimport { ThemeContext } from '../../ThemeContext';\r\n\r\n\r\ninterface IUserRowProps {\r\n\twho: IUser;\r\n\tuserRole: IRole;\r\n\ttoggleRole: (roleId: number) => void;\r\n\teditRole: (roleId: number) => void;\r\n\tremoveRole: (roleId: number) => void;\r\n\tadd: (roleId: number, text: string, canEdit?: boolean) => void;\r\n}\r\n\r\nconst RoleRow: React.FC<IUserRowProps> = (props: IUserRowProps) => {\r\n\r\n\tconst [hoverRef, hoverProps] = useHover();\r\n\tconst { who, userRole, toggleRole, editRole, removeRole, add } = props;\r\n\tconst { roleId, title, users, isExpanded, color } = userRole;\r\n\r\n\tconst theme = React.useContext(ThemeContext);\r\n\tconst { darkMode, variant, bg } = theme.state;\r\n\r\n\treturn (\r\n\t\t<div ref={hoverRef}>\r\n\t\t\t<button\r\n\t\t\t\tclassName=\"button-edit\"\r\n\t\t\t\ttitle=\"Expand\"\r\n\t\t\t\tonClick={() => toggleRole(roleId)}\r\n\t\t\t\tstyle={{ marginLeft: '5px' }}\r\n\t\t\t>\r\n\t\t\t\t<FontAwesomeIcon icon={isExpanded ? faCaretDown : faCaretRight} color={color} size='lg' />\r\n\t\t\t</button>\r\n\t\t\t<Button\r\n\t\t\t\tvariant='link'\r\n\t\t\t\tsize=\"sm\"\r\n\t\t\t\tclassName=\"py-0 mx-1 text-decoration-none\"\r\n\t\t\t>\r\n\t\t\t\t{title}\r\n\t\t\t</Button>\r\n\t\t\t<Button\r\n\t\t\t\tvariant={variant}\r\n\t\t\t\tsize=\"lg\"\r\n\t\t\t\tclassName=\"py-0 px-1\"\r\n\t\t\t\tstyle={{ backgroundColor: 'transparent', borderWidth: '0' }}\r\n\t\t\t\ttitle=\"Add a new User\"\r\n\t\t\t\tonClick={() => add(roleId, '')}\r\n\t\t\t\tdisabled={roleId === 11}\r\n\t\t\t>\r\n\t\t\t\t<FontAwesomeIcon icon={faPlus} size='xs' color='orange' />\r\n\t\t\t</Button>\r\n\t\t\t{hoverProps.isHovered && who.roleId === 11 &&\r\n\t\t\t\t<button className=\"button-edit\" title=\"Edit Section\" onClick={() => editRole(roleId)}>\r\n\t\t\t\t\t<FontAwesomeIcon icon={faEdit} color='lightblue' />\r\n\t\t\t\t</button>\r\n\t\t\t}\r\n\t\t\t{hoverProps.isHovered && users.length === 0 && who.roleId === 11 &&\r\n\t\t\t\t<button className=\"button-remove\" title=\"Remove Section\" onClick={() => removeRole(roleId)}>\r\n\t\t\t\t\t<FontAwesomeIcon icon={faWindowClose} color='lightblue' />\r\n\t\t\t\t</button>\r\n\t\t\t}\r\n\t\t\t<Badge bg=\"primary\" pill>\r\n\t\t\t\t{users.length}\r\n\t\t\t</Badge>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default RoleRow\r\n\r\n","import { Fragment, useContext } from 'react';\r\nimport { useRef } from 'react'\r\nimport { Col, Container, ListGroup, Row } from 'react-bootstrap';\r\nimport { faPlus } from '@fortawesome/free-solid-svg-icons'\r\n\r\nimport { IRole, IRolesProps } from '../types'\r\n\r\nimport { IUser } from '../types';\r\n\r\nimport UserForm from '../containers/UserForm'\r\nimport UserRow from './UserRow';\r\nimport RoleRow from './RoleRow';\r\nimport { useParams } from 'react-router-dom' // useRouteMatch\r\nimport { ThemeContext } from \"../../ThemeContext\";\r\n\r\nimport { COLORS } from '../../formik/theme';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nconst color = 'blue';\r\n\r\ntype SupportParams = {\r\n\ttekst: string;\r\n};\r\n\r\nconst UserPage: React.FC<IRolesProps> = (props: IRolesProps) => {\r\n\r\n\t//let { tekst } = useParams<SupportParams>();\r\n\tconst { who, roles, userEditing,\r\n\t\tformMode, roleIdEditing,\r\n\t\tonSelectUser, add, edit, remove, canEdit,\r\n\t\taddRole, toggleRole, editRole, removeRole, storeRole } = props;\r\n\r\n\tconst inputEl = useRef<HTMLInputElement>(null);\r\n\tsetTimeout(() => {\r\n\t\tif (inputEl.current !== null) {\r\n\t\t\tinputEl.current!.select();\r\n\t\t\tinputEl.current!.focus()\r\n\t\t}\r\n\t}, 100)\r\n\r\n\t// const expandRole = (roleId: number): void => {\r\n\t// \tconst div = document.querySelector<HTMLDivElement>(\"#divRole\" + roleId);\r\n\t// \tconsole.log(div)\r\n\t// \tdiv!.style.display = 'block';\r\n\t// }\r\n\tconst theme = useContext(ThemeContext);\r\n\tconst { darkMode, variant, bg } = theme.state;\r\n\r\n\tconst userRoles: IRole[] = roles ?? [];\r\n\tconsole.log({userRoles})\r\n\r\n\treturn (\r\n\t\t<Container fluid>\r\n\t\t\t<Row className={`${darkMode ? \"dark\" : \"light\"}`}>\r\n\t\t\t\t<Col md={7}>\r\n\t\t\t\t\t<div style={{ border: '0px solid silver' }}>\r\n\t\t\t\t\t\t<h5>Users by Role{' '}\r\n\t\t\t\t\t\t\t<button className=\"button-add-category button-edit\" title=\"Add a new Role\" onClick={() => addRole()}>\r\n\t\t\t\t\t\t\t\t<FontAwesomeIcon icon={faPlus} size='xs' color='lightblue' />\r\n\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t</h5>\r\n\t\t\t\t\t\t<ListGroup\r\n\t\t\t\t\t\t\tas=\"ul\"\r\n\t\t\t\t\t\t\tvariant={variant}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t{userRoles.map(role => {\r\n\t\t\t\t\t\t\t\tconst { roleId, title, isExpanded, users } = role;\r\n\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t<Fragment key={roleId}>\r\n\t\t\t\t\t\t\t\t\t\t<ListGroup.Item\r\n\t\t\t\t\t\t\t\t\t\t\tvariant={variant}\r\n\t\t\t\t\t\t\t\t\t\t\tclassName=\"py-0 px-1\"\r\n\t\t\t\t\t\t\t\t\t\t\tas=\"li\"\r\n\t\t\t\t\t\t\t\t\t\t\tkey={roleId + \"_1\"}\r\n\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className=\"d-flex justify-content-start align-items-center\" style={{ textAlign: 'start' }}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t{roleIdEditing === roleId &&\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<input ref={inputEl} name=\"groupTitle\" type=\"text\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonBlur={(e) => storeRole({ ...role, title: e.target.value })}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tdefaultValue={title}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t{roleIdEditing !== roleId && (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<RoleRow\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\twho={who}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tuserRole={role}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\ttoggleRole={toggleRole}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\teditRole={editRole}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tremoveRole={removeRole}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tadd={add}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</ListGroup.Item>\r\n\t\t\t\t\t\t\t\t\t\t{isExpanded && role.users.length > 0 &&\r\n\t\t\t\t\t\t\t\t\t\t\t<ListGroup.Item\r\n\t\t\t\t\t\t\t\t\t\t\t\tvariant={variant}\r\n\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"py-0 px-1\"\r\n\t\t\t\t\t\t\t\t\t\t\t\tas=\"li\"\r\n\t\t\t\t\t\t\t\t\t\t\t\tkey={roleId + \"_2\"}\r\n\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<ListGroup\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tas=\"ul\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tvariant={variant}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"inner-list py-0 ms-5\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t{users.map(user =>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<UserRow\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\twho={who}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tkey={user.userId}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tuser={user}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonSelectUser={onSelectUser}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tedit={edit}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tremove={remove}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t</ListGroup>\r\n\t\t\t\t\t\t\t\t\t\t\t</ListGroup.Item>\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t</Fragment>\r\n\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t</ListGroup>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</Col>\r\n\t\t\t\t<Col md={5}>\r\n\t\t\t\t\t<div className={`${darkMode ? \"dark\" : \"light\"}`}>\r\n\t\t\t\t\t\t{userRoles && userEditing &&\r\n\t\t\t\t\t\t\t<div style={{ border: '1px solid silver', borderRadius: '5px', padding: '5px 5px 15px 5px' }}>\r\n\t\t\t\t\t\t\t\t<h4 style={{ marginTop: 0, color: 'white' }}>User</h4>\r\n\t\t\t\t\t\t\t\t<UserForm canEdit={formMode === 'display' ? false : canEdit} />\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</Col>\r\n\t\t\t</Row>\r\n\t\t</Container>\r\n\t);\r\n}\r\n\r\nexport default UserPage\r\n\r\n","// import * as React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { IAppState } from '../../store/Store';\r\nimport { IUser, IRole } from '../types'\r\n\r\nimport { Dispatch } from 'redux';  // ActionCreatorsMapObject, \r\n\r\nimport { UserActions,  \r\n\tgetUser, \r\n\taddUser, \r\n\teditUser,\r\n\tremoveUser,\r\n\tstoreUser,\r\n\tcancelUser,\r\n\taddRole,\r\n\teditRole,\r\n\tremoveRole,\r\n\tstoreRole,\r\n\ttoggleRole\r\n} from '../actions'\r\n\r\nimport UsersPage from '../components/UsersPage'\r\n\r\ninterface IProps {\r\n\tcanEdit: boolean\r\n}\r\n\r\n// Grab the users from the store and make them available on props\r\nconst mapStateToProps = (store: IAppState, ownProps: IProps ) => {\r\n\tconst { usersState,  topState} = store;\r\n\tconst { roles, userEditing, formMode, roleIdEditing } = usersState; \r\n\treturn {\r\n\t\twho: topState.top.auth!.who,\r\n\t\troles,\r\n\t\tuserEditing,\r\n\t\tformMode,\r\n\t\troleIdEditing,\r\n\t\tcanEdit: ownProps.canEdit\r\n\t};\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch<UserActions>) => {\r\n\treturn {\r\n\t\t// user\r\n\t\tonSelectUser: (userId: number) => dispatch<any>(getUser(userId)),\r\n\t\tadd: (userRoleId: number, text: string, canEdit?: boolean) => dispatch<any>(addUser(userRoleId, text, canEdit)),\r\n\t\tedit: (userRoleId: number, userId: number) => dispatch<any>(editUser(userRoleId, userId)),\r\n\t\tremove: (userRoleId: number, userId: number) => dispatch<any>(removeUser(userRoleId, userId)),\r\n\t\t// groups\r\n\t\taddRole: () => dispatch<any>(addRole()),\r\n\t\ttoggleRole: (roleId: number) =>  dispatch<any>(toggleRole(roleId)),\r\n\t\teditRole: (roleId: number) =>  dispatch<any>(editRole(roleId)),\r\n\t\tremoveRole: (roleId: number) => dispatch<any>(removeRole(roleId)),\r\n\t\tstoreRole: (role: IRole) => dispatch<any>(storeRole(role))\r\n\t}\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(UsersPage);\r\n","import React, { useContext, useState } from 'react';\r\nimport { Button, Col, Container, Form, Row } from \"react-bootstrap\";\r\n\r\nimport { useFormik } from 'formik';\r\nimport * as Yup from 'yup'\r\n\r\nimport { ThemeContext } from '../../ThemeContext';\r\n\r\nimport { IFormProps } from '../types';\r\n//import { number } from 'yup/lib/locale';\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\n\r\nconst LogForm: React.FC<IFormProps> = (props: IFormProps) => {\r\n\r\n  let { formMode, authError } = props;\r\n\r\n  let navigate = useNavigate();\r\n  if (props.isAuthenticated) {\r\n    navigate('/questions');\r\n  }\r\n\r\n  const formik = useFormik({\r\n    enableReinitialize: true,\r\n    initialValues: {\r\n      userName: '',\r\n      pwd: ''\r\n    },\r\n    validationSchema: Yup.object({\r\n      userName: Yup\r\n        .string()\r\n        .max(32, 'Must be 32 characters or less')\r\n        .required('Required'),\r\n      pwd: Yup\r\n        .string()\r\n        .min(7)\r\n        .max(16)\r\n        //.matches(/^(?=.*[a-z])(?=.*[A-Z])(?=.*d)[a-zA-Zd]$/)\r\n        .required()\r\n    }),\r\n    onSubmit: values => {\r\n      // alert(JSON.stringify(values, null, 2));\r\n      props.saveForm(values, props.formMode, props.isRegister)\r\n    }\r\n  });\r\n\r\n  const isEdit = () => props.formMode === 'edit';\r\n\r\n  console.log('RENDERING LoginForm', formik.values)\r\n\r\n  return (\r\n    <Form onSubmit={formik.handleSubmit}>\r\n\r\n      {/* <label htmlFor=\"name\">User name</label> */}\r\n      <Form.Group controlId=\"userName\">\r\n        <Form.Label>Name</Form.Label>\r\n        <Form.Control\r\n          as=\"input\"\r\n          name=\"userName\"\r\n          onChange={formik.handleChange}\r\n          onBlur={formik.handleBlur}\r\n          // onBlur={(e: React.FormEvent<HTMLInputElement>): void => {\r\n          //   if (isEdit() && formik.initialValues.name !== formik.values.name)\r\n          //     formik.submitForm();\r\n          // }}\r\n          value={formik.values.userName}\r\n          placeholder=\"User name\"\r\n          maxLength={16}\r\n        />\r\n        <Form.Text className=\"text-danger\">\r\n          {formik.touched.userName && formik.errors.userName ? (\r\n            <div className=\"text-danger\">{formik.errors.userName}</div>\r\n          ) : null}\r\n        </Form.Text>\r\n      </Form.Group>\r\n      <br/>\r\n\r\n      <Form.Group controlId=\"pwd\">\r\n        <Form.Label>Password</Form.Label>\r\n        <Form.Control\r\n          as=\"input\"\r\n          name=\"pwd\"\r\n          type=\"password\"\r\n          onChange={formik.handleChange}\r\n          onBlur={formik.handleBlur}\r\n          value={formik.values.pwd}\r\n          placeholder=\"password\"\r\n          // style={{ width: '40%' }}\r\n          maxLength={16}\r\n        />\r\n        <Form.Text className=\"text-danger\">\r\n          {formik.touched.pwd && formik.errors.pwd ? (\r\n            <div className=\"text-danger\">{formik.errors.pwd}</div>\r\n          ) : null}\r\n        </Form.Text>\r\n      </Form.Group>\r\n\r\n      {authError &&\r\n        <div>{authError}</div>\r\n      }\r\n\r\n      <br />\r\n\r\n      <div className=\"buttons\">\r\n        <Button\r\n          variant=\"secondary\"\r\n          size=\"sm\"\r\n          onClick={() => {\r\n            props.cancel();\r\n            navigate('/landing');\r\n            // props.handleClose()\r\n          }}>\r\n          Cancel\r\n        </Button>\r\n        <Button\r\n          variant=\"primary\"\r\n          size=\"sm\"\r\n          type=\"submit\"\r\n        >\r\n          Submit\r\n        </Button>\r\n      </div>\r\n\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport const LoginForm: React.FC<IFormProps> = (props: IFormProps) => {\r\n  const theme = useContext(ThemeContext);\r\n  const { darkMode, variant, bg } = theme.state;\r\n  return (\r\n    <Container className={`${darkMode ? \"dark\" : \"\"}`} >\r\n      <Row className=\"py-2\">\r\n        <Col md=\"4\" className=\"mx-auto\">\r\n          <h4 style={{textAlign: 'center'}}>\r\n            {props.isRegister ? (\r\n              'Register'\r\n            ) : (\r\n              'Sign In'\r\n            )}\r\n          </h4>\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        <Col md=\"6\" className=\"mx-auto\">\r\n          <LogForm {...props} />\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  )\r\n}","// import * as React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { IAppState } from '../../store/Store';\r\n\r\nimport { Dispatch } from 'redux'; \r\n\r\nimport { register, authenticate, cancelLogin, TopActions } from '../actions'\r\n\r\nimport { LoginForm } from '../components/LoginForm';\r\nimport { ILogin, ITop } from '../types';\r\n\r\ninterface IProps {\r\n\tcanEdit: boolean,\r\n\tisRegister: boolean\r\n}\r\n\r\nconst mapStateToProps = (store: IAppState, ownProps: IProps) => {\r\n\tconst { topState } = store;\r\n\tconst { top } = topState;\r\n\treturn {\r\n\t\tisAuthenticated: top.isAuthenticated,\r\n\t\tuuid: top.uuid,\r\n\t\tauthError: top.authError,\r\n\t\tcanEdit: ownProps.canEdit,\r\n\t\tisRegister: ownProps.isRegister,\r\n\t\tformMode: 'edit'\r\n\t};\r\n};\r\n\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch<TopActions>) => {\r\n\treturn {\r\n\t\tsaveForm: (login: ILogin, formMode: string, isRegister: boolean) => \r\n\t\t\tdispatch<any>(isRegister ? \r\n\t\t\t\tregister(login)\t: authenticate(login)),\r\n\t\tcancel: () => dispatch<any>(cancelLogin())\r\n\t}\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(LoginForm);\r\n\r\n","import * as React from \"react\";\r\n\r\ninterface ILanding {\r\n}\r\n\r\nconst Landing: React.FC<ILanding> = (props: ILanding) => {\r\n  return (\r\n    <div>\r\n      Landing Page\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Landing;\r\n","import { useContext } from \"react\";\r\n\r\nimport { ThemeContext } from \"./ThemeContext\";\r\nimport SwitchButton from \"./SwitchButton\";\r\n\r\nimport { connect } from \"react-redux\";\r\nimport { Dispatch } from 'redux';\r\n\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nimport { IAppState } from \"./store/Store\";\r\nimport { IAuth } from \"./Top/types\";\r\n\r\nimport logo from './logo.svg'\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faQuestion, faSurprise, faUser, faUserFriends, faAnchor } from '@fortawesome/free-solid-svg-icons'\r\n\r\nimport Container from 'react-bootstrap/Container';\r\nimport Nav from 'react-bootstrap/Nav';\r\nimport Navbar from 'react-bootstrap/Navbar';\r\nimport NavDropdown from 'react-bootstrap/NavDropdown';\r\nimport Offcanvas from 'react-bootstrap/Offcanvas';\r\nimport { toggleMode, TopActions } from \"./Top/actions\";\r\n\r\ninterface ISideBarProps {\r\n  isAuthenticated: boolean | null;\r\n  uuid: string | null;\r\n  auth?: IAuth,\r\n  signOut: () => void;\r\n  handleClose: () => void;\r\n  toggleMode: () => void;\r\n}\r\n\r\nfunction SideBar({ isAuthenticated, uuid, auth, signOut, handleClose, toggleMode }: ISideBarProps) {\r\n\r\n  const theme = useContext(ThemeContext);\r\n  const { darkMode, variant, bg } = theme.state;\r\n\r\n  let navigate = useNavigate();\r\n\r\n  const otkaciMe = () => {\r\n    signOut();\r\n    navigate('/landing');\r\n  }\r\n\r\n  // className=\"mb-3\" \r\n\r\n  return (\r\n    <Navbar expand={\"md\"} variant={variant} bg={bg} collapseOnSelect className=\"sticky-top\">\r\n      <Container fluid>\r\n        <Navbar.Brand href=\"#\" className=\"ps-3\">Support Knowledge</Navbar.Brand>\r\n        <Navbar.Toggle aria-controls={`offcanvasNavbar-expand`} />\r\n        <Navbar.Offcanvas\r\n          id={`offcanvasNavbar-expand`}\r\n          aria-labelledby={`offcanvasNavbarLabel-expand`}\r\n          placement=\"end\"\r\n          className={`text-bg-${bg}`}\r\n        >\r\n          {darkMode ? (\r\n            <Offcanvas.Header closeButton closeVariant=\"white\">\r\n              <Offcanvas.Title id={`offcanvasNavbarLabel-expand`}>Support</Offcanvas.Title>\r\n            </Offcanvas.Header>\r\n          ) : (\r\n            <Offcanvas.Header closeButton>\r\n              <Offcanvas.Title id={`offcanvasNavbarLabel-expand`}>Support</Offcanvas.Title>\r\n            </Offcanvas.Header>\r\n          )}\r\n\r\n          < Offcanvas.Body >\r\n            <Nav\r\n              className=\"justify-content-end flex-grow-1 pe-3 d-flex flex-nowrap\"\r\n              onSelect={(eventKey) => {\r\n                if ([\"LIGHTMODE\", \"DARKMODE\"].includes(eventKey!)) {\r\n                  if (document.body.classList.contains('dark')) {\r\n                    document.body.classList.remove('dark')\r\n                    document.body.classList.add('light')\r\n                  }\r\n                  else {\r\n                    document.body.classList.add('dark')\r\n                  }\r\n                  theme.dispatch({ type: eventKey })\r\n                  toggleMode();\r\n                }\r\n              }\r\n              }\r\n            >\r\n              {isAuthenticated &&\r\n                <Nav.Link href=\"#/supporter/promo\">\r\n                  <FontAwesomeIcon icon={faSurprise} color='lightblue' />{' '}Supporter\r\n                </Nav.Link>\r\n              }\r\n              {isAuthenticated &&\r\n                <Nav.Link href=\"#/questions\">\r\n                  <FontAwesomeIcon icon={faQuestion} color='lightblue' />{' '}Questions\r\n                </Nav.Link>\r\n              }\r\n              {isAuthenticated &&\r\n                <Nav.Link href=\"#/answers/pera\">\r\n                  <FontAwesomeIcon icon={faAnchor} color='lightblue' />{' '}Answers\r\n                </Nav.Link>\r\n              }\r\n              {isAuthenticated && auth && auth!.who.roleId === 11 &&\r\n                <Nav.Link href=\"#/users/2\">\r\n                  <FontAwesomeIcon icon={faUserFriends} color='lightblue' />{' '}Users\r\n                </Nav.Link>\r\n              }\r\n\r\n              {!isAuthenticated &&\r\n                <Nav.Link href=\"#/landing\">\r\n                  Landing\r\n                </Nav.Link>\r\n              }\r\n              {!isAuthenticated &&\r\n                <Nav.Link href=\"#/About\">\r\n                  About\r\n                </Nav.Link>\r\n              }\r\n\r\n              {/* <NavDropdown\r\n                title={<><FontAwesomeIcon icon={faCog} color='lightblue' />{' '}Settings</>}\r\n                id={`offcanvasNavbarDropdown-expand`}\r\n                menuVariant={variant}\r\n              >\r\n              </NavDropdown> */}\r\n\r\n              {!isAuthenticated &&\r\n                <Nav.Link href=\"#/Register\">\r\n                  Register\r\n                </Nav.Link>\r\n              }\r\n              {!isAuthenticated &&\r\n                <Nav.Link href=\"#/sign-in \">\r\n                  Sign In\r\n                </Nav.Link>\r\n              }\r\n\r\n              {isAuthenticated &&\r\n                // <Nav.Link href=\"#\" disabled>\r\n                //   <FontAwesomeIcon icon={faUser} />{' '}{auth!.who.userName}\r\n                // </Nav.Link>\r\n\r\n                <NavDropdown\r\n                  title={<><FontAwesomeIcon icon={faUser} />{' '}{auth!.who.userName}</>}\r\n                  id={`offcanvasNavbarDropdown-expand`}\r\n                  menuVariant={variant}\r\n                  align=\"end\"\r\n                >\r\n                <NavDropdown.Item eventKey=\"DARKMODE\">\r\n                  Dark mode\r\n                </NavDropdown.Item>\r\n                <NavDropdown.Item eventKey=\"LIGHTMODE\">\r\n                  Light mode\r\n                </NavDropdown.Item>\r\n                {/* <Form className=\"d-flex\">\r\n                  <Form.Control\r\n                    type=\"search\"\r\n                    placeholder=\"Search\"\r\n                    className=\"me-2\"\r\n                    aria-label=\"Search\"\r\n                  />\r\n                  <Button variant=\"outline-success\">Search</Button>\r\n                </Form> */}\r\n                   <NavDropdown.Divider />\r\n                  {isAuthenticated &&\r\n                    <NavDropdown.Item href=\"#\" onClick={otkaciMe}>Sign out</NavDropdown.Item>\r\n                  }\r\n                </NavDropdown>\r\n\r\n              }\r\n\r\n            </Nav>\r\n\r\n          </Offcanvas.Body>\r\n        </Navbar.Offcanvas>\r\n      </Container>\r\n    </Navbar >\r\n  );\r\n}\r\ninterface IOwnProps {\r\n  signOut: () => void;\r\n  handleClose: () => void;\r\n}\r\n\r\nconst mapStateToProps = (store: IAppState, ownProps: IOwnProps) => ({\r\n  isAuthenticated: store.topState.top.isAuthenticated,\r\n  uuid: store.topState.top.uuid,\r\n  auth: store.topState.top.auth,\r\n  signOut: ownProps.signOut,\r\n  handleClose: ownProps.handleClose\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch<TopActions>) => {\r\n  return {\r\n    toggleMode: () => dispatch<any>(toggleMode())\r\n  }\r\n};\r\n\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(SideBar);\r\n\r\n","import * as React from \"react\";\r\n\r\ninterface ILanding {\r\n}\r\n\r\nconst Landing: React.FC<ILanding> = (props: ILanding) => {\r\n  return (\r\n    <>\r\n      <h2 style={{ textAlign: 'center', marginBlockStart: '0.66rem', marginBlockEnd: '0.1rem' }}>Questions &amp; Answers</h2>\r\n      <div className=\"d-flex flex-column justify-content-start align-items-center pt-3 mx-auto border-bottom\">\r\n        <p className=\"mx-auto\">\r\n          A knowledge base for sharing information.\r\n        </p>\r\n        <p className=\"mx-auto\">\r\n          When you record your experiences and insights, other members of your team can share info.\r\n        </p>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Landing;\r\n","\r\n\r\nimport React, { useCallback, useRef, useState, useContext, useEffect } from 'react';\r\n\r\nimport { HashRouter as Router, Route, Routes } from 'react-router-dom' // useRouteMatch\r\n\r\nimport { connect } from 'react-redux';\r\nimport { Dispatch } from 'redux';\r\n\r\nimport { IAppState } from './store/Store';\r\nimport { ThemeContext } from \"./ThemeContext\";\r\n\r\nimport Support from './components/Support';\r\nimport AnswersPage from './Answers/containers/Page'\r\nimport containers from './Categories/containers/ContainerCategoriesPage'\r\n\r\nimport UsersPage from './Users/containers/UsersPage';\r\nimport { authenticate, unAuthenticate, TopActions, navbarToggle } from './Top/actions';\r\nimport LoginForm from './Top/containers/LoginForm';\r\nimport Landing from './components/Landing';\r\nimport { ILogin, IAuth } from './Top/types';\r\n\r\nimport { Container, Row, Col } from 'react-bootstrap';\r\n\r\nimport SideBar from './SideBar';\r\nimport About from './components/About';\r\n\r\ninterface IProps {\r\n\tisAuthenticated: boolean | null;\r\n\tuuid: string | null;\r\n\tauth?: IAuth,\r\n\ttoggleNavbar: () => void,\r\n\tcheckAuthentication: (login: ILogin) => void;\r\n\tsignOut: () => void;\r\n}\r\n\r\nconst App = ({ isAuthenticated, uuid, auth, toggleNavbar, checkAuthentication, signOut }: IProps) => {\r\n\r\n\tlet main: null | HTMLDivElement = null;\r\n\r\n\tconst [mainMd, setMainMd] = useState(9);\r\n\tconst [mainLg, setMainLg] = useState(10);\r\n\r\n\tconst theme = useContext(ThemeContext);\r\n\tconst { darkMode, variant, bg } = theme.state;\r\n\r\n\tuseEffect(() => {\r\n\t\tdocument.body.classList.add(bg)\r\n\t}, []);\r\n\r\n\tconst [open, setOpen] = useState(false);\r\n\tconst handleClose = () => {\r\n\t\tsetOpen(false);\r\n\t}\r\n\r\n\tconst canEdit = isAuthenticated === true && auth!.who.roleId < 44;\r\n\r\n\t// null is the third state false/true/null in reducer\r\n\tconst app = \r\n\t\t<Router>\r\n\t\t\t<SideBar handleClose={handleClose} signOut={signOut} />\r\n\t\t\t<Container fluid>\r\n\t\t\t\t<Row className={`${darkMode ? \"dark\" : \"\"}`}>\r\n\t\t\t\t\t{/* <Col id=\"main\" md={mainMd} lg={mainLg} className=\"ms-sm-auto px-md-4\"> */}\r\n\t\t\t\t\t<Col id=\"main\" className=\"ms-sm-auto px-md-4\" variant={variant} bg={variant}>\r\n\t\t\t\t\t\t<div className=\"d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pt-3 pb-2 mb-3 border-bottom\">\r\n\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t<div className={`${darkMode ? \"dark\" : \"\"}`}>\r\n\t\t\t\t\t\t\t<Routes>\r\n\t\t\t\t\t\t\t\t<Route path=\"/\" element={<Landing />} />\r\n\t\t\t\t\t\t\t\t<Route path=\"/sign-in\" element={\r\n\t\t\t\t\t\t\t\t\t<LoginForm canEdit={true} isRegister={false} />\r\n\t\t\t\t\t\t\t\t} />\r\n\t\t\t\t\t\t\t\t<Route path=\"/register\" element={\r\n\t\t\t\t\t\t\t\t\t<LoginForm canEdit={true} isRegister={true} />\r\n\t\t\t\t\t\t\t\t} />\r\n\t\t\t\t\t\t\t\t<Route path=\"/supporter/:tekst\" element={<Support canEdit={canEdit} />} />\r\n\t\t\t\t\t\t\t\t<Route path=\"/questions\" element={<containers.categories canEdit={canEdit} />} />\r\n\t\t\t\t\t\t\t\t<Route path=\"/answers/:slug\" element={<AnswersPage />} />\r\n\t\t\t\t\t\t\t\t<Route path=\"/users/:slug\" element={<UsersPage canEdit={true} />} />\r\n\t\t\t\t\t\t\t\t<Route path=\"/about\" element={<About />} />\r\n\t\t\t\t\t\t\t\t<Route path=\"/landing\" element={<Landing />} />\r\n\t\t\t\t\t\t\t</Routes>\r\n\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t</Row>\r\n\t\t\t</Container>\r\n\t\t</Router>\r\n\t// )\r\n\t// : (\r\n\t// \tnull\r\n\t// );\r\n\r\n\treturn (\r\n\t\t<Container fluid className=\"App\">\r\n\t\t\t{app}\r\n\t\t</Container>\r\n\t);\r\n}\r\n\r\nconst mapStateToProps = (store: IAppState) => ({\r\n\tisAuthenticated: store.topState.top.isAuthenticated,\r\n\tauth: store.topState.top.auth,\r\n\tuuid: store.topState.top.uuid\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch<TopActions>) => {\r\n\treturn {\r\n\t\ttoggleNavbar: () => dispatch<any>(navbarToggle()),\r\n\t\tcheckAuthentication: async (login: ILogin) => await dispatch<any>(authenticate(login)),\r\n\t\tsignOut: () => dispatch<any>(unAuthenticate())\r\n\t}\r\n};\r\n\r\nexport default connect(\r\n\tmapStateToProps,\r\n\tmapDispatchToProps\r\n)(App);\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport * as ReactDOM from 'react-dom';\r\n\r\nimport { Provider } from 'react-redux';\r\n\r\nimport configureStore from './store/Store';\r\nimport { loadCategories } from './Categories/actions';\r\nimport { getAllAnswers } from './Answers/actions';\r\n\r\nimport './index.css';\r\nimport './normalize.scss'\r\nimport './App.css';\r\n\r\nimport { getAllUsers } from './Users/actions';\r\nimport { getAllTags } from './roleTags/actions';\r\nimport { loadTop } from './Top/actions';\r\nimport App from './App';\r\n\r\nimport { ThemeProvider } from './ThemeContext';\r\nimport { ITop } from './Top/types';\r\n\r\n// Uncomment to clean up the localStorage\r\n// localStorage.clear(); // !!!!!!!!!!!!\r\n\r\nconst store = configureStore();\r\nstore.dispatch(loadCategories());\r\nstore.dispatch(getAllAnswers());\r\nstore.dispatch(getAllUsers())\r\nstore.dispatch<any>(loadTop())\r\n\t.then((top: ITop)=> {\r\n\t\tconsole.log({top})\r\n\t})\r\n\t.catch((err: { getMessage: () => any; }) => {\r\n\t\tconsole.error(err.getMessage());\r\n\t});\r\nstore.dispatch(getAllTags());\r\n\r\nconst sessionId = Math.floor((Math.random() * 10000) + 1);\r\nsessionStorage.setItem('sessionId', sessionId.toString())\r\n\r\nconst state = store.getState();\r\n\r\nReactDOM.render(\r\n\t<React.StrictMode>\r\n\t\t<Provider store={store} >\r\n\t\t\t<ThemeProvider darkMode={state.topState.top.darkMode }>\r\n\t\t\t\t<App />\r\n\t\t\t</ThemeProvider>\r\n\t\t</Provider>\r\n\t</React.StrictMode>,\r\n\tdocument.getElementById('root')\r\n);\r\n"],"sourceRoot":""}