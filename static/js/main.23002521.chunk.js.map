{"version":3,"sources":["Answers/actions.ts","Categories/actions.ts","Top/actions.ts","Categories/types.ts","Categories/categoryReducer.ts","Categories/categoriesReducer.ts","Answers/reducer.ts","user/actions.ts","roleTags/actions.ts","user/reducer.ts","roleTags/reducer.ts","Top/reducer.ts","store/Store.tsx","components/AutoSuggest.tsx","formik/theme.js","common/containers/UserName.tsx","common/components/OptionName.tsx","Categories/components/CategoryForm.tsx","Categories/containers/ContainerCategoryForm.tsx","components/AutoSuggestAnswer.tsx","common/useHover.tsx","Categories/components/QuestionAnswerRow.tsx","Categories/components/QuestionAnswers.tsx","common/Select.tsx","Categories/sourceOptions.ts","Categories/statusOptions.ts","Categories/components/QuestionForm.tsx","Categories/containers/ContainerQuestionForm.tsx","Categories/components/QuestionRow.tsx","Categories/components/CategoryRow.tsx","Categories/components/CategoryList.tsx","Categories/containers/ContainerCategoryList.tsx","Categories/components/CategoriesPage.tsx","Categories/components/SuportPage.tsx","Categories/containers/ContainerCategoriesPage.tsx","components/Support.tsx","Answers/components/Form.tsx","Answers/components/ListRow.tsx","Answers/components/List.tsx","Answers/components/Page.tsx","Answers/containers/Page.tsx","user/components/UserForm.tsx","user/containers/UserForm.tsx","user/components/UserRow.tsx","user/components/RoleRow.tsx","user/components/UserPage.tsx","user/containers/UsersPage.tsx","Top/components/LoginForm.tsx","Top/containers/LoginForm.tsx","components/Landing.tsx","Navig.tsx","Header.tsx","App.tsx","index.tsx"],"names":["AnswerActionTypes","parseFromJson","data","map","a","parseDates","created","Date","SUPPORT_ANSWERS","QuestionActionTypes","addAnswer","dispatch","getState","type","ADD_ANSWER","createdBy","topState","top","auth","who","userId","err","console","error","storeAnswer","answer","formMode","STORE_ANSWER","Promise","resolve","answerState","answerId","g","questions","q","categoryId","answers","assigned","TopActionTypes","getQuestion","questionId","GET_QUESTION","addQuestion","text","canEdit","ADD_QUESTION","showCategoryForm","removeQuestion","doSync","delay","REMOVE_QUESTION","syncWithOthers","assignQuestionAnswer","tekst","ASSIGN_QUESTION_ANSWER","assignedBy","setIsDetail","isDetail","SET_IS_DETAIL","entity","btnSync","document","getElementById","localStorage","setItem","JSON","stringify","sessionId","sessionStorage","getItem","click","storeQuestion","question","addCategoryUnknown","STORE_QUESTION","state","categoriesState","categories","find","c","newCategory","initialCategory","title","storeCategory","then","updateQuestion","UPDATE_QUESTION","categoryIdWas","questionCopy","reject","setTimeout","closeQuestionForm","CLOSE_QUESTION_FORM","openQuestionForm","OPEN_QUESTION_FORM","removeCategory","REMOVE_CATEGORY","category","STORE_CATEGORY","updateCategory","UPDATE_CATEGORY","addAndAssignNewAnswer","initialQuestion","words","source","status","initialCategoryState","aTypesToStore","Object","keys","reduceQuestions","categoryQuestions","action","categoryState","get","newState","myReducer","includes","set","questionIdMax","EDIT_QUESTION","split","CANCEL_QUESTION","filter","REMOVE_QUESTION_ANSWER","qa","SUPPORT_CATEGORIES","isExpanded","initialCategoriesState","undefined","Map","showQuestionForm","categoryOptions","loading","categoryIdEditing","storeToStorage","ADD_CATEGORY","TOGGLE_CATEGORY","getQuestions","LOAD_CATEGORIES","value","label","unshift","Math","max","categoryIdCopy","GET_CATEGORY","EDIT_CATEGORY","categoryCopy","CANCEL_CATEGORY","reduce","acc","push","initialAnswer","options","initialAnswerState","GET_ALL_ANSWERS","GET_ANSWER","length","EDIT_ANSWER","CANCEL_ANSWER","REMOVE_ANSWER","SUPPORT_TOP","UserActionTypes","parseObj","json","visited","authenticated","authenticate","loginUser","findUser","userName","user","pwd","AUTHENTICATE","AUTHENTICATE_WRONG_PWD","AUTHENTICATE_WRONG_USERNAME","parseRole","users","u","TagActionTypes","getUser","GET_USER","name","usersState","roles","role","addUser","roleId","ADD_USER","editUser","EDIT_USER","removeUser","REMOVE_USER","CREATE_OPTIONS","storeUser","STORE_USER","SUPPORT_USERS","initialUser","department","initialUserRole","color","initialUsersState","allUsers","roleOptions","userOptions","roleIdEditing","GET_ALL_USERS","log","concat","userIdMax","userRole","CANCEL_USER","ADD_ROLE","TOGGLE_ROLE","EDIT_ROLE","group","STORE_ROLE","REMOVE_ROLE","storageTagsDemo","storageTags","initialTagState","tags","initialTopState","navbarOpen","isAuthenticated","uuid","LOAD_TOP","REGISTER","REGISTER_USERNAME_EXISTS","authError","NAVBAR_TOGGLE","UNAUTHENTICATE","rootReducer","combineReducers","tagState","GET_ALL_TAGS","tag","GET_TAG","inputAutosuggest","createRef","QuestionAutosuggestMulti","Autosuggest","AutoSuggest","props","onSuggestionsClearRequested","setState","suggestions","anyWord","valueWordRegex","questionWords","valWordRegex","questionWord","test","getSuggestions","highlighted","window","focus","current","this","multiSection","onSuggestionsFetchRequested","bind","onSuggestionSelected","getSuggestionValue","renderSuggestion","renderSectionTitle","getSectionSuggestions","onSuggestionHighlighted","highlightFirstSuggestion","renderInputComponent","renderSuggestionsContainer","inputProps","placeholder","onChange","e","changeEvent","event","suggestion","onSelectQuestion","params","matches","AutosuggestHighlightMatch","query","parts","AutosuggestHighlightParse","part","index","className","highlight","section","ref","restInputProps","containerProps","children","newValue","method","escapedValue","trim","replace","word","RegExp","React","COLORS","require","palx","connect","store","ownProps","id","option","Form","formik","useFormik","enableReinitialize","initialValues","validationSchema","Yup","required","onSubmit","values","saveForm","isEdit","handleSubmit","htmlFor","handleChange","onBlur","submitForm","style","width","rows","touched","errors","UserName","onClick","cancel","toLocaleDateString","height","background","padding","borderRadius","boxShadow","maxWidth","margin","AutoSuggestAnswer","setAnswerText","answersUnassigned","useHover","useState","isHovered","hoverProps","setValue","divRef","useRef","handleMouseOver","handleMouseOut","useEffect","node","addEventListener","removeEventListener","QuestionAnswerRow","hoverRef","questionAnswer","removeQuestionAnswer","selectQuestionAnswer","copyQuestionAnswer","alert","navigator","clipboard","writeText","stopPropagation","icon","faCopy","preventDefault","faWindowClose","QuestionAnswers","questionAnswers","setTekst","toLocaleTimeString","val","divDetailView","classList","add","zIndex","goDetail","faPlus","Select","disabled","selectedIndex","currentTarget","selectedOption","sourceOptions","statusOptions","moreThan","handleClose","setFieldValue","joinQuestionAnswers","sort","b","QuestionRow","edit","remove","faEdit","CategoryRow","toggleCategory","editCategory","onSelectCategory","marginLeft","faCaretDown","faCaretRight","size","CategoryList","addCategory","inputEl","select","paddingBottom","textAlign","target","defaultValue","tagOptions","f","tagId","editQuestion","getCategory","Page","useParams","open","Container","fluid","Row","border","Col","md","lg","backgroundColor","ContainerCategoryList","marginTop","ContainerCategoryForm","ContainerQuestionForm","SupportPage","show","setShow","display","Modal","onHide","animation","centered","Header","closeButton","Title","Body","mapStateToProps","mapDispatchToProps","CategoriesPage","supporter","div","querySelector","setAttribute","Support","marginBlockStart","marginBlockEnd","fontSize","AnswerForm","ListRow","usedAnswers","List","slug","getUsedAnswers","editAnswer","removeAnswer","onSelectUser","userRoleId","UserRow","RoleRow","toggleRole","editRole","removeRole","UserPage","userRoles","addRole","storeRole","navigate","useNavigate","min","isRegister","handleBlur","maxLength","login","CANCEL","alignItems","justifyContent","Landing","signOut","href","faSurprise","faQuestion","faAnchor","faUserFriends","setOpen","signIn","register","Navbar","as","bg","expand","Button","variant","faAngleDoubleLeft","faAngleDoubleRight","Brand","Toggle","Collapse","FormControl","Nav","maxHeight","navbarScroll","Link","faUser","faCog","NavDropdown","Item","Divider","toggleNavbar","checkAuthentication","mainMd","setMainMd","mainLg","setMainLg","app","in","dimension","onEnter","onEntering","onEntered","onExit","onExiting","onExited","path","element","UsersPage","clear","createStore","applyMiddleware","thunk","loadedFromStorage","sCategories","categoriesJson","parse","forEach","sQuestions","sAnswers","parsed","sUserRoles","s","sTags","floor","random","toString","evt","detail","i","treatFirstUserAsTheOwner","res","ReactDOM","StrictMode"],"mappings":"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","file":"static/js/main.23002521.chunk.js","sourcesContent":["// Import redux types\r\nimport { ActionCreator, Dispatch } from 'redux';\r\nimport { ThunkAction } from 'redux-thunk';\r\n// Import Answer Typing\r\nimport { IAnswer, IAnswerState, IAnswerJson } from './types';\r\n\r\nimport { IAppState } from '../store/Store';\r\n\r\nimport data from \"./data.json\"\r\nconst parseFromJson = (): IAnswer[] => {\r\n\treturn data.map(a => parseDates(a))\r\n}\r\n\r\nconst parseFromLocalStorage = (arr: IAnswerJson[]) : IAnswer[] =>  {\r\n\treturn arr.map(a => parseDates(a));\r\n}\r\n\r\nconst parseDates = (a: IAnswerJson): IAnswer => ({\r\n\t...a, \r\n\tcreated: new Date(a.created)\r\n})\r\n\r\n// localStorage\r\nexport const SUPPORT_ANSWERS = 'SUPPORT_ANSWERS';\r\n \r\n// Create Action Constants\r\nexport enum AnswerActionTypes {\r\n  GET_ALL_ANSWERS = 'GET_ALL_ANSWERS',\r\n  GET_ANSWER = 'GET_ANSWER',\r\n  ADD_ANSWER = 'ADD_ANSWER',\r\n  EDIT_ANSWER = 'EDIT_ANSWER',\r\n  REMOVE_ANSWER = 'REMOVE_ANSWER',\r\n  STORE_ANSWER = 'STORE_ANSWER',\r\n  CANCEL_ANSWER = 'CANCEL_ANSWER'\r\n}\r\n\r\n// Interface for Get All Action Type\r\nexport interface IGetAll {\r\n\ttype: AnswerActionTypes.GET_ALL_ANSWERS;\r\n\tanswers: IAnswer[];\r\n }\r\n \r\nexport interface IGet {\r\n\ttype: AnswerActionTypes.GET_ANSWER;\r\n\tanswerId: number;\r\n}\r\n\r\nexport interface IAdd {\r\n\ttype: AnswerActionTypes.ADD_ANSWER;\r\n\tcreatedBy: number\r\n}\r\n\r\nexport interface IEdit {\r\n\ttype: AnswerActionTypes.EDIT_ANSWER;\r\n\tanswerId: number;\r\n}\r\n\r\nexport interface IRemove {\r\n\ttype: AnswerActionTypes.REMOVE_ANSWER;\r\n\tanswerId: number;\r\n}\r\n\r\nexport interface IStore {\r\n\ttype: AnswerActionTypes.STORE_ANSWER;\r\n\tanswer: IAnswer;\r\n\tassignToQuestion?: boolean\r\n}\r\n\r\nexport interface ICancel {\r\n\ttype: AnswerActionTypes.CANCEL_ANSWER;\r\n}\r\n\r\n\r\n// Combine the action types with a union (we assume there are more)\r\nexport type AnswerActions = IGetAll | IGet | IAdd | IEdit | IRemove | IStore | ICancel;\r\n\r\nconst isWebStorageSupported = () => 'localStorage' in window\r\n\r\n// Get All Action <Promise<Return Type>, State Interface, Type of Param, Type of Action>\r\nexport const getAllAnswers: ActionCreator<\r\n\tThunkAction<Promise<any>, IAnswerState, null, IGetAll>\r\n> = () => {\r\n\treturn async (dispatch: Dispatch) => {\r\n\t\ttry {\r\n\t\t\t// const response = await axios.get('https://swapi.co/api/people/');\r\n\t\t\tlet answers: IAnswer[] = [];\r\n\t\t\tif (isWebStorageSupported()) {\r\n\t\t\t\tconst sAnswers = localStorage.getItem(SUPPORT_ANSWERS);\r\n\t\t\t\tconsole.log('SAnswers',  sAnswers)\r\n\t\t\t\tif (sAnswers !== null) {\r\n\t\t\t\t\tconst parsed = JSON.parse(sAnswers);\r\n\t\t\t\t\tanswers = parseFromLocalStorage(parsed);\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tanswers = parseFromJson();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tanswers = parseFromJson();\r\n\t\t\t}\r\n\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: AnswerActionTypes.GET_ALL_ANSWERS,\r\n\t\t\t\tanswers\r\n\t\t\t});\r\n\t\t} catch (err) {\r\n\t\t\tconsole.error(err);\r\n\t\t}\r\n\t};\r\n};\r\n\r\n\r\nexport const addAnswer: ActionCreator<any> = () => {\r\n  return (dispatch: Dispatch, getState: () => IAppState) => {\r\n    try {\r\n      dispatch({\r\n        type: AnswerActionTypes.ADD_ANSWER,\r\n\t\tcreatedBy: getState().topState.top!.auth!.who!.userId,\t\r\n      });\r\n    } catch (err) {\r\n      console.error(err);\r\n    }\r\n  };\r\n};\r\n\r\nexport const getAnswer: ActionCreator<\r\n\tThunkAction<Promise<any>, IAnswerState, null, IGet>\r\n> = (answerId: number) => {\r\n\treturn async (dispatch: Dispatch) => {\r\n\t\ttry {\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: AnswerActionTypes.GET_ANSWER,\r\n\t\t\t\tanswerId\r\n\t\t\t});\r\n\t\t} catch (err) {\r\n\t\t\tconsole.error(err);\r\n\t\t}\r\n\t};\r\n};\r\n\r\nexport const editAnswer: ActionCreator<\r\n\tThunkAction<Promise<any>, IAnswerState, null, IEdit>\r\n> = (answerId: number) => {\r\n\treturn async (dispatch: Dispatch) => {\r\n\t\ttry {\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: AnswerActionTypes.EDIT_ANSWER,\r\n\t\t\t\tanswerId\r\n\t\t\t});\r\n\t\t} catch (err) {\r\n\t\t\tconsole.error(err);\r\n\t\t}\r\n\t};\r\n};\r\n\r\nexport const removeAnswer: ActionCreator<\r\n\tThunkAction<Promise<any>, IAnswerState, null, IGetAll>\r\n> = (answerId: number) => {\r\n\treturn async (dispatch: Dispatch) => {\r\n\t\ttry {\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: AnswerActionTypes.REMOVE_ANSWER,\r\n\t\t\t\tanswerId\r\n\t\t\t});\r\n\t\t} catch (err) {\r\n\t\t\tconsole.error(err);\r\n\t\t}\r\n\t};\r\n};\r\n\r\n\r\nexport const storeAnswer: ActionCreator<\r\n\tThunkAction<Promise<any>, IAppState, null, IStore>\r\n> = (answer: IAnswer, formMode: string) => {\r\n\treturn async (dispatch: Dispatch, getState: () => IAppState ): Promise<any> => {\r\n\t\ttry {\r\n\t\t\tif (formMode === 'add') {\r\n\t\t\t\tdispatch({\r\n\t\t\t\t\ttype: AnswerActionTypes.STORE_ANSWER,\r\n\t\t\t\t\tanswer\r\n\t\t\t\t});\r\n\t\t\t\treturn Promise.resolve(getState().answerState.answer!.answerId)\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tdispatch({\r\n\t\t\t\t\ttype: AnswerActionTypes.STORE_ANSWER,\r\n\t\t\t\t\tanswer\r\n\t\t\t\t});\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t}\r\n\t\tcatch (err) {\r\n\t\t\tconsole.error(err);\r\n\t\t}\r\n\t};\r\n};\r\n\r\nexport const cancelAnswer: ActionCreator<any> = () => {\r\n\treturn (dispatch: Dispatch) => {\r\n\t  try {\r\n\t\t dispatch({\r\n\t\t\ttype: AnswerActionTypes.CANCEL_ANSWER\r\n\t\t });\r\n\t  } catch (err) {\r\n\t\t console.error(err);\r\n\t  }\r\n\t};\r\n };\r\n \r\n\r\n// const addAnswerToLocalStorage = (answer: IAnswer): Promise<any> => {\r\n// \treturn new Promise((resolve, reject) => {\r\n// \t\tsetTimeout(() => {\r\n// \t\t\tresolve({\r\n// \t\t\t\t'status': 200,\r\n// \t\t\t\t'content-type': 'application/json',\r\n// \t\t\t\t'data' : {\r\n// \t\t\t\t'results': answer\r\n// \t\t\t\t}\r\n// \t\t\t})\r\n// \t\t}, 50)\r\n// \t})\r\n// }\r\n\r\n","// Import redux types\r\nimport { ActionCreator, Dispatch } from 'redux';\r\nimport { ThunkAction } from 'redux-thunk';\r\n// import axios from 'axios';\r\n\r\n// Import Question Typing\r\nimport { IQuestion, ICategory, ICategoryJson, ICategoriesState, IQuestionJson, ICategoryState } from './types';\r\n\r\nimport { addAnswer, AnswerActionTypes, storeAnswer } from '../Answers/actions'\r\nimport { IAnswer, IAnswerState } from '../Answers/types';\r\n\r\n///////////////////////////////////////////////////\r\n// localStorage\r\nimport { initialCategory, SUPPORT_CATEGORIES } from './categoriesReducer';\r\n\r\nimport data from \"./data.json\"\r\nimport { IAppState } from '../store/Store';\r\nimport { reduceQuestions } from './categoryReducer';\r\n\r\nconst parseFromJson = (): ICategory[] => {\r\n\treturn data.map(g => parseDates(g));\r\n}\r\n\r\nconst parseQuestionsFromLocalStorage = (questions: IQuestionJson[]): IQuestion[] => {\r\n\treturn questions.map(q => ({\r\n\t\t...q,\r\n\t\tcategoryId: q.categoryId!,\r\n\t\tanswers: q.answers.map(a => ({ ...a, assigned: new Date(a.assigned) })),\r\n\t\tcreated: new Date(q.created)\r\n\t})\r\n\t)\r\n}\r\n\r\nconst parseFromLocalStorage = (arr: ICategoryJson[]): ICategory[] => {\r\n\treturn arr.map(g => parseDates(g));\r\n}\r\n\r\nconst parseDates = (g: ICategoryJson): ICategory => {\r\n\treturn {\r\n\t\t...g,\r\n\t\tquestions: g.questions.map(q => ({\r\n\t\t\t...q,\r\n\t\t\tcategoryId: g.categoryId,\r\n\t\t\tanswers: q.answers.map(a => ({ ...a, assigned: new Date(a.assigned) })),\r\n\t\t\tcreated: new Date(q.created)\r\n\t\t})),\r\n\t\tcreated: new Date(g.created)\r\n\t}\r\n}\r\n\r\n// Create Action Constants\r\nexport enum QuestionActionTypes {\r\n\tLOAD_CATEGORIES = 'LOAD_CATEGORIES',\r\n\tGET_QUESTION = 'GET_QUESTION',\r\n\tADD_QUESTION = 'ADD_QUESTION',\r\n\tEDIT_QUESTION = 'EDIT_QUESTION',\r\n\tREMOVE_QUESTION = 'REMOVE_QUESTION',\r\n\tSTORE_QUESTION = 'STORE_QUESTION',\r\n\tUPDATE_QUESTION = 'UPDATE_QUESTION',\r\n\tCANCEL_QUESTION = 'CANCEL_QUESTION',\r\n\tCLOSE_QUESTION_FORM = 'CLOSE_QUESTION_FORM',\r\n\tOPEN_QUESTION_FORM = 'OPEN_QUESTION_FORM',\r\n\r\n\t// groups\r\n\tGET_CATEGORY = 'GET_CATEGORY',\r\n\tADD_CATEGORY = 'ADD_CATEGORY',\r\n\tTOGGLE_CATEGORY = 'EXPAND_CATEGORY',\r\n\tEDIT_CATEGORY = 'EDIT_CATEGORY',\r\n\tREMOVE_CATEGORY = 'REMOVE_CATEGORY',\r\n\tSTORE_CATEGORY = 'STORE_CATEGORY',\r\n\tUPDATE_CATEGORY = 'UPDATE_CATEGORY',\r\n\tCANCEL_CATEGORY = 'CANCEL_CATEGORY',\r\n\t// question answers\r\n\tREMOVE_QUESTION_ANSWER = 'REMOVE_QUESTION_ANSWER',\r\n\tASSIGN_QUESTION_ANSWER = 'ASSIGN_QUESTION_ANSWER',\r\n\t// localSTorage\r\n\tSET_IS_DETAIL = 'SET_IS_DETAIL',\r\n\tSET_LAST_ANSWER_ID = 'SET_LAST_ANSWER_ID'\r\n}\r\n\r\n\r\n// Interface for Get All Action Type\r\nexport interface ILoad {\r\n\ttype: QuestionActionTypes.LOAD_CATEGORIES;\r\n\tcategories: ICategory[];\r\n\tcategoryQuestions: Map<number, ICategoryState>\r\n}\r\n\r\n\r\nexport interface IGet {\r\n\ttype: QuestionActionTypes.GET_QUESTION;\r\n\tcategoryId: number;\r\n\tquestionId: number;\r\n}\r\n\r\nexport interface IAdd {\r\n\ttype: QuestionActionTypes.ADD_QUESTION;\r\n\tcreatedBy: number;\r\n\tcategoryId: number;\r\n\ttext: string;\r\n}\r\n\r\nexport interface IEdit {\r\n\ttype: QuestionActionTypes.EDIT_QUESTION;\r\n\tcategoryId: number;\r\n\tquestionId: number;\r\n\tshowQuestionForm: boolean;\r\n}\r\n\r\nexport interface IRemove {\r\n\ttype: QuestionActionTypes.REMOVE_QUESTION;\r\n\tcategoryId: number;\r\n\tquestionId: number;\r\n}\r\n\r\n\r\n\r\nexport interface IStore {\r\n\ttype: QuestionActionTypes.STORE_QUESTION;\r\n\tquestion: IQuestion;\r\n}\r\n\r\nexport interface IUpdate {\r\n\ttype: QuestionActionTypes.UPDATE_QUESTION;\r\n\tquestion: IQuestion;\r\n}\r\n\r\nexport interface ICancel {\r\n\ttype: QuestionActionTypes.CANCEL_QUESTION;\r\n}\r\n\r\nexport interface ICloseQuestionForm {\r\n\ttype: QuestionActionTypes.CLOSE_QUESTION_FORM;\r\n}\r\n\r\nexport interface IOpenQuestionForm {\r\n\ttype: QuestionActionTypes.OPEN_QUESTION_FORM;\r\n}\r\n\r\n\r\n// group\r\n\r\nexport interface IGetCategory {\r\n\ttype: QuestionActionTypes.GET_CATEGORY;\r\n\tcategoryId: number\r\n}\r\n\r\nexport interface IAddCategory {\r\n\ttype: QuestionActionTypes.ADD_CATEGORY;\r\n\t//categoryId: number\r\n\tshowCategoryForm: boolean\r\n}\r\n\r\nexport interface ICancelCategory {\r\n\ttype: QuestionActionTypes.CANCEL_CATEGORY;\r\n}\r\n\r\n\r\nexport interface IToggleCategory {\r\n\ttype: QuestionActionTypes.TOGGLE_CATEGORY;\r\n\tcategoryId: number\r\n}\r\n\r\nexport interface IEditCategory {\r\n\ttype: QuestionActionTypes.EDIT_CATEGORY;\r\n\tcategoryId: number,\r\n\tshowCategoryForm: boolean\r\n}\r\n\r\nexport interface IRemoveCategory {\r\n\ttype: QuestionActionTypes.REMOVE_CATEGORY;\r\n\tcategoryId: number\r\n}\r\n\r\nexport interface IStoreCategory {\r\n\ttype: QuestionActionTypes.STORE_CATEGORY;\r\n\tcategory: ICategory;\r\n}\r\n\r\nexport interface IUpdateCategory {\r\n\ttype: QuestionActionTypes.UPDATE_CATEGORY;\r\n\tcategory: ICategory;\r\n}\r\n\r\nexport interface ICancelCategory {\r\n\ttype: QuestionActionTypes.CANCEL_CATEGORY;\r\n}\r\n\r\n\r\n// question answers\r\nexport interface IRemoveQuestionAnswer {\r\n\ttype: QuestionActionTypes.REMOVE_QUESTION_ANSWER;\r\n\tcategoryId: number,\r\n\tquestionId: number,\r\n\tanswerId: number\r\n}\r\n\r\nexport interface IAssignQuestionAnswer {\r\n\ttype: QuestionActionTypes.ASSIGN_QUESTION_ANSWER;\r\n\tcategoryId: number,\r\n\tquestionId: number,\r\n\tanswerId: number,\r\n\tassignedBy: number,\r\n\ttekst?: string\r\n}\r\n\r\nexport interface ISetIsDetail {\r\n\ttype: QuestionActionTypes.SET_IS_DETAIL;\r\n\tisDetail: boolean\r\n}\r\n\r\nexport interface IAddAndAssignNewAnswer {\r\n\ttype: AnswerActionTypes.STORE_ANSWER;\r\n\tcategoryId: number,\r\n\tquestionId: number,\r\n\tanswer: IAnswer;\r\n}\r\n\r\n\r\n// Combine the action types with a union (we assume there are more)\r\nexport type QuestionActions = ILoad | IGet | IAdd | IEdit | IRemove | IStore | IUpdate | ICancel | \r\n\tIGetCategory | IAddCategory | IToggleCategory | IEditCategory | IRemoveCategory | \r\n\tIStoreCategory | IUpdateCategory | ICancelCategory |\r\n\tIRemoveQuestionAnswer | IAssignQuestionAnswer |\r\n\tISetIsDetail |\r\n\tIAddAndAssignNewAnswer |\r\n\tICloseQuestionForm | IOpenQuestionForm;\r\n\r\nconst isWebStorageSupported = () => 'localStorage' in window\r\n\r\n\r\n// Get All Action <Promise<Return Type>, State Interface, Type of Param, Type of Action>\r\nexport const loadCategories: ActionCreator<\r\n\tThunkAction<Promise<any>, ICategoriesState, null, ILoad>\r\n> = () => {\r\n\treturn async (dispatch: Dispatch) => {\r\n\t\ttry {\r\n\t\t\tlet categories: ICategory[] = [];\r\n\t\t\tlet loadedFromStorage = false;\r\n\t\t\tif (isWebStorageSupported()) {\r\n\t\t\t\tconst sCategories = localStorage.getItem(SUPPORT_CATEGORIES);\r\n\t\t\t\tif (sCategories !== null) {\r\n\t\t\t\t\t// load from storage\r\n\t\t\t\t\tconst categoriesJson = JSON.parse(sCategories);\r\n\t\t\t\t\tcategories = parseFromLocalStorage(categoriesJson);\r\n\t\t\t\t\tcategories.forEach(category => {\r\n\t\t\t\t\t\tconst sQuestions = localStorage.getItem(`CATEGORY_${category.categoryId}`);\r\n\t\t\t\t\t\tif (sQuestions) {\r\n\t\t\t\t\t\t\tconst json = JSON.parse(sQuestions);\r\n\t\t\t\t\t\t\tcategory.questions = parseQuestionsFromLocalStorage(json);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t})\r\n\t\t\t\t\tloadedFromStorage = true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (!loadedFromStorage) {\r\n\t\t\t\t// load from data\r\n\t\t\t\tcategories = parseFromJson();\r\n\t\t\t\tfor (let category of categories) {\r\n\t\t\t\t\tcategory.questions.forEach(q => {\r\n\t\t\t\t\t\tq.categoryId = category.categoryId;\r\n\t\t\t\t\t\tq.words = q.text.split(' ');\r\n\t\t\t\t\t})\r\n\t\t\t\t\tlocalStorage.setItem(`CATEGORY_${category.categoryId}`, JSON.stringify(category.questions));\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tconst categoryQuestions = new Map<number, ICategoryState>();\r\n\t\t\tfor (let category of categories) {\r\n\t\t\t\tconst categoryState: ICategoryState = {\r\n\t\t\t\t\tquestions: [...category.questions]\r\n\t\t\t\t}\r\n\t\t\t\tcategoryQuestions.set(category.categoryId, categoryState);\r\n\t\t\t\tcategory.questions = [];\r\n\t\t\t}\r\n\r\n\t\t\tif (!loadedFromStorage) {\r\n\t\t\t\tlocalStorage.setItem(SUPPORT_CATEGORIES, JSON.stringify(categories));\r\n\t\t\t}\r\n\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: QuestionActionTypes.LOAD_CATEGORIES,\r\n\t\t\t\tcategories,\r\n\t\t\t\tcategoryQuestions\r\n\t\t\t});\r\n\t\t}\r\n\t\tcatch (err) {\r\n\t\t\tconsole.error(err);\r\n\t\t}\r\n\t};\r\n};\r\n\r\n\r\n// Get Question <Promise<Return Type>, State Interface, Type of Param, Type of Action> \r\nexport const getQuestion: ActionCreator<\r\n\tThunkAction<Promise<any>, ICategoriesState, string, IGet>\r\n> = (categoryId: number, questionId: number) => {\r\n\treturn async (dispatch: Dispatch) => {\r\n\t\ttry {\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: QuestionActionTypes.GET_QUESTION,\r\n\t\t\t\tcategoryId,\r\n\t\t\t\tquestionId\r\n\t\t\t});\r\n\t\t} catch (err) {\r\n\t\t\tconsole.error(err);\r\n\t\t}\r\n\t};\r\n};\r\n\r\ninterface IMsg {\r\n\tttype: string,\r\n\tdata: object\r\n}\r\n\r\n\r\n\r\nexport const addQuestion: ActionCreator<\r\n\tThunkAction<Promise<any>, IAppState, null, IAdd>\r\n> = (categoryId: number, text: string, canEdit?: boolean) => {\r\n\treturn async (dispatch: Dispatch, getState: () => IAppState) => {\r\n\t\ttry {\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: QuestionActionTypes.ADD_QUESTION,\r\n\t\t\t\tcreatedBy: getState().topState.top!.auth!.who!.userId,\r\n\t\t\t\tcategoryId,\r\n\t\t\t\ttext,\r\n\t\t\t\tshowCategoryForm: false\r\n\t\t\t});\r\n\t\t}\r\n\t\tcatch (err) {\r\n\t\t\tconsole.error(err);\r\n\t\t}\r\n\t};\r\n};\r\n\r\nexport const editQuestion: ActionCreator<\r\n\tThunkAction<Promise<any>, ICategoriesState, null, IEdit>\r\n> = (categoryId: number, questionId: number, showQuestionForm: boolean) => {\r\n\treturn async (dispatch: Dispatch) => {\r\n\t\ttry {\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: QuestionActionTypes.EDIT_QUESTION,\r\n\t\t\t\tcategoryId,\r\n\t\t\t\tquestionId,\r\n\t\t\t\tshowCategoryForm: false,\r\n\t\t\t\tshowQuestionForm\r\n\t\t\t});\r\n\t\t} catch (err) {\r\n\t\t\tconsole.error(err);\r\n\t\t}\r\n\t};\r\n};\r\n\r\nexport const removeQuestion: ActionCreator<\r\n\tThunkAction<Promise<any>, ICategoriesState, null, IRemove>\r\n> = (doSync: boolean, categoryId: number, questionId: number) => {\r\n\treturn async (dispatch: Dispatch) => {\r\n\t\ttry {\r\n\t\t\tawait delay()\r\n\t\t\t// warning: store answer, after upodate, to local storage\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: QuestionActionTypes.REMOVE_QUESTION,\r\n\t\t\t\tcategoryId,\r\n\t\t\t\tquestionId\r\n\t\t\t});\r\n\t\t\tif (doSync)\r\n\t\t\t\tsyncWithOthers(QuestionActionTypes.REMOVE_QUESTION, {categoryId, questionId});\r\n\t\t} catch (err) {\r\n\t\t\tconsole.error(err);\r\n\t\t}\r\n\t};\r\n};\r\n\r\nexport const selectQuestionAnswer: ActionCreator<\r\n\tThunkAction<Promise<any>, ICategoriesState, null, IRemoveQuestionAnswer>\r\n> = (categoryId: number, questionId: number, answerId: number) => {\r\n\treturn async (dispatch: Dispatch) => {\r\n\t\ttry {\r\n\t\t\tawait delay()\r\n\t\t\t// warning: store answer, after upodate, to local storage\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: QuestionActionTypes.REMOVE_QUESTION_ANSWER,\r\n\t\t\t\tcategoryId: categoryId,\r\n\t\t\t\tquestionId: questionId,\r\n\t\t\t\tanswerId: answerId,\r\n\t\t\t});\r\n\t\t\t//dispatch<any>(getQuestion(questionId))\t// refresh state of question\r\n\t\t}\r\n\t\tcatch (err) {\r\n\t\t\tconsole.error(err);\r\n\t\t}\r\n\t};\r\n};\r\n\r\nexport const copyQuestionAnswer: ActionCreator<\r\n\tThunkAction<Promise<any>, ICategoriesState, null, IRemoveQuestionAnswer>\r\n> = (categoryId: number, questionId: number, answerId: number) => {\r\n\treturn async (dispatch: Dispatch) => {\r\n\t\ttry {\r\n\t\t\tawait delay()\r\n\t\t\t// warning: store answer, after upodate, to local storage\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: QuestionActionTypes.REMOVE_QUESTION_ANSWER,\r\n\t\t\t\tcategoryId: categoryId,\r\n\t\t\t\tquestionId: questionId,\r\n\t\t\t\tanswerId: answerId,\r\n\t\t\t});\r\n\t\t\t//dispatch<any>(getQuestion(questionId))\t// refresh state of question\r\n\t\t}\r\n\t\tcatch (err) {\r\n\t\t\tconsole.error(err);\r\n\t\t}\r\n\t};\r\n};\r\n\r\nexport const removeQuestionAnswer: ActionCreator<\r\n\tThunkAction<Promise<any>, ICategoriesState, null, IRemoveQuestionAnswer>\r\n> = (categoryId: number, questionId: number, answerId: number) => {\r\n\treturn async (dispatch: Dispatch) => {\r\n\t\ttry {\r\n\t\t\tawait delay()\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: QuestionActionTypes.REMOVE_QUESTION_ANSWER,\r\n\t\t\t\tcategoryId: categoryId,\r\n\t\t\t\tquestionId: questionId,\r\n\t\t\t\tanswerId: answerId,\r\n\t\t\t});\r\n\t\t\t// dispatch<any>(getQuestion(questionId))\t// refresh state of question\r\n\t\t}\r\n\t\tcatch (err) {\r\n\t\t\tconsole.error(err);\r\n\t\t}\r\n\t};\r\n};\r\n\r\n\r\nexport const assignQuestionAnswer: ActionCreator<\r\n\tThunkAction<Promise<any>, IAppState, null, IRemoveQuestionAnswer>\r\n> = (categoryId: number, questionId: number, answerId: number, tekst?: string) => {\r\n\r\n\treturn async (dispatch: Dispatch, getState: () => IAppState) => {\r\n\t\ttry {\r\n\t\t\tawait delay();\r\n\t\t\t// warning: store answer, after upodate, to local storage\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: QuestionActionTypes.ASSIGN_QUESTION_ANSWER,\r\n\t\t\t\tcategoryId,\r\n\t\t\t\tquestionId,\r\n\t\t\t\tanswerId,\r\n\t\t\t\tassignedBy: getState().topState.top!.auth!.who!.userId,\r\n\t\t\t});\r\n\t\t\t//dispatch<any>(getQuestion(questionId))\t// refresh state of question\r\n\t\t}\r\n\t\tcatch (err) {\r\n\t\t\tconsole.error(err);\r\n\t\t}\r\n\t};\r\n};\r\n\r\nexport const setIsDetail: ActionCreator<\r\n\tThunkAction<Promise<any>, ICategoriesState, null, ISetIsDetail>\r\n> = (isDetail: boolean) => {\r\n\treturn async (dispatch: Dispatch) => {\r\n\t\ttry {\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: QuestionActionTypes.SET_IS_DETAIL,\r\n\t\t\t\tisDetail\r\n\t\t\t});\r\n\t\t}\r\n\t\tcatch (err) {\r\n\t\t\tconsole.error(err);\r\n\t\t}\r\n\t};\r\n};\r\n\r\nconst syncWithOthers = (type: string, entity: any) => {\r\n\tconst btnSync = document.getElementById('btnSync');\r\n\tlocalStorage.setItem('syncAction', JSON.stringify({\r\n\t\t\ttype,\r\n\t\t\tentity,\r\n\t\t\tsessionId: sessionStorage.getItem('sessionId')\r\n\t\t})\r\n\t);\r\n\tbtnSync!.click();\r\n};\r\n\r\nexport const storeQuestion: ActionCreator<\r\n\tThunkAction<Promise<any>, IAppState, null, IStore>\r\n> = (doSync: boolean, question: IQuestion) => {\r\n\treturn async (dispatch: Dispatch, getState: () => IAppState) => {\r\n\t\tconst { categoryId } = question;\r\n\t\ttry {\r\n\t\t\t//await delay();\r\n\t\t\tif (categoryId === 0) {\r\n\t\t\t\tconst res = await addCategoryUnknown(getState(), dispatch);\r\n\t\t\t\tdispatch({\r\n\t\t\t\t\ttype: QuestionActionTypes.STORE_QUESTION,\r\n\t\t\t\t\tquestion\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tdispatch({\r\n\t\t\t\t\ttype: QuestionActionTypes.STORE_QUESTION,\r\n\t\t\t\t\tquestion\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\tif (doSync)\r\n\t\t\t\tsyncWithOthers(QuestionActionTypes.STORE_QUESTION, question);\r\n\t\t}\r\n\t\tcatch (err) {\r\n\t\t\tconsole.error(err);\r\n\t\t}\r\n\t};\r\n};\r\n\r\nconst addCategoryUnknown = async (state: IAppState, dispatch: Dispatch) => {\r\n\tif (state.categoriesState.categories.find(c => c.categoryId === 0))\r\n\t\treturn Promise.resolve(-1);\r\n\tconst newCategory = {\r\n\t\t...initialCategory,\r\n\t\tcategoryId: 0,\r\n\t\ttitle: 'Unknown',\r\n\t\tquestions: []\r\n\t}\r\n\treturn dispatch<any>(storeCategory(newCategory))\r\n\t\t.then((categoryId: number) => {\r\n\t\t\treturn categoryId;\r\n\t\t});\r\n}\r\n\r\nexport const updateQuestion: ActionCreator<\r\n\tThunkAction<Promise<any>, IAppState, null, IUpdate>\r\n> = (doSync: boolean, question: IQuestion) => {\r\n\treturn async (dispatch: Dispatch, getState: () => IAppState) => {\r\n\t\ttry {\r\n\t\t\tconst { categoryId } = question;\r\n\t\t\tawait delay();\r\n\t\t\tif (categoryId === 0) {\r\n\t\t\t\tconst res = await addCategoryUnknown(getState(), dispatch);\r\n\t\t\t\tdispatch({\r\n\t\t\t\t\ttype: QuestionActionTypes.UPDATE_QUESTION,\r\n\t\t\t\t\tquestion\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tdispatch({\r\n\t\t\t\t\ttype: QuestionActionTypes.UPDATE_QUESTION,\r\n\t\t\t\t\tquestion\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\tif (doSync) {\r\n\t\t\t\tquestion.categoryIdWas = getState().categoriesState.questionCopy!.categoryId;\r\n\t\t\t\tsyncWithOthers(QuestionActionTypes.UPDATE_QUESTION, question);\r\n\t\t\t}\r\n\t\t}\r\n\t\tcatch (err) {\r\n\t\t\tconsole.error(err);\r\n\t\t}\r\n\t};\r\n};\r\n\r\n\r\nconst delay = (): Promise<any> => {\r\n\treturn new Promise((resolve, reject) => {\r\n\t\tsetTimeout(() => {\r\n\t\t\tresolve({\r\n\t\t\t\t'status': 200,\r\n\t\t\t\t'content-type': 'application/json',\r\n\t\t\t\t'data': {\r\n\t\t\t\t\t'results': 1\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t}, 50)\r\n\t})\r\n}\r\n\r\nexport const cancelQuestion: ActionCreator<any> = () => {\r\n\treturn (dispatch: Dispatch) => {\r\n\t\ttry {\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: QuestionActionTypes.CANCEL_QUESTION\r\n\t\t\t});\r\n\t\t} catch (err) {\r\n\t\t\tconsole.error(err);\r\n\t\t}\r\n\t};\r\n};\r\n\r\nexport const closeQuestionForm: ActionCreator<any> = () => {\r\n\treturn (dispatch: Dispatch) => {\r\n\t\ttry {\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: QuestionActionTypes.CLOSE_QUESTION_FORM\r\n\t\t\t});\r\n\t\t} catch (err) {\r\n\t\t\tconsole.error(err);\r\n\t\t}\r\n\t};\r\n};\r\n\r\nexport const openQuestionForm: ActionCreator<any> = () => {\r\n\treturn (dispatch: Dispatch) => {\r\n\t\ttry {\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: QuestionActionTypes.OPEN_QUESTION_FORM\r\n\t\t\t});\r\n\t\t} catch (err) {\r\n\t\t\tconsole.error(err);\r\n\t\t}\r\n\t};\r\n};\r\n\r\n\r\nexport const getCategory: ActionCreator<\r\n\tThunkAction<Promise<any>, ICategoriesState, string, IGet>\r\n> = (categoryId: number) => {\r\n\treturn async (dispatch: Dispatch) => {\r\n\t\ttry {\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: QuestionActionTypes.GET_CATEGORY,\r\n\t\t\t\tcategoryId\r\n\t\t\t});\r\n\t\t} catch (err) {\r\n\t\t\tconsole.error(err);\r\n\t\t}\r\n\t};\r\n};\r\n\r\n\r\nexport const addCategory: ActionCreator<\r\n\tThunkAction<Promise<any>, ICategoriesState, null, IAddCategory>\r\n> = () => {\r\n\treturn async (dispatch: Dispatch) => {\r\n\t\ttry {\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: QuestionActionTypes.ADD_CATEGORY,\r\n\t\t\t\tshowCategoryForm: true\r\n\t\t\t});\r\n\t\t} catch (err) {\r\n\t\t\tconsole.error(err);\r\n\t\t}\r\n\t};\r\n};\r\n\r\nexport const toggleCategory: ActionCreator<\r\n\tThunkAction<Promise<any>, ICategoriesState, null, IEditCategory>\r\n> = (categoryId: number) => {\r\n\treturn async (dispatch: Dispatch) => {\r\n\t\ttry {\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: QuestionActionTypes.TOGGLE_CATEGORY,\r\n\t\t\t\tcategoryId\r\n\t\t\t});\r\n\t\t} catch (err) {\r\n\t\t\tconsole.error(err);\r\n\t\t}\r\n\t};\r\n};\r\n\r\n\r\nexport const editCategory: ActionCreator<\r\n\tThunkAction<Promise<any>, ICategoriesState, null, IEditCategory>\r\n> = (categoryId: number) => {\r\n\treturn async (dispatch: Dispatch) => {\r\n\t\ttry {\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: QuestionActionTypes.EDIT_CATEGORY,\r\n\t\t\t\tcategoryId,\r\n\t\t\t\tshowCategoryForm: true\r\n\t\t\t});\r\n\t\t} catch (err) {\r\n\t\t\tconsole.error(err);\r\n\t\t}\r\n\t};\r\n}\r\n\r\nexport const removeCategory: ActionCreator<\r\n\tThunkAction<Promise<any>, ICategoriesState, null, IRemoveCategory>\r\n> = (doSync: boolean, categoryId: number) => {\r\n\treturn async (dispatch: Dispatch) => {\r\n\t\ttry {\r\n\t\t\tawait delay()\r\n\t\t\t// warning: store answer, after update, to local storage\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: QuestionActionTypes.REMOVE_CATEGORY,\r\n\t\t\t\tcategoryId\r\n\t\t\t});\r\n\t\t\tif (doSync)\r\n\t\t\t\tsyncWithOthers(QuestionActionTypes.REMOVE_CATEGORY, categoryId);\r\n\t\t} catch (err) {\r\n\t\t\tconsole.error(err);\r\n\t\t}\r\n\t};\r\n};\r\n\r\nexport const storeCategory: ActionCreator<\r\n\tThunkAction<Promise<any>, IAppState, null, IStoreCategory>\r\n> = (doSync: boolean, category: ICategory) => {\r\n\treturn async (dispatch: Dispatch, getState: () => IAppState) => {\r\n\t\ttry {\r\n\t\t\t// await updateCategoryFromLocalStorage(group);\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: QuestionActionTypes.STORE_CATEGORY,\r\n\t\t\t\tcategory\r\n\t\t\t});\r\n\t\t\tif (doSync)\r\n\t\t\t\tsyncWithOthers(QuestionActionTypes.STORE_CATEGORY, category);\r\n\t\t\treturn Promise.resolve(category.categoryId) //getState().categoriesState.categories.length)\r\n\t\t}\r\n\t\tcatch (err) {\r\n\t\t\tconsole.error(err);\r\n\t\t}\r\n\t};\r\n};\r\n\r\n\r\nexport const updateCategory: ActionCreator<\r\n\tThunkAction<Promise<any>, ICategoriesState, null, IStoreCategory>\r\n> = (doSync: boolean, category: ICategory) => {\r\n\treturn async (dispatch: Dispatch) => {\r\n\t\ttry {\r\n\t\t\t// await updateCategoryFromLocalStorage(group);\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: QuestionActionTypes.UPDATE_CATEGORY,\r\n\t\t\t\tcategory\r\n\t\t\t});\r\n\t\t\tif (doSync)\r\n\t\t\t\tsyncWithOthers(QuestionActionTypes.UPDATE_CATEGORY, category);\r\n\t\t} \r\n\t\tcatch (err) {\r\n\t\t\tconsole.error(err);\r\n\t\t}\r\n\t};\r\n};\r\n\r\nexport const cancelCategory: ActionCreator<any> = () => {\r\n\treturn (dispatch: Dispatch) => {\r\n\t\ttry {\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: QuestionActionTypes.CANCEL_CATEGORY\r\n\t\t\t});\r\n\t\t}\r\n\t\tcatch (err) {\r\n\t\t\tconsole.error(err);\r\n\t\t}\r\n\t};\r\n};\r\n\r\n\r\nexport const addAndAssignNewAnswer: ActionCreator<\r\n\tThunkAction<Promise<any>, IAppState, null, IStore>\r\n> = (categoryId: number, questionId: number, answer: IAnswer, formMode: string) => {\r\n\treturn async (dispatch: Dispatch, getState: () => IAppState) => {\r\n\t\ttry {\r\n\t\t\tanswer.createdBy = getState().topState.top!.auth!.who!.userId;\r\n\t\t\tdispatch<any>(addAnswer());\r\n\t\t\tdispatch<any>(storeAnswer(answer, formMode))\r\n\t\t\t\t.then((answerId: number) => {\r\n\t\t\t\t\tdispatch<any>(assignQuestionAnswer(categoryId, questionId, answerId))\r\n\t\t\t\t});\r\n\t\t}\r\n\t\tcatch (err) {\r\n\t\t\tconsole.error(err);\r\n\t\t}\r\n\t};\r\n};","// Import redux types\r\nimport { ActionCreator, Dispatch } from 'redux';\r\nimport { ThunkAction } from 'redux-thunk';\r\n// Import Top Typing\r\nimport { ILogin, ITop, ITopJson, ITopState } from './types';\r\n\r\nimport { IAppState } from '../store/Store';\r\nimport { IUser } from '../user/types';\r\nimport { findUser, getUser, storeUser } from '../user/actions';\r\n\r\n// localStorage\r\nexport const SUPPORT_TOP = 'SUPPORT_TOP';\r\n\r\n// Create Action Constants\r\nexport enum TopActionTypes {\r\n\tLOAD_TOP = \"LOAD_TOP\",\r\n\tNAVBAR_TOGGLE = 'NAVBAR_TOGGLE',\r\n\tREGISTER = 'REGISTER',\r\n\tREGISTER_USERNAME_EXISTS = 'REGISTER_USERNAME_EXISTS',\r\n\tAUTHENTICATE = 'AUTHENTICATE',\r\n\tUNAUTHENTICATE = 'UNAUTHENTICATE',\r\n\tAUTHENTICATE_WRONG_USERNAME = 'AUTHENTICATE_WRONG_USERNAME',\r\n\tAUTHENTICATE_WRONG_PWD = 'AUTHENTICATE_WRONG_PWD',\r\n\tCANCEL = 'CANCEL'\r\n}\r\n\r\n\r\nexport interface INavbarToggle {\r\n\ttype: TopActionTypes.NAVBAR_TOGGLE;\r\n}\r\n\r\nexport interface ILoadTop {\r\n\ttype: TopActionTypes.LOAD_TOP;\r\n\ttop: ITop\r\n}\r\n\r\nexport interface IRegister {\r\n\ttype: TopActionTypes.REGISTER;\r\n\tuser: IUser;\r\n}\r\n\r\nexport interface IRegisterUsernameExists {\r\n\ttype: TopActionTypes.REGISTER_USERNAME_EXISTS;\r\n}\r\n\r\nexport interface IAuthenticate {\r\n\ttype: TopActionTypes.AUTHENTICATE;\r\n\tuser: IUser;\r\n}\r\n\r\nexport interface IAuthenticateWrongUsername {\r\n\ttype: TopActionTypes.AUTHENTICATE_WRONG_USERNAME;\r\n}\r\n\r\nexport interface IAuthenticateWrongPwd {\r\n\ttype: TopActionTypes.AUTHENTICATE_WRONG_PWD;\r\n}\r\n\r\nexport interface IUnAuthenticate {\r\n\ttype: TopActionTypes.UNAUTHENTICATE;\r\n}\r\n\r\nexport interface ICancel {\r\n\ttype: TopActionTypes.CANCEL;\r\n}\r\n\r\n\r\n// Combine the action types with a union (we assume there are more)\r\nexport type TopActions = ILoadTop |\r\n\tINavbarToggle |\r\n\tIRegister |\r\n\tIRegisterUsernameExists |\r\n\tIAuthenticate |\r\n\tIAuthenticateWrongUsername |\r\n\tIAuthenticateWrongPwd |\r\n\tIUnAuthenticate |\r\n\tICancel;\r\n\r\nconst isWebStorageSupported = () => 'localStorage' in window\r\n\r\nconst parseFromLocalStorage = (json: ITopJson): ITop => {\r\n\treturn parseObj(json);\r\n}\r\n\r\nconst parseObj = (json: ITopJson): ITop => {\r\n\tconst { auth } = json;\r\n\tconst { who, visited, authenticated } = auth;\r\n\treturn {\r\n\t\t...json,\r\n\t\tauth: {\r\n\t\t\t...auth,\r\n\t\t\twho: {\r\n\t\t\t\t...who,\r\n\t\t\t\tcreated: new Date(who.created!)\r\n\t\t\t},\r\n\t\t\tvisited: new Date(visited),\r\n\t\t\tauthenticated: new Date(authenticated)\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport const loadTop: ActionCreator<\r\n\tThunkAction<Promise<any>, IAppState, null, IAuthenticate>\r\n> = () => {\r\n\treturn async (dispatch: Dispatch) => {\r\n\t\ttry {\r\n\t\t\tlet top = undefined;\r\n\r\n\t\t\tif (isWebStorageSupported()) {\r\n\t\t\t\tconst s = localStorage.getItem(SUPPORT_TOP);\r\n\t\t\t\tif (s !== null) {\r\n\t\t\t\t\t//const Users: IUserRole[] = JSON.parse(sUsers);\r\n\t\t\t\t\t//Users.map(g => storageUsers.push(g))\r\n\t\t\t\t\tconst parsed = JSON.parse(s);\r\n\t\t\t\t\tconsole.log('parsed', parsed)\r\n\t\t\t\t\ttop = parseFromLocalStorage(parsed);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (top) {\r\n\t\t\t\tdispatch({\r\n\t\t\t\t\ttype: TopActionTypes.LOAD_TOP,\r\n\t\t\t\t\ttop\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\t\tcatch (err) {\r\n\t\t\tconsole.error(err);\r\n\t\t}\r\n\t};\r\n}\r\n\r\n\r\nexport const register: ActionCreator<\r\n\tThunkAction<Promise<any>, IAppState, null, IAuthenticate>\r\n> = (loginUser: ILogin) => {\r\n\treturn async (dispatch: Dispatch, getState: () => IAppState) => {\r\n\t\ttry {\r\n\t\t\tdispatch<any>(findUser(loginUser.userName))\r\n\t\t\t\t.then((user: IUser) => {\r\n\t\t\t\t\tif (user) {\r\n\t\t\t\t\t\tdispatch({\r\n\t\t\t\t\t\t\ttype: TopActionTypes.REGISTER_USERNAME_EXISTS\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tconst user: IUser = {\r\n\t\t\t\t\t\t\troleId: 44, // Viewers\r\n\t\t\t\t\t\t\tuserId: 357, //-1,\r\n\t\t\t\t\t\t\tuserName: loginUser.userName,\r\n\t\t\t\t\t\t\tpwd: loginUser.pwd,\r\n\t\t\t\t\t\t\tdepartment: \"dept1\",\r\n\t\t\t\t\t\t\tcreatedBy: 0,\r\n\t\t\t\t\t\t\tcreated: new Date()\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tdispatch<any>(storeUser(user, 'add'))\r\n\t\t\t\t\t\t\t.then((user: IUser) => {\r\n\t\t\t\t\t\t\t\tdispatch({\r\n\t\t\t\t\t\t\t\t\ttype: TopActionTypes.REGISTER,\r\n\t\t\t\t\t\t\t\t\tuser\r\n\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t}\r\n\t\tcatch (err) {\r\n\t\t\tconsole.error(err);\r\n\t\t}\r\n\t};\r\n}\r\n\r\nexport const authenticate: ActionCreator<\r\n\tThunkAction<Promise<any>, IAppState, null, IAuthenticate>\r\n> = (loginUser: ILogin) => {\r\n\treturn async (dispatch: Dispatch, getState: () => IAppState) => {\r\n\t\ttry {\r\n\t\t\tdispatch<any>(findUser(loginUser.userName))\r\n\t\t\t\t.then((user: IUser) => {\r\n\t\t\t\t\tif (user) {\r\n\t\t\t\t\t\tif (user.pwd === loginUser.pwd) {\r\n\t\t\t\t\t\t\tdispatch({\r\n\t\t\t\t\t\t\t\ttype: TopActionTypes.AUTHENTICATE,\r\n\t\t\t\t\t\t\t\tuser\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\tdispatch({\r\n\t\t\t\t\t\t\t\ttype: TopActionTypes.AUTHENTICATE_WRONG_PWD\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tdispatch({\r\n\t\t\t\t\t\t\ttype: TopActionTypes.AUTHENTICATE_WRONG_USERNAME\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t}\r\n\t\tcatch (err) {\r\n\t\t\tconsole.error(err);\r\n\t\t}\r\n\t};\r\n}\r\n\r\nexport const unAuthenticate: ActionCreator<\r\n\tThunkAction<Promise<any>, IAppState, null, IAuthenticate>\r\n> = () => {\r\n\treturn async (dispatch: Dispatch) => {\r\n\t\ttry {\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: TopActionTypes.UNAUTHENTICATE\r\n\t\t\t});\r\n\t\t}\r\n\t\tcatch (err) {\r\n\t\t\tconsole.error(err);\r\n\t\t}\r\n\t};\r\n}\r\n\r\nexport const cancelLogin: ActionCreator<any> = () => {\r\n\treturn (dispatch: Dispatch) => {\r\n\t\ttry {\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: TopActionTypes.CANCEL\r\n\t\t\t});\r\n\t\t} catch (err) {\r\n\t\t\tconsole.error(err);\r\n\t\t}\r\n\t};\r\n};\r\n\r\n\r\nexport const navbarToggle: ActionCreator<any> = () => {\r\n\treturn (dispatch: Dispatch) => {\r\n\t\ttry {\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: TopActionTypes.NAVBAR_TOGGLE\r\n\t\t\t});\r\n\t\t}\r\n\t\tcatch (err) {\r\n\t\t\tconsole.error(err);\r\n\t\t}\r\n\t};\r\n};\r\n\r\n/*\r\nexport function checkAuthentication() {\r\n\treturn async (dispatch: Dispatch) => {\r\n\t  const auth = await window.localStorage.getItem(\"authenticated\");\r\n\t  const formattedAuth = typeof auth === \"string\" ?\r\n\t\tJSON.parse(auth) :\r\n\t\tnull;\r\n  \r\n\t  formattedAuth ? dispatch(authenticate()) : dispatch(unauthenticate());\r\n\t};\r\n  }\r\n*/","import { IAnswer } from '../Answers/types'\r\nimport { IOption } from '../common/types';\r\nimport { IUser } from '../user/types';\r\n\r\n// Define the Question type\r\n\r\nexport interface IQuestionAnswer {\r\n\tanswerId: number,\r\n\tassignedBy: number,\r\n\tassigned: Date,\r\n\ttext?: string\r\n}\r\n\r\nexport interface IQuestionAnswerJson extends Omit<IQuestionAnswer, 'assigned'> {\r\n\tassigned: string\r\n}\r\n\r\n\r\nexport interface IQuestion {\r\n\tcategoryId: number,\r\n\tquestionId: number,\r\n\ttext: string,\r\n\twords?: string[],\r\n\tanswers: IQuestionAnswer[],\r\n\tsource: number,\r\n\tstatus: number,\r\n\tcreatedBy: number,\r\n\tcreated: Date,\r\n\tcategoryIdWas?: number\r\n}\r\n\r\nexport interface IQuestionJson extends Omit<IQuestion, 'categoryId' | 'answers' | 'created'> {\r\n\tcategoryId?: number,\r\n\tanswers: IQuestionAnswerJson[],\r\n\tcreated: string\r\n}\r\n\r\nexport interface ICategory {\r\n\tcategoryId: number,\r\n\ttitle: string,\r\n\tquestions: IQuestion[],\r\n\tisExpanded?: boolean,\r\n\tcreatedBy: number,\r\n\tcreated: Date\r\n}\r\n\r\nexport interface ICategoryJson extends Omit<ICategory, 'created' | 'questions'> {\r\n\tquestions: IQuestionJson[],\r\n\tcreated: string\r\n}\r\n\r\nexport const initialQuestion: IQuestion = {\r\n\tcategoryId: 0,\r\n\tquestionId: 0,\r\n\ttext: '',\r\n\twords: [],\r\n\tanswers: [],\r\n\tsource: 0,\r\n\tstatus: 0,\r\n\tcreatedBy: 0,\r\n\tcreated: new Date()\r\n };\r\n\r\nexport interface ICategoriesProps {\r\n\tcategories: ICategory[];\r\n\tcategoryQuestions: Map<number, ICategoryState>,\r\n\tshowCategoryForm: boolean;\r\n\tshowQuestionForm: boolean;\r\n\tcategory: ICategory | undefined;\r\n\tquestion: IQuestion | undefined;\r\n\tformMode: string,\r\n\tcanEdit: boolean,\r\n\twho: IUser,\r\n\tnavbarOpen: boolean,\r\n\tonSelectQuestion: (categoryId: number, questionId: number) => void;\r\n\tadd: (categoryId: number, text: string, canEdit?: boolean) => void;\r\n\tcloseQuestionForm: () => void;\r\n}\r\n\r\nexport interface ICategoryListProps {\r\n\tcategories: ICategory[];\r\n\tcategoryQuestions: Map<number, ICategoryState>,\r\n\tcategoryOptions: IOption<number>[],\r\n\tshowCategoryForm: boolean;\r\n\tshowQuestionForm: boolean;\r\n\tcategory: ICategory | undefined;\r\n\tquestion: IQuestion | undefined;\r\n\tlastAnswer?: IAnswer;\r\n\tformMode: string,\r\n\tcategoryIdEditing: number,\r\n\tcanEdit: boolean,\r\n\twho: IUser,\r\n\tnavbarOpen: boolean,\r\n\tonSelectQuestion: (categoryId: number, questionId: number) => void;\r\n\tadd: (categoryId: number, text: string, canEdit?: boolean) => void;\r\n\tedit: (categoryId: number, questionId: number, showQuestionForm: boolean) => void;\r\n\tremove: (categoryId: number, questionId: number) => void;\r\n\tcloseQuestionForm: () => void;\r\n\topenQuestionForm: () => void;\r\n\r\n\t// groups\r\n\tonSelectCategory: (categoryId: number) => ICategory;\r\n\taddCategory: () => void;\r\n\ttoggleCategory: (categoryId: number) => void;\r\n\teditCategory: (categoryId: number) => void;\r\n\tremoveCategory: (categoryId: number) => void;\r\n\tstoreCategory: (group: ICategory) => void;\r\n\tupdateCategory: (group: ICategory) => void;\r\n\t// question answer\r\n\taddAndAssignNewAnswer: (categoryId: number, questionId: number, answer: IAnswer, formMode: string) => void\r\n}\r\n\r\n\r\nexport interface ICategoryState {\r\n\tquestions: IQuestion[];\r\n}\r\n\r\n\r\n// Define the Question State\r\nexport interface ICategoriesState {\r\n\treadonly categories: ICategory[];\r\n\treadonly category: ICategory | undefined;\r\n\treadonly question: IQuestion | undefined;\r\n\tshowCategoryForm: boolean,\r\n\tshowQuestionForm: boolean,\r\n\tcategoryCopy?: ICategory;\r\n\tquestionCopy?: IQuestion;\r\n\tcategoryQuestions: Map<number, ICategoryState>,\r\n\tcategoryOptions: IOption<number>[];\r\n\tloading: boolean,\r\n\tformMode: string;\r\n\tcategoryIdEditing: number;\r\n\tisDetail: boolean;\r\n}\r\n\r\n\r\nexport interface IQuestionFormProps {\r\n\tquestion: IQuestion;\r\n\tquestionAnswers: IQuestionAnswer[];\r\n\tanswers: IAnswer[];\r\n\tformMode: string;\r\n\tcanEdit: boolean,\r\n\thandleClose: () => void;\r\n\tcancel: () => void;\r\n\tsaveForm: (question: IQuestion, formMode: string) => void;\r\n\tselectQuestionAnswer: (categoryId: number, questionId: number, answerId: number) => void;\r\n\tcopyQuestionAnswer: (categoryId: number, questionId: number, answerId: number) => void;\r\n\tremoveQuestionAnswer: (categoryId: number, questionId: number, answerId: number) => void;\r\n\tassignQuestionAnswer: (categoryId: number, questionId: number, answerId: number) => void;\r\n\tsetIsDetail: (isDetail: boolean) => void;\r\n\tcategoryOptions: IOption<number>[];\r\n  }\r\n\r\n  export interface ICategoryFormProps {\r\n\tcategory: ICategory | undefined;\r\n\tformMode: string;\r\n\tcanEdit: boolean,\r\n\tcancel: () => void;\r\n\tsaveForm: (category: ICategory, formMode: string) => void;\r\n\tsetIsDetail: (isDetail: boolean) => void;\r\n  }\r\n\r\n","// Import Reducer type\r\nimport { Reducer } from 'redux';\r\n\r\nimport {\r\n\tQuestionActions,\r\n\tQuestionActionTypes\r\n} from './actions';\r\nimport { initialCategory } from './categoriesReducer';\r\n\r\nimport { IQuestion, ICategoryState, initialQuestion } from './types'\r\n\r\nexport const CATEGORY = 'CATEGORY';\r\n\r\n// Define the initial state\r\nexport const initialCategoryState: ICategoryState = {\r\n\tquestions: []\r\n};\r\n\r\n\r\nconst aTypesToStore = Object.keys(QuestionActionTypes);\r\n\t//.filter(a => a !== QuestionActionTypes.LOAD_CATEGORY);\r\n\r\nexport const reduceQuestions = (\r\n\tcategoryQuestions: Map<number, ICategoryState>,\r\n\taction: QuestionActions,\r\n\tcategoryId: number,\r\n\tquestionId?: number\r\n): {categoryQuestions: Map<number, ICategoryState>, question: IQuestion|undefined} => {\r\n\tconst categoryState = categoryQuestions.get(categoryId)!;\r\n\tconst newState: ICategoryState = myReducer(categoryState, action);\r\n\tif (aTypesToStore.includes(action.type)) {\r\n\t\tlocalStorage.setItem(`CATEGORY_${categoryId}`, JSON.stringify(newState.questions));\r\n\t}\r\n\tcategoryQuestions.set(categoryId, newState);\r\n\tconst question = newState.questions.find(q => q.questionId === questionId);\r\n\treturn { categoryQuestions, question }\r\n}\r\n\r\n\r\nconst myReducer: Reducer<ICategoryState, QuestionActions> = (\r\n\tstate = initialCategoryState,\r\n\taction\r\n) => {\r\n\tswitch (action.type) {\r\n\r\n\t\tcase QuestionActionTypes.GET_QUESTION: {\r\n\t\t\tconst question = state.questions.find(q => q.questionId === action.questionId);\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tquestion\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tcase QuestionActionTypes.ADD_QUESTION: {\r\n\t\t\tlet questionIdMax = 0;\r\n\t\t\tfor (let question of state.questions)\r\n\t\t\t\tif (question.questionId > questionIdMax)\r\n\t\t\t\t\tquestionIdMax = question.questionId\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tformMode: 'add',\r\n\t\t\t\tquestion: {\r\n\t\t\t\t\t...initialQuestion,\r\n\t\t\t\t\tcreatedBy: action.createdBy,\r\n\t\t\t\t\tcategoryId: action.categoryId,\r\n\t\t\t\t\tquestionId: questionIdMax + 1,\r\n\t\t\t\t\ttext: action.text\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tcase QuestionActionTypes.EDIT_QUESTION: {\r\n\t\t\tconst question = state.questions\r\n\t\t\t\t.find(question => question.questionId === action.questionId);\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tformMode: 'edit',\r\n\t\t\t\tquestion\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tcase QuestionActionTypes.STORE_QUESTION: {\r\n\t\t\tconst { question } = action;\r\n\t\t\tquestion.words = question.text.split(' ');\r\n\t\t\tconst { questionId } = question;\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tquestions: [...state.questions, {...question}]\r\n\t\t\t\t// questions: state.questions\r\n\t\t\t\t// \t.map(q => q.questionId !== questionId\r\n\t\t\t\t// \t\t? q\r\n\t\t\t\t// \t\t: { ...question }\r\n\t\t\t\t// \t)\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tcase QuestionActionTypes.UPDATE_QUESTION: {\r\n\t\t\tconst { question } = action;\r\n\t\t\tconst { questionId } = question;\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tquestions: state.questions\r\n\t\t\t\t\t.map(q => q.questionId !== questionId\r\n\t\t\t\t\t\t? q\r\n\t\t\t\t\t\t: { ...question }\r\n\t\t\t\t\t)\r\n\t\t\t};\t\t\t\r\n\t\t}\r\n\r\n\t\tcase QuestionActionTypes.CANCEL_QUESTION: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tformMode: 'display'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tcase QuestionActionTypes.REMOVE_QUESTION: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tquestions: state.questions.filter(q => q.questionId !== action.questionId)\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\t// Question answers\r\n\t\tcase QuestionActionTypes.REMOVE_QUESTION_ANSWER: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tquestions: state.questions.map(q => q.questionId !== action.questionId\r\n\t\t\t\t\t? { ...q, answers: [...q.answers] }\r\n\t\t\t\t\t: { ...q, answers: q.answers.filter(qa => qa.answerId !== action.answerId) }\r\n\t\t\t\t)\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tcase QuestionActionTypes.ASSIGN_QUESTION_ANSWER: {\r\n\t\t\tconst { questionId, answerId, assignedBy } = action;\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tquestions: state.questions.map(q => q.questionId !== questionId\r\n\t\t\t\t\t? { ...q, answers: [...q.answers] }\r\n\t\t\t\t\t: { ...q, answers: [...q.answers, { answerId, assignedBy, assigned: new Date() }] }\r\n\t\t\t\t)\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tcase QuestionActionTypes.SET_IS_DETAIL: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tisDetail: action.isDetail\r\n\t\t\t}\r\n\t\t}\r\n\r\n\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n};\r\n\r\n","// Import Reducer type\r\nimport { Reducer } from 'redux';\r\n\r\nimport {\r\n\tQuestionActions,\r\n\tQuestionActionTypes\r\n} from './actions';\r\n\r\nimport { IQuestion, ICategory, ICategoriesState, ICategoryState } from './types'\r\nimport { reduceQuestions } from './categoryReducer'\r\nimport { createWatchCompilerHost } from 'typescript';\r\n\r\nexport const SUPPORT_CATEGORIES = 'SUPPORT_CATEGORIES';\r\n\r\nexport const initialQuestion: IQuestion = {\r\n\tcategoryId: 0,\r\n\tquestionId: 0,\r\n\ttext: '',\r\n\twords: [],\r\n\tsource: 0,\r\n\tstatus: 0,\r\n\tanswers: [],\r\n\tcreatedBy: 0,\r\n\tcreated: new Date()\r\n};\r\n\r\nexport const initialCategory: ICategory = {\r\n\tcategoryId: 0,\r\n\ttitle: '',\r\n\tquestions: [],\r\n\tisExpanded: false,\r\n\tcreatedBy: 0,\r\n\tcreated: new Date()\r\n};\r\n\r\n\r\n// Define the initial state\r\nexport const initialCategoriesState: ICategoriesState = {\r\n\tcategories: [],\r\n\tcategory: undefined,\r\n\tcategoryQuestions: new Map<number, ICategoryState>(),\r\n\tquestion: undefined,\r\n\tshowCategoryForm: false,\r\n\tshowQuestionForm: false,\r\n\tcategoryOptions: [],\r\n\tloading: false,\r\n\tformMode: 'display',\r\n\tcategoryIdEditing: -1,\r\n\tisDetail: false\r\n};\r\n\r\nconst storeToStorage: string[] = [\r\n\tQuestionActionTypes.ADD_CATEGORY,\r\n\tQuestionActionTypes.TOGGLE_CATEGORY,\r\n\tQuestionActionTypes.STORE_CATEGORY,\r\n\tQuestionActionTypes.UPDATE_CATEGORY,\r\n\tQuestionActionTypes.REMOVE_CATEGORY\r\n]\r\n\r\nconst aTypesToStore = Object.keys(QuestionActionTypes)\r\n\t.filter(a => storeToStorage.includes(a));\r\n\r\nexport const categoriesReducer: Reducer<ICategoriesState, QuestionActions> = (state, action) => {\r\n\tconst newState = myReducer(state, action);\r\n\tif (aTypesToStore.includes(action.type)) {\r\n\t\tlocalStorage.setItem(SUPPORT_CATEGORIES, JSON.stringify(newState.categories));\r\n\t}\r\n\treturn newState;\r\n}\r\n\r\nconst getQuestions = (categoryId: number, state: ICategoriesState): IQuestion[] => {\r\n\tconst { categoryQuestions } = state;\r\n\tconst categoryState = categoryQuestions.get(categoryId)!;\r\n\treturn categoryState.questions\r\n}\r\n\r\nconst myReducer: Reducer<ICategoriesState, QuestionActions> = (\r\n\tstate = initialCategoriesState,\r\n\taction\r\n) => {\r\n\tswitch (action.type) {\r\n\r\n\t\tcase QuestionActionTypes.LOAD_CATEGORIES: {\r\n\t\t\tconst { categories, categoryQuestions } = action;\r\n\r\n\t\t\tconst categoryOptions = categories.map(g => ({ value: g.categoryId, label: g.title }))\r\n\t\t\tcategoryOptions.unshift({ value: 0, label: 'Unknown' })\r\n\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tcategories,\r\n\t\t\t\tcategoryQuestions,\r\n\t\t\t\tcategoryOptions\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tcase QuestionActionTypes.GET_QUESTION: {\r\n\t\t\tconst { categoryId, questionId } = action;\r\n\t\t\tconst questions = getQuestions(categoryId, state)\r\n\t\t\tconst question = questions.find(q => q.questionId === questionId);\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tcategory: undefined,\r\n\t\t\t\tquestion\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tcase QuestionActionTypes.ADD_QUESTION: {\r\n\t\t\tconst { categoryId } = action;\r\n\t\t\tlet questionId = 0;\r\n\t\t\tif (categoryId !== 0) {\r\n\t\t\t\tconst questions = getQuestions(categoryId, state)\r\n\t\t\t\tquestionId = Math.max(...questions.map(q => q.questionId)) + 1;\r\n\t\t\t}\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tformMode: 'add',\r\n\t\t\t\tcategory: undefined,\r\n\t\t\t\tquestion: {\r\n\t\t\t\t\t...initialQuestion,\r\n\t\t\t\t\tcreatedBy: action.createdBy,\r\n\t\t\t\t\tcategoryId,\r\n\t\t\t\t\tquestionId,\r\n\t\t\t\t\ttext: action.text\r\n\t\t\t\t},\r\n\t\t\t\tshowCategoryForm: false\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tcase QuestionActionTypes.EDIT_QUESTION: {\r\n\t\t\tconst { categoryId, questionId, showQuestionForm } = action;\r\n\t\t\tconst questions = getQuestions(categoryId, state)\r\n\t\t\tconst question = questions.find(q => q.questionId === questionId)!;\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tformMode: 'edit',\r\n\t\t\t\tquestion,\r\n\t\t\t\tquestionCopy: { ...question },\r\n\t\t\t\tshowCategoryForm: false,\r\n\t\t\t\tshowQuestionForm\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tcase QuestionActionTypes.STORE_QUESTION: {\r\n\t\t\tconst { question } = action;\r\n\t\t\tconst { categoryId, questionId } = question;\r\n\t\t\tconst { categoryQuestions } = reduceQuestions(state.categoryQuestions, action, categoryId);\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tformMode: 'edit',\r\n\t\t\t\tcategoryQuestions\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tcase QuestionActionTypes.UPDATE_QUESTION: {\r\n\t\t\tlet { questionCopy } = state;\r\n\t\t\tconst { categoryId, questionId, categoryIdWas } = action.question; // comes from other user update\r\n\t\t\tconst categoryIdCopy = categoryIdWas ? categoryIdWas : questionCopy!.categoryId;\r\n\t\t\tif (action.question.categoryId === categoryIdCopy) {\r\n\t\t\t\t// category hasn't been changed\r\n\t\t\t\tconst { categoryQuestions, question } = reduceQuestions(state.categoryQuestions, action, categoryId, questionId);\r\n\t\t\t\treturn {\r\n\t\t\t\t\t...state,\r\n\t\t\t\t\tcategoryQuestions,\r\n\t\t\t\t\tformMode: 'edit',\r\n\t\t\t\t\tquestion\r\n\t\t\t\t};\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\t// assing question to another group\r\n\t\t\t\t// 1) remove question from old category\r\n\t\t\t\tlet { categoryQuestions } = reduceQuestions(state.categoryQuestions, {\r\n\t\t\t\t\t...action,\r\n\t\t\t\t\ttype: QuestionActionTypes.REMOVE_QUESTION,\r\n\t\t\t\t\tcategoryId: categoryIdCopy,\r\n\t\t\t\t\tquestionId\r\n\t\t\t\t}, categoryIdCopy);\r\n\t\t\t\t// 2) add question  to new category\r\n\t\t\t\tcategoryQuestions = reduceQuestions(categoryQuestions, {\r\n\t\t\t\t\t...action,\r\n\t\t\t\t\ttype: QuestionActionTypes.STORE_QUESTION\r\n\t\t\t\t}, categoryId).categoryQuestions;\r\n\t\t\t\t//\r\n\t\t\t\treturn {\r\n\t\t\t\t\t...state,\r\n\t\t\t\t\tcategoryQuestions,\r\n\t\t\t\t\tformMode: 'edit'\r\n\t\t\t\t};\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tcase QuestionActionTypes.CANCEL_QUESTION: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tformMode: 'display',\r\n\t\t\t\tquestion: undefined,\r\n\t\t\t\tshowQuestionForm: false\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tcase QuestionActionTypes.REMOVE_QUESTION: {\r\n\t\t\tconst { categoryId } = action;\r\n\t\t\tconst { categoryQuestions } = reduceQuestions(state.categoryQuestions, action, categoryId);\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tcategoryQuestions,\r\n\t\t\t\tformMode: 'display',\r\n\t\t\t\tquestion: undefined\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\t\r\n\r\n\t\t// Question answers\r\n\t\tcase QuestionActionTypes.REMOVE_QUESTION_ANSWER: {\r\n\t\t\tconst { categoryId, questionId } = action;\r\n\t\t\tconst { categoryQuestions, question } = reduceQuestions(state.categoryQuestions, action, categoryId, questionId);\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tcategoryQuestions,\r\n\t\t\t\tquestion\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tcase QuestionActionTypes.ASSIGN_QUESTION_ANSWER: {\r\n\t\t\tconst { categoryId, questionId } = action;\r\n\t\t\tconst { categoryQuestions, question } = reduceQuestions(state.categoryQuestions, action, categoryId, questionId);\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tcategoryQuestions,\r\n\t\t\t\tquestion\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tcase QuestionActionTypes.SET_IS_DETAIL: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tisDetail: action.isDetail\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tcase QuestionActionTypes.CLOSE_QUESTION_FORM: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tshowQuestionForm: false\r\n\t\t\t}\r\n\t\t}\r\n\t\tcase QuestionActionTypes.OPEN_QUESTION_FORM: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tshowQuestionForm: true\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t///////////////////////////////////////////////////////////////////////////////////\r\n\t\t// groups\r\n\t\tcase QuestionActionTypes.GET_CATEGORY: {\r\n\t\t\tconst { categoryId } = action;\r\n\t\t\t//const questions = getQuestions(categoryId, state)\r\n\t\t\t//const question = questions.find(q => q.questionId === questionId);\r\n\t\t\tconst category = state.categories.find(g => g.categoryId === categoryId);\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tcategory,\r\n\t\t\t\tquestion: undefined\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tcase QuestionActionTypes.ADD_CATEGORY: {\r\n\t\t\t// const group =  state.categories.find(g => g.categoryId === action.categoryId);\r\n\t\t\tconst { categoryQuestions } = state;\r\n\t\t\tconst { showCategoryForm } = action;\r\n\t\t\tlet categoryId = Math.max(...state.categories.map(g => g.categoryId)) + 1;\r\n\t\t\tconst categoryState: ICategoryState = {\r\n\t\t\t\tquestions: []\r\n\t\t\t}\r\n\t\t\tcategoryQuestions.set(categoryId, categoryState)\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tformMode: 'add',\r\n\t\t\t\tcategoryIdEditing: categoryId,\r\n\t\t\t\tcategory: { \r\n\t\t\t\t\t...initialCategory,\r\n\t\t\t\t\ttitle: \"New Category\",\r\n\t\t\t\t\tcategoryId \r\n\t\t\t\t},\r\n\t\t\t\tquestion: undefined,\r\n\t\t\t\tshowCategoryForm,\r\n\t\t\t\tshowQuestionForm: false\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tcase QuestionActionTypes.TOGGLE_CATEGORY: {\r\n\t\t\tconst group = state.categories.find(g => g.categoryId === action.categoryId);\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tcategories: state.categories.map(g => g.categoryId !== action.categoryId\r\n\t\t\t\t\t? g\r\n\t\t\t\t\t: { ...g, isExpanded: !g.isExpanded }\r\n\t\t\t\t)\r\n\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tcase QuestionActionTypes.EDIT_CATEGORY: {\r\n\t\t\tconst { categories } = state;\r\n\t\t\tconst { showCategoryForm } = action;\r\n\t\t\tconst category = categories.find(g => g.categoryId === action.categoryId)!\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tcategoryCopy: { ...category },\r\n\t\t\t\tcategoryIdEditing: category.categoryId,\r\n\t\t\t\tshowCategoryForm,\r\n\t\t\t\tshowQuestionForm: false\r\n\t\t\t\t//,category for now lets keep inline editing\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tcase QuestionActionTypes.STORE_CATEGORY: {\r\n\t\t\t// const group = state.categories.find(g => g.categoryId === action.question.categoryId);\r\n\t\t\tconst { category } = action;\r\n\t\t\tconst { categoryQuestions } = state;\r\n\t\t\tconst categoryState: ICategoryState = {\r\n\t\t\t\tquestions: [] //...category.questions]\r\n\t\t\t}\r\n\t\t\tcategoryQuestions.set(category.categoryId, categoryState)\r\n\t\t\tcategory.questions = [];\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tformMode: 'edit',\r\n\t\t\t\tcategoryIdEditing: -1,\r\n\t\t\t\tcategories: [...state.categories, category],\r\n\t\t\t\tcategoryQuestions\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tcase QuestionActionTypes.UPDATE_CATEGORY: {\r\n\t\t\t// const group = state.categories.find(g => g.categoryId === action.question.categoryId);\r\n\t\t\tconst { category } = action;\r\n\t\t\tconst { categoryId, title } = category;\r\n\t\t\tlet { categoryCopy } = state;\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tcategoryIdEditing: -1,\r\n\t\t\t\tcategories: state.categories.map(g => g.categoryId !== categoryId\r\n\t\t\t\t\t? g\r\n\t\t\t\t\t: { ...g, title }\r\n\t\t\t\t)\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tcase QuestionActionTypes.CANCEL_CATEGORY: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tformMode: 'display',\r\n\t\t\t\tcategory: undefined\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tcase QuestionActionTypes.REMOVE_CATEGORY: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tcategories: state.categories.reduce((acc: ICategory[], g) => {\r\n\t\t\t\t\tif (g.categoryId !== action.categoryId)\r\n\t\t\t\t\t\tacc.push({ ...g, questions: [...g.questions] })\r\n\t\t\t\t\treturn acc\r\n\t\t\t\t}, [])\r\n\t\t\t};\r\n\t\t}\r\n\r\n\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n};\r\n\r\n","// Import Reducer type\r\nimport { Reducer } from 'redux';\r\nimport {\r\n\tAnswerActions,\r\n\tAnswerActionTypes,\r\n\tSUPPORT_ANSWERS\r\n} from './actions';\r\n\r\nimport { IAnswer, IAnswerState } from './types'\r\n\r\nconst initialAnswer: IAnswer = {\r\n\tanswerId: 0,\r\n\ttext: '',\r\n\twords: [],\r\n\toptions: [],\r\n\tcreatedBy: 0,\r\n\tcreated: new Date()\r\n};\r\n\r\nconst initialAnswerState: IAnswerState = {\r\n\tanswers: [],\r\n\tanswer: undefined,\r\n\tloading: false,\r\n\tformMode: 'display'\r\n};\r\n\r\nconst aTypesToStore = Object.keys(AnswerActionTypes).filter(a => a !== AnswerActionTypes.GET_ALL_ANSWERS);\r\n\r\nexport const answerReducer: Reducer<IAnswerState, AnswerActions> = (state, action) => {\r\n\tconst newState = myReducer(state, action);\r\n\tif (aTypesToStore.includes(action.type)) {\r\n\t\tlocalStorage.setItem(SUPPORT_ANSWERS, JSON.stringify(newState.answers));\r\n\t}\r\n\treturn newState;\r\n}\r\n\r\nconst myReducer: Reducer<IAnswerState, AnswerActions> = (\r\n\tstate = initialAnswerState,\r\n\taction\r\n) => {\r\n\tswitch (action.type) {\r\n\r\n\t\tcase AnswerActionTypes.GET_ALL_ANSWERS: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tanswers: action.answers.map(answer => { return { \r\n\t\t\t\t\t...answer,\r\n\t\t\t\t\twords: answer.text.split(' ') \r\n\t\t\t\t} }),\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tcase AnswerActionTypes.GET_ANSWER: {\r\n\t\t\tconst answer = state.answers.find(a => a.answerId === action.answerId);\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tanswer\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tcase AnswerActionTypes.ADD_ANSWER: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tformMode: 'add',\r\n\t\t\t\tanswer: {\r\n\t\t\t\t\t...initialAnswer,\r\n\t\t\t\t\tcreatedBy: action.createdBy,\r\n\t\t\t\t\tanswerId: state.answers.length === 0 \r\n\t\t\t\t\t\t? 1\r\n\t\t\t\t\t\t: Math.max(...state.answers.map(a => a.answerId)) + 1\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tcase AnswerActionTypes.EDIT_ANSWER: {\r\n\t\t\tconst answer = state.answers.find(a => a.answerId === action.answerId);\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tformMode: 'edit',\r\n\t\t\t\tanswer: { ...answer!, words: answer!.text.split(' ') }\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tcase AnswerActionTypes.STORE_ANSWER: {\r\n\t\t\tconst { answer } = action;\r\n\t\t\tlet { answerId } = answer!;\r\n\t\t\tlet answers = [];\r\n\t\t\tif (state.formMode === 'add') {\r\n\t\t\t\tif (answerId === -1) {\r\n\t\t\t\t\tanswer.answerId = state.answers.length === 0\r\n\t\t\t\t\t\t? 1\r\n\t\t\t\t\t\t: Math.max(...state.answers.map(a => a.answerId)) + 1;\r\n\t\t\t\t}\r\n\t\t\t\tanswers = [...state.answers, { ...answer, words: answer.text.split(' ') }]\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tanswers = state.answers.map(a => a.answerId === answerId\r\n\t\t\t\t\t? { ...answer, words: answer.text.split(' ') }\r\n\t\t\t\t\t: a)\r\n\t\t\t}\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tformMode: 'edit',\r\n\t\t\t\tanswers,\r\n\t\t\t\tanswer\r\n\t\t\t};\r\n\t\t}\t\r\n\r\n\t\tcase AnswerActionTypes.CANCEL_ANSWER: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tformMode: 'display'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tcase AnswerActionTypes.REMOVE_ANSWER: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tformMode: 'display',\r\n\t\t\t\tanswers: state.answers.filter(a => a.answerId !== action.answerId)\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\t// case AnswerActionTypes.STORE_ANSWERS_TO_LOCAL_STORAGE: {\r\n\t\t// \tlocalStorage.setItem(SUPPORT_ANSWERS, JSON.stringify(state.answers));\r\n\t\t// \treturn state;\r\n\t\t// }   \t\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n};","// Import redux types\r\nimport { ActionCreator, Dispatch } from 'redux';\r\nimport { ThunkAction } from 'redux-thunk';\r\n// import axios from 'axios';\r\n\r\n// Import User Typing\r\nimport { IUser, IRole, IRoleJson, IUsersState } from './types';\r\n\r\n\r\n///////////////////////////////////////////////////\r\n// localStorage\r\nimport { SUPPORT_USERS } from './reducer';\r\n\r\nimport data from \"./data.json\"\r\nimport { IAppState } from '../store/Store';\r\nimport { TopActionTypes } from '../Top/actions';\r\n\r\nconst parseFromJson = (): IRole[] => {\r\n\treturn data.map(g => {\r\n\t\treturn parseRole(g)\r\n\t})\r\n}\r\n\r\nconst parseFromLocalStorage = (arr: IRoleJson[]): IRole[] => {\r\n\treturn arr.map(g => parseRole(g));\r\n}\r\n\r\nconst parseRole = (g: IRoleJson): IRole => ({\r\n\t...g,\r\n\tusers: g.users.map(u => ({ ...u, created: new Date(u.created) })),\r\n\tcreated: new Date(g.created)\r\n})\r\n\r\n\r\n// Create Action Constants\r\nexport enum UserActionTypes {\r\n\tLOAD_USER_GROUPS = 'LOAD_USER_GROUPS',\r\n\tCREATE_OPTIONS = 'CREATE_OPTIONS',\r\n\tGET_ALL_USERS = 'GET_ALL_USERS',\r\n\tGET_USER = 'GET_USER',\r\n\tADD_USER = 'ADD_USER',\r\n\tEDIT_USER = 'EDIT_USER',\r\n\tREMOVE_USER = 'REMOVE_USER',\r\n\tSTORE_USER = 'STORE_USER',\r\n\tCANCEL_USER = 'CANCEL_USER',\r\n\t// groups\r\n\tADD_ROLE = 'ADD_ROLE',\r\n\tTOGGLE_ROLE = 'EXPAND_ROLE',\r\n\tEDIT_ROLE = 'EDIT_ROLE',\r\n\tREMOVE_ROLE = 'REMOVE_ROLE',\r\n\tSTORE_ROLE = 'STORE_ROLE',\r\n\t// localSTorage\r\n\tSET_IS_DETAIL = 'SET_IS_DETAIL',\r\n}\r\n\r\n\r\n// Interface for Get All Action Type\r\nexport interface IGetAll {\r\n\ttype: UserActionTypes.GET_ALL_USERS;\r\n\troles: IRole[];\r\n}\r\n\r\nexport interface ICreateOptions {\r\n\ttype: UserActionTypes.CREATE_OPTIONS;\r\n}\r\n\r\nexport interface IGet {\r\n\ttype: UserActionTypes.GET_USER;\r\n\tuserId: number;\r\n}\r\n\r\nexport interface IAdd {\r\n\ttype: UserActionTypes.ADD_USER;\r\n\tcreatedBy: number,\r\n\troleId: number,\r\n\ttext: string\r\n\t//userId: number,\r\n}\r\n\r\nexport interface IEdit {\r\n\ttype: UserActionTypes.EDIT_USER;\r\n\troleId: number,\r\n\tuserId: number\r\n}\r\n\r\nexport interface IRemove {\r\n\ttype: UserActionTypes.REMOVE_USER;\r\n\troleId: number,\r\n\tuserId: number,\r\n}\r\n\r\nexport interface IStore {\r\n\ttype: UserActionTypes.STORE_USER;\r\n\tuser: IUser;\r\n\tformMode: string;\r\n}\r\n\r\nexport interface ICancel {\r\n\ttype: UserActionTypes.CANCEL_USER;\r\n}\r\n\r\n// group\r\nexport interface IAddRole {\r\n\ttype: UserActionTypes.ADD_ROLE;\r\n\t//roleId: number\r\n}\r\n\r\nexport interface IToggleRole {\r\n\ttype: UserActionTypes.TOGGLE_ROLE;\r\n\troleId: number\r\n}\r\n\r\nexport interface IEditRole {\r\n\ttype: UserActionTypes.EDIT_ROLE;\r\n\troleId: number\r\n}\r\n\r\nexport interface IRemoveRole {\r\n\ttype: UserActionTypes.REMOVE_ROLE;\r\n\troleId: number\r\n}\r\n\r\nexport interface IStoreRole {\r\n\ttype: UserActionTypes.STORE_ROLE;\r\n\tgroup: IRole;\r\n}\r\n\r\n\r\nexport interface ISetIsDetail {\r\n\ttype: UserActionTypes.SET_IS_DETAIL;\r\n\tisDetail: boolean\r\n}\r\n\r\n\r\n\r\n// Combine the action types with a union (we assume there are more)\r\nexport type UserActions = IGetAll | IGet | IAdd | IEdit | IRemove | IStore | ICancel |\r\n\tIAddRole | IToggleRole | IEditRole | IRemoveRole | IStoreRole |\r\n\tISetIsDetail | ICreateOptions;\r\n\r\nconst isWebStorageSupported = () => 'localStorage' in window\r\n\r\n\r\nexport const getAllUsers: ActionCreator<\r\n\tThunkAction<Promise<any>, IUsersState, null, IGetAll>\r\n> = () => {\r\n\treturn async (dispatch: Dispatch) => {\r\n\t\ttry {\r\n\t\t\t// const response = await axios.get('https://swapi.co/api/people/');\r\n\t\t\tlet roles: IRole[] = [];\r\n\t\t\tif (isWebStorageSupported()) {\r\n\t\t\t\tconst sUserRoles = localStorage.getItem(SUPPORT_USERS);\r\n\t\t\t\tif (sUserRoles !== null) {\r\n\t\t\t\t\t//const Users: IRole[] = JSON.parse(sUsers);\r\n\t\t\t\t\t//Users.map(g => storageUsers.push(g))\r\n\t\t\t\t\tconst parsed = JSON.parse(sUserRoles);\r\n\t\t\t\t\troles = parseFromLocalStorage(parsed);\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\troles = parseFromJson()\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\troles = parseFromJson()\r\n\t\t\t}\r\n\r\n\t\t\t//const response = await getUsersFromLocalStorage(); \r\n\t\t\tdispatch({\r\n\t\t\t\ttype: UserActionTypes.GET_ALL_USERS,\r\n\t\t\t\troles  //response.data.results,\r\n\t\t\t});\r\n\t\t\tdispatch({type: UserActionTypes.CREATE_OPTIONS})\r\n\t\t}\r\n\t\tcatch (err) {\r\n\t\t\tconsole.error(err);\r\n\t\t}\r\n\t};\r\n};\r\n\r\n\r\n\r\n// Get User <Promise<Return Type>, State Interface, Type of Param, Type of Action> \r\nexport const getUser: ActionCreator<\r\n\tThunkAction<Promise<any>, IUsersState, string, IGet>\r\n> = (userId: number) => {\r\n\treturn async (dispatch: Dispatch) => {\r\n\t\ttry {\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: UserActionTypes.GET_USER,\r\n\t\t\t\tuserId\r\n\t\t\t});\r\n\t\t} catch (err) {\r\n\t\t\tconsole.error(err);\r\n\t\t}\r\n\t};\r\n};\r\n\r\nexport const findUser: ActionCreator<\r\n\tThunkAction<Promise<any>, IAppState, string, IGet>\r\n> = (name: string) => {\r\n\treturn async (dispatch: Dispatch, getState: () => IAppState) => {\r\n\t\ttry {\r\n\t\t\tconst {usersState} = getState();\r\n\t\t\tlet user;\r\n\t\t\tfor (let role of usersState.roles) {\r\n\t\t\t\tuser = role.users.find(user => user.userName === name);\r\n\t\t\t\tif (user)\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\treturn user;\r\n\t\t}\r\n\t\tcatch (err) {\r\n\t\t\tconsole.error(err);\r\n\t\t}\r\n\t};\r\n};\r\n\r\n\r\n\r\nexport const addUser: ActionCreator<\r\n\tThunkAction<Promise<any>, IAppState, null, IAdd>\r\n> = (roleId: number, text: string, canEdit?: boolean) => {\r\n\treturn async (dispatch: Dispatch, getState: () => IAppState) => {\r\n\t\ttry {\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: UserActionTypes.ADD_USER,\r\n\t\t\t\tcreatedBy: getState().topState.top!.auth!.who!.userId,\r\n\t\t\t\troleId,\r\n\t\t\t\ttext\r\n\t\t\t});\r\n\t\t}\r\n\t\tcatch (err) {\r\n\t\t\tconsole.error(err);\r\n\t\t}\r\n\t};\r\n};\r\n\r\nexport const editUser: ActionCreator<\r\n\tThunkAction<Promise<any>, IUsersState, null, IEdit>\r\n> = (roleId: number, userId: number) => {\r\n\treturn async (dispatch: Dispatch) => {\r\n\t\ttry {\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: UserActionTypes.EDIT_USER,\r\n\t\t\t\troleId,\r\n\t\t\t\tuserId\r\n\t\t\t});\r\n\t\t} catch (err) {\r\n\t\t\tconsole.error(err);\r\n\t\t}\r\n\t};\r\n};\r\n\r\nexport const removeUser: ActionCreator<\r\n\tThunkAction<Promise<any>, IUsersState, null, IRemove>\r\n> = (roleId: number, userId: number) => {\r\n\treturn async (dispatch: Dispatch) => {\r\n\t\ttry {\r\n\t\t\tawait delay()\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: UserActionTypes.REMOVE_USER,\r\n\t\t\t\troleId,\r\n\t\t\t\tuserId\r\n\t\t\t});\r\n\t\t\tdispatch({type: UserActionTypes.CREATE_OPTIONS})\r\n\t\t}\r\n\t\tcatch (err) {\r\n\t\t\tconsole.error(err);\r\n\t\t}\r\n\t};\r\n};\r\n\r\n\r\nexport const setIsDetail: ActionCreator<\r\n\tThunkAction<Promise<any>, IUsersState, null, ISetIsDetail>\r\n> = (isDetail: boolean) => {\r\n\treturn async (dispatch: Dispatch) => {\r\n\t\ttry {\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: UserActionTypes.SET_IS_DETAIL,\r\n\t\t\t\tisDetail\r\n\t\t\t});\r\n\t\t}\r\n\t\tcatch (err) {\r\n\t\t\tconsole.error(err);\r\n\t\t}\r\n\t};\r\n};\r\n\r\nexport const storeUser: ActionCreator<\r\n\tThunkAction<Promise<any>, IAppState, null, IStore>\r\n> = (user: IUser, formMode: string) => {\r\n\treturn async (dispatch: Dispatch, getState: () => IAppState) => {\r\n\t\ttry {\r\n\t\t\tif (formMode === 'add') {\r\n\t\t\t\tawait delay(); \r\n\r\n\t\t\t\t// if userId == -1 nadji max\r\n\t\t\t\t// return dispatch<any>(addUser(xxx))\r\n\t\t\t\t// \t.then((categoryId: number) => {\r\n\t\t\t\t// \t\treturn categoryId;\r\n\t\t\t\t// \t});\r\n\r\n\t\t\t\tawait dispatch({\r\n\t\t\t\t\ttype: UserActionTypes.STORE_USER,\r\n\t\t\t\t\tuser,\r\n\t\t\t\t\tformMode\r\n\t\t\t\t});\r\n\t\t\t\t// dodao na Zlataru\r\n\t\t\t\tdispatch({\r\n\t\t\t\t\ttype: TopActionTypes.AUTHENTICATE,\r\n\t\t\t\t\tuser\r\n\t\t\t\t});\r\n\t\t\t\treturn user;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tawait delay();\r\n\t\t\t\tdispatch({\r\n\t\t\t\t\ttype: UserActionTypes.STORE_USER,\r\n\t\t\t\t\tuser,\r\n\t\t\t\t\tformMode\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\tdispatch({type: UserActionTypes.CREATE_OPTIONS})\r\n\t\t} \r\n\t\tcatch (err) {\r\n\t\t\tconsole.error(err);\r\n\t\t}\r\n\t};\r\n};\r\n\r\nconst delay = (): Promise<any> => {\r\n\treturn new Promise((resolve, reject) => {\r\n\t\tsetTimeout(() => {\r\n\t\t\tresolve({\r\n\t\t\t\t'status': 200,\r\n\t\t\t\t'content-type': 'application/json',\r\n\t\t\t\t'data': {\r\n\t\t\t\t\t'results': 1\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t}, 50)\r\n\t})\r\n}\r\n\r\nexport const cancelUser: ActionCreator<any> = () => {\r\n\treturn (dispatch: Dispatch) => {\r\n\t\ttry {\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: UserActionTypes.CANCEL_USER\r\n\t\t\t});\r\n\t\t} catch (err) {\r\n\t\t\tconsole.error(err);\r\n\t\t}\r\n\t};\r\n};\r\n\r\n/*\r\n * User Roles\r\n */\r\nexport const addRole: ActionCreator<\r\n\tThunkAction<Promise<any>, IUsersState, null, IAddRole>\r\n> = () => {\r\n\treturn async (dispatch: Dispatch) => {\r\n\t\ttry {\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: UserActionTypes.ADD_ROLE\r\n\t\t\t});\r\n\t\t} catch (err) {\r\n\t\t\tconsole.error(err);\r\n\t\t}\r\n\t};\r\n};\r\n\r\nexport const toggleRole: ActionCreator<\r\n\tThunkAction<Promise<any>, IUsersState, null, IEditRole>\r\n> = (roleId: number) => {\r\n\treturn async (dispatch: Dispatch) => {\r\n\t\ttry {\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: UserActionTypes.TOGGLE_ROLE,\r\n\t\t\t\troleId\r\n\t\t\t});\r\n\t\t} catch (err) {\r\n\t\t\tconsole.error(err);\r\n\t\t}\r\n\t};\r\n};\r\n\r\n\r\nexport const editRole: ActionCreator<\r\n\tThunkAction<Promise<any>, IUsersState, null, IEditRole>\r\n> = (roleId: number) => {\r\n\treturn async (dispatch: Dispatch) => {\r\n\t\ttry {\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: UserActionTypes.EDIT_ROLE,\r\n\t\t\t\troleId\r\n\t\t\t});\r\n\t\t} catch (err) {\r\n\t\t\tconsole.error(err);\r\n\t\t}\r\n\t};\r\n};\r\n\r\nexport const removeRole: ActionCreator<\r\n\tThunkAction<Promise<any>, IUsersState, null, IRemoveRole>\r\n> = (roleId: number) => {\r\n\treturn async (dispatch: Dispatch) => {\r\n\t\ttry {\r\n\t\t\tawait delay()\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: UserActionTypes.REMOVE_ROLE,\r\n\t\t\t\troleId: roleId\r\n\t\t\t});\r\n\t\t} catch (err) {\r\n\t\t\tconsole.error(err);\r\n\t\t}\r\n\t};\r\n};\r\n\r\nexport const storeRole: ActionCreator<\r\n\tThunkAction<Promise<any>, IUsersState, null, IStoreRole>\r\n> = (group: IRole) => {\r\n\treturn async (dispatch: Dispatch) => {\r\n\t\ttry {\r\n\t\t\t// await updateRoleFromLocalStorage(group);\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: UserActionTypes.STORE_ROLE,\r\n\t\t\t\tgroup\r\n\t\t\t});\r\n\t\t} catch (err) {\r\n\t\t\tconsole.error(err);\r\n\t\t}\r\n\t};\r\n};\r\n\r\n","// Import redux types\r\nimport { ActionCreator, Dispatch } from 'redux';\r\nimport { ThunkAction } from 'redux-thunk';\r\n// Import Tag Typing\r\nimport { ITag, ITagState } from './types';\r\nimport data from \"./data.json\"\r\nconst storageTagsDemo: ITag[] = data;\r\n\r\n// Create Action Constants\r\nexport enum TagActionTypes {\r\n\tGET_ALL_TAGS = 'GET_ALL_TAGS',\r\n  \tGET_TAG = 'GET_TAG'\r\n}\r\n\r\n// Interface for Get All Action Type\r\nexport interface IGetAll {\r\n\ttype: TagActionTypes.GET_ALL_TAGS;\r\n\ttags: ITag[];\r\n }\r\n \r\nexport interface IGet {\r\n\ttype: TagActionTypes.GET_TAG;\r\n\ttag: ITag;\r\n}\r\n\r\n// localStorage\r\nexport const SUPPORT_TAGS = 'SUPPORT_TAGS' \r\nconst storageTags: ITag[] = [\r\n]\r\n\r\n\r\n// Combine the action types with a union (we assume there are more)\r\nexport type TagActions = IGetAll | IGet;\r\n\r\nconst isWebStorageSupported = () => 'localStorage' in window\r\n\r\n// Get All Action <Promise<Return Type>, State Interface, Type of Param, Type of Action>\r\nexport const getAllTags: ActionCreator<\r\n  ThunkAction<Promise<any>, ITagState, null, IGetAll>\r\n> = () => {\r\n  return async (dispatch: Dispatch) => {\r\n    try {\r\n\t\t// const response = await axios.get('https://swapi.co/api/people/');\r\n\t\tif (isWebStorageSupported()) {\r\n\t\t\tconst sTags = localStorage.getItem(SUPPORT_TAGS);\r\n\t\t\tif (sTags !== null) {\r\n\t\t\t\tconst Tags: ITag[] = JSON.parse(sTags);\r\n\t\t\t\tTags.map(g => storageTags.push(g))\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tstorageTagsDemo.map(g => storageTags.push(g))\t\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {\r\n\t\t\tstorageTagsDemo.map(g => storageTags.push(g))\r\n\t\t}\r\n\r\n\t\t//const response = await getTagsFromLocalStorage(); \r\n      dispatch({\r\n        type: TagActionTypes.GET_ALL_TAGS,\r\n        tags: storageTags //response.data.results,\r\n      });\r\n    } catch (err) {\r\n      console.error(err);\r\n    }\r\n  };\r\n};\r\n\r\n\r\n\r\n\r\n","// Import Reducer type\r\nimport { Reducer } from 'redux';\r\n\r\nimport {\r\n\tUserActions,\r\n\tUserActionTypes\r\n} from './actions';\r\n\r\nimport { IUser, IRole, IUsersState } from './types'\r\n\r\nexport const SUPPORT_USERS = 'SUPPORT_USERS';\r\n\r\nexport const initialUser: IUser = {\r\n\troleId: 0,\r\n\tuserId: 0,\r\n\tuserName: '',\r\n\tpwd: '',\r\n\tdepartment: 'neki',\r\n\tcreatedBy: 0,\r\n\tcreated: new Date()\r\n};\r\n\r\nexport const initialUserRole: IRole = {\r\n\troleId: 0,\r\n\ttitle: '',\r\n\tcolor: 'lightgreen',\r\n\tusers: [],\r\n\tisExpanded: false,\r\n\tcreatedBy: 0,\r\n\tcreated: new Date()\r\n};\r\n\r\n\r\n// Define the initial state\r\nexport const initialUsersState: IUsersState = {\r\n\troles: [],\r\n\tuser: undefined,\r\n\tallUsers: [],\r\n\troleOptions: [],\r\n\tuserOptions: [],\r\n\tloading: false,\r\n\tformMode: 'display',\r\n\troleIdEditing: -1,\r\n\tisDetail: false\r\n};\r\n\r\n\r\n/*\r\nconst getUser = (\r\n\t\t\troles: IRole[], \r\n\t\t\troleId: number, \r\n\t\t\tuserId: number) : IUser|undefined => {\r\n\tconst group = roles.find(g => g.roleId === roleId)\r\n\tif (!group)\r\n\t\treturn undefined;\r\n\r\n\tconst user = group\r\n\t\t\t\t\t\t\t.users\r\n\t\t\t\t\t\t\t.find(q => q.userId === userId);\r\n\treturn user;\r\n}\r\n*/\r\n\r\n\r\nconst aTypesToStore = Object.keys(UserActionTypes)\r\n\t.filter(a => a !== UserActionTypes.GET_ALL_USERS);\r\n\r\nexport const userReducer: Reducer<IUsersState, UserActions> = (state, action) => {\r\n\tconst newState = myReducer(state, action);\r\n\tif (aTypesToStore.includes(action.type)) {\r\n\t\tlocalStorage.setItem(SUPPORT_USERS, JSON.stringify(newState.roles));\r\n\t}\r\n\treturn newState;\r\n}\r\n\r\nconst myReducer: Reducer<IUsersState, UserActions> = (\r\n\tstate = initialUsersState,\r\n\taction\r\n) => {\r\n\tswitch (action.type) {\r\n\r\n\t\tcase UserActionTypes.GET_ALL_USERS: {\r\n\t\t\tconst { roles } = action;\r\n\t\t\tconsole.log('roles', roles)\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\troles\r\n\t\t\t};\r\n\t\t}\r\n\t\t//roleOptions: roles.map(g => ({ label: g.title, value: g.roleId })),\r\n\t\t//userOptions: allUsers.map(user => ({ label: user.name, value: user.userId }))\r\n\r\n\t\tcase UserActionTypes.CREATE_OPTIONS: {\r\n\t\t\tconst {roles} = state;\r\n\t\t\tlet allUsers: IUser[] = [];\r\n\t\t\troles.map(g => {\r\n\t\t\t\t//console.log('g', g)\r\n\t\t\t\tallUsers = allUsers.concat(g.users)\r\n\t\t\t});\r\n\t\t\tconsole.log('allUsers', allUsers)\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tallUsers,\r\n\t\t\t\troleOptions: roles.map(g => ({ label: g.title, value: g.roleId })),\r\n\t\t\t\tuserOptions: allUsers.map(user => ({ label: user.userName, value: user.userId }))\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tcase UserActionTypes.GET_USER: {\r\n\t\t\tlet user = undefined;\r\n\t\t\tfor (let role of state.roles) {\r\n\t\t\t\tuser = role.users\r\n\t\t\t\t\t.find(user => user.userId === action.userId);\r\n\t\t\t\tif (user)\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tuser\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tcase UserActionTypes.ADD_USER: {\r\n\t\t\tlet userIdMax = 0;\r\n\t\t\tfor (let role of state.roles) {\r\n\t\t\t\tfor (let user of role.users) \r\n\t\t\t\t\tif (user.userId > userIdMax)\r\n\t\t\t\t\t\tuserIdMax = user.userId\r\n\t\t\t}\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tformMode: 'add',\r\n\t\t\t\tuser: { \r\n\t\t\t\t\t...initialUser, \r\n\t\t\t\t\tcreatedBy: action.createdBy,\r\n\t\t\t\t\troleId: action.roleId, \r\n\t\t\t\t\tuserId: userIdMax + 1,\r\n\t\t\t\t\ttext: action.text\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tcase UserActionTypes.EDIT_USER: {\r\n\t\t\tconst userRole = state.roles.find(g => g.roleId === action.roleId);\r\n\t\t\tconst user = userRole!.users\r\n\t\t\t\t.find(user => user.userId === action.userId);\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tformMode: 'edit',\r\n\t\t\t\tuser\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tcase UserActionTypes.STORE_USER: {\r\n\t\t\tconst { user, formMode } = action;\r\n\t\t\tif (formMode === 'add') { // state.formMode\r\n\t\t\t\tconsole.log(' UserActionTypes.STORE_USER user', user)\r\n\t\t\t\tif (user.roleId === 0 && !state.roles.map(g => g.roleId).includes(0)) {\r\n\t\t\t\t\tconsole.log('unisao')\r\n\t\t\t\t\t// do something\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\t...state,\r\n\t\t\t\t\t\tformMode: 'edit',\r\n\t\t\t\t\t\troles: [\r\n\t\t\t\t\t\t\t...state.roles,\r\n\t\t\t\t\t\t\t{ \r\n\t\t\t\t\t\t\t\t...initialUserRole, \r\n\t\t\t\t\t\t\t\troleId: 0,\r\n\t\t\t\t\t\t\t\ttitle: 'Unknown',\r\n\t\t\t\t\t\t\t\tusers: [user]\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t]\r\n\t\t\t\t\t};\r\n\t\t\t\t}\r\n\t\t\t\treturn {\r\n\t\t\t\t\t...state,\r\n\t\t\t\t\tformMode: 'edit',\r\n\t\t\t\t\troles: state.roles.map(g => g.roleId !== user.roleId ?\r\n\t\t\t\t\t\t{ ...g, users: [...g.users] }\r\n\t\t\t\t\t\t:\r\n\t\t\t\t\t\t{ ...g, users: [...g.users, { ...user }] }\r\n\t\t\t\t\t)\r\n\t\t\t\t};\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tconst { roles } = state;\r\n\t\t\t\tconst {user} = action;\r\n\t\t\t\tconst userId: number = user.roleId;\r\n\t\t\t\tconst g = roles.find(g => g.roleId === user.roleId);\r\n\t\t\t\tconst q = g!.users.find(q => q.userId === user.userId);\r\n\t\t\t\tif (q) { // change user\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\t...state,\r\n\t\t\t\t\t\tformMode: 'edit',\r\n\t\t\t\t\t\troles: roles.map(g => g.roleId !== user.roleId\r\n\t\t\t\t\t\t\t? { ...g, users: [...g.users]\t}\r\n\t\t\t\t\t\t\t: {\r\n\t\t\t\t\t\t\t\t...g, \r\n\t\t\t\t\t\t\t\tusers: g.users\r\n\t\t\t\t\t\t\t\t\t.map(q => q.userId !== user.userId ?\r\n\t\t\t\t\t\t\t\t\t\tq : { ...user }\r\n\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t};\r\n\t\t\t\t}\r\n\t\t\t\telse { // assing user to another group\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\t...state,\r\n\t\t\t\t\t\tformMode: 'edit',\r\n\t\t\t\t\t\troles: roles.map(g => g.roleId !== user.roleId\r\n\t\t\t\t\t\t\t? { ...g, users: [...g.users.filter(q=> q.userId !== user.userId)]\t}\r\n\t\t\t\t\t\t\t: {\t...g, users: [...g.users, { ...user } ]\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t};\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tcase UserActionTypes.CANCEL_USER: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tformMode: 'display',\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tcase UserActionTypes.REMOVE_USER: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tformMode: 'display',\r\n\t\t\t\tuser: undefined,\r\n\t\t\t\troles: state.roles.map(g => g.roleId !== action.roleId ?\r\n\t\t\t\t\t{ ...g, users: [...g.users] }\r\n\t\t\t\t\t:\r\n\t\t\t\t\t{ ...g, users: g.users.filter(q => q.userId !== action.userId) }\r\n\t\t\t\t)\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tcase UserActionTypes.SET_IS_DETAIL: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tisDetail: action.isDetail\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t///////////////////////////////////////////////////////////////////////////////////\r\n\t\t// groups\r\n\r\n\t\tcase UserActionTypes.ADD_ROLE: {\r\n\t\t\tlet roleId = Math.max(...state.roles.map(g => g.roleId)) + 1\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\troleIdEditing: roleId,\r\n\t\t\t\troles: [...state.roles, { ...initialUserRole, title: \"New Section\", roleId: roleId }]\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tcase UserActionTypes.TOGGLE_ROLE: {\r\n\t\t\tconsole.log(action)\r\n\t\t\tconst group = state.roles.find(g => g.roleId === action.roleId);\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\troles: state.roles.map(g => g.roleId !== action.roleId\r\n\t\t\t\t\t? g\r\n\t\t\t\t\t: { ...g, isExpanded: !g.isExpanded }\r\n\t\t\t\t)\r\n\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tcase UserActionTypes.EDIT_ROLE: {\r\n\t\t\tconst group = state.roles.find(g => g.roleId === action.roleId)\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\troleIdEditing: group!.roleId\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tcase UserActionTypes.STORE_ROLE: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\troleIdEditing: -1,\r\n\t\t\t\troles: state.roles.map(g => g.roleId !== action.group.roleId ?\r\n\t\t\t\t\tg\r\n\t\t\t\t\t:\r\n\t\t\t\t\t{ ...g, title: action.group.title }\r\n\t\t\t\t)\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tcase UserActionTypes.REMOVE_ROLE: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\troles: state.roles.reduce((acc: IRole[], g) => {\r\n\t\t\t\t\tif (g.roleId !== action.roleId)\r\n\t\t\t\t\t\tacc.push({ ...g, users: [...g.users] })\r\n\t\t\t\t\treturn acc\r\n\t\t\t\t}, [])\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n};\r\n\r\n","// Import Reducer type\r\nimport { Reducer } from 'redux';\r\nimport {\r\n  TagActions,\r\n  TagActionTypes\r\n} from './actions';\r\n\r\nimport {ITag, ITagState } from './types'\r\n\r\nconst initialTag: ITag = {\r\n\ttagId: 0,\r\n\tname: ''\r\n};\r\n\r\nconst initialTagState: ITagState = {\r\n\ttags: [],\r\n\tloading: false,\r\n\tformMode: 'display'\r\n};\r\n\r\n\r\nexport const tagReducer: Reducer<ITagState, TagActions> = (\r\n  state = initialTagState,\r\n  action\r\n) => {\r\n  switch (action.type) {\r\n\r\n   case TagActionTypes.GET_ALL_TAGS: {\r\n\t\treturn {\r\n        ...state,\r\n        tags: action.tags.map(tag => ({...tag}) ),\r\n      };\r\n\t} \r\n\r\n \tcase TagActionTypes.GET_TAG: {\r\n      return {\r\n\t\t  ...state,\r\n        tag: action.tag\r\n      };\r\n\t}    \r\n\r\n\tdefault:\r\n   \t\treturn state;\r\n  }\r\n};","// Import Reducer type\r\nimport { Reducer } from 'redux';\r\nimport {\r\n\tSUPPORT_TOP, TopActions, TopActionTypes\r\n} from './actions';\r\nimport { ITop, ITopState } from './types';\r\n\r\nconst initialTop: ITop = {\r\n\tnavbarOpen: true,\r\n\tisAuthenticated: null,\r\n\tuuid: null\r\n};\r\n\r\nconst initialTopState: ITopState = {\r\n\ttop: initialTop\r\n};\r\n\r\nconst aTypesToStore = Object.keys(TopActionTypes).filter(a => a !== TopActionTypes.LOAD_TOP);\r\n\r\nexport const topReducer: Reducer<ITopState, TopActions> = (state, action) => {\r\n\tconst newState = myReducer(state, action);\r\n\tif (aTypesToStore.includes(action.type)) {\r\n\t\tlocalStorage.setItem(SUPPORT_TOP, JSON.stringify(newState.top));\r\n\t}\r\n\treturn newState;\r\n}\r\n\r\nconst myReducer: Reducer<ITopState, TopActions> = (\r\n\tstate = initialTopState,\r\n\taction\r\n) => {\r\n\tswitch (action.type) {\r\n\r\n\t\tcase TopActionTypes.LOAD_TOP: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\ttop: action.top\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tcase TopActionTypes.REGISTER: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\ttop: {\r\n\t\t\t\t\tnavbarOpen: true,\r\n\t\t\t\t\tisAuthenticated: true,\r\n\t\t\t\t\tuuid: \"placeholder-uuid\",\r\n\t\t\t\t\tauth: {\r\n\t\t\t\t\t\twho: action.user,\r\n\t\t\t\t\t\tauthenticated: new Date(),\r\n\t\t\t\t\t\tvisited: new Date()\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tcase TopActionTypes.REGISTER_USERNAME_EXISTS: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\ttop: {\r\n\t\t\t\t\t...state.top,\r\n\t\t\t\t\tauthError: \"Username already exists, please chose another!\"\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t}\t\t\r\n\r\n\t\tcase TopActionTypes.NAVBAR_TOGGLE: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\ttop: {\r\n\t\t\t\t\t...state.top,\r\n\t\t\t\t\tnavbarOpen: !state.top.navbarOpen\t\t\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t}\t\r\n\r\n\t\tcase TopActionTypes.AUTHENTICATE: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\ttop: {\r\n\t\t\t\t\tnavbarOpen: true,\r\n\t\t\t\t\tisAuthenticated: true,\r\n\t\t\t\t\tuuid: \"placeholder-uuid\",\r\n\t\t\t\t\tauth: {\r\n\t\t\t\t\t\twho: action.user,\r\n\t\t\t\t\t\tauthenticated: new Date(),\r\n\t\t\t\t\t\tvisited: new Date()\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tcase TopActionTypes.UNAUTHENTICATE: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\ttop: {\r\n\t\t\t\t\tnavbarOpen: true,\r\n\t\t\t\t\tisAuthenticated: false,\r\n\t\t\t\t\tuuid: null\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tcase TopActionTypes.AUTHENTICATE_WRONG_USERNAME: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\ttop: {\r\n\t\t\t\t\t...state.top,\r\n\t\t\t\t\tauthError: \"User doesn't exist!\"\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tcase TopActionTypes.AUTHENTICATE_WRONG_PWD: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\ttop: {\r\n\t\t\t\t\t...state.top,\r\n\t\t\t\t\tauthError: \"Password doesn't match!\"\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t}\r\n\r\n\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n};","import { applyMiddleware, combineReducers, createStore, Store } from 'redux';\r\nimport thunk from 'redux-thunk';\r\n\r\nimport { categoriesReducer } from '../Categories/categoriesReducer';\r\nimport { answerReducer } from '../Answers/reducer';\r\n\r\nimport { IAnswerState } from '../Answers/types';\r\nimport { ICategoriesState } from '../Categories/types';\r\nimport { IUsersState } from '../user/types';\r\nimport { userReducer } from '../user/reducer';\r\nimport { ITagState } from '../roleTags/types';\r\nimport { tagReducer } from '../roleTags/reducer';\r\nimport { ITopState } from '../Top/types';\r\nimport { topReducer } from '../Top/reducer';\r\n\r\nexport interface IAppState {\r\n  categoriesState: ICategoriesState;\r\n  answerState: IAnswerState;\r\n  usersState: IUsersState;\r\n  tagState: ITagState;\r\n  topState: ITopState\r\n}\r\n\r\n// Create the root reducer\r\nconst rootReducer = combineReducers<IAppState>({\r\n  categoriesState: categoriesReducer,\r\n  answerState: answerReducer,\r\n  usersState: userReducer,\r\n  tagState: tagReducer,\r\n  topState: topReducer\r\n});\r\n\r\n// Create a configure store function of type `IAppState`\r\nexport default function configureStore(): Store<IAppState, any> {\r\n  const store = createStore(rootReducer, undefined, applyMiddleware(thunk));\r\n  return store;\r\n}","import * as React from 'react';\r\nimport { createRef } from 'react'\r\n\r\nimport Autosuggest from 'react-autosuggest';\r\nimport AutosuggestHighlightMatch from \"autosuggest-highlight/match\";\r\nimport AutosuggestHighlightParse from \"autosuggest-highlight/parse\";\r\n\r\n\r\nimport { IQuestion, ICategory, ICategoryState } from '../Categories/types'\r\nimport './AutoSuggest.css'\r\n\r\n\r\n// https://developer.mozilla.org/en/docs/Web/JavaScript/Guide/Regular_Expression\r\n// s#Using_Special_Characters\r\nfunction escapeRegexCharacters(str: string): string {\r\n\treturn str.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&');\r\n}\r\n\r\n\r\nlet inputAutosuggest = createRef<HTMLInputElement>();\r\n\r\nconst QuestionAutosuggestMulti = Autosuggest as { new(): Autosuggest<IQuestion, ICategory> };\r\n\r\nexport class AutoSuggest extends React.Component<{ \r\n\tcategories: ICategory[], \r\n\tcategoryQuestions: Map<number, ICategoryState>,\r\n\ttekst: string|undefined, \r\n\tonSelectQuestion: (categoryId: number, questionId: number) => void }, any> {\r\n\t// region Fields\r\n\r\n\tstate: any;\r\n\t//inputAutosuggest: React.RefObject<HTMLInputElement>;\r\n\t// endregion region Constructor\r\n\tconstructor(props: any) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tvalue: props.tekst || '',\r\n\t\t\tsuggestions: this.getSuggestions(''),\r\n\t\t\thighlighted: ''\r\n\t\t};\r\n\t\t//this.inputAutosuggest = createRef<HTMLInputElement>();\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\t\tsetTimeout(() => {\r\n\t\t\t//inputAutosuggest!.current!.focus();\r\n\t\t\tsetTimeout(() => {\r\n\t\t\t\twindow.focus()\r\n\t\t\t\tinputAutosuggest!.current!.focus();\r\n\t\t\t}, 500)\r\n\r\n\t\t}, 100)\r\n\r\n\t\t// console.log('componentDidMount', document)\r\n\t\t// console.log(document?.getElementById('inputAutoSuggest'))\r\n\t\t//document?.getElementById('inputAutoSuggest')?.focus(); \r\n\t}\r\n\r\n\t// endregion region Rendering methods\r\n\trender(): JSX.Element {\r\n\t\tconst { value, suggestions } = this.state;\r\n\r\n\t\treturn <QuestionAutosuggestMulti\r\n\t\t\tonSuggestionsClearRequested={this.onSuggestionsClearRequested}  // (sl) added\r\n\t\t\tmultiSection={true}\r\n\t\t\tsuggestions={suggestions}\r\n\t\t\tonSuggestionsFetchRequested={this.onSuggestionsFetchRequested.bind(this)}\r\n\t\t\tonSuggestionSelected={this.onSuggestionSelected.bind(this)}\r\n\t\t\tgetSuggestionValue={this.getSuggestionValue}\r\n\t\t\trenderSuggestion={this.renderSuggestion}\r\n\t\t\trenderSectionTitle={this.renderSectionTitle}\r\n\t\t\tgetSectionSuggestions={this.getSectionSuggestions}\r\n\t\t\t// onSuggestionHighlighted={this.onSuggestionHighlighted} (sl)\r\n\t\t\tonSuggestionHighlighted={this.onSuggestionHighlighted.bind(this)}\r\n\t\t\thighlightFirstSuggestion={true}\r\n\t\t\trenderInputComponent={this.renderInputComponent}\r\n\t\t\trenderSuggestionsContainer={this.renderSuggestionsContainer}\r\n\t\t\tinputProps={{\r\n\t\t\t\tplaceholder: `Type 'promocode'`,\r\n\t\t\t\tvalue,\r\n\t\t\t\tonChange: (e, changeEvent) => this.onChange(e, changeEvent),\r\n\t\t\t}}\r\n\r\n\t\t/>;\r\n\t}\r\n\r\n\tprotected onSuggestionsClearRequested = () => {\r\n\t\tthis.setState({\r\n\t\t\tsuggestions: []\r\n\t\t});\r\n\t};\r\n\r\n\r\n\r\n\tprotected onSuggestionSelected(event: React.FormEvent<any>, data: Autosuggest.SuggestionSelectedEventData<IQuestion>): void {\r\n\t\tconst question: IQuestion = data.suggestion;\r\n\t\t// alert(`Selected question is ${question.questionId} (${question.text}).`);\r\n\t\tthis.props.onSelectQuestion(question.categoryId, question.questionId);\r\n\t}\r\n\r\n\t/*\r\n\tprotected renderSuggestion(suggestion: Question, params: Autosuggest.RenderSuggestionParams): JSX.Element {\r\n\t\t const className = params.isHighlighted ? \"highlighted\" : undefined;\r\n\t\t return <span className={className}>{suggestion.name}</span>;\r\n\t}\r\n\t*/\r\n\r\n\tprotected renderSuggestion(suggestion: IQuestion, params: Autosuggest.RenderSuggestionParams): JSX.Element {\r\n\t\t// const className = params.isHighlighted ? \"highlighted\" : undefined;\r\n\t\t//return <span className={className}>{suggestion.name}</span>;\r\n\t\tconst matches = AutosuggestHighlightMatch(suggestion.text, params.query);\r\n\t\tconst parts = AutosuggestHighlightParse(suggestion.text, matches);\r\n\r\n\t\treturn (\r\n\t\t\t<span>\r\n\t\t\t\t{parts.map((part, index) => {\r\n\t\t\t\t\tconst className = part.highlight ? 'react-autosuggest__suggestion-match' : undefined;\r\n\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\t<span className={className} key={index}>\r\n\t\t\t\t\t\t\t{part.text}\r\n\t\t\t\t\t\t</span>\r\n\t\t\t\t\t);\r\n\t\t\t\t})}\r\n\t\t\t</span>\r\n\t\t);\r\n\t}\r\n\r\n\tprotected renderSectionTitle(section: ICategory): JSX.Element {\r\n\t\treturn <strong>{section.title}</strong>;\r\n\t}\r\n\r\n\t// protected renderInputComponent(inputProps: Autosuggest.InputProps<IQuestion>): JSX.Element {\r\n\t// \t const { onChange, onBlur, ...restInputProps } = inputProps;\r\n\t// \t return (\r\n\t// \t\t  <div>\r\n\t// \t\t\t\t<input {...restInputProps} />\r\n\t// \t\t  </div>\r\n\t// \t );\r\n\t// }\r\n\r\n\tprotected renderInputComponent(inputProps: Autosuggest.RenderInputComponentProps): JSX.Element {\r\n\t\tconst { ref, ...restInputProps } = inputProps;\r\n\t\t// if (ref !== undefined)\r\n\t\t// \tthis.inputAutosuggest = ref as React.RefObject<HTMLInputElement>;\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t<input {...restInputProps} ref={inputAutosuggest} />\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n\r\n\tprotected renderSuggestionsContainer({ containerProps, children, query }: Autosuggest.RenderSuggestionsContainerParams): JSX.Element {\r\n\t\treturn (\r\n\t\t\t<div {...containerProps}>\r\n\t\t\t\t<span>{children}</span>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n\t// endregion region Event handlers\r\n\r\n\tprotected onChange(event: /*React.ChangeEvent<HTMLInputElement>*/ React.FormEvent<any>, { newValue, method }: Autosuggest.ChangeEvent): void {\r\n\t\tthis.setState({ value: newValue });\r\n\t}\r\n\r\n\tprotected onSuggestionsFetchRequested({ value }: any): void {\r\n\t\tthis.setState({\r\n\t\t\tsuggestions: this.getSuggestions(value)\r\n\t\t});\r\n\t}\r\n\r\n\tprivate anyWord = (valueWordRegex: RegExp[], questionWords: string[]): boolean => {\r\n\t\tfor (let valWordRegex of valueWordRegex)\r\n\t\t\tfor (let questionWord of questionWords)\r\n\t\t\t\tif (valWordRegex.test(questionWord))\r\n\t\t\t\t\treturn true;\r\n\t\treturn false;\r\n\t}\r\n\t// endregion region Helper methods\r\n\tprotected getSuggestions(value: string): ICategory[] {\r\n\t\tconst escapedValue = escapeRegexCharacters(value.trim());\r\n\r\n\t\tif (escapedValue === '') {\r\n\t\t\treturn [];\r\n\t\t}\r\n\r\n\t\tconst valueWords = escapedValue.split(' ');\r\n\t\tconst valueWordRegex = valueWords.map(word => new RegExp(word, 'i'))\r\n\t\t// const regex = new RegExp('^' + escapedValue, 'i');\r\n\t\t// const regex = new RegExp(escapedValue, 'i');\r\n\r\n\t\t// return AutoSuggest.questions\t \r\n\t\t//  return this.props.categories\r\n\t\t// \t\t.map(section => {\r\n\t\t// \t\t\treturn {\r\n\t\t// \t\t\t\t\ttitle: section.title,\r\n\t\t// \t\t\t\t\tquestions: section\r\n\t\t// \t\t\t\t\t\t.questions\r\n\t\t// \t\t\t\t\t\t.filter(question => regex.test(question.text))\r\n\t\t// \t\t\t};\r\n\t\t// \t\t})\r\n\t\t// \t\t.filter(section => section.questions.length > 0);\r\n        const {categories, categoryQuestions} = this.props;\r\n\t\treturn categories\r\n\t\t\t.map(group => {\r\n\t\t\t\tconsole.log('categoryId:', group.categoryId, categoryQuestions.get(group.categoryId)!.questions)\r\n\t\t\t\treturn {\r\n\t\t\t\t\t...group,\r\n\t\t\t\t\tquestions: //.group.questions\r\n\t\t\t\t\t\tcategoryQuestions.get(group.categoryId)!.questions\r\n\t\t\t\t\t\t\t.filter(question => this.anyWord(valueWordRegex, question.words!))\r\n\t\t\t\t};\r\n\t\t\t})\r\n\t\t\t.filter(section => section.questions.length > 0);\r\n\t}\r\n\r\n\tprotected getSuggestionValue(suggestion: IQuestion) {\r\n\t\treturn suggestion.text;\r\n\t}\r\n\r\n\tprotected getSectionSuggestions(section: ICategory) {\r\n\t\treturn section.questions;\r\n\t}\r\n\r\n\tprotected onSuggestionHighlighted(params: Autosuggest.SuggestionHighlightedParams): void {\r\n\t\tthis.setState({\r\n\t\t\thighlighted: params.suggestion\r\n\t\t});\r\n\t}\r\n\t// endregion\r\n}\r\n\r\n","const palx = require('palx');\r\nexport const BASE_COLOR = '#666ee8';\r\nexport const COLORS = palx(BASE_COLOR);","import { connect } from 'react-redux';\r\nimport { IAppState } from '../../store/Store';\r\nimport {OptionName}  from '../components/OptionName'\r\n\r\ninterface IOwnProps {\r\n\tid: number\r\n}\r\n\r\nconst mapStateToProps = (store: IAppState, ownProps: IOwnProps ) => {\r\n\treturn {\r\n\t\toptions: store.usersState.userOptions,\r\n\t\tid: ownProps.id\r\n\t};\r\n};\r\n\r\n\r\nexport default connect(mapStateToProps)(OptionName);\r\n","import { IOption, OptionValue } from \"../types\";\r\n\r\ntype Props<T extends OptionValue> = {\r\n    options: IOption<T>[];\r\n    id: T;\r\n};\r\n\r\nexport interface IProps {\r\n\toptions: IOption<number>[];\r\n  id: number;\r\n}\r\n\r\nexport function OptionName<T extends OptionValue>(props: Props<T>) {\r\n    const { id } = props;\r\n    const option: IOption<T>|undefined = props.options.find(option => option.value === id);\r\n    return (\r\n        <span>\r\n            {option\r\n                ? option!.label\r\n                : \"Unknown\"\r\n            }\r\n        </span>\r\n    );\r\n}","import React, { useState } from 'react';\r\nimport { useFormik } from 'formik';\r\nimport * as Yup from 'yup'\r\nimport { ICategoryFormProps } from '../types';\r\nimport { IAnswer } from '../../Answers/types';\r\n\r\nimport { Select } from '../../common/Select';\r\nimport { COLORS } from '../../formik/theme';\r\n//import { MultiSelect } from '../../common/MultiSelect';\r\nimport { IOption } from '../../common/types';\r\nimport UserName from '../../common/containers/UserName';\r\n//import { number } from 'yup/lib/locale';\r\n\r\n\r\nconst Form: React.FC<ICategoryFormProps> = (props: ICategoryFormProps) => {\r\n\r\n  const category = props.category!;\r\n  const { categoryId, title, questions, isExpanded, createdBy, created } = category;\r\n\r\n  const formik = useFormik({\r\n    enableReinitialize: true,\r\n    initialValues: {\r\n      categoryId,\r\n      title,\r\n      questions,\r\n      isExpanded,\r\n      createdBy,\r\n      created\r\n    },\r\n    validationSchema: Yup.object({\r\n      title: Yup.string()\r\n        .max(150, 'Must be 150 characters or less')\r\n        .required('Required'),\r\n      /*answers: Yup.string()\r\n        .max(20, 'Must be 20 characters or less')\r\n        .required('Required'),\r\n      email: Yup.string()\r\n        .email('Invalid email address')\r\n        .required('Required'),*/\r\n    }),\r\n    onSubmit: values => {\r\n      // alert(JSON.stringify(values, null, 2));\r\n      props.saveForm(values, props.formMode)\r\n    }\r\n  });\r\n\r\n  const isEdit = () => props.formMode === 'edit';\r\n\r\n  console.log('RENDERING', formik.values)\r\n  return (\r\n    <>\r\n      <form onSubmit={formik.handleSubmit}>\r\n      \r\n        <label className=\"id\" htmlFor=\"categoryId\">CategoryId:</label>\r\n        {/* <input\r\n          id=\"categoryId\"\r\n          name=\"categoryId\"\r\n          type=\"text\"\r\n          onChange={formik.handleChange}\r\n          onBlur={formik.handleBlur}\r\n          value={formik.values.categoryId}\r\n          disabled\r\n          style={{ width: '50px' }}\r\n        />\r\n        {formik.touched.categoryId && formik.errors.categoryId ? (\r\n          <div>{formik.errors.categoryId}</div>\r\n        ) : null} */}\r\n        <span id=\"categoryId\">{formik.values.categoryId}</span>\r\n        \r\n        <label htmlFor=\"title\">Title</label>\r\n        <textarea\r\n          id=\"title\"\r\n          name=\"title\"\r\n          onChange={formik.handleChange}\r\n          //onBlur={formik.handleBlur}\r\n          onBlur={(e: React.FormEvent<HTMLTextAreaElement>): void => {\r\n            if (isEdit() && formik.initialValues.title !== formik.values.title)\r\n              formik.submitForm();\r\n          }}\r\n          value={formik.values.title}\r\n          style={{ width: '100%' }}\r\n          rows={2}\r\n        />\r\n        {formik.touched.title && formik.errors.title ? (\r\n          <div>{formik.errors.title}</div>\r\n        ) : null}\r\n\r\n        <br />\r\n\r\n   \r\n        <label className=\"id\" htmlFor=\"createdBy\">Created by:</label>\r\n        <UserName id={formik.values.createdBy} />\r\n\t\t\t  <br/>\r\n        {/* <Select\r\n          id=\"createdBy\"\r\n          name=\"createdBy\"\r\n          options={props.userOptions}\r\n          //onChange={formik.handleChange}\r\n          onChange={(e, value) => {\r\n            formik.setFieldValue(\"createdBy\", value);\r\n            if (isEdit()) formik.submitForm();\r\n          }}\r\n          value={formik.values.createdBy}\r\n        // onChange={(gradeId: number) =>\r\n        // \tdispatch({\r\n        // \t\ttype: StudentActionTypes.STUDENT_ASSIGN_GRADE,\r\n        // \t\tstudentGradeIds: {\r\n        // \t\t\tstudentId: student!.id,\r\n        // \t\t\tgradeId: gradeId,\r\n        // \t\t\tgradeName: gradesAll[gradeId].name\r\n        // \t\t}\r\n        // \t})\r\n        // }\r\n        /> */}\r\n\r\n        {/* \r\n      <label htmlFor=\"answers\">Answers</label>\r\n      <input\r\n        id=\"answers\"\r\n        name=\"answers\"\r\n        type=\"text\"\r\n        onChange={formik.handleChange}\r\n        onBlur={formik.handleBlur}\r\n        value={formik.values.answers}\r\n      />\r\n      {formik.touched.answers && formik.errors.answers ? (\r\n        <div>{formik.errors.answers}</div>\r\n      ) : null}\r\n\r\n\r\n\r\n      <label htmlFor=\"email\">Email Address</label>\r\n      <input\r\n        id=\"email\"\r\n        name=\"email\"\r\n        type=\"email\"\r\n        onChange={formik.handleChange}\r\n        onBlur={formik.handleBlur}\r\n        value={formik.values.email}\r\n      />\r\n      {formik.touched.email && formik.errors.email ? (\r\n        <div>{formik.errors.email}</div>\r\n      ) : null} */}\r\n\r\n        {/* <button type=\"submit\">Submit</button> */}\r\n\r\n        {/* <label htmlFor=\"features\">Features</label>\r\n        <MultiSelect\r\n          id=\"features\"\r\n          name=\"features\"\r\n          label=\"Select features...\"\r\n          options={props.featureOptions}\r\n          onChange={()=>{}} \r\n          value={[]}\r\n          // onChange={(e, value) => {\r\n          //   formik.setFieldValue(\"status\", value)\r\n          //   if (isEdit()) formik.submitForm();\r\n          // }}\r\n          // value={formik.values.status}\r\n        /> */}\r\n\r\n        {!isEdit() &&\r\n          <div className=\"buttons\">\r\n            {props.canEdit &&\r\n              <button className=\"secondary\" onClick={() => props.cancel()}>Cancel</button>}\r\n            {props.canEdit &&\r\n              <button type=\"submit\">Save</button>}\r\n          </div>\r\n        }\r\n      </form>\r\n\r\n      <label className=\"id\" htmlFor=\"created\">Created:</label>\r\n      {/* <input\r\n        id=\"created\"\r\n        name=\"text\"\r\n        type=\"text\"\r\n        onChange={formik.handleChange}\r\n        onBlur={formik.handleBlur}\r\n        value={formik.values.created.toLocaleDateString()}\r\n        disabled={true}\r\n      />\r\n      {formik.touched.created && formik.errors.created ? (\r\n        <div>{formik.errors.created}</div>\r\n      ) : null} */}\r\n      <span>{formik.values.created.toLocaleDateString()}</span>\r\n\r\n    </>\r\n  );\r\n};\r\n\r\n\r\nconst color = 'blue';\r\n\r\nexport const CategoryForm: React.FC<ICategoryFormProps> = (props: ICategoryFormProps) => {\r\n  return (\r\n    <div style={{ height: '100%' }} className=\"formik-example formik-example--blue\">\r\n      <div\r\n        style={{\r\n          height: '100%',\r\n          background: COLORS[color][5],\r\n          padding: '1rem 1rem',\r\n        }}\r\n      >\r\n        <div\r\n          style={{\r\n            borderRadius: '4px',\r\n            boxShadow: '0 8px 16px rgba(0,0,0,.2)',\r\n            background: '#fff',\r\n            maxWidth: '90%',\r\n            margin: '0 auto',\r\n            padding: '1rem',\r\n          }}\r\n        >\r\n          <div className=\"formik-example formik-example--blue\">\r\n            <Form {...props} />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}","// import * as React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { IAppState } from '../../store/Store';\r\nimport { ICategory } from '../types'\r\nimport { IAnswer } from '../../Answers/types'\r\n\r\nimport { Dispatch } from 'redux';  // ActionCreatorsMapObject, \r\nimport {IOption} from '../../common/types';\r\n\r\nimport {\r\n\tgetCategory, \r\n\taddCategory, \r\n\teditCategory,\r\n\tremoveCategory,\r\n\tstoreCategory,\r\n\tupdateCategory,\r\n\tcancelCategory,\r\n\tsetIsDetail,\r\n\tQuestionActions\r\n} from '../actions'\r\n\r\nimport { CategoryForm } from '../components/CategoryForm';\r\n\r\n\r\n\r\ninterface IProps {\r\n\tcanEdit: boolean\r\n}\r\n\r\n// Grab the categories from the store and make them available on props\r\nconst mapStateToProps = (store: IAppState, ownProps: IProps ) => {\r\n\tconst {categoriesState } = store;\r\n\tconst { category, formMode } = categoriesState; \r\n\treturn {\r\n\t\tcategory,\r\n\t\tformMode,\r\n\t\tcanEdit: ownProps.canEdit\r\n\t};\r\n};\r\n\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch<QuestionActions>) => {\r\n\treturn {\r\n\t\t//onSelectCategory: (categoryId: number, questionId: number) => dispatch<any>(getCategory(categoryId)),\r\n\t\t//add: (categoryId: number, text: string, canEdit?: boolean) => dispatch<any>(addCategory(categoryId, text, canEdit)),\r\n\t\t//edit: (categoryId: number) => dispatch<any>(editCategory(categoryId)),\r\n\t\t//remove: (categoryId: number) => dispatch<any>(removeCategory(true, categoryId)),\r\n\t\tsaveForm: (category: ICategory, formMode: string) => \r\n\t\t\tdispatch<any>(formMode==='add'?storeCategory(true, category):updateCategory(true, category)),\r\n\t\tcancel: () => dispatch<any>(cancelCategory()),\r\n\t\tsetIsDetail: (isDetail: boolean) => {\r\n\t\t\tdispatch<any>(setIsDetail(isDetail))\r\n\t\t},\r\n\r\n\t}\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CategoryForm);\r\n","import * as React from 'react';\r\n\r\nimport Autosuggest from 'react-autosuggest';\r\nimport AutosuggestHighlightMatch from \"autosuggest-highlight/match\";\r\nimport AutosuggestHighlightParse from \"autosuggest-highlight/parse\";\r\n\r\nimport { IAnswer }  from '../Answers/types'\r\nimport './AutoSuggest.css'\r\nimport { IQuestion } from '../Categories/types';\r\n\r\n// https://developer.mozilla.org/en/docs/Web/JavaScript/Guide/Regular_Expression\r\n// s#Using_Special_Characters\r\nfunction escapeRegexCharacters(str: string): string {\r\n\treturn str.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&');\r\n}\r\n\r\nconst QuestionAutosuggestMulti = Autosuggest as { new (): Autosuggest<IAnswer> };\r\n\r\ninterface IProps {\r\n\tanswersUnassigned: IAnswer[], \r\n\tquestion: IQuestion,\r\n\tassignQuestionAnswer: (categoryId: number, questionId: number, answerId: number) => void\r\n\tsetAnswerText?: (val: string) => void\r\n}\r\n\r\nexport class AutoSuggestAnswer extends React.Component<IProps, any> {\r\n\r\n\tstate: any;\r\n\r\n\tconstructor(props: any) {\r\n\t\t super(props);\r\n\r\n\t\t this.state = {\r\n\t\t\t  value: '',\r\n\t\t\t  suggestions: this.getSuggestions(''),\r\n\t\t\t  highlighted: ''\r\n\t\t };\r\n\t}\r\n\t// endregion region Rendering methods\r\n\trender(): JSX.Element {\r\n\t\t const {value, suggestions} = this.state;\r\n\r\n\t\t return <QuestionAutosuggestMulti\r\n\t\t \t  onSuggestionsClearRequested={this.onSuggestionsClearRequested}  // (sl) added\r\n\t\t\t  multiSection={false}\r\n\t\t\t  suggestions={suggestions}\r\n\t\t\t  onSuggestionsFetchRequested={this.onSuggestionsFetchRequested.bind(this)}\r\n\t\t\t  onSuggestionSelected={this.onSuggestionSelected.bind(this)}\r\n\t\t\t  getSuggestionValue={this.getSuggestionValue}\r\n\t\t\t  renderSuggestion={this.renderSuggestion}\r\n\t\t\t  // onSuggestionHighlighted={this.onSuggestionHighlighted} (sl)\r\n\t\t\t  onSuggestionHighlighted={this.onSuggestionHighlighted.bind(this)}  \r\n\t\t\t  highlightFirstSuggestion={true}\r\n\t\t\t  // renderInputComponent={this.renderInputComponent}\r\n\t\t\t  renderSuggestionsContainer={this.renderSuggestionsContainer}\r\n\t\t\t  inputProps={{\r\n\t\t\t\t\tplaceholder: `Search answers...`,\r\n\t\t\t\t\tvalue,\r\n\t\t\t\t\tonChange: (e, changeEvent) => this.onChange(e, changeEvent),\r\n\t\t\t  }}/>;\r\n\t}\r\n\r\n\tprotected onSuggestionsClearRequested = () => {\r\n\t\tthis.setState({\r\n\t\t  suggestions: []\r\n\t\t});\r\n\t };\r\n  \r\n  \r\n\r\n\tprotected onSuggestionSelected(event: React.FormEvent<any>, data: Autosuggest.SuggestionSelectedEventData<IAnswer>): void {\r\n\t\t const answer: IAnswer = data.suggestion;\r\n\t\t // alert(`Selected question is ${question.answerId} (${question.text}).`);\r\n\t\t this.props.assignQuestionAnswer(\r\n\t\t\t this.props.question.categoryId,\r\n\t\t\t this.props.question.questionId, \r\n\t\t\t answer.answerId);\r\n\t\tthis.setState({\r\n\t\t\tvalue: ''\r\n\t\t})\r\n\t}\r\n\r\n\t/*\r\n\tprotected renderSuggestion(suggestion: Question, params: Autosuggest.RenderSuggestionParams): JSX.Element {\r\n\t\t const className = params.isHighlighted ? \"highlighted\" : undefined;\r\n\t\t return <span className={className}>{suggestion.name}</span>;\r\n\t}\r\n\t*/\r\n\r\n\tprotected renderSuggestion(suggestion: IAnswer, params: Autosuggest.RenderSuggestionParams): JSX.Element {\r\n\t\t// const className = params.isHighlighted ? \"highlighted\" : undefined;\r\n\t\t//return <span className={className}>{suggestion.name}</span>;\r\n\t\tconst matches = AutosuggestHighlightMatch(suggestion.text, params.query);\r\n\t\tconst parts = AutosuggestHighlightParse(suggestion.text, matches);\r\n\t \r\n\t\treturn (\r\n\t\t  <span>\r\n\t\t\t {parts.map((part, index) => {\r\n\t\t\t\tconst className = part.highlight ? 'react-autosuggest__suggestion-match' : undefined;\r\n\t \r\n\t\t\t\treturn (\r\n\t\t\t\t  <span className={className} key={index}>\r\n\t\t\t\t\t {part.text}\r\n\t\t\t\t  </span>\r\n\t\t\t\t);\r\n\t\t\t })}\r\n\t\t  </span>\r\n\t\t);\r\n\t}\r\n\r\n\t// protected renderInputComponent(inputProps: Autosuggest.InputProps<IAnswer>): JSX.Element {\r\n\t// \t const { onChange, onBlur, ...restInputProps } = inputProps;\r\n\t// \t return (\r\n\t// \t\t  <div>\r\n\t// \t\t\t\t<input {...restInputProps} />\r\n\t// \t\t  </div>\r\n\t// \t );\r\n\t// }\r\n\r\n\tprotected renderSuggestionsContainer({containerProps, children, query}: Autosuggest.RenderSuggestionsContainerParams): JSX.Element {\r\n\t\t return (\r\n\t\t\t  <div {...containerProps}>\r\n\t\t\t\t\t<span>{children}</span>\r\n\t\t\t  </div>\r\n\t\t );\r\n\t}\r\n\t// endregion region Event handlers\r\n\tprotected onChange(event: React.FormEvent<any>, {newValue, method}: Autosuggest.ChangeEvent): void {\r\n\t\tif (this.props.setAnswerText) {\r\n\t\t\tthis.props.setAnswerText(newValue);\r\n\t\t}\r\n\t\tthis.setState({value: newValue});\r\n\t}\r\n\r\n\tprotected onSuggestionsFetchRequested({value}: any): void {\r\n\t\t this.setState({\r\n\t\t\t  suggestions: this.getSuggestions(value)\r\n\t\t });\r\n\t}\r\n\r\n\tprivate anyWord = (valueWordRegex: RegExp[], questionWords: string[]) : boolean => {\r\n\t\tfor (let valWordRegex of valueWordRegex)\r\n\t\t\tfor (let questionWord of questionWords)\r\n\t\t\t\tif (valWordRegex.test(questionWord))\r\n\t\t\t\t\treturn true;\r\n\t\treturn false;\r\n\t} \r\n\t// endregion region Helper methods\r\n\tprotected getSuggestions(value: string): IAnswer[] {\r\n\t\tconst escapedValue = escapeRegexCharacters(value.trim());\r\n\r\n\t\tif (escapedValue === '') {\r\n\t\t\treturn [];\r\n\t\t}\r\n\r\n\t\tconst valueWords = escapedValue.split(' ');\r\n\t\tconst valueWordRegex = valueWords.map(word => new RegExp(word, 'i') )\r\n\t\t// const regex = new RegExp('^' + escapedValue, 'i');\r\n\t\t// const regex = new RegExp(escapedValue, 'i');\r\n\r\n\t\treturn this.props.answersUnassigned.filter(answer => this.anyWord(valueWordRegex, answer.words!))\r\n\t}\r\n\r\n\tprotected getSuggestionValue(suggestion: IAnswer) {\r\n\t\t return suggestion.text;\r\n\t}\r\n\r\n\r\n\tprotected onSuggestionHighlighted(params: Autosuggest.SuggestionHighlightedParams): void {\r\n\t\t this.setState({\r\n\t\t\t  highlighted: params.suggestion\r\n\t\t });\r\n\t}\r\n\t// endregion\r\n}\r\n\r\n","import { useRef, useState, useEffect } from 'react';\r\n\r\ninterface IHoverProps {\r\n\tisHovered: boolean;\r\n}\r\n\r\n// Hook\r\nexport function useHover() : [React.RefObject<HTMLDivElement>, IHoverProps] {\r\n\tconst [hoverProps, setValue] = useState({ isHovered: false });\r\n \r\n\tconst divRef = useRef<HTMLDivElement>(null);\r\n \r\n\tconst handleMouseOver = () => setValue({ isHovered: true });\r\n\tconst handleMouseOut = () => setValue({ isHovered: false });\r\n \r\n\tuseEffect(\r\n\t  () => {\r\n\t\t const node = divRef.current;\r\n\t\t if (node) {\r\n\t\t\tnode.addEventListener('mouseenter', () => handleMouseOver());\r\n\t\t\tnode.addEventListener('mouseleave', () => handleMouseOut());\r\n \r\n\t\t\treturn () => {\r\n\t\t\t\tnode.removeEventListener('mouseenter', () => handleMouseOver());\r\n\t\t\t\tnode.removeEventListener('mouseleave', () => handleMouseOut());\r\n\t\t\t};\r\n\t\t }\r\n\t  }, [divRef.current] // Recall only if ref changes\r\n\t);\r\n \r\n\treturn [divRef, hoverProps];\r\n}\r\n\r\n","import * as React from 'react';\r\n\r\nimport { useHover } from '../../common/useHover'\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faWindowClose, faEdit, faCopy } from '@fortawesome/free-solid-svg-icons'\r\n\r\nimport { IQuestion, IQuestionAnswer } from '../types';\r\n\r\n\r\ninterface IQuestionAnswerRowProps {\r\n\tquestion: IQuestion;\r\n\tquestionAnswer: IQuestionAnswer;\r\n\tselectQuestionAnswer: (categoryId: number, questionId: number, answerId: number) => void;\r\n\tcopyQuestionAnswer: (categoryId: number, questionId: number, answerId: number) => void;\r\n\tremoveQuestionAnswer: (categoryId: number, questionId: number, answerId: number) => void;\r\n}\r\n\r\nconst QuestionAnswerRow: React.FC<IQuestionAnswerRowProps> = (props: IQuestionAnswerRowProps) => {\r\n\r\n\tconst [hoverRef, hoverProps] = useHover();\r\n\r\n\tconst { question, questionAnswer, selectQuestionAnswer, copyQuestionAnswer, removeQuestionAnswer } = props;\r\n\tconst { categoryId, questionId } = question;\r\n\tconst { answerId, text } = questionAnswer;\r\n\tconst id = `inputQuestionAnswer${answerId}`;\r\n\r\n\treturn (\r\n\t\t<div ref={hoverRef} className=\"name\">\r\n\t\t\t{/* <input id={id} type=\"hidden\" value={questionAnswer.text}></input> */}\r\n\t\t\t<button\r\n\t\t\t\tclassName=\"question-button\"\r\n\t\t\t\tonClick={() => {\r\n\t\t\t\t\t// selectQuestionAnswer(categoryId, questionId, answerId)}\r\n\t\t\t\t\talert('No action for the time being')\r\n\t\t\t\t}}\r\n\t\t\t>\r\n\t\t\t\t{questionAnswer.text}\r\n\t\t\t</button>\r\n\t\t\t{hoverProps.isHovered &&\r\n\t\t\t\t<button className=\"button-edit\" title=\"Copy Answer to Cliboard\"\r\n\t\t\t\t\tonClick={(e) => {\r\n\t\t\t\t\t\t//const input = document.querySelector<HTMLInputElement>('#' + id);\r\n\t\t\t\t\t\tif (navigator.clipboard) {\r\n\t\t\t\t\t\t\tnavigator.clipboard.writeText(`${questionAnswer.text}`) // input!.value)\r\n\t\t\t\t\t\t\t\t.then(() => {\r\n\t\t\t\t\t\t\t\t\tconsole.log('Copied to clipboard successfully.');\r\n\t\t\t\t\t\t\t\t}, (err) => {\r\n\t\t\t\t\t\t\t\t\tconsole.log('Failed to copy the text to clipboard.', err);\r\n\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\te.stopPropagation();\r\n\t\t\t\t\t\t// copyQuestionAnswer(categoryId, questionId, answerId);\r\n\t\t\t\t\t}\r\n\t\t\t\t\t}>\r\n\t\t\t\t\t<FontAwesomeIcon icon={faCopy} color='lightblue' />\r\n\t\t\t\t</button>\r\n\t\t\t}\r\n\t\t\t{hoverProps.isHovered &&\r\n\t\t\t\t<button \r\n\t\t\t\t\tclassName=\"button-remove\"\r\n\t\t\t\t\ttitle=\"Remove\"\r\n\t\t\t\t\tonClick={(e) => {\r\n\t\t\t\t\t\t\tremoveQuestionAnswer(categoryId, questionId, answerId);\r\n\t\t\t\t\t\t\te.preventDefault();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t>\r\n\t\t\t\t\t<FontAwesomeIcon icon={faWindowClose} color='lightblue' />\r\n\t\t\t\t</button>\r\n\t\t\t}\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default QuestionAnswerRow\r\n\r\n","import * as React from 'react';\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faPlus, faWindowClose } from '@fortawesome/free-solid-svg-icons'\r\n\r\nimport { IQuestion, IQuestionAnswer } from '../types';\r\nimport { IAnswer } from '../../Answers/types';\r\nimport { AutoSuggestAnswer } from '../../components/AutoSuggestAnswer';\r\nimport QuestionAnswerRow from './QuestionAnswerRow';\r\n\r\ninterface IProps {\r\n\tquestion: IQuestion,\r\n\tquestionAnswers: IQuestionAnswer[],\r\n\tanswers?: IAnswer[],\r\n\tcanEdit: boolean,\r\n\tformMode: string,\r\n\tselectQuestionAnswer: (categoryId: number, questionId: number, answerId: number) => void,\r\n\tcopyQuestionAnswer: (categoryId: number, questionId: number, answerId: number) => void,\r\n\tremoveQuestionAnswer: (categoryId: number, questionId: number, answerId: number) => void,\r\n\tassignQuestionAnswer?: (categoryId: number, questionId: number, answerId: number, tekst?: string) => void,\r\n\tsetAnswerText?: (val: string) => void,\r\n\tsetIsDetail: (isDetail: boolean) => void\r\n}\r\n\r\nconst QuestionAnswers: React.FC<IProps> = (props: IProps) => {\r\n\tconst { \r\n\t\tquestion, \r\n\t\tquestionAnswers, \r\n\t\tanswers, \r\n\t\tcanEdit, \r\n\t\tformMode, \r\n\t\tselectQuestionAnswer, copyQuestionAnswer, removeQuestionAnswer, \r\n\t\tassignQuestionAnswer, setIsDetail \r\n\t} = props; \r\n\tconst answersUnassigned = answers?.filter(a => !question.answers.map(a=>a.answerId).includes(a.answerId))\r\n\r\n\tconst [tekst, setTekst] = React.useState('');\r\n\tconst setAnswerText = (val: string) => {\r\n\t\tsetTekst(val);\r\n\t}\r\n\r\n\tconst assignQuestionAnswerTekst = () => {\r\n\t\tif (assignQuestionAnswer) {\r\n\t\t\t//storeAnswer({ answerId: -1, text: tekst }, 'add')\r\n\t\t\tassignQuestionAnswer(\r\n\t\t\t\tquestion.categoryId,\r\n\t\t\t\tquestion.questionId, \r\n\t\t\t\t-1,\r\n\t\t\t\ttekst\r\n\t\t\t);\r\n\t\t}\r\n\t}\r\n\r\n\tconst goDetail = (isDetail: boolean) => {\r\n\t\tsetIsDetail(isDetail);\r\n\r\n\t\tconst divDetailView = document.getElementById('divDetailView');\r\n\t\tdivDetailView!.classList.add('detail-view-open');\r\n\t\tdivDetailView!.style.zIndex = '3';\r\n\t\t//document.body.classList.add('hide-scroll-bar');\r\n  \t}\t\r\n\r\n\r\n    return (\r\n      <div className=\"name-container question-answers\">\r\n\t\t\t{/* { questionAnswers.length === 0 && \r\n\t\t\t\t<div>\r\n\t\t\t\t\tNo answers yet\r\n\t\t\t\t</div>\r\n\t\t\t} */}\r\n\t\t\t{ questionAnswers.length > -1 && \r\n\t\t\t\t<>\r\n\t\t\t\t<table width=\"100%\">\r\n\t\t\t\t\t<thead>\r\n\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t<th>{ questionAnswers.length === 0 ? 'No answers yet' : 'Answers'}</th>\r\n\t\t\t\t\t\t\t{ canEdit && formMode !== 'display' && <th></th> }\r\n\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t</thead>\r\n\t\t\t\t\t<tbody>\r\n\t\t\t\t\t\t{ questionAnswers.map(qa => \r\n\t\t\t\t\t\t\t<tr key={qa.answerId}>\r\n\t\t\t\t\t\t\t\t<td className=\"name\" title={`AnswerId:${qa.answerId}\\nAssigned: ${qa.assigned.toLocaleDateString()} ${qa.assigned.toLocaleTimeString()}`}>\r\n\t\t\t\t\t\t\t\t\t<QuestionAnswerRow\r\n\t\t\t\t\t\t\t\t\t\tkey={qa.answerId}\r\n\t\t\t\t\t\t\t\t\t\tquestion={question}\r\n\t\t\t\t\t\t\t\t\t\tquestionAnswer={qa}\r\n\t\t\t\t\t\t\t\t\t\tselectQuestionAnswer={selectQuestionAnswer}\r\n\t\t\t\t\t\t\t\t\t\tcopyQuestionAnswer={copyQuestionAnswer}\r\n\t\t\t\t\t\t\t\t\t\tremoveQuestionAnswer={removeQuestionAnswer}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t{/* <td className=\"name\" title={`AnswerId:${qa.answerId}\\nAssigned: ${qa.assigned.toLocaleDateString()} ${qa.assigned.toLocaleTimeString()}`}>\r\n\t\t\t\t\t\t\t\t\t{qa.text}\r\n\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t{ canEdit && formMode !== 'display' &&\r\n\t\t\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t\t\t\t<button className=\"button-remove\" title=\"Remove Answer\" \r\n\t\t\t\t\t\t\t\t\t\t\tonClick={(e) => { \r\n\t\t\t\t\t\t\t\t\t\t\t\te.stopPropagation();\r\n\t\t\t\t\t\t\t\t\t\t\t\te.preventDefault();\r\n\t\t\t\t\t\t\t\t\t\t\t\tremoveQuestionAnswer!(question.categoryId, question.questionId, qa.answerId)\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\t\t\t<FontAwesomeIcon icon={faWindowClose}  color='lightblue' />\r\n\t\t\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t} */}\r\n\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t{canEdit && formMode !== 'display' && <tr>\r\n\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t\t<AutoSuggestAnswer\r\n\t\t\t\t\t\t\t\t\tquestion={question}\r\n\t\t\t\t\t\t\t\t\tanswersUnassigned={answersUnassigned!}\r\n\t\t\t\t\t\t\t\t\tassignQuestionAnswer={assignQuestionAnswer!}\r\n\t\t\t\t\t\t\t\t\tsetAnswerText={setAnswerText}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t<td width=\"35px\">\r\n\t\t\t\t\t\t\t\t<button className=\"button-edit\" title=\"Add a new Answer\" onClick={\r\n\t\t\t\t\t\t\t\t\t(e) => {\r\n\t\t\t\t\t\t\t\t\t\tgoDetail(true);\r\n\t\t\t\t\t\t\t\t\t\te.preventDefault()\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}>\r\n\t\t\t\t\t\t\t\t\t<FontAwesomeIcon icon={faPlus} color='lightblue' />\r\n\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t</tr>}\r\n\t\t\t\t\t</tbody>\r\n\t\t\t\t</table>\r\n\t\t\t\t</>\r\n\t\t\t}\r\n      </div>\r\n    );\r\n  }\r\n\r\nexport default QuestionAnswers\r\n\r\n","import React from \"react\";\r\nimport { IOption, OptionValue } from \"./types\";\r\n\r\ntype Props<T extends OptionValue> = {\r\n    options: IOption<T>[];\r\n    value: T;\r\n    onChange: (e: React.FormEvent<HTMLSelectElement>, value: T) => void;\r\n    id: string,\r\n    name: string,\r\n    disabled?: boolean\r\n};\r\n\r\nexport function Select<T extends OptionValue>(props: Props<T>) {\r\n    const disabled = props.disabled ? true : false;\r\n    function handleOnChange(e: React.FormEvent<HTMLSelectElement>) {\r\n        const { selectedIndex } = e.currentTarget;\r\n        const selectedOption: IOption<T> = props.options[selectedIndex];\r\n        props.onChange(e, selectedOption.value);\r\n    }\r\n\r\n    return (\r\n        <select\r\n            id={props.id}\r\n            value={props.value}\r\n            onChange={handleOnChange}\r\n            disabled={disabled}\r\n        >\r\n            {props.options.map(option => (\r\n                <option key={option.value} value={option.value}>\r\n                    {option.label}\r\n                </option>\r\n            ))}\r\n        </select>\r\n    );\r\n}","export const sourceOptions = [\r\n    { label: \"Unknown\", value: 0 },\r\n    { label: \"Gmail\", value: 1 },\r\n    { label: \"Outlook\", value: 2 },\r\n    { label: \"Phone\", value: 3 },\r\n    { label: \"Chat\", value: 4 },\r\n    { label: \"Slack\", value: 5 }\r\n]","export const statusOptions = [\r\n    { label: \"Unknown\", value: 0 },\r\n    { label: \"In progress\", value: 1 },\r\n    { label: \"Can't reproduce\", value: 2 },\r\n    { label: \"Blocked\", value: 3 },\r\n    { label: \"Complete\", value: 4 }\r\n]","import React, { useState } from 'react';\r\nimport { useFormik } from 'formik';\r\nimport * as Yup from 'yup'\r\nimport { IQuestion, IQuestionAnswer, IQuestionFormProps } from '../types';\r\nimport { IAnswer } from '../../Answers/types';\r\n\r\nimport QuestionAnswers from './QuestionAnswers'\r\nimport { Select } from '../../common/Select';\r\nimport { COLORS } from '../../formik/theme';\r\n//import { MultiSelect } from '../../common/MultiSelect';\r\nimport { IOption } from '../../common/types';\r\nimport UserName from '../../common/containers/UserName';\r\n//import { number } from 'yup/lib/locale';\r\n\r\nimport { sourceOptions } from '../sourceOptions'\r\nimport { statusOptions } from '../statusOptions'\r\n\r\n\r\nconst Form: React.FC<IQuestionFormProps> = (props: IQuestionFormProps) => {\r\n\r\n  const { question } = props;\r\n    const formik = useFormik({\r\n    enableReinitialize: true,\r\n    initialValues: {\r\n      categoryId: question.categoryId,\r\n      questionId: question.questionId,\r\n      text: question.text,\r\n      source: question.source,\r\n      status: question.status,\r\n      answers: question.answers,\r\n      createdBy: question.createdBy,\r\n      created: question.created\r\n    },\r\n    validationSchema: Yup.object({\r\n      text: Yup.string()\r\n        .max(150, 'Must be 150 characters or less')\r\n        .required('Required'),\r\n      /*answers: Yup.string()\r\n        .max(20, 'Must be 20 characters or less')\r\n        .required('Required'),\r\n      email: Yup.string()\r\n        .email('Invalid email address')\r\n        .required('Required'),*/\r\n      categoryId: Yup.number()\r\n        .moreThan(0, 'Select Category')\r\n        .required('Required')\r\n    }),\r\n    onSubmit: values => {\r\n      // alert(JSON.stringify(values, null, 2));\r\n      props.saveForm(values, props.formMode);\r\n      props.handleClose();\r\n    }\r\n  });\r\n\r\n  const isEdit = () => props.formMode === 'edit';\r\n\r\n  console.log('RENDERING', formik.values)\r\n  return (\r\n    <>\r\n    \r\n      <form onSubmit={formik.handleSubmit} className=\"formik-example\">\r\n      \r\n        <label className=\"id\" htmlFor=\"questionId\">QuestionId: </label>\r\n        {/* <input\r\n          id=\"questionId\"\r\n          name=\"questionId\"\r\n          type=\"text\"\r\n          onChange={formik.handleChange}\r\n          onBlur={formik.handleBlur}\r\n          value={formik.values.questionId}\r\n          disabled\r\n          style={{ width: '50px' }}\r\n        />\r\n        {formik.touched.questionId && formik.errors.questionId ? (\r\n          <div>{formik.errors.questionId}</div>\r\n        ) : null} */}\r\n        <span id=\"questionId\">{formik.values.questionId}</span>\r\n        <br/>\r\n\r\n        <label htmlFor=\"categoryId\">Category</label>\r\n        <Select\r\n          id=\"categoryId\"\r\n          name=\"categoryId\"\r\n          options={props.categoryOptions}\r\n          //onChange={formik.handleChange}\r\n          onChange={(e, value) => {\r\n            formik.setFieldValue(\"categoryId\", value);\r\n            if (isEdit()) formik.submitForm();\r\n          }}\r\n          value={formik.values.categoryId}\r\n        />\r\n        {formik.errors.categoryId && <div className=\"field-error\">{formik.errors.categoryId}</div>}\r\n\r\n        <label htmlFor=\"text\">Text</label>\r\n        <textarea\r\n          id=\"text\"\r\n          name=\"text\"\r\n          onChange={formik.handleChange}\r\n          //onBlur={formik.handleBlur}\r\n          onBlur={(e: React.FormEvent<HTMLTextAreaElement>): void => {\r\n            if (isEdit() && formik.initialValues.text !== formik.values.text)\r\n              formik.submitForm();\r\n          }}\r\n          value={formik.values.text}\r\n          style={{ width: '100%' }}\r\n          rows={2}\r\n        />\r\n        {formik.touched.text && formik.errors.text ? (\r\n          <div className=\"field-error\">{formik.errors.text}</div>\r\n        ) : null}\r\n\r\n        <label htmlFor=\"source\">Source</label>\r\n        <Select\r\n          id=\"source\"\r\n          name=\"source\"\r\n          options={sourceOptions}\r\n          // onChange={formik.handleChange}\r\n          onChange={(e, value) => {\r\n            formik.setFieldValue(\"source\", value)\r\n            if (isEdit()) formik.submitForm();\r\n          }}\r\n          value={formik.values.source}\r\n        />\r\n\r\n        <br />\r\n        <QuestionAnswers\r\n          question={question}\r\n          questionAnswers={props.questionAnswers}\r\n          answers={props.answers}\r\n          canEdit={props.canEdit}\r\n          formMode={props.formMode}\r\n          selectQuestionAnswer={props.selectQuestionAnswer}\r\n          copyQuestionAnswer={props.copyQuestionAnswer}\r\n          removeQuestionAnswer={props.removeQuestionAnswer}\r\n          assignQuestionAnswer={props.assignQuestionAnswer}\r\n          setIsDetail={props.setIsDetail}\r\n        />\r\n        <br />\r\n\r\n        <label htmlFor=\"status\">Status</label>\r\n        <Select\r\n          id=\"status\"\r\n          name=\"status\"\r\n          options={statusOptions}\r\n          //onChange={formik.handleChange}\r\n          onChange={(e, value) => {\r\n            formik.setFieldValue(\"status\", value)\r\n            if (isEdit()) formik.submitForm();\r\n          }}\r\n          value={formik.values.status}\r\n        />\r\n\r\n        <label className=\"id\" htmlFor=\"createdBy\">Created by:</label>\r\n        <UserName id={formik.values.createdBy} />\r\n\t\t\t  <br/>\r\n        {/* <Select\r\n          id=\"createdBy\"\r\n          name=\"createdBy\"\r\n          options={props.userOptions}\r\n          //onChange={formik.handleChange}\r\n          onChange={(e, value) => {\r\n            formik.setFieldValue(\"createdBy\", value);\r\n            if (isEdit()) formik.submitForm();\r\n          }}\r\n          value={formik.values.createdBy}\r\n        // onChange={(gradeId: number) =>\r\n        // \tdispatch({\r\n        // \t\ttype: StudentActionTypes.STUDENT_ASSIGN_GRADE,\r\n        // \t\tstudentGradeIds: {\r\n        // \t\t\tstudentId: student!.id,\r\n        // \t\t\tgradeId: gradeId,\r\n        // \t\t\tgradeName: gradesAll[gradeId].name\r\n        // \t\t}\r\n        // \t})\r\n        // }\r\n        /> */}\r\n\r\n        {/* \r\n      <label htmlFor=\"answers\">Answers</label>\r\n      <input\r\n        id=\"answers\"\r\n        name=\"answers\"\r\n        type=\"text\"\r\n        onChange={formik.handleChange}\r\n        onBlur={formik.handleBlur}\r\n        value={formik.values.answers}\r\n      />\r\n      {formik.touched.answers && formik.errors.answers ? (\r\n        <div>{formik.errors.answers}</div>\r\n      ) : null}\r\n\r\n\r\n\r\n      <label htmlFor=\"email\">Email Address</label>\r\n      <input\r\n        id=\"email\"\r\n        name=\"email\"\r\n        type=\"email\"\r\n        onChange={formik.handleChange}\r\n        onBlur={formik.handleBlur}\r\n        value={formik.values.email}\r\n      />\r\n      {formik.touched.email && formik.errors.email ? (\r\n        <div>{formik.errors.email}</div>\r\n      ) : null} */}\r\n\r\n        {/* <button type=\"submit\">Submit</button> */}\r\n\r\n        {/* <label htmlFor=\"features\">Features</label>\r\n        <MultiSelect\r\n          id=\"features\"\r\n          name=\"features\"\r\n          label=\"Select features...\"\r\n          options={props.featureOptions}\r\n          onChange={()=>{}} \r\n          value={[]}\r\n          // onChange={(e, value) => {\r\n          //   formik.setFieldValue(\"status\", value)\r\n          //   if (isEdit()) formik.submitForm();\r\n          // }}\r\n          // value={formik.values.status}\r\n        /> */}\r\n\r\n        {!isEdit() &&\r\n          <div className=\"buttons\">\r\n            {props.canEdit &&\r\n              <button onClick={() => { \r\n                props.cancel(); \r\n                props.handleClose()\r\n              } }>Cancel</button>}\r\n            {props.canEdit &&\r\n              <button type=\"submit\">Save</button>}\r\n          </div>\r\n        }\r\n      </form>\r\n\r\n      <label className=\"id\" htmlFor=\"created\">Created:</label>\r\n      {/* <input\r\n        id=\"created\"\r\n        name=\"text\"\r\n        type=\"text\"\r\n        onChange={formik.handleChange}\r\n        onBlur={formik.handleBlur}\r\n        value={formik.values.created.toLocaleDateString()}\r\n        disabled={true}\r\n      />\r\n      {formik.touched.created && formik.errors.created ? (\r\n        <div>{formik.errors.created}</div>\r\n      ) : null} */}\r\n      <span>{formik.values.created.toLocaleDateString()}</span>\r\n\r\n    </>\r\n  );\r\n};\r\n\r\n\r\nconst color = 'blue';\r\n\r\nexport const QuestionForm: React.FC<IQuestionFormProps> = (props: IQuestionFormProps) => {\r\n  return (\r\n    <div style={{ height: '100%' }} className=\"formik-example formik-example--blue\">\r\n      <div\r\n        style={{\r\n          height: '100%',\r\n          background: COLORS[color][5],\r\n          padding: '1rem 1rem',\r\n        }}\r\n      >\r\n        <div\r\n          style={{\r\n            borderRadius: '4px',\r\n            boxShadow: '0 8px 16px rgba(0,0,0,.2)',\r\n            background: '#fff',\r\n            maxWidth: '90%',\r\n            margin: '0 auto',\r\n            padding: '1rem',\r\n          }}\r\n        >\r\n          <div className=\"formik-example formik-example--blue\">\r\n            <Form {...props} />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}","// import * as React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { IAppState } from '../../store/Store';\r\nimport { IQuestion, IQuestionAnswer, ICategory } from '../types'\r\nimport { IAnswer } from '../../Answers/types'\r\n\r\nimport { Dispatch } from 'redux';  // ActionCreatorsMapObject, \r\nimport {IOption} from '../../common/types';\r\n\r\nimport { QuestionActions,  \r\n\tgetQuestion, \r\n\taddQuestion, \r\n\teditQuestion,\r\n\tremoveQuestion,\r\n\tstoreQuestion,\r\n\tupdateQuestion,\r\n\tcancelQuestion,\r\n\tcloseQuestionForm,\r\n\tremoveQuestionAnswer,\r\n\tassignQuestionAnswer,\r\n\tsetIsDetail,\r\n\taddAndAssignNewAnswer,\r\n\tselectQuestionAnswer,\r\n\tcopyQuestionAnswer,\r\n\ttoggleCategory\r\n} from '../actions'\r\n\r\nimport { QuestionForm } from '../components/QuestionForm';\r\n\r\nconst joinQuestionAnswers = (question: IQuestion | undefined, answers: IAnswer[]) : IQuestionAnswer[]=> {\r\n\tif (question === undefined || question.answers.length === 0 || answers === undefined)\r\n\t\treturn [];\r\n\tconst questionAnswers = question.answers.map(qa => ({\r\n\t\t\t...qa, text: answers.find(a => a.answerId === qa.answerId)!.text\r\n\t\t})\r\n\t);\r\n\treturn questionAnswers.sort((a,b) => a.assigned < b.assigned ? 1 : -1);\r\n}\r\n\r\ninterface IProps {\r\n\tcanEdit: boolean,\r\n\thandleClose: () => void\r\n}\r\n\r\n// Grab the categories from the store and make them available on props\r\nconst mapStateToProps = (store: IAppState, ownProps: IProps ) => {\r\n\tconst {categoriesState, answerState } = store;\r\n\tconst { category, question, categoryOptions, formMode } = categoriesState; \r\n\tconst { answers } = answerState;\r\n\treturn {\r\n\t\tcategoryOptions,\r\n\t\tquestion: question!,\r\n\t\tquestionAnswers: joinQuestionAnswers(question, answers),\r\n\t\tanswers,\r\n\t\tformMode,\r\n\t\tcanEdit: ownProps.canEdit,\r\n\t\thandleClose: ownProps.handleClose\r\n\t};\r\n};\r\n\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch<QuestionActions>) => {\r\n\treturn {\r\n\t\t//onSelectQuestion: (categoryId: number, questionId: number) => dispatch<any>(getQuestion(categoryId, questionId)),\r\n\t\t//add: (categoryId: number, text: string, canEdit?: boolean) => dispatch<any>(addQuestion(categoryId, text, canEdit)),\r\n\t\t//edit: (categoryId: number, questionId: number, showQuestionForm: boolean) => dispatch<any>(editQuestion(categoryId, questionId, showQuestionForm)),\r\n\t\t//remove: (categoryId: number, questionId: number) => dispatch<any>(removeQuestion(true, categoryId, questionId)),\r\n\t\tsaveForm: (question: IQuestion, formMode: string) => \r\n\t\t\tdispatch<any>(formMode==='add'?storeQuestion(true, question):updateQuestion(true, question)),\r\n\t\tcancel: () => dispatch<any>(cancelQuestion()),\r\n\t\t//closeQuestionForm: () => dispatch<any>(closeQuestionForm()),\r\n\r\n\t\t// question answers\r\n\t\tselectQuestionAnswer: (categoryId: number, questionId: number, answerId: number) => \r\n\t\t\tdispatch<any>(selectQuestionAnswer(categoryId, questionId, answerId)),\r\n\t\tcopyQuestionAnswer: (categoryId: number, questionId: number, answerId: number) => \r\n\t\t\tdispatch<any>(copyQuestionAnswer(categoryId, questionId, answerId)),\r\n\t\tremoveQuestionAnswer: (categoryId: number, questionId: number, answerId: number) => \r\n\t\t\tdispatch<any>(removeQuestionAnswer(categoryId, questionId, answerId)),\r\n\r\n\t\tassignQuestionAnswer: (categoryId: number, questionId: number, answerId: number) => \r\n\t\t\tdispatch<any>(assignQuestionAnswer(categoryId, questionId, answerId)),\r\n\t\t\r\n\t\tsetIsDetail: (isDetail: boolean) => {\r\n\t\t\tdispatch<any>(setIsDetail(isDetail))\r\n\t\t},\r\n\r\n\t\taddAndAssignNewAnswer: (categoryId: number, questionId: number, answer: IAnswer, formMode: string) => {\r\n\t\t\tdispatch<any>(addAndAssignNewAnswer(categoryId, questionId, answer, formMode))\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(QuestionForm);\r\n\r\n","import * as React from 'react';\r\n\r\nimport { useHover } from '../../common/useHover'\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faWindowClose, faEdit } from '@fortawesome/free-solid-svg-icons'\r\n\r\nimport { IQuestion } from '../types';\r\n\r\n\r\ninterface IQuestionRowProps {\r\n\tquestion: IQuestion;\r\n\tonSelectQuestion: (categoryId: number, questionId: number) => void;\r\n\tedit: (categoryId: number, questionId: number, showQuestionForm: boolean) => void;\r\n\tremove: (categoryId: number, questionId: number) => void;\r\n}\r\n\r\nconst QuestionRow: React.FC<IQuestionRowProps> = (props: IQuestionRowProps) => {\r\n\r\n\tconst [hoverRef, hoverProps] = useHover();\r\n\r\n\tconst { question, onSelectQuestion, edit, remove } = props;\r\n\tconst { categoryId, questionId } = question;\r\n\r\n   return (\r\n\t\t<div ref={hoverRef} className=\"name\">\r\n\t\t\t<button\r\n\t\t\t\tclassName=\"question-button\"\r\n\t\t\t\tonClick={() => onSelectQuestion(categoryId, questionId)}>\r\n\t\t\t\t{question.text}\r\n\t\t\t</button>\r\n\t\t\t{hoverProps.isHovered && \r\n\t\t\t\t<button className=\"button-edit\" title=\"Edit\" onClick={() => edit(categoryId, questionId, true)}>\r\n\t\t\t\t\t<FontAwesomeIcon icon={faEdit} color='lightblue' />\r\n\t\t\t\t</button>\r\n\t\t\t}\r\n\t\t\t{hoverProps.isHovered &&\r\n\t\t\t\t<button className=\"button-remove\" title=\"Remove\" onClick={() => remove(categoryId, questionId)}>\r\n\t\t\t\t\t<FontAwesomeIcon icon={faWindowClose}  color='lightblue' />\r\n\t\t\t\t</button>\r\n\t\t\t}\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default QuestionRow\r\n\r\n","import * as React from 'react';\r\n\r\nimport { useHover } from '../../common/useHover'\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faWindowClose, faEdit, faCaretRight, faCaretDown } from '@fortawesome/free-solid-svg-icons'\r\n\r\nimport { ICategory } from '../types';\r\n\r\n\r\ninterface ICategoryRowProps {\r\n\tcategory: ICategory;\r\n\ttoggleCategory: (categoryId: number) => void;\r\n\teditCategory: (categoryId: number) => void;\r\n\tremoveCategory: (categoryId: number) => void;\r\n\tonSelectCategory: (categoryId: number) => void;\r\n}\r\n\r\nconst CategoryRow: React.FC<ICategoryRowProps> = (props: ICategoryRowProps) => {\r\n\r\n\tconst [hoverRef, hoverProps] = useHover();\r\n\tconst { category, toggleCategory, editCategory, removeCategory, onSelectCategory } = props;\r\n\tconst {categoryId, title, questions: categories, isExpanded} = category;\r\n\r\n\treturn (\r\n\t\t<div ref={hoverRef} key={categoryId} className=\"name\">\r\n\t\t\t<button\r\n\t\t\t\tclassName=\"button-edit\"\r\n\t\t\t\ttitle=\"Expand\"\r\n\t\t\t\tonClick={() => toggleCategory(categoryId)} \r\n\t\t\t\tstyle={{ marginLeft: '5px' }}\r\n\t\t\t>\r\n\t\t\t\t<FontAwesomeIcon icon={isExpanded?faCaretDown:faCaretRight} color='orange' size='lg' />\r\n\t\t\t</button>\r\n\t\t\t<span className='question-group-title' onClick={() => onSelectCategory(categoryId)}>{title}</span>\r\n\t\t\t{hoverProps.isHovered &&\r\n\t\t\t\t<button className=\"button-edit\" title=\"Edit Category\" onClick={() => editCategory(categoryId)}>\r\n\t\t\t\t\t<FontAwesomeIcon icon={faEdit} color='lightblue' />\r\n\t\t\t\t</button>\r\n\t\t\t}\r\n\t\t\t{hoverProps.isHovered && categories.length === 0 &&\r\n\t\t\t\t<button className=\"button-remove\" title=\"Remove Category\" onClick={() => removeCategory(categoryId)}>\r\n\t\t\t\t\t<FontAwesomeIcon icon={faWindowClose} color='lightblue' />\r\n\t\t\t\t</button>\r\n\t\t\t}\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default CategoryRow\r\n\r\n","import * as React from 'react';\r\nimport { useRef } from 'react'\r\nimport { faPlus, faWindowClose } from '@fortawesome/free-solid-svg-icons'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nimport { ICategoryListProps } from '../types'\r\n\r\nimport QuestionRow from './QuestionRow';\r\nimport CategoryRow from './CategoryRow';\r\n\r\nimport { COLORS } from '../../formik/theme';\r\nconst color = 'blue';\r\n\r\nconst CategoryList: React.FC<ICategoryListProps> = (props: ICategoryListProps) => {\r\n\r\n\tconst { categories, categoryQuestions, \r\n\t\tcategoryIdEditing, onSelectCategory, onSelectQuestion, add, edit, remove, canEdit,\r\n\t\taddCategory, toggleCategory, editCategory, removeCategory, updateCategory, who } = props;\r\n\r\n\r\n\tconst inputEl = useRef<HTMLInputElement>(null);\r\n\tsetTimeout(() => {\r\n\t\tif (inputEl.current !== null) {\r\n\t\t\tinputEl.current!.select();\r\n\t\t\tinputEl.current!.focus()\r\n\t\t}\r\n\t}, 100)\r\n\r\n\t// const expandCategory = (categoryId: number): void => {\r\n\t// \tconst div = document.querySelector<HTMLDivElement>(\"#divCategory\" + categoryId);\r\n\t// \tconsole.log(div)\r\n\t// \tdiv!.style.display = 'block';\r\n\t// }\r\n\r\n\tconsole.log('RENDERUJEM Categories ----------->>>>>>>>>>')\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<h3>Categories\r\n\t\t\t\t<button className=\"button-add-category\" title=\"Add a new Category\" onClick={() => addCategory()}>\r\n\t\t\t\t\t<FontAwesomeIcon icon={faPlus} size='xs' color='lightblue' />\r\n\t\t\t\t</button>\r\n\t\t\t</h3>\r\n\r\n\t\t\t{categories.map(category => {\r\n\t\t\t\tconst { categoryId, title, isExpanded } = category;\r\n\t\t\t\tconst categoryState = categoryQuestions.get(categoryId);\r\n\t\t\t\tconst { questions } = categoryState!;\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<div key={categoryId} style={{ paddingBottom: '5px' }}>\r\n\t\t\t\t\t\t<div style={{ textAlign: 'start' }}>\r\n\t\t\t\t\t\t\t{categoryIdEditing === categoryId &&\r\n\t\t\t\t\t\t\t\t<input ref={inputEl} name=\"groupTitle\" type=\"text\"\r\n\t\t\t\t\t\t\t\t\tonBlur={(e) => updateCategory({ ...category, title: e.target.value })}\r\n\t\t\t\t\t\t\t\t\tdefaultValue={title}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t{categoryIdEditing !== categoryId && (\r\n\t\t\t\t\t\t\t\t<CategoryRow\r\n\t\t\t\t\t\t\t\t\tkey={category.categoryId}\r\n\t\t\t\t\t\t\t\t\tcategory={category}\r\n\t\t\t\t\t\t\t\t\tonSelectCategory={onSelectCategory}\r\n\t\t\t\t\t\t\t\t\ttoggleCategory={toggleCategory}\r\n\t\t\t\t\t\t\t\t\teditCategory={editCategory}\r\n\t\t\t\t\t\t\t\t\tremoveCategory={removeCategory}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t{isExpanded &&\r\n\t\t\t\t\t\t\t<div className=\"group-categories\" style={{ textAlign: 'start' }}>\r\n\t\t\t\t\t\t\t\t{questions.map(question =>\r\n\t\t\t\t\t\t\t\t\t<QuestionRow\r\n\t\t\t\t\t\t\t\t\t\tkey={question.questionId}\r\n\t\t\t\t\t\t\t\t\t\tquestion={question}\r\n\t\t\t\t\t\t\t\t\t\tonSelectQuestion={onSelectQuestion}\r\n\t\t\t\t\t\t\t\t\t\tedit={edit}\r\n\t\t\t\t\t\t\t\t\t\tremove={remove}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t<div style={{ marginLeft: '0%' }}>\r\n\t\t\t\t\t\t\t\t\t<button className=\"button-add\" title=\"Add a new Question\" onClick={() => add(category.categoryId, '', true)}>\r\n\t\t\t\t\t\t\t\t\t\t<FontAwesomeIcon icon={faPlus} size='xs' color='lightblue' />\r\n\t\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t);\r\n\t\t\t})\r\n\t\t\t}\r\n\r\n\t\t</>\r\n\r\n\t)\r\n}\r\n\r\nexport default CategoryList","// import * as React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { IAppState } from '../../store/Store';\r\nimport { IQuestion, IQuestionAnswer, ICategory } from '../types'\r\nimport { IAnswer } from '../../Answers/types'\r\n\r\nimport { Dispatch } from 'redux';\r\n\r\nimport { QuestionActions,  \r\n\tgetQuestion, \r\n\taddQuestion, \r\n\teditQuestion,\r\n\tremoveQuestion,\r\n\tcloseQuestionForm,\r\n\topenQuestionForm,\r\n\taddCategory,\r\n\teditCategory,\r\n\tremoveCategory,\r\n\tstoreCategory,\r\n\tupdateCategory,\r\n\taddAndAssignNewAnswer,\r\n\ttoggleCategory,\r\n\tgetCategory\r\n} from '../actions'\r\n\r\nimport CategoryList from '../components/CategoryList'\r\n\r\ninterface IProps {\r\n\tcanEdit: boolean\r\n}\r\n\r\n// Grab the categories from the store and make them available on props\r\nconst mapStateToProps = (store: IAppState, ownProps: IProps ) => {\r\n\tconst {categoriesState, tagState, topState} = store;\r\n\t\r\n\tconst { \r\n\t\tcategories,\r\n\t\tcategoryQuestions,\r\n\t\tshowCategoryForm,\r\n\t\tcategory,\r\n\t\tshowQuestionForm,\r\n\t\tquestion,\r\n\t\tcategoryOptions,\r\n\t\tformMode,\r\n\t\tcategoryIdEditing,\r\n\t\tisDetail\r\n\t} = categoriesState;\r\n\r\n\treturn {\r\n\t\tcategories,\r\n\t\tcategoryQuestions,\r\n\t\tcategoryOptions,\r\n\t\tshowCategoryForm,\r\n\t\tcategory,\r\n\t\tshowQuestionForm,\r\n\t\tquestion,\r\n\t\tformMode,\r\n\t\tcategoryIdEditing,\r\n\t\tcanEdit: ownProps.canEdit,\r\n\t\tisDetail,\r\n\t\ttagOptions: tagState.tags.map(f => ({ label: f.name, value: f.tagId, color: f.color })),\r\n\t\twho: topState.top.auth!.who,\r\n\t\tnavbarOpen: topState.top.navbarOpen\r\n\t};\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch<QuestionActions>) => {\r\n\treturn {\r\n\t\tonSelectQuestion: (categoryId: number, questionId: number) => {\r\n\t\t\tdispatch<any>(getQuestion(categoryId, questionId));\r\n\t\t\tdispatch<any>(openQuestionForm());\r\n\t\t},\r\n\t\tadd: (categoryId: number, text: string, canEdit?: boolean) => {\r\n\t\t\tdispatch<any>(addQuestion(categoryId, text, canEdit))\r\n\t\t\tdispatch<any>(openQuestionForm());\r\n\t\t},\r\n\t\t//edit: (categoryId: number, questionId: number) => dispatch<any>(editQuestion(categoryId, questionId)),\r\n\t\tedit: (categoryId: number, questionId: number, showQuestionForm: boolean) => dispatch<any>(editQuestion(categoryId, questionId, showQuestionForm)),\r\n\t\tremove: (categoryId: number, questionId: number) => dispatch<any>(removeQuestion(categoryId, questionId)),\r\n\t\tcloseQuestionForm: () => dispatch<any>(closeQuestionForm()),\r\n\t\topenQuestionForm: () => dispatch<any>(openQuestionForm()),\r\n\r\n\t\t// question answer\r\n\t\taddAndAssignNewAnswer: (categoryId: number, questionId: number, answer: IAnswer, formMode: string) => {\r\n\t\t\tdispatch<any>(addAndAssignNewAnswer(categoryId, questionId, answer, formMode))\r\n\t\t},\r\n\t\t// groups\r\n\t\tonSelectCategory: (categoryId: number) => dispatch<any>(getCategory(categoryId)),\r\n\t\taddCategory: () => dispatch<any>(addCategory()),\r\n\t\ttoggleCategory: (categoryId: number) =>  dispatch<any>(toggleCategory(categoryId)),\r\n\t\teditCategory: (categoryId: number) =>  dispatch<any>(editCategory(categoryId)),\r\n\t\tremoveCategory: (categoryId: number) => dispatch<any>(removeCategory(true, categoryId)),\r\n\t\tstoreCategory: (group: ICategory) => dispatch<any>(storeCategory(true, group)),\r\n\t\tupdateCategory: (group: ICategory) => dispatch<any>(updateCategory(true, group)),\r\n\t}\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CategoryList)\r\n","import * as React from 'react';\r\nimport { useRef, useState } from 'react'\r\n\r\nimport { ICategoriesProps } from '../types'\r\n\r\nimport { AutoSuggest } from '../../components/AutoSuggest';\r\nimport ContainerCategoryForm from '../containers/ContainerCategoryForm';\r\nimport ContainerQuestionForm from '../containers/ContainerQuestionForm';\r\nimport QuestionRow from './QuestionRow';\r\nimport CategoryRow from './CategoryRow';\r\nimport { useParams } from 'react-router-dom' // useRouteMatch\r\nimport { DetailView } from './DetailView';\r\n\r\nimport { COLORS } from '../../formik/theme';\r\nimport { Col, Collapse, Container, Row } from 'react-bootstrap';\r\nimport ContainerCategoryList from '../containers/ContainerCategoryList';\r\nconst color = 'blue';\r\n\r\ntype SupportParams = {\r\n\ttekst: string;\r\n};\r\n\r\nconst Page: React.FC<ICategoriesProps> = (props: ICategoriesProps) => {\r\n\r\n\tlet { tekst } = useParams<SupportParams>();\r\n\r\n\tconst { \r\n\t\tcategories, \r\n\t\tcategoryQuestions, \r\n\t\tshowCategoryForm, \r\n\t\tcategory, \r\n\t\tshowQuestionForm, \r\n\t\tquestion, \r\n\t\tformMode, \r\n\t\tcanEdit,\r\n\t\tonSelectQuestion } = props;\r\n\r\n\t//const [open, setOpen] = useState(false);\r\n\tconst open = categories && (category || question)\r\n\r\n\tconst inputEl = useRef<HTMLInputElement>(null);\r\n\tsetTimeout(() => {\r\n\t\tif (inputEl.current !== null) {\r\n\t\t\tinputEl.current!.select();\r\n\t\t\tinputEl.current!.focus()\r\n\t\t}\r\n\t}, 100)\r\n\r\n\tconsole.log('RENDERUJEM Categories ----------->>>>>>>>>>')\r\n\t// if (showQuestionForm)\r\n\t// \tcloseQuestionForm();\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Container fluid>\r\n\t\t\t\t<Row style={{ border: '3px solid lightblue' }}>\r\n\t\t\t\t\t<Col md={open ? 6 : 12} lg={open ? 6 : 12} style={{ padding: '10px', backgroundColor: '#eff3f6', color: '#686c71' }}>\r\n\t\t\t\t\t\t<div style={{ border: '0px solid silver', backgroundColor: 'white' }}>\r\n\t\t\t\t\t\t\t<AutoSuggest\r\n\t\t\t\t\t\t\t\tcategories={categories}\r\n\t\t\t\t\t\t\t\tcategoryQuestions={categoryQuestions}\r\n\t\t\t\t\t\t\t\ttekst={tekst}\r\n\t\t\t\t\t\t\t\tonSelectQuestion={(categoryId: number, questionId: number) => onSelectQuestion(categoryId, questionId)}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<hr />\r\n\t\t\t\t\t\t\t{/* <h3>Categories</h3> */}\r\n\t\t\t\t\t\t\t{categories && \r\n\t\t\t\t\t\t\t\t<ContainerCategoryList {...props} />\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t\t{/* <Collapse\r\n\t\t\t\t\t\tin={open}\r\n\t\t\t\t\t\tdimension=\"width\"\r\n\t\t\t\t\t\tonEnter={() => { console.log('onEnter'); }}\r\n\t\t\t\t\t\tonEntering={() => { console.log('onEntering'); }}\r\n\t\t\t\t\t\tonEntered={() => { console.log('onEntered'); }}\r\n\t\t\t\t\t\tonExit={() => { console.log('onExit'); }}\r\n\t\t\t\t\t\tonExiting={() => { console.log('onExiting'); }}\r\n\t\t\t\t\t\tonExited={() => { console.log('onExited'); }}\r\n\t\t\t\t\t> */}\r\n\t\t\t\t\t<Col md={open ? 6 : 0} lg={open ? 6 : 0} style={{ backgroundColor: '#eff3f6', color: '#686c71', padding: '10px' }}>\r\n\t\t\t\t\t\t<div style={{ border: '0px solid silver', backgroundColor: 'white' }}>\r\n\t\t\t\t\t\t\t{categories && showCategoryForm && category &&\r\n\t\t\t\t\t\t\t\t<div style={{ border: '1px solid silver', borderRadius: '5px', padding: '5px 5px 15px 5px', background: COLORS[color][5] }}>\r\n\t\t\t\t\t\t\t\t\t<h4 style={{ marginTop: 0, color: 'white' }}>Category</h4>\r\n\t\t\t\t\t\t\t\t\t{formMode === 'display' ?\r\n\t\t\t\t\t\t\t\t\t\t<ContainerCategoryForm canEdit={false} />\r\n\t\t\t\t\t\t\t\t\t\t:\r\n\t\t\t\t\t\t\t\t\t\t<ContainerCategoryForm canEdit={canEdit} />\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t{categories && showQuestionForm && question &&\r\n\t\t\t\t\t\t\t\t<div style={{ border: '1px solid silver', borderRadius: '5px', padding: '5px 5px 15px 5px', background: COLORS[color][5] }}>\r\n\t\t\t\t\t\t\t\t\t<h4 style={{ marginTop: 0, color: 'white' }}>Question</h4>\r\n\t\t\t\t\t\t\t\t\t{formMode === 'display' ?\r\n\t\t\t\t\t\t\t\t\t\t<ContainerQuestionForm canEdit={false} handleClose={() => { }} />\r\n\t\t\t\t\t\t\t\t\t\t:\r\n\t\t\t\t\t\t\t\t\t\t<ContainerQuestionForm canEdit={canEdit} handleClose={() => { }} />\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t\t{/* </Collapse> */}\r\n\t\t\t\t</Row>\r\n\t\t\t</Container>\r\n\t\t\t{/* <DetailView\r\n\t\t\t\tcategoryId={question ? question!.categoryId : 0}\r\n\t\t\t\tquestionId={question ? question!.questionId : 0}\r\n\t\t\t\taddAndAssignNewAnswer={addAndAssignNewAnswer}\r\n\t\t\t\twho={who}\r\n\t\t\t/>\t */}\r\n\t\t\t{/* visible={isDetail} */}\r\n\t\t</>\r\n\t);\r\n}\r\n\r\nexport default Page;","import React, { useState } from 'react';\r\nimport { useParams } from 'react-router-dom' // useRouteMatch\r\n\r\nimport { IQuestion, ICategoriesProps, initialQuestion } from '../types';\r\n\r\nimport { AutoSuggest } from '../../components/AutoSuggest';\r\nimport ContainerQuestionForm from '../containers/ContainerQuestionForm'\r\n\r\nimport { COLORS } from '../../formik/theme';\r\nimport { faPlus, faWindowClose } from '@fortawesome/free-solid-svg-icons'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport { Select } from '../../common/Select';\r\n\r\nconst color = 'blue';\r\n\r\ntype SupportParams = {\r\n\ttekst: string; \r\n};\r\n\r\nconst SupportPage: React.FC<ICategoriesProps> = (props: ICategoriesProps) => {\r\n\tlet { tekst } = useParams<SupportParams>();\r\n\tconst { categories, categoryQuestions, question, showQuestionForm, onSelectQuestion, add, closeQuestionForm, canEdit } = props;\r\n\tconsole.log('tekst:', tekst)\r\n\tconst [show, setShow] = useState(false);\r\n\tconst handleClose = () => setShow(false);\r\n\tconst handleShow = () => setShow(true);\r\n\r\n\tif (showQuestionForm)\r\n\t\tcloseQuestionForm();\r\n\r\n\treturn (\r\n\t\t<div className=\"name-container\">\r\n\t\t\t<div className=\"two-columns\">\r\n\t\t\t\t<div className=\"a\">\r\n\t\t\t\t\t<div style={{ display: 'flex' }}>\r\n\t\t\t\t\t\t{/* Support Page tekst: {tekst} */}\r\n\t\t\t\t\t\t<AutoSuggest\r\n\t\t\t\t\t\t\tcategories={categories}\r\n\t\t\t\t\t\t\tcategoryQuestions={categoryQuestions}\r\n\t\t\t\t\t\t\ttekst={tekst}\r\n\t\t\t\t\t\t\tonSelectQuestion={(categoryId: number, questionId: number) => onSelectQuestion(categoryId, questionId)}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\tclassName=\"button-edit\"\r\n\t\t\t\t\t\t\ttitle=\"Create a new Question\"\r\n\t\t\t\t\t\t\tonClick={() => { handleShow(); add(0, tekst ?? '', true)  } } \r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<FontAwesomeIcon icon={faPlus} color='lightblue' />\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"b\">\r\n\t\t\t\t\t{categories && question && showQuestionForm &&\r\n\t\t\t\t\t\t<div style={{ border: '1px solid silver', borderRadius: '5px', padding: '5px 5px 15px 5px', background: COLORS[color][5] }}>\r\n\t\t\t\t\t\t\t<h4 style={{ marginTop: 0, color: 'white' }}>Question</h4>\r\n\t\t\t\t\t\t\t<ContainerQuestionForm canEdit={canEdit} handleClose={() => {}} />\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t}\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<Modal show={show} onHide={handleClose} animation={true} size=\"lg\" centered>\r\n\t\t\t\t<Modal.Header closeButton>\r\n\t\t\t\t\t<Modal.Title>Store question</Modal.Title>\r\n\t\t\t\t</Modal.Header>\r\n\t\t\t\t<Modal.Body>\r\n\t\t\t\t\t<ContainerQuestionForm canEdit={canEdit} handleClose={handleClose} />\r\n\t\t\t\t</Modal.Body>\r\n\t\t\t\t{/* <Modal.Footer>\r\n\t\t\t\t\t<Button variant=\"secondary\" onClick={handleClose}>\r\n\t\t\t\t\t\tClose\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t\t<Button variant=\"primary\" onClick={handleClose}>\r\n\t\t\t\t\t\tSave Changes\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t</Modal.Footer> */}\r\n\t\t\t</Modal>\r\n\t\t</div>\r\n\r\n\t);\r\n}\r\n\r\nexport default SupportPage\r\n\r\n","// import * as React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { IAppState } from '../../store/Store';\r\nimport { IQuestion, IQuestionAnswer, ICategory } from '../types'\r\nimport { IAnswer } from '../../Answers/types'\r\n\r\nimport { Dispatch } from 'redux';  // ActionCreatorsMapObject, \r\n\r\nimport { QuestionActions,  \r\n\tgetQuestion, \r\n\taddQuestion, \r\n\teditQuestion,\r\n\tremoveQuestion,\r\n\tcloseQuestionForm,\r\n\topenQuestionForm,\r\n\taddCategory,\r\n\teditCategory,\r\n\tremoveCategory,\r\n\tstoreCategory,\r\n\tupdateCategory,\r\n\taddAndAssignNewAnswer,\r\n\ttoggleCategory,\r\n\tgetCategory\r\n} from '../actions'\r\n\r\nimport CategoriesPage from '../components/CategoriesPage'\r\nimport SupportPage from '../components/SuportPage'\r\n\r\ninterface IProps {\r\n\tcanEdit: boolean\r\n}\r\n\r\n// Grab the categories from the store and make them available on props\r\nconst mapStateToProps = (store: IAppState, ownProps: IProps ) => {\r\n\tconst {categoriesState, tagState, topState} = store;\r\n\t\r\n\tconst { \r\n\t\tcategories,\r\n\t\tcategoryQuestions,\r\n\t\tshowCategoryForm,\r\n\t\tcategory,\r\n\t\tshowQuestionForm,\r\n\t\tquestion,\r\n\t\tcategoryOptions,\r\n\t\tformMode,\r\n\t\tcategoryIdEditing,\r\n\t\tisDetail\r\n\t} = categoriesState;\r\n\r\n\treturn {\r\n\t\tcategories,\r\n\t\tcategoryQuestions,\r\n\t\tcategoryOptions,\r\n\t\tshowCategoryForm,\r\n\t\tcategory,\r\n\t\tshowQuestionForm,\r\n\t\tquestion,\r\n\t\tformMode,\r\n\t\tcategoryIdEditing,\r\n\t\tcanEdit: ownProps.canEdit,\r\n\t\tisDetail,\r\n\t\ttagOptions: tagState.tags.map(f => ({ label: f.name, value: f.tagId, color: f.color })),\r\n\t\twho: topState.top.auth!.who,\r\n\t\tnavbarOpen: topState.top.navbarOpen\r\n\t};\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch<QuestionActions>) => {\r\n\treturn {\r\n\t\tonSelectQuestion: (categoryId: number, questionId: number) => {\r\n\t\t\tdispatch<any>(getQuestion(categoryId, questionId));\r\n\t\t\tdispatch<any>(openQuestionForm());\r\n\t\t},\r\n\t\tadd: (categoryId: number, text: string, canEdit?: boolean) => dispatch<any>(addQuestion(categoryId, text, canEdit)),\r\n\t\tcloseQuestionForm: () => dispatch<any>(closeQuestionForm())\r\n\t}\r\n}\r\n\r\n\r\nexport default {\r\n\tcategories: connect(mapStateToProps, mapDispatchToProps)(CategoriesPage),\r\n\tsupporter: connect(mapStateToProps, mapDispatchToProps)(SupportPage)\r\n};","import * as React from 'react';\r\n\r\nimport containers from '../Categories/containers/ContainerCategoriesPage'\r\n\r\n// type TParams = { id: string };\r\n\r\n// function Product({ match }: RouteComponentProps<TParams>) {\r\n//   return <h2>This is a page for product with ID: {match.params.id} </h2>;\r\n// }\r\n\r\nsetTimeout(() => {\r\n  const div = document.querySelector('#divKnowledge');\r\n  if (div)\r\n    div!.setAttribute('style', 'display:none')\r\n}, 10000)\r\n\r\nconst Support: React.FC<{}> = () => { \r\n  return (\r\n    <>\r\n      <h2 style={{textAlign: 'center', marginBlockStart: '0.66rem', marginBlockEnd: '0.1rem' }}>Questions &amp; Answers</h2>\r\n      <div id='divKnowledge' className='knowledge'>\r\n        <h5 style={{textAlign: 'center', color: 'blue', fontSize:'15px'}}><i>A knowledge base for sharing information. \r\n          <br/>When you record your experiences and insights, <br/>other members of your team can share info.\r\n          </i></h5>\r\n      </div>\r\n      <containers.supporter canEdit={true} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Support;","import React from 'react';\r\nimport { useFormik } from 'formik';\r\nimport * as Yup from 'yup'\r\nimport { IAnswer } from '../types';\r\nimport { COLORS } from '../../formik/theme';\r\nimport { Select } from '../../common/Select';\r\nimport { IOption } from '../../common/types';\r\nimport UserName from '../../common/containers/UserName'\r\n\r\ninterface IProps {\r\n\tanswer: IAnswer;\r\n\tformMode: string;\r\n\toptions?: string[];\r\n\tcancel: () => void;\r\n\tsaveForm: (answer: IAnswer, formMode: string) => void;\r\n}\r\n\r\n\r\nconst Form: React.FC<IProps> = (props: IProps) => {\r\n\tconst formik = useFormik({\r\n\t\tenableReinitialize: true,\r\n\t\tinitialValues: {\r\n\t\t\tanswerId: props.answer.answerId,\r\n\t\t\ttext: props.answer.text,\r\n\t\t\tcreatedBy: props.answer.createdBy,\r\n\t\t\tcreated: props.answer.created,\r\n\t\t},\r\n\t\tvalidationSchema: Yup.object({\r\n\t\t\ttext: Yup.string()\r\n\t\t\t\t.max(150, 'Must be 150 characters or less')\r\n\t\t\t\t.required('Required'),\r\n\t\t}),\r\n\t\tonSubmit: (values) => {\r\n\t\t\t// alert(JSON.stringify(values, null, 2));\r\n\t\t\tprops.saveForm(values, props.formMode)\r\n\t\t},\r\n\t});\r\n\r\n\tconst isEdit = () => props.formMode === 'edit';\r\n\tconsole.log('RENDERING', formik.values)\r\n\r\n\treturn (\r\n\t\t<form onSubmit={formik.handleSubmit}>\r\n\t\t\t{props.formMode !== 'add' &&\r\n\t\t\t\t<>\r\n\t\t\t\t\t<label className=\"id\" htmlFor=\"answerId\">Answer Id: </label>\r\n\t\t\t\t\t{/* <input\r\n\t\t\t\t\t\tid=\"answerId\"\r\n\t\t\t\t\t\tname=\"answerId\"\r\n\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\tonChange={formik.handleChange}\r\n\t\t\t\t\t\tonBlur={formik.handleBlur}\r\n\t\t\t\t\t\tvalue={formik.values.answerId}\r\n\t\t\t\t\t\tdisabled\r\n\t\t\t\t\t\tstyle={{ width: '50px' }}\r\n\t\t\t\t\t/> */}\r\n\t\t\t\t\t<span id=\"answerId\">{formik.values.answerId}</span>\r\n\t\t\t\t\t{/* {formik.touched.answerId && formik.errors.answerId ? (\r\n\t\t\t\t\t\t<div>{formik.errors.answerId}</div>\r\n\t\t\t\t\t) : null} */}\r\n\t\t\t\t</>\r\n\t\t\t}\r\n\r\n\t\t\t<label htmlFor=\"text\">Answer</label>\r\n\t\t\t<textarea\r\n\t\t\t\tid=\"text\"\r\n\t\t\t\tname=\"text\"\r\n\t\t\t\tonChange={formik.handleChange}\r\n\t\t\t\tonBlur={(e: React.FormEvent<HTMLTextAreaElement>): void => {\r\n\t\t\t\t\tif (isEdit()) formik.submitForm();\r\n\t\t\t\t}}\r\n\t\t\t\tvalue={formik.values.text}\r\n\t\t\t\trows={2}\r\n\t\t\t\tstyle={{ width: '100%' }}\r\n\t\t\t/>\r\n\t\t\t{formik.touched.text && formik.errors.text ? (\r\n\t\t\t\t<div>{formik.errors.text}</div>\r\n\t\t\t) : null}\r\n\r\n\t\t\t<label className=\"id\" htmlFor=\"createdBy\">Created by:</label>\r\n\t\t\t{/* <span>{formik.values.createdBy.toLocaleDateString()}</span> */}\r\n\t\t\t<UserName id={formik.values.createdBy} />\r\n\t\t\t<br/>\r\n\t\t\t{/* <Select\r\n\t\t\t\tid=\"createdBy\"\r\n\t\t\t\tname=\"createdBy\"\r\n\t\t\t\toptions={props.userOptions}\r\n\t\t\t\t//onChange={formik.handleChange}\r\n\t\t\t\tonChange={(e, value) => {\r\n\t\t\t\t\tformik.setFieldValue(\"createdBy\", value)\r\n\t\t\t\t\tif (isEdit()) formik.submitForm();\r\n\t\t\t\t}}\r\n\t\t\t\tvalue={formik.values.createdBy}\r\n\t\t\t// onChange={(gradeId: number) =>\r\n\t\t\t// \tdispatch({\r\n\t\t\t// \t\ttype: StudentActionTypes.STUDENT_ASSIGN_GRADE,\r\n\t\t\t// \t\tstudentGradeIds: {\r\n\t\t\t// \t\t\tstudentId: student!.id,\r\n\t\t\t// \t\t\tgradeId: gradeId,\r\n\t\t\t// \t\t\tgradeName: gradesAll[gradeId].name\r\n\t\t\t// \t\t}\r\n\t\t\t// \t})\r\n\t\t\t// }\r\n\t\t\t/> */}\r\n\r\n\t\t\t<label className=\"id\" htmlFor=\"created\">Created:</label>\r\n\t\t\t{/* <input\r\n\t\t\t\tid=\"created\"\r\n\t\t\t\tname=\"text\"\r\n\t\t\t\ttype=\"text\"\r\n\t\t\t\tonChange={formik.handleChange}\r\n\t\t\t\tonBlur={formik.handleBlur}\r\n\t\t\t\tvalue={formik.values.created.toLocaleDateString()}\r\n\t\t\t\tdisabled={true}\r\n\t\t\t/>\r\n\t\t\t{formik.touched.created && formik.errors.created ? (\r\n\t\t\t\t<div>{formik.errors.created}</div>\r\n\t\t\t) : null} */}\r\n\t\t\t<span>{formik.values.created.toLocaleDateString()}</span>\r\n\r\n\t\t\t{/* \r\n      <label htmlFor=\"answers\">Answers</label>\r\n      <input\r\n        id=\"answers\"\r\n        name=\"answers\"\r\n        type=\"text\"\r\n        onChange={formik.handleChange}\r\n        onBlur={formik.handleBlur}\r\n        value={formik.values.answers}\r\n      />\r\n      {formik.touched.answers && formik.errors.answers ? (\r\n        <div>{formik.errors.answers}</div>\r\n      ) : null}\r\n\r\n      <label htmlFor=\"email\">Email Address</label>\r\n      <input\r\n        id=\"email\"\r\n        name=\"email\"\r\n        type=\"email\"\r\n        onChange={formik.handleChange}\r\n        onBlur={formik.handleBlur}\r\n        value={formik.values.email}\r\n      />\r\n      {formik.touched.email && formik.errors.email ? (\r\n        <div>{formik.errors.email}</div>\r\n      ) : null} */}\r\n\r\n\t\t\t{!isEdit() &&\r\n\t\t\t\t<div className=\"buttons\">\r\n\t\t\t\t\t<button onClick={() => props.cancel()}>Cancel</button>\r\n\t\t\t\t\t<button type=\"submit\">Save</button>\r\n\t\t\t\t</div>\r\n\t\t\t}\r\n\t\t</form>\r\n\t);\r\n};\r\n\r\nconst color = 'blue';\r\n\r\nexport const AnswerForm: React.FC<IProps> = (props: IProps) => {\r\n\treturn (\r\n\t\t<div style={{ height: '100%' }} className=\"formik-example formik-example--blue\">\r\n\t\t\t<div\r\n\t\t\t\tstyle={{\r\n\t\t\t\t\theight: '100%',\r\n\t\t\t\t\tbackground: COLORS[color][5],\r\n\t\t\t\t\tpadding: '0.1rem 0.1rem',\r\n\t\t\t\t}}\r\n\t\t\t>\r\n\t\t\t\t<div\r\n\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\tborderRadius: '4px',\r\n\t\t\t\t\t\tboxShadow: '0 8px 16px rgba(0,0,0,.2)',\r\n\t\t\t\t\t\tbackground: '#fff',\r\n\t\t\t\t\t\tmaxWidth: '90%',\r\n\t\t\t\t\t\tmargin: '0 auto',\r\n\t\t\t\t\t\tpadding: '0.5rem',\r\n\t\t\t\t\t}}\r\n\t\t\t\t>\r\n\t\t\t\t\t<div className=\"formik-example formik-example--blue\">\r\n\t\t\t\t\t\t<Form {...props} />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}","import * as React from 'react';\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faWindowClose, faEdit } from '@fortawesome/free-solid-svg-icons'\r\n\r\nimport { IAnswer } from '../types';\r\nimport { IQuestionAnswer } from '../../Categories/types';\r\n\r\ninterface IProps {\r\n\tanswer: IAnswer,\r\n\tusedAnswers: IQuestionAnswer[],\r\n\tedit: (answerId: number) => void;\r\n\tremove: (answerId: number) => void;\r\n}\r\n\r\nexport const ListRow: React.FC<IProps> = (props: IProps) => {\r\n\tconst { answer, usedAnswers, edit, remove } = props;\r\n\treturn (\r\n\t\t<tr key={answer.answerId} >\r\n\t\t\t<td className=\"name\">\r\n\t\t\t\t{answer.answerId}\r\n\t\t\t</td>\r\n\t\t\t<td className=\"name\">\r\n\t\t\t\t{answer.text}\r\n\t\t\t</td>\r\n\t\t\t<td>\r\n\t\t\t\t<button\r\n\t\t\t\t\tclassName=\"button-edit\"\r\n\t\t\t\t\ttitle=\"Add a new Answer\"\r\n\t\t\t\t\tonClick={() => edit(answer.answerId)}>\r\n\t\t\t\t\t\t<FontAwesomeIcon icon={faEdit} color='lightblue' />\r\n\t\t\t\t</button>\r\n\t\t\t</td>\r\n\t\t\t<td>\r\n\t\t\t\t<button \r\n\t\t\t\t\tdisabled={usedAnswers.map(a=>a.answerId).includes(answer.answerId)}\r\n\t\t\t\t\tclassName=\"button-remove\"\r\n\t\t\t\t\ttitle=\"Remove Answer\"\r\n\t\t\t\t\tonClick={() => remove(answer.answerId)}>\r\n\t\t\t\t\t\t<FontAwesomeIcon icon={faWindowClose}  color='lightblue' />\r\n\t\t\t\t</button>\r\n\t\t\t</td>\r\n\t\t</tr>\r\n\t);\r\n  }\r\n\r\n","import * as React from 'react';\r\nimport { IQuestionAnswer } from '../../Categories/types';\r\n\r\nimport { IAnswer } from '../types';\r\nimport { ListRow } from './ListRow';\r\n\r\ninterface IProps {\r\n\tanswers: IAnswer[],\r\n\tusedAnswers: IQuestionAnswer[],\r\n\tedit: (answerId: number) => void;\r\n\tremove: (answerId: number) => void;\r\n}\r\n\r\nconst List: React.FC<IProps> = (props: IProps) => {\r\n\tconst { answers, usedAnswers, edit, remove } = props;\r\n\treturn (\r\n\t\t<table width=\"100%\">\r\n\t\t\t<thead>\r\n\t\t\t\t<tr>\r\n\t\t\t\t\t<th>Id</th>\r\n\t\t\t\t\t<th>Answer</th>\r\n\t\t\t\t\t<th></th>\r\n\t\t\t\t\t<th></th>\r\n\t\t\t\t</tr>\r\n\t\t\t</thead>\r\n\t\t\t<tbody>\r\n\t\t\t\t{ answers.map(answer => \r\n\t\t\t\t\t<ListRow\r\n\t\t\t\t\t\tkey={answer.answerId}\r\n\t\t\t\t\t\tanswer={answer}\r\n\t\t\t\t\t\tusedAnswers={usedAnswers}\r\n\t\t\t\t\t\tedit={edit}\r\n\t\t\t\t\t\tremove={remove}\r\n\t\t\t\t\t/>\r\n\t\t\t\t)}\r\n\t\t\t</tbody>\r\n\t\t</table>\r\n\t);\r\n  }\r\n\r\nexport default List\r\n\r\n","import * as React from 'react';\r\nimport { useParams } from 'react-router-dom' // useRouteMatch\r\n\r\nimport { IAnswer } from '../types';\r\nimport { AnswerForm } from './Form'\r\nimport { ListRow } from './ListRow';\r\nimport List from './List';\r\nimport { COLORS } from '../../formik/theme';\r\nimport { IQuestionAnswer } from '../../Categories/types';\r\nimport { IOption } from '../../common/types';\r\nconst color = 'blue';\r\n\r\ninterface IProps {\r\n\tanswers: IAnswer[],\r\n\tanswer: IAnswer,\r\n\tusedAnswers: IQuestionAnswer[],\r\n\r\n\tformMode: string,\r\n\tadd: () => void;\r\n\tedit: (answerId: number) => void;\r\n\tremove: (answerId: number) => void;\r\n\tcancel: () => void;\r\n\tsaveForm: (answer: IAnswer, formMode: string) => void;\r\n}\r\n\r\ntype MyParams = {\r\n\tslug: string;\r\n  };\r\n\r\nconst Page: React.FC<IProps> = (props: IProps) => {\r\n\tlet { slug } = useParams<MyParams>();\r\n\t// slug = ''\r\n\tconst { answers, answer, usedAnswers, formMode, add, edit, remove, cancel, saveForm } = props;\r\n\treturn (\r\n\t\t<div className=\"name-container\">\r\n\t\t\t{slug}\r\n\t\t\t{ answers.length === 0 && \r\n\t\t\t\t<div>\r\n\t\t\t\t\tNo answers at all\r\n\t\t\t\t</div>\r\n\t\t\t}\r\n\t\t\t{ answers.length > 0 && \r\n\t\t\t\t<div className=\"two-columns\">\r\n\t\t\t\t\t<div className=\"a\">\r\n\t\t\t\t\t\t<List answers={answers} usedAnswers={usedAnswers} edit={edit} remove={remove} />\r\n\t\t\t\t\t\t<button onClick={() => add()}>Add new</button>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"b\">\r\n\t\t\t\t\t\t{formMode === 'add' &&\r\n\t\t\t\t\t\t\t<div style={{border: '1px solid silver', borderRadius: '5px', padding: '5px 5px 15px 5px', background: COLORS[color][5]}}>\r\n\t\t\t\t\t\t\t\t<h4 style={{marginTop: 0, color: 'white'}}>New Answer</h4>\r\n\t\t\t\t\t\t\t\t<AnswerForm \r\n\t\t\t\t\t\t\t\t\tanswer={answer}\r\n\t\t\t\t\t\t\t\t\tformMode={formMode}\r\n\t\t\t\t\t\t\t\t\tcancel={cancel}\r\n\t\t\t\t\t\t\t\t\tsaveForm={(answer: IAnswer) => saveForm(answer, formMode)} \r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t{formMode === 'edit' &&\r\n\t\t\t\t\t\t\t<div style={{border: '1px solid silver', borderRadius: '5px', padding: '5px 5px 15px 5px', background: COLORS[color][5]}}>\r\n\t\t\t\t\t\t\t\t<h4 style={{marginTop: 0, color: 'white'}}>Edit Answer</h4>\r\n\t\t\t\t\t\t\t\t<AnswerForm\r\n\t\t\t\t\t\t\t\t\tanswer={answer}\r\n\t\t\t\t\t\t\t\t\tformMode={formMode}\r\n\t\t\t\t\t\t\t\t\tcancel={cancel}\r\n\t\t\t\t\t\t\t\t\tsaveForm={(answer: IAnswer) => saveForm(answer, formMode)}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t}\t\t\t\t\t\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\r\n\t\t\t}\r\n\r\n\t\t</div>\r\n\t);\r\n  }\r\n\r\nexport default Page\r\n\r\n","// import * as React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Dispatch } from 'redux';\r\n\r\nimport { IAppState } from '../../store/Store';\r\n\r\nimport { AnswerActions,  addAnswer, editAnswer, removeAnswer, storeAnswer, cancelAnswer } from '../actions' // , IAddAnswer\r\n\r\nimport { IAnswer } from '../types'\r\n\r\nimport Page from '../components/Page'\r\nimport { IQuestionAnswer, ICategory } from '../../Categories/types';\r\n\r\nconst getUsedAnswers = (categories: ICategory[]) : IQuestionAnswer[]=> {\r\n\tlet questionAnswers: IQuestionAnswer[] = [];\r\n\tfor (let category of categories)\r\n\t\tfor (let question of category.questions)\r\n\t\tquestionAnswers = questionAnswers.concat(question.answers)\r\n\treturn questionAnswers;\r\n}\r\n\r\nconst mapStateToProps = (store: IAppState) => {\r\n  return {\r\n\tanswers: store.answerState.answers,\r\n\tanswer: store.answerState.answer!,\r\n\tformMode: store.answerState.formMode,\r\n\tusedAnswers: getUsedAnswers(store.categoriesState.categories),\r\n\twho: store.topState.top.auth!.who\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch<AnswerActions>) => {\r\n\treturn {\r\n\t\t//setFormMode: (formMode: string) => dispatch<any>(setFormMode(formMode)),\r\n\t\tadd: () => dispatch<any>(addAnswer()),\r\n\t\tedit: (answerId: number) => dispatch<any>(editAnswer(answerId)),\r\n\t\tremove: (answerId: number) => dispatch<any>(removeAnswer(answerId)),\r\n\t\tsaveForm: (answer: IAnswer, formMode: string) => dispatch<any>(storeAnswer(answer, formMode)),\r\n\t\tcancel: () => dispatch<any>(cancelAnswer()),\r\n\t}\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Page);","import React from 'react';\r\nimport { useFormik } from 'formik';\r\nimport * as Yup from 'yup'\r\nimport { IUser } from '../types';\r\n\r\nimport { Select } from '../../common/Select';\r\nimport { COLORS } from '../../formik/theme';\r\nimport { IFormProps } from '../types'\r\nimport UserName from '../../common/containers/UserName';\r\n\r\nconst Form: React.FC<IFormProps> = (props: IFormProps) => {\r\n  const formik = useFormik({\r\n    enableReinitialize: true,\r\n    initialValues: {\r\n      roleId: props.user.roleId,\r\n      userId: props.user.userId,\r\n      userName: props.user.userName,\r\n      pwd: props.user.pwd,\r\n      department: props.user.department,\r\n      createdBy: props.user.createdBy,\r\n      created: props.user.created\r\n    },\r\n    validationSchema: Yup.object({\r\n      name: Yup.string()\r\n        .max(150, 'Must be 150 characters or less')\r\n        .required('Required'),\r\n      /*answers: Yup.string()\r\n        .max(20, 'Must be 20 characters or less')\r\n        .required('Required'),\r\n      email: Yup.string()\r\n        .email('Invalid email address')\r\n        .required('Required'),*/\r\n    }),\r\n    onSubmit: values => {\r\n      //alert(JSON.stringify(values, null, 2));\r\n      props.saveForm(values, props.formMode)\r\n    }\r\n  });\r\n\r\n  const isEdit = () => props.formMode === 'edit';\r\n\r\n  console.log('RENDERING user', formik.values)\r\n  return (\r\n    <>\r\n      <form onSubmit={formik.handleSubmit}>\r\n      \r\n        <label className=\"id\" htmlFor=\"userId\">UserId:</label>\r\n        {/* <input\r\n          id=\"userId\"\r\n          name=\"userId\"\r\n          type=\"text\"\r\n          onChange={formik.handleChange}\r\n          onBlur={formik.handleBlur}\r\n          value={formik.values.userId}\r\n          disabled\r\n          style={{ width: '50px' }}\r\n        />\r\n        {formik.touched.userId && formik.errors.userId ? (\r\n          <div>{formik.errors.userId}</div>\r\n        ) : null} */}\r\n        <span id=\"userId\">{formik.values.userId}</span>\r\n\r\n        <label htmlFor=\"roleId\">Role</label>\r\n        <Select\r\n          id=\"roleId\"\r\n          name=\"roleId\"\r\n          options={props.roleOptions}\r\n          //onChange={formik.handleChange}\r\n          onChange={(e, value) => {\r\n            formik.setFieldValue(\"roleId\", value);\r\n            if (isEdit()) formik.submitForm();\r\n          }}\r\n          value={formik.values.roleId}\r\n        />\r\n\r\n        <label htmlFor=\"userName\">Name</label>\r\n        <textarea\r\n          id=\"userName\"\r\n          name=\"userName\"\r\n          onChange={formik.handleChange}\r\n          //onBlur={formik.handleBlur}\r\n          onBlur={(e: React.FormEvent<HTMLTextAreaElement>): void => {\r\n            if (isEdit()) formik.submitForm();\r\n          }}\r\n          value={formik.values.userName}\r\n          style={{ width: '100%' }}\r\n          rows={2}\r\n        />\r\n        {formik.touched.userName && formik.errors.userName ? (\r\n          <div>{formik.errors.userName}</div>\r\n        ) : null}\r\n\r\n        <label className=\"id\" htmlFor=\"createdBy\">Created by:</label>\r\n        <UserName id={formik.values.createdBy} />\r\n\t\t\t  <br/>\r\n\r\n        {/* <Select\r\n          id=\"createdBy\"\r\n          name=\"createdBy\"\r\n          options={props.userOptions}\r\n          //onChange={formik.handleChange}\r\n          onChange={(e, value) => {\r\n            formik.setFieldValue(\"createdBy\", value);\r\n            if (isEdit()) formik.submitForm();\r\n          }}\r\n          value={formik.values.createdBy}\r\n        // onChange={(gradeId: number) =>\r\n        // \tdispatch({\r\n        // \t\ttype: StudentActionTypes.STUDENT_ASSIGN_GRADE,\r\n        // \t\tstudentGradeIds: {\r\n        // \t\t\tstudentId: student!.id,\r\n        // \t\t\tgradeId: gradeId,\r\n        // \t\t\tgradeName: gradesAll[gradeId].name\r\n        // \t\t}\r\n        // \t})\r\n        // }\r\n        /> */}\r\n\r\n      {/* <label htmlFor=\"email\">Email Address</label>\r\n      <input\r\n        id=\"email\"\r\n        name=\"email\"\r\n        type=\"email\"\r\n        onChange={formik.handleChange}\r\n        onBlur={formik.handleBlur}\r\n        value={formik.values.email}\r\n      />\r\n      {formik.touched.email && formik.errors.email ? (\r\n        <div>{formik.errors.email}</div>\r\n      ) : null} */} \r\n\r\n        {/* <button type=\"submit\">Submit</button> */}\r\n\r\n        {!isEdit() &&\r\n          <div className=\"buttons\">\r\n            {props.canEdit &&\r\n              <button onClick={() => props.cancel()}>Cancel</button>}\r\n            {props.canEdit &&\r\n              <button type=\"submit\">Save</button>}\r\n          </div>\r\n        }\r\n      </form>\r\n\r\n      <label className=\"id\" htmlFor=\"created\">Created:</label>\r\n      {/* <input\r\n        id=\"created\"\r\n        name=\"text\"\r\n        type=\"text\"\r\n        onChange={formik.handleChange}\r\n        onBlur={formik.handleBlur}\r\n        value={formik.values.created.toLocaleDateString()}\r\n        disabled={true}\r\n      />\r\n      {formik.touched.created && formik.errors.created ? (\r\n        <div>{formik.errors.created}</div>\r\n      ) : null} */}\r\n      <span>{formik.values.created.toLocaleDateString()}</span>\r\n\r\n    </>\r\n  );\r\n};\r\n\r\n\r\nconst color = 'blue';\r\n\r\nexport const UserForm: React.FC<IFormProps> = (props: IFormProps) => {\r\n  return (\r\n    <div style={{ height: '100%' }} className=\"formik-example formik-example--blue\">\r\n      <div\r\n        style={{\r\n          height: '100%',\r\n          background: COLORS[color][5],\r\n          padding: '1rem 1rem',\r\n        }}\r\n      >\r\n        <div\r\n          style={{\r\n            borderRadius: '4px',\r\n            boxShadow: '0 8px 16px rgba(0,0,0,.2)',\r\n            background: '#fff',\r\n            maxWidth: '90%',\r\n            margin: '0 auto',\r\n            padding: '1rem',\r\n          }}\r\n        >\r\n          <div className=\"formik-example formik-example--blue\">\r\n            <Form {...props} />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}","// import * as React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { IAppState } from '../../store/Store';\r\nimport { IUser, IRole } from '../types'\r\n\r\nimport { Dispatch } from 'redux';  // ActionCreatorsMapObject, \r\n\r\nimport { UserActions,  \r\n\tgetUser, \r\n\taddUser, \r\n\teditUser,\r\n\tremoveUser,\r\n\tstoreUser,\r\n\tcancelUser,\r\n\tsetIsDetail\r\n} from '../actions'\r\n\r\nimport {UserForm}  from '../components/UserForm'\r\n\r\ninterface IProps {\r\n\tcanEdit: boolean\r\n}\r\n\r\n// Grab the users from the store and make them available on props\r\nconst mapStateToProps = (store: IAppState, ownProps: IProps ) => {\r\n\tconst {usersState, tagState} = store;\r\n\tconst { roles, user, roleOptions, formMode, roleIdEditing, isDetail } = usersState; \r\n\treturn {\r\n\t\troles,\r\n\t\troleOptions,\r\n\t\tuser: user!,\r\n\t\tformMode,\r\n\t\troleIdEditing,\r\n\t\tcanEdit: ownProps.canEdit,\r\n\t\tisDetail\r\n\t};\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch<UserActions>) => {\r\n\treturn {\r\n\t\tonSelectUser: (userId: number) => dispatch<any>(getUser(userId)),\r\n\t\tadd: (userRoleId: number, text: string, canEdit?: boolean) => dispatch<any>(addUser(userRoleId, text, canEdit)),\r\n\t\tedit: (userRoleId: number, userId: number) => dispatch<any>(editUser(userRoleId, userId)),\r\n\t\tremove: (userRoleId: number, userId: number) => dispatch<any>(removeUser(userRoleId, userId)),\r\n\t\tsaveForm: (user: IUser, formMode: string) => dispatch<any>(storeUser(user, formMode)),\r\n\t\tcancel: () => dispatch<any>(cancelUser()),\r\n\t\t\r\n\t\tsetIsDetail: (isDetail: boolean) => {\r\n\t\t\tdispatch<any>(setIsDetail(isDetail))\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(UserForm);\r\n","import * as React from 'react';\r\n\r\nimport { useHover } from '../../common/useHover'\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faWindowClose, faEdit } from '@fortawesome/free-solid-svg-icons'\r\n\r\nimport { IUser } from '../types';\r\n\r\n\r\ninterface IRowProps {\r\n\tuser: IUser;\r\n\tonSelectUser: (userId: number) => IUser;\r\n\tedit: (roleId: number, userId: number) => void;\r\n\tremove: (roleId: number, userId: number) => void;\r\n}\r\n\r\nconst UserRow: React.FC<IRowProps> = (props: IRowProps) => {\r\n\r\n\tconst [hoverRef, hoverProps] = useHover();\r\n\r\n\tconst { user, onSelectUser, edit, remove } = props;\r\n\tconst { roleId: roleId, userId } = user;\r\n\r\n   return (\r\n\t\t<div ref={hoverRef} className=\"name\">\r\n\t\t\t<button\r\n\t\t\t\tclassName=\"user-button\"\r\n\t\t\t\tonClick={() => onSelectUser(userId)}>\r\n\t\t\t\t{user.userName}\r\n\t\t\t</button>\r\n\t\t\t{hoverProps.isHovered && \r\n\t\t\t\t<button className=\"button-edit\" title=\"Edit\" onClick={() => edit(roleId, userId)}>\r\n\t\t\t\t\t<FontAwesomeIcon icon={faEdit} color='lightblue' />\r\n\t\t\t\t</button>\r\n\t\t\t}\r\n\t\t\t{hoverProps.isHovered &&\r\n\t\t\t\t<button className=\"button-remove\" title=\"Remove\" onClick={() => remove(roleId, userId)}>\r\n\t\t\t\t\t<FontAwesomeIcon icon={faWindowClose}  color='lightblue' />\r\n\t\t\t\t</button>\r\n\t\t\t}\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default UserRow\r\n\r\n","import * as React from 'react';\r\n\r\nimport { useHover } from '../../common/useHover'\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faWindowClose, faEdit, faCaretRight, faCaretDown } from '@fortawesome/free-solid-svg-icons'\r\n\r\nimport { IRole } from '../types';\r\n\r\n\r\ninterface IUserRowProps {\r\n\tuserRole: IRole;\r\n\ttoggleRole: (roleId: number) => void;\r\n\teditRole: (roleId: number) => void;\r\n\tremoveRole: (roleId: number) => void;\r\n}\r\n\r\nconst RoleRow: React.FC<IUserRowProps> = (props: IUserRowProps) => {\r\n\r\n\tconst [hoverRef, hoverProps] = useHover();\r\n\tconst { userRole, toggleRole, editRole, removeRole } = props;\r\n\tconst {roleId: roleId, title, users, isExpanded, color} = userRole;\r\n\r\n\treturn (\r\n\t\t<div ref={hoverRef} key={roleId} className=\"name\" >\r\n\t\t\t<button\r\n\t\t\t\tclassName=\"button-edit\"\r\n\t\t\t\ttitle=\"Expand\"\r\n\t\t\t\tonClick={() => toggleRole(roleId)} \r\n\t\t\t\tstyle={{ marginLeft: '5px' }}\r\n\t\t\t>\r\n\t\t\t\t<FontAwesomeIcon icon={isExpanded?faCaretDown:faCaretRight} color={color} size='lg' />\r\n\t\t\t</button>\r\n\t\t\t<span className='role-title' style={{color}}>{title}</span>\r\n\t\t\t{hoverProps.isHovered &&\r\n\t\t\t\t<button className=\"button-edit\" title=\"Edit Section\" onClick={() => editRole(roleId)}>\r\n\t\t\t\t\t<FontAwesomeIcon icon={faEdit} color='lightblue' />\r\n\t\t\t\t</button>\r\n\t\t\t}\r\n\t\t\t{hoverProps.isHovered && users.length === 0 &&\r\n\t\t\t\t<button className=\"button-remove\" title=\"Remove Section\" onClick={() => removeRole(roleId)}>\r\n\t\t\t\t\t<FontAwesomeIcon icon={faWindowClose} color='lightblue' />\r\n\t\t\t\t</button>\r\n\t\t\t}\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default RoleRow\r\n\r\n","import * as React from 'react';\r\nimport { useRef } from 'react'\r\n\r\nimport { IRolesProps } from '../types'\r\n\r\nimport { IUser } from '../types';\r\n\r\nimport { AutoSuggest } from '../../components/AutoSuggest';\r\nimport UserForm from '../containers/UserForm'\r\nimport UserRow from './UserRow';\r\nimport RoleRow from './RoleRow';\r\nimport { useParams } from 'react-router-dom' // useRouteMatch\r\n\r\nimport { COLORS } from '../../formik/theme';\r\nconst color = 'blue';\r\n\r\ntype SupportParams = {\r\n\ttekst: string;\r\n};\r\n\r\nconst UserPage: React.FC<IRolesProps> = (props: IRolesProps) => {\r\n\r\n\tlet { tekst } = useParams<SupportParams>();\r\n\tconst { roles: userRoles, user,\r\n\t\tformMode, roleIdEditing: roleIdEditing, \r\n\t\tonSelectUser, add, edit, remove, canEdit,\r\n\t\taddRole: addRole, toggleRole: toggleRole, editRole: editRole, removeRole: removeRole, storeRole: storeRole,\r\n\t\tsetIsDetail, isDetail } = props;\r\n\r\n\tconst inputEl = useRef<HTMLInputElement>(null);\r\n\tsetTimeout(() => {\r\n\t\tif (inputEl.current !== null) {\r\n\t\t\tinputEl.current!.select();\r\n\t\t\tinputEl.current!.focus()\r\n\t\t}\r\n\t}, 100)\r\n\r\n\t// const expandRole = (roleId: number): void => {\r\n\t// \tconst div = document.querySelector<HTMLDivElement>(\"#divRole\" + roleId);\r\n\t// \tconsole.log(div)\r\n\t// \tdiv!.style.display = 'block';\r\n\t// }\r\n\treturn (\r\n\t\t<div className=\"name-container\">\r\n\t\t\t<hr />\r\n\t\t\t{/* <h4 style={{ textAlign: 'center' }}>Maintenance (visible only for Admins) </h4> */}\r\n\t\t\t<div className=\"two-columns\">\r\n\t\t\t\t<div className=\"a\">\r\n\t\t\t\t\t<h3>Users by Role</h3>\r\n\t\t\t\t\t{userRoles &&\r\n\t\t\t\t\t\tuserRoles.map(role => {\r\n\t\t\t\t\t\t\tconst { roleId: roleId, title, isExpanded, users } = role;\r\n\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t<div key={roleId} style={{ paddingBottom: '5px' }}>\r\n\t\t\t\t\t\t\t\t\t<div style={{textAlign: 'start'}}>\r\n\t\t\t\t\t\t\t\t\t\t{roleIdEditing === roleId &&\r\n\t\t\t\t\t\t\t\t\t\t\t<input ref={inputEl} name=\"groupTitle\" type=\"text\"\r\n\t\t\t\t\t\t\t\t\t\t\t\tonBlur={(e) => storeRole({ ...role, title: e.target.value })}\r\n\t\t\t\t\t\t\t\t\t\t\t\tdefaultValue={title}\r\n\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t{roleIdEditing !== roleId && (\r\n\t\t\t\t\t\t\t\t\t\t\t<RoleRow\r\n\t\t\t\t\t\t\t\t\t\t\t\tuserRole={role}\r\n\t\t\t\t\t\t\t\t\t\t\t\ttoggleRole={toggleRole}\r\n\t\t\t\t\t\t\t\t\t\t\t\teditRole={editRole}\r\n\t\t\t\t\t\t\t\t\t\t\t\tremoveRole={removeRole}\r\n\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t{isExpanded &&\r\n\t\t\t\t\t\t\t\t\t\t<div className=\"group-users\" style={{marginLeft: '20px', textAlign: 'start'}}>\r\n\t\t\t\t\t\t\t\t\t\t\t{users.map(user =>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<UserRow\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tkey={user.userId}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tuser={user}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonSelectUser={onSelectUser}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tedit={edit}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tremove={remove}\r\n\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t\t\t<div style={{ marginLeft: '0%' }}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<button className=\"button-add\" title=\"Add a new User\" onClick={() => add(role.roleId, '')}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tAdd a new User\r\n\t\t\t\t\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t})}\r\n\t\t\t\t\t<div style={{ marginLeft: '1%' }}>\r\n\t\t\t\t\t\t<button className=\"button-add-category\" title=\"Add a new Section\" onClick={() => addRole()}>\r\n\t\t\t\t\t\t\tAdd a new Role\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"b\">\r\n\t\t\t\t\t{userRoles && user &&\r\n\t\t\t\t\t\t<div style={{ border: '1px solid silver', borderRadius: '5px', padding: '5px 5px 15px 5px', background: COLORS[color][5] }}>\r\n\t\t\t\t\t\t\t<h4 style={{ marginTop: 0, color: 'white' }}>User</h4>\r\n\t\t\t\t\t\t\t{formMode === 'display' ?\r\n\t\t\t\t\t\t\t\t<span>DisplayForm</span>\r\n\t\t\t\t\t\t\t\t:\r\n\t\t\t\t\t\t\t\t<UserForm canEdit={canEdit}\t/>\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t}\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default UserPage\r\n\r\n","// import * as React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { IAppState } from '../../store/Store';\r\nimport { IUser, IRole } from '../types'\r\n\r\nimport { Dispatch } from 'redux';  // ActionCreatorsMapObject, \r\n\r\nimport { UserActions,  \r\n\tgetUser, \r\n\taddUser, \r\n\teditUser,\r\n\tremoveUser,\r\n\tstoreUser,\r\n\tcancelUser,\r\n\taddRole,\r\n\teditRole,\r\n\tremoveRole,\r\n\tstoreRole,\r\n\tsetIsDetail,\r\n\ttoggleRole\r\n} from '../actions'\r\n\r\nimport UserPage from '../components/UserPage'\r\n\r\ninterface IProps {\r\n\tcanEdit: boolean\r\n}\r\n\r\n// Grab the users from the store and make them available on props\r\nconst mapStateToProps = (store: IAppState, ownProps: IProps ) => {\r\n\tconst { usersState,  tagState} = store;\r\n\tconst { roles, user, formMode, roleIdEditing, isDetail } = usersState; \r\n\treturn {\r\n\t\troles,\r\n\t\tuser: user!,\r\n\t\tformMode,\r\n\t\troleIdEditing,\r\n\t\tcanEdit: ownProps.canEdit,\r\n\t\tisDetail,\r\n\t\twho: store.topState.top.auth!.who\r\n\t};\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch<UserActions>) => {\r\n\treturn {\r\n\t\t// user\r\n\t\tonSelectUser: (userId: number) => dispatch<any>(getUser(userId)),\r\n\t\tadd: (userRoleId: number, text: string, canEdit?: boolean) => dispatch<any>(addUser(userRoleId, text, canEdit)),\r\n\t\tedit: (userRoleId: number, userId: number) => dispatch<any>(editUser(userRoleId, userId)),\r\n\t\tremove: (userRoleId: number, userId: number) => dispatch<any>(removeUser(userRoleId, userId)),\r\n\t\t// groups\r\n\t\taddRole: () => dispatch<any>(addRole()),\r\n\t\ttoggleRole: (roleId: number) =>  dispatch<any>(toggleRole(roleId)),\r\n\t\teditRole: (roleId: number) =>  dispatch<any>(editRole(roleId)),\r\n\t\tremoveRole: (roleId: number) => dispatch<any>(removeRole(roleId)),\r\n\t\tstoreRole: (role: IRole) => dispatch<any>(storeRole(role)),\r\n\t\t\r\n\t\tsetIsDetail: (isDetail: boolean) => {\r\n\t\t\tdispatch<any>(setIsDetail(isDetail))\r\n\t\t}\r\n\t}\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(UserPage);\r\n","import React, { useState } from 'react';\r\nimport { useFormik } from 'formik';\r\nimport * as Yup from 'yup'\r\n\r\nimport { COLORS } from '../../formik/theme';\r\nimport { IFormProps } from '../types';\r\n//import { number } from 'yup/lib/locale';\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\n\r\nconst Form: React.FC<IFormProps> = (props: IFormProps) => {\r\n\r\n  let { who, formMode, authError } = props;\r\n  const { userName, pwd } = who;\r\n\r\n  let navigate = useNavigate();\r\n  if (props.isAuthenticated) {\r\n    navigate('/questions');\r\n  }\r\n\r\n  const formik = useFormik({\r\n    enableReinitialize: true,\r\n    initialValues: {\r\n      userName,\r\n      pwd\r\n      //createdBy: props.top.createdBy,\r\n      //created: props.top.created\r\n    },\r\n    validationSchema: Yup.object({\r\n      userName: Yup\r\n        .string()\r\n        .max(20, 'Must be 20 characters or less')\r\n        .required('Required'),\r\n      pwd: Yup\r\n        .string()\r\n        .min(7)\r\n        .max(16)\r\n        //.matches(/^(?=.*[a-z])(?=.*[A-Z])(?=.*d)[a-zA-Zd]$/)\r\n        .required()\r\n      /*answers: Yup.string()\r\n        .max(20, 'Must be 20 characters or less')\r\n        .required('Required'),\r\n      email: Yup.string()\r\n        .email('Invalid email address')\r\n        .required('Required'),*/\r\n    }),\r\n    onSubmit: values => {\r\n      // alert(JSON.stringify(values, null, 2));\r\n      props.saveForm(values, props.formMode, props.isRegister)\r\n    }\r\n  });\r\n\r\n  const isEdit = () => props.formMode === 'edit';\r\n\r\n  console.log('RENDERING LoginForm', formik.values)\r\n\r\n  return (\r\n    <>\r\n      <form onSubmit={formik.handleSubmit}>\r\n\r\n        {/* <label htmlFor=\"name\">User name</label> */}\r\n        <input\r\n          id=\"userName\"\r\n          name=\"userName\"\r\n          onChange={formik.handleChange}\r\n          onBlur={formik.handleBlur}\r\n          // onBlur={(e: React.FormEvent<HTMLInputElement>): void => {\r\n          //   if (isEdit() && formik.initialValues.name !== formik.values.name)\r\n          //     formik.submitForm();\r\n          // }}\r\n          value={formik.values.userName}\r\n          placeholder=\"User name\"\r\n          maxLength={16}\r\n          size={16}\r\n        // style={{ width: '40%' }}\r\n        />\r\n        {formik.touched.userName && formik.errors.userName ? (\r\n          <div>{formik.errors.userName}</div>\r\n        ) : null}\r\n\r\n        {/* <label htmlFor=\"username\">Password</label> */}\r\n        <br />\r\n        <input\r\n          id=\"pwd\"\r\n          name=\"pwd\"\r\n          type=\"password\"\r\n          onChange={formik.handleChange}\r\n          onBlur={formik.handleBlur}\r\n          value={formik.values.pwd}\r\n          placeholder=\"password\"\r\n          // style={{ width: '40%' }}\r\n          maxLength={16}\r\n          size={16}\r\n        />\r\n        {formik.touched.pwd && formik.errors.pwd ? (\r\n          <div>{formik.errors.pwd}</div>\r\n        ) : null}\r\n\r\n        {authError &&\r\n          <div>{authError}</div>\r\n        }\r\n\r\n\r\n        {/* <button type=\"submit\">Submit</button> */}\r\n\r\n        <div className=\"buttons\">\r\n          {props.canEdit &&\r\n            <button onClick={() => props.cancel()}>Cancel</button>}\r\n          {props.canEdit &&\r\n            <button type=\"submit\">Save</button>}\r\n        </div>\r\n\r\n      </form>\r\n\r\n      {/* <label className=\"id\" htmlFor=\"created\">Created:</label>\r\n      <span>{formik.values.created.toLocaleDateString()}</span> */}\r\n\r\n    </>\r\n  );\r\n};\r\n\r\n\r\nconst color = 'blue';\r\n\r\nexport const LoginForm: React.FC<IFormProps> = (props: IFormProps) => {\r\n\r\n  return (\r\n    <div style={{ height: '100%', padding: '5%', display: 'flex', alignItems: 'center', justifyContent: 'cen0ter'  }} className=\"formik-example formik-example--blue\">\r\n      <div\r\n        style={{\r\n          height: '100%',\r\n          background: COLORS[color][5],\r\n          padding: '1rem 1rem',\r\n          width: '300px'\r\n        }}\r\n      >\r\n        <div\r\n          style={{\r\n            borderRadius: '4px',\r\n            boxShadow: '0 8px 16px rgba(0,0,0,.2)',\r\n            background: '#fff',\r\n            maxWidth: '90%',\r\n            margin: '0 auto',\r\n            padding: '1rem',\r\n            width: '250px'\r\n          }}\r\n        >\r\n          <div className=\"formik-example formik-example--blue\">\r\n            {props.isRegister ? (\r\n              <span>Register</span>\r\n            ) : (\r\n              <span>Register</span>\r\n            )}\r\n            <Form {...props} />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}","// import * as React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { IAppState } from '../../store/Store';\r\n\r\nimport { Dispatch } from 'redux'; \r\n\r\nimport { register, authenticate, cancelLogin, TopActions } from '../actions'\r\n\r\nimport { LoginForm } from '../components/LoginForm';\r\nimport { ILogin, ITop } from '../types';\r\n\r\n\r\ninterface IProps {\r\n\tcanEdit: boolean,\r\n\tisRegister: boolean\r\n}\r\n\r\nconst mapStateToProps = (store: IAppState, ownProps: IProps) => {\r\n\tconst { topState } = store;\r\n\tconst { top } = topState;\r\n\tconst { auth } = top\r\n\treturn {\r\n\t\tisAuthenticated: top.isAuthenticated,\r\n\t\tuuid: top.uuid,\r\n\t\twho: !auth\r\n\t\t\t? { userName: '', pwd:'' } \r\n\t\t\t: { userName: auth.who.userName, pwd: auth.who.pwd },\r\n\t\tauthError: top.authError,\r\n\t\tcanEdit: ownProps.canEdit,\r\n\t\tisRegister: ownProps.isRegister,\r\n\t\tformMode: 'edit'\r\n\t};\r\n};\r\n\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch<TopActions>) => {\r\n\treturn {\r\n\t\tsaveForm: (login: ILogin, formMode: string, isRegister: boolean) => dispatch<any>(isRegister?register(login):authenticate(login)),\r\n\t\tcancel: () => dispatch<any>(cancelLogin())\r\n\t}\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(LoginForm);\r\n\r\n","import * as React from \"react\";\r\n\r\ninterface ILanding {\r\n}\r\n\r\nconst Landing: React.FC<ILanding> = (props: ILanding) => {\r\n  return (\r\n    <p>Landing page</p>\r\n   )\r\n}\r\n\r\nexport default Landing;\r\n","import * as React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\nimport { IAppState } from \"./store/Store\";\r\n\r\nimport logo from './logo.svg'\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faQuestion, faHome, faPlus, faSurprise, faUser, faUserFriends, faSignOutAlt, faSignInAlt, faRegistered, faAnchor } from '@fortawesome/free-solid-svg-icons'\r\n\r\n\r\ninterface IProps {\r\n  isAuthenticated: boolean | null;\r\n  uuid: string | null;\r\n  signOut: () => void\r\n}\r\n\r\nfunction Navig({ isAuthenticated, uuid, signOut }: IProps) {\r\n\r\n  let navigate = useNavigate();\r\n\r\n  const otkaciMe = () => {\r\n    signOut();\r\n    navigate('/landing');\r\n  }\r\n\r\n  {/* <Navbar.Brand href=\"#\">Navbar Offcanvas</Navbar.Brand> \r\n           <Navbar.Toggle aria-controls=\"offcanvasNavbar\" /> \r\n         <Nav className=\"justify-content-end flex-grow-1 pe-3\"> */}\r\n\r\n  /// defaultActiveKey=\"/questions\"\r\n  return (\r\n    <div className=\"position-sticky pt-3\">\r\n      {isAuthenticated ? (\r\n        <>\r\n          <ul className=\"nav flex-column\">\r\n            <li className=\"nav-item\">\r\n              <a className=\"nav-link active\" aria-current=\"page\" href=\"#/supporter/promo\">\r\n                <FontAwesomeIcon icon={faSurprise} color='lightblue' />\r\n                {' '}Supporter\r\n              </a>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <a className=\"nav-link active\" aria-current=\"page\" href=\"#/questions\">\r\n                <FontAwesomeIcon icon={faQuestion} color='lightblue' />\r\n                {' '}Questions\r\n              </a>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <a className=\"nav-link\" href=\"#/answers/pera\">\r\n                <FontAwesomeIcon icon={faAnchor} color='lightblue' />\r\n                {' '}Answers\r\n              </a>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <a className=\"nav-link\" href=\"#/users/2\">\r\n                <FontAwesomeIcon icon={faUserFriends} color='lightblue' />\r\n                {' '}Users\r\n              </a>\r\n            </li>\r\n            {/* <li className=\"nav-item\">\r\n              <a className=\"nav-link\" href=\"#\" onClick={() => otkaciMe()}>\r\n                <FontAwesomeIcon icon={faSignOutAlt} color='lightblue' />\r\n                {' '}Sign out\r\n              </a>\r\n            </li> */}\r\n          </ul>\r\n            {/*\r\n          <h6 className=\"sidebar-heading d-flex justify-content-between align-items-center px-3 mt-4 mb-1 text-muted\">\r\n            <span>Saved reports</span>\r\n            <a className=\"link-secondary\" href=\"#\" aria-label=\"Add a new report\">\r\n              <FontAwesomeIcon icon={faPlus} />\r\n            </a>\r\n          </h6>\r\n          <ul className=\"nav flex-column mb-2\">\r\n            <li className=\"nav-item\">\r\n              <a className=\"nav-link\" href=\"#\">\r\n                <FontAwesomeIcon icon={faHome} color='lightblue' />\r\n                {' '}Current month\r\n              </a>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <a className=\"nav-link\" href=\"#\">\r\n                <FontAwesomeIcon icon={faHome} color='lightblue' />\r\n                {' '}Last quarter\r\n              </a>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <a className=\"nav-link\" href=\"#\">\r\n                <FontAwesomeIcon icon={faHome} color='lightblue' />\r\n                {' '}Social engagement\r\n              </a>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <a className=\"nav-link\" href=\"#\">\r\n              {' '}Year-end sale\r\n              </a>\r\n            </li>\r\n          </ul> */}\r\n        </>\r\n      ) : (\r\n        <ul className=\"nav flex-column\">\r\n          <li className=\"nav-item\">\r\n            <a className=\"nav-link active\" aria-current=\"page\" href=\"#/landing\">\r\n              <FontAwesomeIcon icon={faSurprise} color='lightblue' />\r\n              {' '}Landing\r\n            </a>\r\n          </li>\r\n          <li className=\"nav-item\">\r\n            <a className=\"nav-link active\" aria-current=\"page\" href=\"#/About\">\r\n              <FontAwesomeIcon icon={faQuestion} color='lightblue' />\r\n              {' '}About\r\n            </a>\r\n          </li>\r\n          {/* <li className=\"nav-item\">\r\n            <a className=\"nav-link\" href=\"#/Register\">\r\n              <FontAwesomeIcon icon={faRegistered} color='lightblue' />\r\n              {' '}Register\r\n            </a>\r\n          </li> */}\r\n          {/* <li className=\"nav-item\">\r\n            <a className=\"nav-link\" href=\"#\" onClick={() => otkaciMe()}>\r\n              <FontAwesomeIcon icon={faSignInAlt} color='lightblue' />\r\n              {' '}Sign in\r\n            </a>\r\n          </li> */}\r\n        </ul>\r\n      )}\r\n    </div>\r\n\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (store: IAppState) => ({\r\n  isAuthenticated: store.topState.top.isAuthenticated,\r\n  uuid: store.topState.top.uuid\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps\r\n)(Navig);","import * as React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\nimport { IAppState } from \"./store/Store\";\r\n\r\nimport logo from './logo.svg'\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faQuestion, faHome, faPlus, faSurprise, faUserFriends, faSignOutAlt, faSignInAlt, faAnchor } from '@fortawesome/free-solid-svg-icons'\r\nimport { faAngleDoubleLeft, faAngleDoubleRight, faRegistered, faUser, faCog } from '@fortawesome/free-solid-svg-icons';\r\nimport { Button, Col, Collapse, Container, Form, FormControl, Nav, Navbar, NavDropdown, Row } from 'react-bootstrap';\r\nimport { IUser } from \"./user/types\";\r\nimport { IAuth } from \"./Top/types\";\r\n\r\n\r\ninterface IProps {\r\n  isAuthenticated: boolean | null;\r\n  uuid: string | null;\r\n  auth?: IAuth,\r\n  open: boolean,\r\n  setOpen: (open: boolean) => void\r\n  register: () => void\r\n  signIn: () => void\r\n  signOut: () => void\r\n}\r\n\r\nfunction Header({ isAuthenticated, uuid, auth, open, setOpen, register, signIn, signOut }: IProps) {\r\n\r\n  let navigate = useNavigate();\r\n\r\n  const otkaciMe = () => {\r\n    signOut();\r\n    navigate('/landing');\r\n  }\r\n\r\n  {/* <Navbar.Brand href=\"#\">Navbar Offcanvas</Navbar.Brand> \r\n           <Navbar.Toggle aria-controls=\"offcanvasNavbar\" /> \r\n         <Nav className=\"justify-content-end flex-grow-1 pe-3\"> */}\r\n\r\n  /// defaultActiveKey=\"/questions\"\r\n  console.log('isAuthenticated', isAuthenticated);\r\n  return (\r\n    <Navbar as=\"header\" bg=\"light\" expand=\"lg\" className=\"navbar navbar-dark sticky-top bg-dark flex-md-nowrap p-y-0 shadow\">\r\n      <Container fluid>\r\n        <Button\r\n          onClick={() => setOpen(!open)}\r\n          aria-controls=\"example-collapse-text\"\r\n          aria-expanded={open}\r\n          size='sm'\r\n          variant=\"secondary\"\r\n        >\r\n          <FontAwesomeIcon icon={open ? faAngleDoubleLeft : faAngleDoubleRight} color='lightblue' />\r\n        </Button>\r\n        <Navbar.Brand href=\"#\">Support <i>Knowledge</i></Navbar.Brand>\r\n        <Navbar.Toggle aria-controls=\"navbarScroll\" />\r\n        <Navbar.Collapse id=\"navbarScroll\">\r\n          <Form className=\"d-flex\">\r\n            <FormControl\r\n              type=\"search\"\r\n              placeholder=\"Search\"\r\n              className=\"me-2\"\r\n              aria-label=\"Search\"\r\n            />\r\n            <Button variant=\"outline-success\">Search</Button>\r\n          </Form>\r\n          <Nav\r\n            className=\"me-auto my-2 my-lg-0\"\r\n            style={{ maxHeight: '100px' }}\r\n            navbarScroll\r\n          >\r\n            {!isAuthenticated &&\r\n              <Nav.Link href=\"#/Register\">\r\n                Register\r\n              </Nav.Link>\r\n            }\r\n            {!isAuthenticated &&\r\n              <Nav.Link href=\"#action2\" onClick={() => signIn()}>\r\n                Sign In\r\n              </Nav.Link>\r\n            }\r\n\r\n            {isAuthenticated &&\r\n              <>\r\n                <Nav.Link href=\"#\" disabled>\r\n                  <FontAwesomeIcon icon={faUser} />\r\n                  {' '}{auth?.who.userName}\r\n                </Nav.Link>\r\n\r\n                <Nav.Link href=\"#\" disabled>\r\n                  <FontAwesomeIcon icon={faCog} color='lightblue' />\r\n                </Nav.Link>\r\n                <NavDropdown title=\"\" id=\"navbarScrollingDropdown\">\r\n                  <NavDropdown.Item href=\"#action3\">Action</NavDropdown.Item>\r\n                  <NavDropdown.Item href=\"#action4\">Another action</NavDropdown.Item>\r\n                  <NavDropdown.Divider />\r\n                  {isAuthenticated &&\r\n                    <NavDropdown.Item href=\"#action5\" onClick={() => otkaciMe()}>\r\n                      Sign out\r\n                    </NavDropdown.Item>\r\n                  }\r\n                </NavDropdown>\r\n              </>\r\n            }\r\n\r\n          </Nav>\r\n\r\n        </Navbar.Collapse>\r\n        <Button\r\n          id='btnSync'\r\n          aria-controls=\"example-collapse-text\"\r\n          size='sm'\r\n          variant=\"secondary\"\r\n        >\r\n          Sync\r\n        </Button>\r\n      </Container>\r\n    </Navbar>\r\n\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (store: IAppState) => ({\r\n  isAuthenticated: store.topState.top.isAuthenticated,\r\n  uuid: store.topState.top.uuid,\r\n  auth: store.topState.top.auth\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps\r\n)(Header);","import React, { useCallback, useRef, useState, useEffect } from 'react';\r\n\r\n\r\nimport { HashRouter as Router, Route, Routes } from 'react-router-dom' // useRouteMatch\r\n\r\nimport { connect, Provider } from 'react-redux';\r\nimport { Store, Dispatch } from 'redux';\r\n\r\nimport { IAppState } from './store/Store';\r\n\r\nimport Support from './components/Support';\r\nimport AnswersPage from './Answers/containers/Page'\r\nimport containers from './Categories/containers/ContainerCategoriesPage'\r\n\r\nimport UsersPage from './user/containers/UsersPage';\r\nimport { authenticate, unAuthenticate, TopActions, navbarToggle } from './Top/actions';\r\nimport LoginForm from './Top/containers/LoginForm';\r\nimport Landing from './components/Landing';\r\nimport { ILogin, IAuth } from './Top/types';\r\nimport Navig from './Navig';\r\nimport Navv from './Navv';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faAngleDoubleLeft, faAngleDoubleRight, faRegistered } from '@fortawesome/free-solid-svg-icons';\r\nimport { Button, Col, Collapse, Container, Form, FormControl, Nav, Row } from 'react-bootstrap';\r\nimport Header from './Header';\r\n\r\n\r\ninterface IProps {\r\n\tnavbarOpen: boolean,\r\n\tisAuthenticated: boolean | null;\r\n\tuuid: string | null;\r\n\tauth?: IAuth,\r\n\ttoggleNavbar: () => void,\r\n\tcheckAuthentication: (login: ILogin) => void;\r\n\tsignOut: () => void\r\n}\r\n\r\nconst App = ({ navbarOpen, isAuthenticated, uuid, auth, toggleNavbar, checkAuthentication, signOut }: IProps) => {\r\n\r\n\t//const [navbarOpen, setNavbarOpen] = useState(true);\r\n\tlet main: null | HTMLDivElement = null;\r\n\r\n\tconst [open, setOpen] = useState(navbarOpen);\r\n\tconst [mainMd, setMainMd] = useState(9);\r\n\tconst [mainLg, setMainLg] = useState(10);\r\n\r\n\tuseEffect(() => {\r\n\t\tconst login = {\r\n\t\t\tuserName: 'Jack',\r\n\t\t\tpwd: 'Daniels'\r\n\t\t}\r\n\t\tcheckAuthentication(login);\r\n\t}, []);\r\n\r\n\tconst signIn = () => {\r\n\t\tconst login = {\r\n\t\t\tuserName: 'Jack',\r\n\t\t\tpwd: 'Daniels'\r\n\t\t}\r\n\t\tcheckAuthentication(login);\r\n\t}\r\n\r\n\tconst register = () => {\r\n\t\t\r\n\t}\r\n\r\n\t\r\n\t// null is the third state false/true/null in reducer\r\n\tconst app = //isAuthenticated !== null ? (  \r\n\t\t<Router>\r\n\t\t\t<Header open={open} setOpen={setOpen} register={register} signIn={signIn} signOut={signOut} />\r\n\r\n\t\t\t<Container fluid>\r\n\t\t\t\t<Row>\r\n\t\t\t\t\t<Collapse\r\n\t\t\t\t\t\tin={open}\r\n\t\t\t\t\t\tdimension=\"width\"\r\n\t\t\t\t\t\tonEnter={() => { console.log('onEnter'); setMainMd(9); setMainLg(10) }}\r\n\t\t\t\t\t\tonEntering={() => { console.log('onEntering'); }}\r\n\t\t\t\t\t\tonEntered={() => { console.log('onEntered'); }}\r\n\t\t\t\t\t\tonExit={() => { console.log('onExit'); }}\r\n\t\t\t\t\t\tonExiting={() => { console.log('onExiting'); }}\r\n\t\t\t\t\t\tonExited={() => { console.log('onExited'); setMainMd(12); setMainLg(12) }}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t{/* <Col id=\"example-collapse-text\" className=\"position-sticky pt-3\"> */}\r\n\t\t\t\t\t\t{/* <Col id=\"example-collapse-text\" className=\"position-sticky p-0 m-0 col-md-3 ms-sm-auto col-lg-2\"> */}\r\n\t\t\t\t\t\t<Col\r\n\t\t\t\t\t\t\tid=\"example-collapse-text\"\r\n\t\t\t\t\t\t\tmd={3}\r\n\t\t\t\t\t\t\tlg={2}\r\n\t\t\t\t\t\t\tclassName=\"p-3 m-3 ms-sm-auto sidebar\"\r\n\t\t\t\t\t\t\tstyle={{ border: '1px solid silver', backgroundColor: 'yellow' }}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<Navig signOut={signOut} />\r\n\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t</Collapse>\r\n\r\n\t\t\t\t\t<Col id=\"main\" md={mainMd} lg={mainLg} className=\"ms-sm-auto px-md-4\">\r\n\t\t\t\t\t\t<div className=\"d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pt-3 pb-2 mb-3 border-bottom\">\r\n\t\t\t\t\t\t\t<h1 className=\"h2\">Dashboard</h1>\r\n\t\t\t\t\t\t\t<div className=\"btn-toolbar mb-2 mb-md-0\">\r\n\t\t\t\t\t\t\t\t<div className=\"btn-group me-2\">\r\n\t\t\t\t\t\t\t\t\t<button type=\"button\" className=\"btn btn-sm btn-outline-secondary\">Share</button>\r\n\t\t\t\t\t\t\t\t\t<button type=\"button\" className=\"btn btn-sm btn-outline-secondary\">Export</button>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<button type=\"button\" className=\"btn btn-sm btn-outline-secondary dropdown-toggle\">\r\n\t\t\t\t\t\t\t\t\t<span data-feather=\"calendar\"></span>\r\n\t\t\t\t\t\t\t\t\tThis week\r\n\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t<div style={{ border: '1px solid navy' }}>\r\n\t\t\t\t\t\t\t<Routes>\r\n\t\t\t\t\t\t\t\t<Route path=\"/\" element={<Landing />} />\r\n\t\t\t\t\t\t\t\t<Route path=\"/sign-in\" element={\r\n\t\t\t\t\t\t\t\t\t<LoginForm canEdit={true} isRegister={false} />\r\n\t\t\t\t\t\t\t\t} />\r\n\t\t\t\t\t\t\t\t<Route path=\"/register\" element={\r\n\t\t\t\t\t\t\t\t\t<LoginForm canEdit={true} isRegister={true} />\r\n\t\t\t\t\t\t\t\t} />\r\n\t\t\t\t\t\t\t\t<Route path=\"/supporter/:tekst\" element={<Support />} />\r\n\t\t\t\t\t\t\t\t<Route path=\"/questions\" element={<containers.categories canEdit={true} />} />\r\n\t\t\t\t\t\t\t\t<Route path=\"/answers/:slug\" element={<AnswersPage />} />\r\n\t\t\t\t\t\t\t\t<Route path=\"/users/:slug\" element={<UsersPage canEdit={true} />} />\r\n\t\t\t\t\t\t\t</Routes>\r\n\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t</Row>\r\n\r\n\t\t\t</Container>\r\n\r\n\t\t</Router>\r\n\t// )\r\n\t// : (\r\n\t// \tnull\r\n\t// );\r\n\r\n\treturn (\r\n\t\t<div className=\"App\">\r\n\t\t\t{app}\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nconst mapStateToProps = (store: IAppState) => ({\r\n\tnavbarOpen: store.topState.top.navbarOpen,\r\n\tisAuthenticated: store.topState.top.isAuthenticated,\r\n\tauth: store.topState.top.auth,\r\n\tuuid: store.topState.top.uuid\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch<TopActions>) => {\r\n\treturn {\r\n\t\ttoggleNavbar: () => dispatch<any>(navbarToggle()),\r\n\t\tcheckAuthentication: async(login: ILogin) => await dispatch<any>(authenticate(login)),\r\n\t\tsignOut: () => dispatch<any>(unAuthenticate())\r\n\t}\r\n};\r\n\r\nexport default connect(\r\n\tmapStateToProps,\r\n\tmapDispatchToProps\r\n)(App);\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport * as ReactDOM from 'react-dom';\r\n\r\nimport { HashRouter as Router, Route, Link } from 'react-router-dom' // useRouteMatch\r\n\r\nimport { Provider } from 'react-redux';\r\n\r\nimport { Store } from 'redux';\r\n\r\nimport configureStore, { IAppState } from './store/Store';\r\nimport { loadCategories, \r\n\tremoveCategory, storeCategory, updateCategory,\r\n\tremoveQuestion, storeQuestion, updateQuestion \r\n} from './Categories/actions';\r\nimport { getAllAnswers } from './Answers/actions';\r\n\r\nimport 'bootstrap/dist/css/bootstrap.css'\r\n// import './formik/formikStyles.css';\r\nimport './index.css';\r\nimport './App.css';\r\nimport './dashboard.css';\r\n\r\nimport './formik/formikStyles.css';\r\nimport { getAllUsers, storeUser } from './user/actions';\r\nimport { getAllTags } from './roleTags/actions';\r\nimport { loadTop } from './Top/actions';\r\nimport { IUser } from './user/types';\r\nimport App from './App';\r\nimport { coolColors } from './cool-colors';\r\nimport { IQuestion } from './Categories/types';\r\n\r\ninterface IProps {\r\n\tstore: Store<IAppState>;\r\n}\r\n\r\n// coolColors();\r\n\r\n// Generate the store\r\nlocalStorage.clear(); // !!!!!!!!!!!!\r\n\r\ninterface IEvt {\r\n\ttype: string;\r\n\tentity: IQuestion;\r\n}\r\n\r\n\r\nconst store = configureStore();\r\nstore.dispatch(loadCategories());\r\nstore.dispatch(getAllAnswers());\r\nstore.dispatch(getAllUsers())\r\nstore.dispatch(loadTop());\r\nstore.dispatch(getAllTags());\r\n\r\nconst sessionId = Math.floor((Math.random() * 10000) + 1);\r\nsessionStorage.setItem('sessionId', sessionId.toString())\r\n\r\nwindow.addEventListener(\"PassToBackground\", function (evt: any) {\r\n\t// alert('Dobio')\r\n\tconst { detail } = evt;\r\n\tconst sessionId = sessionStorage.getItem('sessionId');\r\n\tconsole.log('Session breeeeeee:', sessionId, ' detail:', detail)\r\n\tif (sessionId !== detail.sessionId) {\r\n\t\tswitch (detail.type) {\r\n\t\t\tcase \"STORE_CATEGORY\":\r\n\t\t\t\tdetail.entity.created = new Date(detail.entity.created);\r\n\t\t\t\tstore.dispatch(storeCategory(false, detail.entity));\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"UPDATE_CATEGORY\":\r\n\t\t\t\tdetail.entity.created = new Date(detail.entity.created);\r\n\t\t\t\tstore.dispatch(updateCategory(false, detail.entity));\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"REMOVE_CATEGORY\":\r\n\t\t\t\tstore.dispatch(removeCategory(false, detail.entity));\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"STORE_QUESTION\":\r\n\t\t\t\tdetail.entity.created = new Date(detail.entity.created);\r\n\t\t\t\tstore.dispatch(storeQuestion(false, detail.entity));\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"UPDATE_QUESTION\": {\r\n\t\t\t\t\tconst question = detail.entity;\r\n\t\t\t\t\tquestion.created = new Date(question.created);\r\n\t\t\t\t\tfor (let i=0; i < question.answers.length; i++) {\r\n\t\t\t\t\t\tconst a = question.answers[i];\r\n\t\t\t\t\t\ta.assigned = new Date(a.assigned);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tstore.dispatch(updateQuestion(false, question));\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\t\t\t\r\n\t\t\tcase \"REMOVE_Question\": {\r\n\t\t\t\t\tconst { categoryId, questionId } = detail.entity\r\n\t\t\t\t\tstore.dispatch(removeQuestion(false, categoryId, questionId));\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n\r\n}, false);\r\n\r\n\r\nconst userIdOwner = 101;\r\nconst state = store.getState();\r\nif (state.usersState.allUsers.length === 0) {\r\n\r\n\tconst treatFirstUserAsTheOwner = async () => {\r\n\t\treturn await store.dispatch(storeUser(user, 'add'))\r\n\t};\r\n\r\n\tconst user: IUser = {\r\n\t\troleId: 11,\r\n\t\tuserId: userIdOwner,\r\n\t\tuserName: \"Jack\",\r\n\t\tpwd: \"Daniels\",\r\n\t\tdepartment: \"dept1\",\r\n\t\tcreatedBy: userIdOwner,\r\n\t\tcreated: new Date()\r\n\t}\r\n\r\n\ttreatFirstUserAsTheOwner()\r\n\t\t.then((res) => {\r\n\t\t\tReactDOM.render(\r\n\t\t\t\t<React.StrictMode>\r\n\t\t\t\t\t<Provider store={store} >\r\n\t\t\t\t\t\t<App />\r\n\t\t\t\t\t</Provider>\r\n\t\t\t\t</React.StrictMode>,\r\n\t\t\t\tdocument.getElementById('root')\r\n\t\t\t);\r\n\t\t})\r\n\t// store.dispatch(authenticate(user))\r\n}\r\nelse {\r\n\tReactDOM.render(\r\n\t\t<React.StrictMode>\r\n\t\t\t<Provider store={store} >\r\n\t\t\t\t<App />\r\n\t\t\t</Provider>\r\n\t\t</React.StrictMode>,\r\n\t\tdocument.getElementById('root')\r\n\t);\r\n}\r\n\r\n// Render the App\r\n// ReactDOM.render(<Root store={store} />, document.getElementById(\r\n//   'root'\r\n// ) as HTMLElement);\r\n\r\n// React.StrictMode\r\n\r\n"],"sourceRoot":""}