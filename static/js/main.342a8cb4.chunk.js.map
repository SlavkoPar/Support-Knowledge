{"version":3,"sources":["Answers/actions.ts","Categories/actions.ts","Users/actions.ts","Categories/types.ts","Categories/categoryReducer.ts","Categories/categoriesReducer.ts","Answers/reducer.ts","roleTags/actions.ts","Users/reducer.ts","Users/types.ts","roleTags/reducer.ts","Top/actions.ts","Top/reducer.ts","store/Store.tsx","ThemeContext.tsx","components/AutoSuggest.tsx","common/containers/UserName.tsx","common/components/OptionName.tsx","Categories/components/CategoryForm.tsx","Categories/containers/ContainerCategoryForm.tsx","components/AutoSuggestAnswer.tsx","common/useHover.tsx","Categories/components/QuestionAnswerRow.tsx","Categories/components/QuestionAnswers.tsx","common/Select.tsx","Categories/sourceOptions.ts","Categories/statusOptions.ts","Categories/components/QuestionForm.tsx","Categories/containers/ContainerQuestionForm.tsx","Categories/components/QuestionRow.tsx","Categories/components/CategoryRow.tsx","Categories/components/CategoryList.tsx","Categories/containers/ContainerCategoryList.tsx","Categories/components/CategoriesPage.tsx","Categories/components/SuportPage.tsx","Categories/containers/ContainerCategoriesPage.tsx","components/Support.tsx","Answers/components/Form.tsx","Answers/components/ListRow.tsx","Answers/components/List.tsx","Answers/components/Page.tsx","Answers/containers/Page.tsx","Users/components/UserForm.tsx","Users/containers/UserForm.tsx","Users/components/UserRow.tsx","Users/components/RoleRow.tsx","Users/components/UsersPage.tsx","Users/containers/UsersPage.tsx","formik/theme.js","Top/components/LoginForm.tsx","Top/containers/LoginForm.tsx","components/Landing.tsx","SideBar.tsx","App.tsx","index.tsx"],"names":["AnswerActionTypes","parseFromJson","data","map","a","parseDates","created","Date","SUPPORT_ANSWERS","QuestionActionTypes","addAnswer","dispatch","getState","type","ADD_ANSWER","createdBy","topState","top","auth","who","userId","err","console","error","storeAnswer","answer","formMode","STORE_ANSWER","Promise","resolve","answerState","answerId","g","questions","q","categoryId","answers","assigned","UserActionTypes","getQuestion","questionId","GET_QUESTION","addQuestion","text","canEdit","ADD_QUESTION","showCategoryForm","removeQuestion","doSync","delay","REMOVE_QUESTION","syncWithOthers","assignQuestionAnswer","tekst","ASSIGN_QUESTION_ANSWER","assignedBy","setIsDetail","isDetail","SET_IS_DETAIL","entity","btnSync","document","getElementById","localStorage","setItem","JSON","stringify","sessionId","sessionStorage","getItem","click","storeQuestion","question","addCategoryUnknown","STORE_QUESTION","state","categoriesState","categories","find","c","newCategory","initialCategory","title","storeCategory","then","updateQuestion","UPDATE_QUESTION","categoryIdWas","questionCopy","reject","setTimeout","closeQuestionForm","CLOSE_QUESTION_FORM","openQuestionForm","OPEN_QUESTION_FORM","removeCategory","REMOVE_CATEGORY","category","STORE_CATEGORY","updateCategory","UPDATE_CATEGORY","addAndAssignNewAnswer","initialQuestion","words","source","status","initialCategoryState","aTypesToStore","Object","keys","reduceQuestions","categoryQuestions","action","categoryState","get","newState","myReducer","includes","set","questionIdMax","EDIT_QUESTION","split","CANCEL_QUESTION","filter","REMOVE_QUESTION_ANSWER","qa","SUPPORT_CATEGORIES","isExpanded","initialCategoriesState","undefined","Map","showQuestionForm","categoryOptions","loading","categoryIdEditing","storeToStorage","ADD_CATEGORY","TOGGLE_CATEGORY","getQuestions","LOAD_CATEGORIES","value","label","unshift","Math","max","categoryIdCopy","GET_CATEGORY","EDIT_CATEGORY","categoryCopy","CANCEL_CATEGORY","reduce","acc","push","initialAnswer","options","initialAnswerState","GET_ALL_ANSWERS","GET_ANSWER","length","EDIT_ANSWER","CANCEL_ANSWER","REMOVE_ANSWER","parseRole","users","u","TagActionTypes","getUser","GET_USER","findUser","name","usersState","roles","role","user","userName","addUser","roleId","ADD_USER","editUser","EDIT_USER","removeUser","REMOVE_USER","CREATE_OPTIONS","storeUser","STORE_USER","SUPPORT_USERS","initialUser","pwd","department","initialUserRole","color","initialUsersState","userEditing","allUsers","roleOptions","userOptions","roleIdEditing","ownerUserId","GET_ALL_USERS","log","concat","userIdMax","userRole","CANCEL_USER","userEdited","ADD_ROLE","TOGGLE_ROLE","EDIT_ROLE","group","STORE_ROLE","REMOVE_ROLE","storageTagsDemo","RoleId","storageTags","initialTagState","tags","TopActionTypes","SUPPORT_TOP","parseObj","json","visited","authenticated","authenticate","loginUser","AUTHENTICATE","AUTHENTICATE_WRONG_PWD","AUTHENTICATE_WRONG_USERNAME","initialTopState","navbarOpen","isAuthenticated","uuid","darkMode","LOAD_TOP","authError","REGISTER","REGISTER_USERNAME_EXISTS","NAVBAR_TOGGLE","TOGGLE_MODE","UNAUTHENTICATE","rootReducer","combineReducers","tagState","GET_ALL_TAGS","tag","GET_TAG","ThemeActionKind","initialState","variant","bg","ThemeContext","createContext","themeReducer","ThemeProvider","props","initState","useReducer","Provider","children","inputAutosuggest","createRef","QuestionAutosuggestMulti","Autosuggest","AutoSuggest","onSuggestionsClearRequested","setState","suggestions","anyWord","valueWordRegex","questionWords","valWordRegex","questionWord","test","getSuggestions","highlighted","window","focus","current","this","multiSection","onSuggestionsFetchRequested","bind","onSuggestionSelected","getSuggestionValue","renderSuggestion","renderSectionTitle","getSectionSuggestions","onSuggestionHighlighted","highlightFirstSuggestion","renderInputComponent","renderSuggestionsContainer","focusInputOnSuggestionClick","inputProps","placeholder","onChange","e","changeEvent","autoFocus","event","suggestion","onSelectQuestion","params","matches","AutosuggestHighlightMatch","query","parts","AutosuggestHighlightParse","part","index","className","highlight","section","ref","restInputProps","containerProps","newValue","method","escapedValue","trim","replace","word","RegExp","React","connect","store","ownProps","id","option","CategForm","formik","useFormik","enableReinitialize","initialValues","validationSchema","Yup","required","onSubmit","values","saveForm","isEdit","Form","handleSubmit","Group","controlId","Label","Control","as","handleChange","onBlur","submitForm","style","width","rows","Text","touched","errors","UserName","toLocaleDateString","Button","size","onClick","cancel","useContext","Container","AutoSuggestAnswer","setAnswerText","answersUnassigned","useHover","useState","isHovered","hoverProps","setValue","divRef","useRef","handleMouseOver","handleMouseOut","useEffect","node","addEventListener","removeEventListener","QuestionAnswerRow","hoverRef","questionAnswer","removeQuestionAnswer","selectQuestionAnswer","copyQuestionAnswer","alert","navigator","clipboard","writeText","stopPropagation","icon","faCopy","preventDefault","faWindowClose","QuestionAnswers","questionAnswers","setTekst","toLocaleTimeString","val","divDetailView","classList","add","zIndex","goDetail","faPlus","Select","disabled","selectedIndex","currentTarget","selectedOption","sourceOptions","statusOptions","QuestForm","moreThan","handleClose","setFieldValue","joinQuestionAnswers","sort","b","QuestionRow","edit","remove","ListGroup","Item","fontSize","backgroundColor","borderWidth","faEdit","CategoryRow","toggleCategory","editCategory","onSelectCategory","faCaretDown","faCaretRight","CategoryList","addCategory","inputEl","select","tagOptions","f","tagId","editQuestion","getCategory","Page","useParams","fluid","Row","Col","md","border","ContainerCategoryList","borderRadius","padding","marginTop","ContainerCategoryForm","ContainerQuestionForm","SupportPage","show","setShow","open","lg","display","alignItems","Modal","onHide","animation","centered","contentClassName","Header","closeButton","Title","Body","mapStateToProps","mapDispatchToProps","CategoriesPage","supporter","div","querySelector","setAttribute","Support","textAlign","marginBlockStart","marginBlockEnd","AnsForm","AnswerForm","ListRow","usedAnswers","getCategoryQuestion","List","Table","responsive","striped","bordered","hover","slug","getUsedAnswers","arr","editAnswer","removeAnswer","UsrForm","min","r","onSelectUser","userRoleId","UserRow","RoleRow","toggleRole","editRole","removeRole","marginLeft","Badge","pill","UserPage","addRole","storeRole","userRoles","target","defaultValue","UsersPage","COLORS","require","palx","LogForm","navigate","useNavigate","isRegister","handleBlur","maxLength","login","VIEWERS","OWNER","CANCEL","height","justifyContent","flexDirection","background","boxShadow","maxWidth","margin","Landing","signOut","toggleMode","theme","Navbar","expand","collapseOnSelect","Brand","href","Toggle","Offcanvas","placement","closeVariant","Nav","onSelect","eventKey","body","contains","Link","faSurprise","faQuestion","faAnchor","faUserFriends","NavDropdown","faUser","menuVariant","align","Divider","toggleNavbar","checkAuthentication","setOpen","app","path","element","createStore","applyMiddleware","thunk","loadedFromStorage","sCategories","categoriesJson","parse","forEach","sQuestions","sAnswers","parsed","sUserRoles","s","catch","getMessage","sTags","floor","random","toString","evt","detail","i","ReactDOM","StrictMode"],"mappings":"y+HA0BYA,E,gGAjBNC,EAAgB,WACrB,OAAOC,EAAKC,KAAI,SAAAC,GAAC,OAAIC,EAAWD,EAAE,GACnC,EAMMC,EAAa,SAACD,GAAc,kCAC9BA,GAAC,IACJE,QAAS,IAAIC,KAAKH,EAAEE,UAAQ,EAIhBE,EAAkB,mBAa/B,SAVYR,KAAiB,kCAAjBA,EAAiB,wBAAjBA,EAAiB,wBAAjBA,EAAiB,0BAAjBA,EAAiB,8BAAjBA,EAAiB,4BAAjBA,EAAiB,8BAU7B,CAVYA,MAAiB,KAkD7B,ICzBYS,ED6DCC,EAAgC,WAC3C,OAAO,SAACC,EAAoBC,GAC1B,IACED,EAAS,CACPE,KAAMb,EAAkBc,WAC9BC,UAAWH,IAAWI,SAASC,IAAKC,KAAMC,IAAKC,QAI7C,CAFE,MAAOC,GACPC,QAAQC,MAAMF,EAChB,CACF,CACF,EAgDaG,EAET,SAACC,EAAiBC,GACrB,wDAAO,WAAOf,EAAoBC,GAAyB,uFAExC,QAAbc,EAAkB,gBAIlB,OAHHf,EAAS,CACRE,KAAMb,EAAkB2B,aACxBF,WACE,kBACIG,QAAQC,QAAQjB,IAAWkB,YAAYL,OAAQM,WAAS,OAG/DpB,EAAS,CACRE,KAAMb,EAAkB2B,aACxBF,WACE,uDAKJH,QAAQC,MAAM,EAAD,IAAM,yDAEpB,qDApBD,EAqBD,E,SC9JMlB,EAAa,SAAC2B,GACnB,OAAO,2BACHA,GAAC,IACJC,UAAWD,EAAEC,UAAU9B,KAAI,SAAA+B,GAAC,kCACxBA,GAAC,IACJC,WAAYH,EAAEG,WACdC,QAASF,EAAEE,QAAQjC,KAAI,SAAAC,GAAC,kCAAUA,GAAC,IAAEiC,SAAU,IAAI9B,KAAKH,EAAEiC,WAAS,IACnE/B,QAAS,IAAIC,KAAK2B,EAAE5B,UAAQ,IAE7BA,QAAS,IAAIC,KAAKyB,EAAE1B,UAEtB,GAiCA,SA9BYG,KAAmB,kCAAnBA,EAAmB,4BAAnBA,EAAmB,4BAAnBA,EAAmB,8BAAnBA,EAAmB,kCAAnBA,EAAmB,gCAAnBA,EAAmB,kCAAnBA,EAAmB,kCAAnBA,EAAmB,0CAAnBA,EAAmB,wCAAnBA,EAAmB,4BAAnBA,EAAmB,4BAAnBA,EAAmB,kCAAnBA,EAAmB,8BAAnBA,EAAmB,kCAAnBA,EAAmB,gCAAnBA,EAAmB,kCAAnBA,EAAmB,kCAAnBA,EAAmB,gDAAnBA,EAAmB,gDAAnBA,EAAmB,8BAAnBA,EAAmB,wCA8B/B,CA9BYA,MAAmB,KAkL/B,IClMY6B,EDqQCC,EAET,SAACJ,EAAoBK,GACxB,wDAAO,WAAO7B,GAAkB,2EAC/B,IACCA,EAAS,CACRE,KAAMJ,EAAoBgC,aAC1BN,aACAK,cAIF,CAFE,MAAOnB,GACRC,QAAQC,MAAMF,EACf,CAAC,2CACD,mDAVD,EAWD,EASaqB,EAET,SAACP,EAAoBQ,EAAcC,GACtC,wDAAO,WAAOjC,EAAoBC,GAAyB,2EAC1D,IACCD,EAAS,CACRE,KAAMJ,EAAoBoC,aAC1B9B,UAAWH,IAAWI,SAASC,IAAKC,KAAMC,IAAKC,OAC/Ce,aACAQ,OACAG,kBAAkB,GAKpB,CAFA,MAAOzB,GACNC,QAAQC,MAAMF,EACf,CAAC,2CACD,qDAbD,EAcD,EAoBa0B,EAET,SAACC,EAAiBb,EAAoBK,GACzC,wDAAO,WAAO7B,GAAkB,oGAExBsC,IAAO,OAEbtC,EAAS,CACRE,KAAMJ,EAAoByC,gBAC1Bf,aACAK,eAEGQ,GACHG,EAAe1C,EAAoByC,gBAAiB,CAACf,aAAYK,eAAa,gDAE/ElB,QAAQC,MAAM,EAAD,IAAM,yDAEpB,mDAdD,EAeD,EAiEa6B,EAET,SAACjB,EAAoBK,EAAoBT,EAAkBsB,GAE9D,wDAAO,WAAO1C,EAAoBC,GAAyB,oGAEnDqC,IAAQ,KAAD,EAEbtC,EAAS,CACRE,KAAMJ,EAAoB6C,uBAC1BnB,aACAK,aACAT,WACAwB,WAAY3C,IAAWI,SAASC,IAAKC,KAAMC,IAAKC,SAEjD,+CAGAE,QAAQC,MAAM,EAAD,IAAM,wDAEpB,qDAhBD,EAiBD,EAEaiC,EAET,SAACC,GACJ,wDAAO,WAAO9C,GAAkB,2EAC/B,IACCA,EAAS,CACRE,KAAMJ,EAAoBiD,cAC1BD,YAKF,CAFA,MAAOpC,GACNC,QAAQC,MAAMF,EACf,CAAC,2CACD,mDAVD,EAWD,EAEM8B,EAAiB,SAACtC,EAAc8C,GACrC,IAAMC,EAAUC,SAASC,eAAe,WACxCC,aAAaC,QAAQ,aAAcC,KAAKC,UAAU,CAChDrD,OACA8C,SACAQ,UAAWC,eAAeC,QAAQ,gBAGpCT,EAASU,OACV,EAEaC,EAET,SAACvB,EAAiBwB,GACrB,wDAAO,WAAO7D,EAAoBC,GAAyB,iFACxC,GAAVuB,EAAeqC,EAAfrC,WAAU,SAGE,IAAfA,EAAgB,gCACDsC,EAAmB7D,IAAYD,GAAU,KAAD,EAAjD,OACTA,EAAS,CACRE,KAAMJ,EAAoBiE,eAC1BF,aACE,uBAGH7D,EAAS,CACRE,KAAMJ,EAAoBiE,eAC1BF,aACE,QAEAxB,GACHG,EAAe1C,EAAoBiE,eAAgBF,GAAU,kDAG9DlD,QAAQC,MAAM,EAAD,IAAM,0DAEpB,qDAvBD,EAwBD,EAEMkD,EAAkB,iDAAG,WAAOE,EAAkBhE,GAAkB,qFACjEgE,EAAMC,gBAAgBC,WAAWC,MAAK,SAAAC,GAAC,OAAqB,IAAjBA,EAAE5C,UAAgB,IAAE,CAAD,wCAC1DP,QAAQC,SAAS,IAAE,OAKb,OAJRmD,EAAW,2BACbC,GAAe,IAClB9C,WAAY,EACZ+C,MAAO,UACPjD,UAAW,KAAE,kBAEPtB,EAAcwE,EAAcH,IACjCI,MAAK,SAACjD,GACN,OAAOA,CACR,KAAE,2CACH,gBAbuB,wCAeXkD,EAET,SAACrC,EAAiBwB,GACrB,wDAAO,WAAO7D,EAAoBC,GAAyB,iFAEvC,OAFuC,SAEjDuB,EAAeqC,EAAfrC,WAAU,SACZc,IAAQ,KAAD,KACM,IAAfd,EAAgB,iCACDsC,EAAmB7D,IAAYD,GAAU,KAAD,EAAjD,OACTA,EAAS,CACRE,KAAMJ,EAAoB6E,gBAC1Bd,aACE,wBAGH7D,EAAS,CACRE,KAAMJ,EAAoB6E,gBAC1Bd,aACE,QAEAxB,IACHwB,EAASe,cAAgB3E,IAAWgE,gBAAgBY,aAAcrD,WAClEgB,EAAe1C,EAAoB6E,gBAAiBd,IACpD,kDAGDlD,QAAQC,MAAM,EAAD,IAAM,0DAEpB,qDAzBD,EA0BD,EAGM0B,EAAQ,WACb,OAAO,IAAIrB,SAAQ,SAACC,EAAS4D,GAC5BC,YAAW,WACV7D,EAAQ,CACP,OAAU,IACV,eAAgB,mBAChB,KAAQ,CACP,QAAW,IAGd,GAAG,GACJ,GACD,EAca8D,EAAwC,WACpD,OAAO,SAAChF,GACP,IACCA,EAAS,CACRE,KAAMJ,EAAoBmF,qBAI5B,CAFE,MAAOvE,GACRC,QAAQC,MAAMF,EACf,CACD,CACD,EAEawE,EAAuC,WACnD,OAAO,SAAClF,GACP,IACCA,EAAS,CACRE,KAAMJ,EAAoBqF,oBAI5B,CAFE,MAAOzE,GACRC,QAAQC,MAAMF,EACf,CACD,CACD,EAmEa0E,EAET,SAAC/C,EAAiBb,GACrB,wDAAO,WAAOxB,GAAkB,oGAExBsC,IAAO,OAEbtC,EAAS,CACRE,KAAMJ,EAAoBuF,gBAC1B7D,eAEGa,GACHG,EAAe1C,EAAoBuF,gBAAiB7D,GAAY,gDAEjEb,QAAQC,MAAM,EAAD,IAAM,yDAEpB,mDAbD,EAcD,EAEa4D,EAET,SAACnC,EAAiBiD,GACrB,wDAAO,WAAOtF,EAAoBC,GAAyB,2EAQK,OARL,SAGzDD,EAAS,CACRE,KAAMJ,EAAoByF,eAC1BD,aAEGjD,GACHG,EAAe1C,EAAoByF,eAAgBD,GAAU,kBACvDrE,QAAQC,QAAQoE,EAAS9D,aAAW,gCAG3Cb,QAAQC,MAAM,EAAD,IAAM,wDAEpB,qDAdD,EAeD,EAGa4E,EAET,SAACnD,EAAiBiD,GACrB,wDAAO,WAAOtF,GAAkB,2EAC/B,IAECA,EAAS,CACRE,KAAMJ,EAAoB2F,gBAC1BH,aAEGjD,GACHG,EAAe1C,EAAoB2F,gBAAiBH,EAItD,CAFA,MAAO5E,GACNC,QAAQC,MAAMF,EACf,CAAC,2CACD,mDAbD,EAcD,EAgBagF,EAET,SAAClE,EAAoBK,EAAoBf,EAAiBC,GAC7D,wDAAO,WAAOf,EAAoBC,GAAyB,2EAC1D,IACCa,EAAOV,UAAYH,IAAWI,SAASC,IAAKC,KAAMC,IAAKC,OACvDT,EAAcD,KACdC,EAAca,EAAYC,EAAQC,IAChC0D,MAAK,SAACrD,GACNpB,EAAcyC,EAAqBjB,EAAYK,EAAYT,GAC5D,GAIF,CAFA,MAAOV,GACNC,QAAQC,MAAMF,EACf,CAAC,2CACD,qDAZD,EAaD,EE3sBaiF,EAA6B,CACzCnE,WAAY,EACZK,WAAY,EACZG,KAAM,GACN4D,MAAO,GACPnE,QAAS,GACToE,OAAQ,EACRC,OAAQ,EACR1F,UAAW,EACXT,QAAS,IAAIC,MCjDDmG,EAAuC,CACnDzE,UAAW,IAIN0E,EAAgBC,OAAOC,KAAKpG,GAGrBqG,EAAkB,SAC9BC,EACAC,EACA7E,EACAK,GAEA,IAAMyE,EAAgBF,EAAkBG,IAAI/E,GACtCgF,EAA2BC,EAAUH,EAAeD,GAM1D,OALIL,EAAcU,SAASL,EAAOnG,OACjCkD,aAAaC,QAAQ,YAAD,OAAa7B,GAAc8B,KAAKC,UAAUiD,EAASlF,YAExE8E,EAAkBO,IAAInF,EAAYgF,GAE3B,CAAEJ,oBAAmBvC,SADX2C,EAASlF,UAAU6C,MAAK,SAAA5C,GAAC,OAAIA,EAAEM,aAAeA,CAAU,IAE1E,EAGM4E,EAAsD,WAGtD,IAFLzC,EAAK,uDAAG+B,EACRM,EAAM,uCAEN,OAAQA,EAAOnG,MAEd,KAAKJ,EAAoBgC,aACxB,IAAM+B,EAAWG,EAAM1C,UAAU6C,MAAK,SAAA5C,GAAC,OAAIA,EAAEM,aAAewE,EAAOxE,UAAU,IAC7E,OAAO,2BACHmC,GAAK,IACRH,aAIF,KAAK/D,EAAoBoC,aACxB,IACoC,EADhC0E,EAAgB,EAAE,cACD5C,EAAM1C,WAAS,IAApC,2BACC,KADQuC,EAAQ,QACZA,EAAShC,WAAa+E,IACzBA,EAAgB/C,EAAShC,WAAS,CAAC,+BACrC,OAAO,2BACHmC,GAAK,IACRjD,SAAU,MACV8C,SAAS,2BACL8B,GAAe,IAClBvF,UAAWiG,EAAOjG,UAClBoB,WAAY6E,EAAO7E,WACnBK,WAAY+E,EAAgB,EAC5B5E,KAAMqE,EAAOrE,SAKhB,KAAKlC,EAAoB+G,cACxB,IAAMhD,EAAWG,EAAM1C,UACrB6C,MAAK,SAAAN,GAAQ,OAAIA,EAAShC,aAAewE,EAAOxE,UAAU,IAC5D,OAAO,2BACHmC,GAAK,IACRjD,SAAU,OACV8C,aAIF,KAAK/D,EAAoBiE,eACxB,IAAQF,EAAawC,EAAbxC,SACRA,EAAS+B,MAAQ/B,EAAS7B,KAAK8E,MAAM,KACdjD,EAAfhC,WACR,OAAO,2BACHmC,GAAK,IACR1C,UAAU,GAAD,mBAAM0C,EAAM1C,WAAS,gBAAMuC,OAStC,KAAK/D,EAAoB6E,gBACxB,IAAQd,EAAawC,EAAbxC,SACAhC,EAAegC,EAAfhC,WACR,OAAO,2BACHmC,GAAK,IACR1C,UAAW0C,EAAM1C,UACf9B,KAAI,SAAA+B,GAAC,OAAIA,EAAEM,aAAeA,EACxBN,EAAC,eACIsC,EAAU,MAKrB,KAAK/D,EAAoBiH,gBACxB,OAAO,2BACH/C,GAAK,IACRjD,SAAU,YAIZ,KAAKjB,EAAoByC,gBACxB,OAAO,2BACHyB,GAAK,IACR1C,UAAW0C,EAAM1C,UAAU0F,QAAO,SAAAzF,GAAC,OAAIA,EAAEM,aAAewE,EAAOxE,UAAU,MAK3E,KAAK/B,EAAoBmH,uBACxB,OAAO,2BACHjD,GAAK,IACR1C,UAAW0C,EAAM1C,UAAU9B,KAAI,SAAA+B,GAAC,OAAIA,EAAEM,aAAewE,EAAOxE,WAAU,2BAC9DN,GAAC,IAAEE,QAAQ,YAAKF,EAAEE,WAAQ,2BAC1BF,GAAC,IAAEE,QAASF,EAAEE,QAAQuF,QAAO,SAAAE,GAAE,OAAIA,EAAG9F,WAAaiF,EAAOjF,QAAQ,KAAG,MAK/E,KAAKtB,EAAoB6C,uBACxB,IAAQd,EAAqCwE,EAArCxE,WAAYT,EAAyBiF,EAAzBjF,SAAUwB,EAAeyD,EAAfzD,WAC9B,OAAO,2BACHoB,GAAK,IACR1C,UAAW0C,EAAM1C,UAAU9B,KAAI,SAAA+B,GAAC,OAAIA,EAAEM,aAAeA,EAAU,2BACvDN,GAAC,IAAEE,QAAQ,YAAKF,EAAEE,WAAQ,2BAC1BF,GAAC,IAAEE,QAAQ,GAAD,mBAAMF,EAAEE,SAAO,CAAE,CAAEL,WAAUwB,aAAYlB,SAAU,IAAI9B,SAAW,MAKtF,KAAKE,EAAoBiD,cACxB,OAAO,2BACHiB,GAAK,IACRlB,SAAUuD,EAAOvD,WAKnB,QACC,OAAOkB,EAEV,EChJamD,EAAqB,qBAErBxB,EAA6B,CACzCnE,WAAY,EACZK,WAAY,EACZG,KAAM,GACN4D,MAAO,GACPC,OAAQ,EACRC,OAAQ,EACRrE,QAAS,GACTrB,UAAW,EACXT,QAAS,IAAIC,MAGD0E,EAA6B,CACzC9C,WAAY,EACZ+C,MAAO,GACPjD,UAAW,GACX8F,YAAY,EACZhH,UAAW,EACXT,QAAS,IAAIC,MAKDyH,EAA2C,CACvDnD,WAAY,GACZoB,cAAUgC,EACVlB,kBAAmB,IAAImB,IACvB1D,cAAUyD,EACVnF,kBAAkB,EAClBqF,kBAAkB,EAClBC,gBAAiB,GACjBC,SAAS,EACT3G,SAAU,UACV4G,mBAAoB,EACpB7E,UAAU,GAGL8E,EAA2B,CAChC9H,EAAoB+H,aACpB/H,EAAoBgI,gBACpBhI,EAAoByF,eACpBzF,EAAoB2F,gBACpB3F,EAAoBuF,iBAGfW,EAAgBC,OAAOC,KAAKpG,GAChCkH,QAAO,SAAAvH,GAAC,OAAImI,EAAelB,SAASjH,EAAE,IAUlCsI,EAAe,SAACvG,EAAoBwC,GAGzC,OAF8BA,EAAtBoC,kBACgCG,IAAI/E,GACvBF,SACtB,EAEMmF,EAAwD,WAGxD,IAFLzC,EAAK,uDAAGqD,EACRhB,EAAM,uCAEN,OAAQA,EAAOnG,MAEd,KAAKJ,EAAoBkI,gBACxB,IAAQ9D,EAAkCmC,EAAlCnC,WAAYkC,EAAsBC,EAAtBD,kBAEdqB,EAAkBvD,EAAW1E,KAAI,SAAA6B,GAAC,MAAK,CAAE4G,MAAO5G,EAAEG,WAAY0G,MAAO7G,EAAEkD,MAAO,IAGpF,OAFAkD,EAAgBU,QAAQ,CAAEF,MAAO,EAAGC,MAAO,YAEpC,2BACHlE,GAAK,IACRE,aACAkC,oBACAqB,oBAIF,KAAK3H,EAAoBgC,aACxB,IAAQN,EAA2B6E,EAA3B7E,WAAYK,EAAewE,EAAfxE,WACdP,EAAYyG,EAAavG,EAAYwC,GACrCH,EAAWvC,EAAU6C,MAAK,SAAA5C,GAAC,OAAIA,EAAEM,aAAeA,CAAU,IAChE,OAAO,2BACHmC,GAAK,IACRsB,cAAUgC,EACVzD,aAIF,KAAK/D,EAAoBoC,aACxB,IAAQV,EAAe6E,EAAf7E,WACJK,EAAa,EACjB,GAAmB,IAAfL,EAAkB,CACrB,IAAMF,EAAYyG,EAAavG,EAAYwC,GAC3CnC,EAAauG,KAAKC,IAAG,MAARD,KAAI,YAAQ9G,EAAU9B,KAAI,SAAA+B,GAAC,OAAIA,EAAEM,UAAU,MAAK,CAC9D,CACA,OAAO,2BACHmC,GAAK,IACRjD,SAAU,MACVuE,cAAUgC,EACVzD,SAAS,2BACL8B,GAAe,IAClBvF,UAAWiG,EAAOjG,UAClBoB,aACAK,aACAG,KAAMqE,EAAOrE,OAEdG,kBAAkB,IAIpB,KAAKrC,EAAoB+G,cACxB,IAAQrF,EAA6C6E,EAA7C7E,WAAYK,EAAiCwE,EAAjCxE,WAAY2F,EAAqBnB,EAArBmB,iBAC1BlG,EAAYyG,EAAavG,EAAYwC,GACrCH,EAAWvC,EAAU6C,MAAK,SAAA5C,GAAC,OAAIA,EAAEM,aAAeA,CAAU,IAChE,OAAO,2BACHmC,GAAK,IACRjD,SAAU,OACV8C,WACAgB,aAAa,eAAMhB,GACnB1B,kBAAkB,EAClBqF,qBAIF,KAAK1H,EAAoBiE,eACxB,IAAQF,EAAawC,EAAbxC,SACArC,EAA2BqC,EAA3BrC,WACR,GADmCqC,EAAfhC,WACUsE,EAAgBnC,EAAMoC,kBAAmBC,EAAQ7E,IAAvE4E,EAAiB,EAAjBA,kBACR,OAAO,2BACHpC,GAAK,IACRjD,SAAU,OACVqF,sBAIF,KAAKtG,EAAoB6E,gBACxB,IAAME,EAAiBb,EAAjBa,aACN,EAAkDwB,EAAOxC,SAAjDrC,EAAU,EAAVA,WAAYK,EAAU,EAAVA,WAAY+C,EAAa,EAAbA,cAC1B0D,EAAiB1D,GAAgCC,EAAcrD,WACrE,GAAI6E,EAAOxC,SAASrC,aAAe8G,EAAgB,CAElD,MAAwCnC,EAAgBnC,EAAMoC,kBAAmBC,EAAQ7E,EAAYK,GAA7FuE,EAAiB,EAAjBA,kBAAmBvC,EAAQ,EAARA,SAC3B,OAAO,2BACHG,GAAK,IACRoC,oBACArF,SAAU,OACV8C,YAEF,CAIC,MAA4BsC,EAAgBnC,EAAMoC,kBAAkB,2BAChEC,GAAM,IACTnG,KAAMJ,EAAoByC,gBAC1Bf,WAAY8G,EACZzG,eACEyG,GALGlC,EAAiB,EAAjBA,kBAYN,OALAA,EAAoBD,EAAgBC,EAAkB,2BAClDC,GAAM,IACTnG,KAAMJ,EAAoBiE,iBACxBvC,GAAY4E,kBAER,2BACHpC,GAAK,IACRoC,oBACArF,SAAU,SAKb,KAAKjB,EAAoBiH,gBACxB,OAAO,2BACH/C,GAAK,IACRjD,SAAU,UACV8C,cAAUyD,EACVE,kBAAkB,IAIpB,KAAK1H,EAAoByC,gBACxB,IAAQf,EAAe6E,EAAf7E,WACR,EAA8B2E,EAAgBnC,EAAMoC,kBAAmBC,EAAQ7E,GAAvE4E,EAAiB,EAAjBA,kBACR,OAAO,2BACHpC,GAAK,IACRoC,oBACArF,SAAU,UACV8C,cAAUyD,IAOZ,KAAKxH,EAAoBmH,uBACxB,IAAQzF,EAA2B6E,EAA3B7E,WAAYK,EAAewE,EAAfxE,WACpB,EAAwCsE,EAAgBnC,EAAMoC,kBAAmBC,EAAQ7E,EAAYK,GAA7FuE,EAAiB,EAAjBA,kBAAmBvC,EAAQ,EAARA,SAC3B,OAAO,2BACHG,GAAK,IACRoC,oBACAvC,aAIF,KAAK/D,EAAoB6C,uBACxB,IAAQnB,EAA2B6E,EAA3B7E,WAAYK,EAAewE,EAAfxE,WACpB,EAAwCsE,EAAgBnC,EAAMoC,kBAAmBC,EAAQ7E,EAAYK,GAA7FuE,EAAiB,EAAjBA,kBAAmBvC,EAAQ,EAARA,SAC3B,OAAO,2BACHG,GAAK,IACRoC,oBACAvC,aAIF,KAAK/D,EAAoBiD,cACxB,OAAO,2BACHiB,GAAK,IACRlB,SAAUuD,EAAOvD,WAInB,KAAKhD,EAAoBmF,oBACxB,OAAO,2BACHjB,GAAK,IACRwD,kBAAkB,IAGpB,KAAK1H,EAAoBqF,mBACxB,OAAO,2BACHnB,GAAK,IACRwD,kBAAkB,IAMpB,KAAK1H,EAAoByI,aACxB,IAAQ/G,EAAiC6E,EAAjC7E,WAAYW,GAAqBkE,EAArBlE,iBAGdmD,GAAWtB,EAAME,WAAWC,MAAK,SAAA9C,GAAC,OAAIA,EAAEG,aAAeA,CAAU,IACvE,OAAO,2BACHwC,GAAK,IACRsB,YACAzB,cAAUyD,EACVnF,oBACAqF,kBAAkB,IAIpB,KAAK1H,EAAoB+H,aAExB,IAAQzB,GAAsBpC,EAAtBoC,kBACAjE,GAAqBkE,EAArBlE,iBACJX,GAAa4G,KAAKC,IAAG,MAARD,KAAI,YAAQpE,EAAME,WAAW1E,KAAI,SAAA6B,GAAC,OAAIA,EAAEG,UAAU,MAAK,EAClE8E,GAAgC,CACrChF,UAAW,IAGZ,OADA8E,GAAkBO,IAAInF,GAAY8E,IAC3B,2BACHtC,GAAK,IACRjD,SAAU,MACV4G,kBAAmBnG,GACnB8D,SAAS,2BACLhB,GAAe,IAClBC,MAAO,eACP/C,gBAEDqC,cAAUyD,EACVnF,oBACAqF,kBAAkB,IAIpB,KAAK1H,EAAoBgI,gBACV9D,EAAME,WAAWC,MAAK,SAAA9C,GAAC,OAAIA,EAAEG,aAAe6E,EAAO7E,UAAU,IAC3E,OAAO,2BACHwC,GAAK,IACRE,WAAYF,EAAME,WAAW1E,KAAI,SAAA6B,GAAC,OAAIA,EAAEG,aAAe6E,EAAO7E,WAC3DH,EAAC,2BACIA,GAAC,IAAE+F,YAAa/F,EAAE+F,YAAY,MAMxC,KAAKtH,EAAoB0I,cACxB,IAAQtE,GAAeF,EAAfE,WACA1C,GAAiC6E,EAAjC7E,WAAYW,GAAqBkE,EAArBlE,iBACdmD,GAAWpB,GAAWC,MAAK,SAAA9C,GAAC,OAAIA,EAAEG,aAAeA,EAAU,IACjE,OAAO,2BACHwC,GAAK,IACRsB,YACAvE,SAAU,OACV0H,aAAa,eAAMnD,IACnBqC,kBAAmBrC,GAAS9D,WAC5BW,oBACAqF,kBAAkB,IAKpB,KAAK1H,EAAoByF,eAExB,IAAQD,GAAae,EAAbf,SACAc,GAAsBpC,EAAtBoC,kBACFE,GAAgC,CACrChF,UAAW,IAIZ,OAFA8E,GAAkBO,IAAIrB,GAAS9D,WAAY8E,IAC3ChB,GAAShE,UAAY,GACd,2BACH0C,GAAK,IACRjD,SAAU,OACV4G,mBAAoB,EACpBzD,WAAW,GAAD,mBAAMF,EAAME,YAAU,CAAEoB,KAClCc,uBAIF,KAAKtG,EAAoB2F,gBAExB,IAAQH,GAAae,EAAbf,SACA9D,GAAsB8D,GAAtB9D,WAAY+C,GAAUe,GAAVf,MACGP,EAAjByE,aACN,OAAO,2BACHzE,GAAK,IACR2D,mBAAoB,EACpBzD,WAAYF,EAAME,WAAW1E,KAAI,SAAA6B,GAAC,OAAIA,EAAEG,aAAeA,GACpDH,EAAC,2BACIA,GAAC,IAAEkD,UAAO,MAKpB,KAAKzE,EAAoB4I,gBACxB,OAAO,2BACH1E,GAAK,IACRjD,SAAU,UACVuE,cAAUgC,IAIZ,KAAKxH,EAAoBuF,gBACxB,OAAO,2BACHrB,GAAK,IACRE,WAAYF,EAAME,WAAWyE,QAAO,SAACC,EAAkBvH,GAGtD,OAFIA,EAAEG,aAAe6E,EAAO7E,YAC3BoH,EAAIC,KAAK,2BAAKxH,GAAC,IAAEC,UAAU,YAAKD,EAAEC,cAC5BsH,CACR,GAAG,MAKL,QACC,OAAO5E,EAEV,EChXM8E,GAAyB,CAC9B1H,SAAU,EACVY,KAAM,GACN4D,MAAO,GACPmD,QAAS,GACT3I,UAAW,EACXT,QAAS,IAAIC,MAGRoJ,GAAmC,CACxCvH,QAAS,GACTX,YAAQwG,EACRI,SAAS,EACT3G,SAAU,WAGLiF,GAAgBC,OAAOC,KAAK7G,GAAmB2H,QAAO,SAAAvH,GAAC,OAAIA,IAAMJ,EAAkB4J,eAAe,IAUlGxC,GAAkD,WAGlD,IAFLzC,EAAK,uDAAGgF,GACR3C,EAAM,uCAEN,OAAQA,EAAOnG,MAEd,KAAKb,EAAkB4J,gBACtB,OAAO,2BACHjF,GAAK,IACRvC,QAAS4E,EAAO5E,QAAQjC,KAAI,SAAAsB,GAAY,OAAO,2BAC3CA,GAAM,IACT8E,MAAO9E,EAAOkB,KAAK8E,MAAM,MACxB,MAIJ,KAAKzH,EAAkB6J,WACtB,IAAMpI,EAASkD,EAAMvC,QAAQ0C,MAAK,SAAA1E,GAAC,OAAIA,EAAE2B,WAAaiF,EAAOjF,QAAQ,IACrE,OAAO,2BACH4C,GAAK,IACRlD,WAIF,KAAKzB,EAAkBc,WACtB,OAAO,2BACH6D,GAAK,IACRjD,SAAU,MACVD,OAAO,2BACHgI,IAAa,IAChB1I,UAAWiG,EAAOjG,UAClBgB,SAAmC,IAAzB4C,EAAMvC,QAAQ0H,OACrB,EACAf,KAAKC,IAAG,MAARD,KAAI,YAAQpE,EAAMvC,QAAQjC,KAAI,SAAAC,GAAC,OAAIA,EAAE2B,QAAQ,MAAK,MAKxD,KAAK/B,EAAkB+J,YACtB,IAAMtI,EAASkD,EAAMvC,QAAQ0C,MAAK,SAAA1E,GAAC,OAAIA,EAAE2B,WAAaiF,EAAOjF,QAAQ,IACrE,OAAO,2BACH4C,GAAK,IACRjD,SAAU,OACVD,OAAO,2BAAMA,GAAM,IAAG8E,MAAO9E,EAAQkB,KAAK8E,MAAM,SAIlD,KAAKzH,EAAkB2B,aACtB,IAAQF,EAAWuF,EAAXvF,OACR,EAAmBA,EAAbM,EAAQ,EAARA,SACFK,EAAU,GAcd,MAbuB,QAAnBuC,EAAMjD,WACS,IAAdK,IACHN,EAAOM,SAAoC,IAAzB4C,EAAMvC,QAAQ0H,OAC7B,EACAf,KAAKC,IAAG,MAARD,KAAI,YAAQpE,EAAMvC,QAAQjC,KAAI,SAAAC,GAAC,OAAIA,EAAE2B,QAAQ,MAAK,GAEtDK,EAAO,sBAAOuC,EAAMvC,SAAO,4BAAOX,GAAM,IAAE8E,MAAO9E,EAAOkB,KAAK8E,MAAM,UAGnErF,EAAUuC,EAAMvC,QAAQjC,KAAI,SAAAC,GAAC,OAAIA,EAAE2B,WAAaA,EAAQ,2BAChDN,GAAM,IAAE8E,MAAO9E,EAAOkB,KAAK8E,MAAM,OACtCrH,CAAC,IAEE,2BACHuE,GAAK,IACRjD,SAAU,OACVU,UACAX,WAIF,KAAKzB,EAAkBgK,cACtB,OAAO,2BACHrF,GAAK,IACRjD,SAAU,YAIZ,KAAK1B,EAAkBiK,cACtB,OAAO,2BACHtF,GAAK,IACRjD,SAAU,UACVU,QAASuC,EAAMvC,QAAQuF,QAAO,SAAAvH,GAAC,OAAIA,EAAE2B,WAAaiF,EAAOjF,QAAQ,MAQnE,QACC,OAAO4C,EAEV,E,UJjHM1E,GAAgB,WACrB,OAAOC,GAAKC,KAAI,SAAA6B,GACf,OAAOkI,GAAUlI,EAClB,GACD,EAMMkI,GAAY,SAAClI,GAAY,kCAC3BA,GAAC,IACJmI,MAAOnI,EAAEmI,MAAMhK,KAAI,SAAAiK,GAAC,kCAAUA,GAAC,IAAE9J,QAAS,IAAIC,KAAK6J,EAAE9J,UAAQ,IAC7DA,QAAS,IAAIC,KAAKyB,EAAE1B,UAAQ,GA0B7B,SArBYgC,KAAe,oCAAfA,EAAe,gCAAfA,EAAe,8BAAfA,EAAe,oBAAfA,EAAe,oBAAfA,EAAe,sBAAfA,EAAe,0BAAfA,EAAe,wBAAfA,EAAe,0BAAfA,EAAe,oBAAfA,EAAe,0BAAfA,EAAe,sBAAfA,EAAe,0BAAfA,EAAe,wBAAfA,EAAe,8BAqB3B,CArBYA,MAAe,KAyG3B,IKnIY+H,GL6KCC,GAET,SAAClJ,GACJ,wDAAO,WAAOT,GAAkB,2EAC/B,IACCA,EAAS,CACRE,KAAMyB,EAAgBiI,SACtBnJ,UAIF,CAFE,MAAOC,GACRC,QAAQC,MAAMF,EACf,CAAC,2CACD,mDATD,EAUD,EAEamJ,GAET,SAACC,GACJ,wDAAO,WAAO9J,EAAoBC,GAAyB,sGAEpCA,IAAd8J,EAAU,EAAVA,WAAU,cAEAA,EAAWC,OAAK,yDACuB,GAD/CC,EAAI,UACZC,EAAOD,EAAKT,MAAMrF,MAAK,SAAA+F,GAAI,OAAIA,EAAKC,WAAaL,CAAI,KAC5C,CAAD,oNAGFI,GAAI,kCAGXvJ,QAAQC,MAAM,EAAD,IAAM,uEAEpB,qDAdD,EAeD,EAIawJ,GAET,SAACC,EAAgBrI,EAAcC,GAClC,wDAAO,WAAOjC,EAAoBC,GAAyB,2EAC1D,IACCD,EAAS,CACRE,KAAMyB,EAAgB2I,SACtBlK,UAAWH,IAAWI,SAASC,IAAKC,KAAMC,IAAKC,OAC/C4J,SACArI,QAKF,CAFA,MAAOtB,GACNC,QAAQC,MAAMF,EACf,CAAC,2CACD,qDAZD,EAaD,EAEa6J,GAET,SAACF,EAAgB5J,GACpB,wDAAO,WAAOT,GAAkB,2EAC/B,IACCA,EAAS,CACRE,KAAMyB,EAAgB6I,UACtBH,SACA5J,UAIF,CAFE,MAAOC,GACRC,QAAQC,MAAMF,EACf,CAAC,2CACD,mDAVD,EAWD,EAEa+J,GAET,SAACJ,EAAgB5J,GACpB,wDAAO,WAAOT,GAAkB,oGAExBsC,KAAO,OACbtC,EAAS,CACRE,KAAMyB,EAAgB+I,YACtBL,SACA5J,WAEDT,EAAS,CAACE,KAAMyB,EAAgBgJ,iBAAgB,gDAGhDhK,QAAQC,MAAM,EAAD,IAAM,yDAEpB,mDAbD,EAcD,EAmBagK,GAET,SAACV,EAAanJ,GACjB,wDAAO,WAAOf,EAAoBC,GAAyB,uFAExC,QAAbc,EAAkB,gCACfuB,KAAQ,KAAD,kBAQPtC,EAAS,CACdE,KAAMyB,EAAgBkJ,WACtBX,OACAnJ,aACE,KAAD,2BACKmJ,GAAI,wBAGL5H,KAAQ,KAAD,GACbtC,EAAS,CACRE,KAAMyB,EAAgBkJ,WACtBX,OACAnJ,aACE,QAEJf,EAAS,CAACE,KAAMyB,EAAgBgJ,iBAAgB,kDAGhDhK,QAAQC,MAAM,EAAD,IAAM,0DAEpB,qDA/BD,EAgCD,EAEM0B,GAAQ,WACb,OAAO,IAAIrB,SAAQ,SAACC,EAAS4D,GAC5BC,YAAW,WACV7D,EAAQ,CACP,OAAU,IACV,eAAgB,mBAChB,KAAQ,CACP,QAAW,IAGd,GAAG,GACJ,GACD,EMxUa4J,GAAgB,gBAEhBC,GAAqB,CACjCV,OAAQ,EACR5J,OAAQ,EACR0J,SAAU,GACVa,IAAK,GACLC,WAAY,OACZ7K,UAAW,EACXT,QAAS,IAAIC,MAGDsL,GAAyB,CACrCb,OAAQ,EACR9F,MAAO,GACP4G,MAAO,aACP3B,MAAO,GACPpC,YAAY,EACZhH,UAAW,EACXT,QAAS,IAAIC,MAKDwL,GAAiC,CAC7CpB,MAAO,GACPqB,iBAAa/D,EACbgE,SAAU,GACVC,YAAa,GACbC,YAAa,GACb9D,SAAS,EACT3G,SAAU,UACV0K,eAAgB,EAChBC,YAAa,KAqBR1F,GAAgBC,OAAOC,KAAKvE,GAChCqF,QAAO,SAAAvH,GAAC,OAAIA,IAAMkC,EAAgBgK,aAAa,IAU3ClF,GAA+C,WAG/C,IAFLzC,EAAK,uDAAGoH,GACR/E,EAAM,uCAEN,OAAQA,EAAOnG,MAEd,KAAKyB,EAAgBgK,cACpB,IAAQ3B,EAAU3D,EAAV2D,MAER,OADArJ,QAAQiL,IAAI,QAAS5B,GACd,2BACHhG,GAAK,IACRgG,UAMF,KAAKrI,EAAgBgJ,eACpB,IAAOX,EAAShG,EAATgG,MACHsB,EAAoB,GAMxB,OALAtB,EAAMxK,KAAI,SAAA6B,GAETiK,EAAWA,EAASO,OAAOxK,EAAEmI,MAC9B,IACA7I,QAAQiL,IAAI,WAAYN,GACjB,2BACHtH,GAAK,IACRsH,WACAC,YAAavB,EAAMxK,KAAI,SAAA6B,GAAC,MAAK,CAAE6G,MAAO7G,EAAEkD,MAAO0D,MAAO5G,EAAEgJ,OAAQ,IAChEmB,YAAaF,EAAS9L,KAAI,SAAA0K,GAAI,MAAK,CAAEhC,MAAOgC,EAAKC,SAAUlC,MAAOiC,EAAKzJ,OAAQ,MAIjF,KAAKkB,EAAgBiI,SACpB,IAC4B,EADxBM,OAAO5C,EAAU,cACJtD,EAAMgG,OAAK,IAA5B,2BAA8B,CAAC,IAAtBC,EAAI,QAGZ,GAFAC,EAAOD,EAAKT,MACVrF,MAAK,SAAA+F,GAAI,OAAIA,EAAKzJ,SAAW4F,EAAO5F,MAAM,IAE3C,KACF,CAAC,+BACD,OAAO,2BACHuD,GAAK,IACRqH,YAAanB,IAIf,KAAKvI,EAAgB2I,SACpB,IAC4B,EADxBwB,EAAY,EAAE,cACD9H,EAAMgG,OAAK,IAA5B,2BAA8B,CAAC,IACH,EADnBC,EAAI,sBACKA,EAAKT,OAAK,IAA3B,2BACC,KADQU,EAAI,QACRA,EAAKzJ,OAASqL,IACjBA,EAAY5B,EAAKzJ,OAAK,CAAC,+BAC1B,CAAC,+BACD,OAAO,2BACHuD,GAAK,IACRjD,SAAU,MACVsK,YAAY,2BACRN,IAAW,IACd3K,UAAWiG,EAAOjG,UAClBiK,OAAQhE,EAAOgE,OACf5J,OAAQqL,EAAY,EACpB9J,KAAMqE,EAAOrE,SAKhB,KAAKL,EAAgB6I,UACpB,IAAMuB,EAAW/H,EAAMgG,MAAM7F,MAAK,SAAA9C,GAAC,OAAIA,EAAEgJ,SAAWhE,EAAOgE,MAAM,IAC3DH,EAAO6B,EAAUvC,MACrBrF,MAAK,SAAA+F,GAAI,OAAIA,EAAKzJ,SAAW4F,EAAO5F,MAAM,IAC5C,OAAO,2BACHuD,GAAK,IACRjD,SAAU,OACVsK,YAAanB,IAIf,KAAKvI,EAAgBkJ,WACpB,IAAQX,EAAmB7D,EAAnB6D,KAAMnJ,EAAasF,EAAbtF,SACd,GAAiB,QAAbA,EAEH,OADAJ,QAAQiL,IAAI,mCAAoC1B,GAC5B,IAAhBA,EAAKG,QAAiBrG,EAAMgG,MAAMxK,KAAI,SAAA6B,GAAC,OAAIA,EAAEgJ,MAAM,IAAE3D,SAAS,GAiB3D,2BACH1C,GAAK,IACRjD,SAAU,OACViJ,MAAOhG,EAAMgG,MAAMxK,KAAI,SAAA6B,GAAC,OAAIA,EAAEgJ,SAAWH,EAAKG,OAAM,2BAC9ChJ,GAAC,IAAEmI,MAAM,YAAKnI,EAAEmI,SAAM,2BAEtBnI,GAAC,IAAEmI,MAAM,GAAD,mBAAMnI,EAAEmI,OAAK,gBAAOU,MAAS,OAtB3CvJ,QAAQiL,IAAI,UAEL,2BACH5H,GAAK,IACRjD,SAAU,OACViJ,MAAM,GAAD,mBACDhG,EAAMgG,OAAK,4BAEVkB,IAAe,IAClBb,OAAQ,EACR9F,MAAO,UACPiF,MAAO,CAACU,UAgBZ,IAAQF,EAAUhG,EAAVgG,MACDE,EAAQ7D,EAAR6D,KAED7I,GADiB6I,EAAKG,OAClBL,EAAM7F,MAAK,SAAA9C,GAAC,OAAIA,EAAEgJ,SAAWH,EAAKG,MAAM,KAC5C9I,EAAIF,EAAGmI,MAAMrF,MAAK,SAAA5C,GAAC,OAAIA,EAAEd,SAAWyJ,EAAKzJ,MAAM,IACrD,OAAIc,EACI,2BACHyC,GAAK,IACRjD,SAAU,OACViJ,MAAOA,EAAMxK,KAAI,SAAA6B,GAAC,OAAIA,EAAEgJ,SAAWH,EAAKG,OAAM,2BACtChJ,GAAC,IAAEmI,MAAM,YAAKnI,EAAEmI,SAAM,2BAEzBnI,GAAC,IACJmI,MAAOnI,EAAEmI,MACPhK,KAAI,SAAA+B,GAAC,OAAIA,EAAEd,SAAWyJ,EAAKzJ,OAC3Bc,EAAC,eAAQ2I,EAAM,KAEjB,MAKI,2BACHlG,GAAK,IACRjD,SAAU,OACViJ,MAAOA,EAAMxK,KAAI,SAAA6B,GAAC,OAAIA,EAAEgJ,SAAWH,EAAKG,OAAM,2BACtChJ,GAAC,IAAEmI,MAAM,YAAKnI,EAAEmI,MAAMxC,QAAO,SAAAzF,GAAC,OAAGA,EAAEd,SAAWyJ,EAAKzJ,MAAM,OAAE,2BAC3DY,GAAC,IAAEmI,MAAM,GAAD,mBAAMnI,EAAEmI,OAAK,gBAAOU,MAClC,MAON,KAAKvI,EAAgBqK,YACpB,OAAO,2BACHhI,GAAK,IACRjD,SAAU,UACVkL,gBAAY3E,IAId,KAAK3F,EAAgB+I,YACpB,OAAO,2BACH1G,GAAK,IACRjD,SAAU,UACVkL,gBAAY3E,EACZ0C,MAAOhG,EAAMgG,MAAMxK,KAAI,SAAA6B,GAAC,OAAIA,EAAEgJ,SAAWhE,EAAOgE,OAAM,2BAChDhJ,GAAC,IAAEmI,MAAM,YAAKnI,EAAEmI,SAAM,2BAEtBnI,GAAC,IAAEmI,MAAOnI,EAAEmI,MAAMxC,QAAO,SAAAzF,GAAC,OAAIA,EAAEd,SAAW4F,EAAO5F,MAAM,KAAG,MAQnE,KAAKkB,EAAgBuK,SACpB,IAAI7B,EAASjC,KAAKC,IAAG,MAARD,KAAI,YAAQpE,EAAMgG,MAAMxK,KAAI,SAAA6B,GAAC,OAAIA,EAAEgJ,MAAM,MAAK,EAC3D,OAAO,2BACHrG,GAAK,IACRyH,cAAepB,EACfL,MAAM,GAAD,mBAAMhG,EAAMgG,OAAK,4BAAOkB,IAAe,IAAE3G,MAAO,cAAe8F,OAAQA,QAI9E,KAAK1I,EAAgBwK,YACpBxL,QAAQiL,IAAIvF,GACErC,EAAMgG,MAAM7F,MAAK,SAAA9C,GAAC,OAAIA,EAAEgJ,SAAWhE,EAAOgE,MAAM,IAC9D,OAAO,2BACHrG,GAAK,IACRgG,MAAOhG,EAAMgG,MAAMxK,KAAI,SAAA6B,GAAC,OAAIA,EAAEgJ,SAAWhE,EAAOgE,OAC7ChJ,EAAC,2BACIA,GAAC,IAAE+F,YAAa/F,EAAE+F,YAAY,MAMxC,KAAKzF,EAAgByK,UACpB,IAAMC,EAAQrI,EAAMgG,MAAM7F,MAAK,SAAA9C,GAAC,OAAIA,EAAEgJ,SAAWhE,EAAOgE,MAAM,IAC9D,OAAO,2BACHrG,GAAK,IACRyH,cAAeY,EAAOhC,SAIxB,KAAK1I,EAAgB2K,WACpB,OAAO,2BACHtI,GAAK,IACRyH,eAAgB,EAChBzB,MAAOhG,EAAMgG,MAAMxK,KAAI,SAAA6B,GAAC,OAAIA,EAAEgJ,SAAWhE,EAAOgG,MAAMhC,OACrDhJ,EAAC,2BAEIA,GAAC,IAAEkD,MAAO8B,EAAOgG,MAAM9H,OAAO,MAKtC,KAAK5C,EAAgB4K,YACpB,OAAO,2BACHvI,GAAK,IACRgG,MAAOhG,EAAMgG,MAAMrB,QAAO,SAACC,EAAcvH,GAGxC,OAFIA,EAAEgJ,SAAWhE,EAAOgE,QACvBzB,EAAIC,KAAK,2BAAKxH,GAAC,IAAEmI,MAAM,YAAKnI,EAAEmI,UACxBZ,CACR,GAAG,MAIL,QACC,OAAO5E,EAEV,EDtSMwI,G,QAQN,SALY9C,KAAc,4BAAdA,EAAc,kBAK1B,CALYA,QAAc,KAiBnB,IEmDO+C,GFlDRC,GAAsB,GGbtBC,GAA6B,CAClCC,KAAM,GACNlF,SAAS,EACT3G,SAAU,YDiEV,SALa0L,OAAM,kBAANA,IAAM,oBAANA,IAAM,sBAANA,IAAM,sBAKnB,CALaA,QAAM,KEhEb,IAGKI,GAHCC,GAAc,eAc1B,SAXWD,KAAc,oBAAdA,EAAc,8BAAdA,EAAc,oBAAdA,EAAc,oDAAdA,EAAc,4BAAdA,EAAc,gCAAdA,EAAc,0DAAdA,EAAc,gDAAdA,EAAc,gBAAdA,EAAc,0BAWzB,CAXWA,QAAc,KAsE1B,IAMME,GAAW,SAACC,GACjB,IAAQzM,EAASyM,EAATzM,KACR,IAAKA,EACJ,OAAO,2BACHyM,GAAI,IACPzM,UAAM+G,IAIR,IAAQ9G,EAAgCD,EAAhCC,IAAKyM,EAA2B1M,EAA3B0M,QAASC,EAAkB3M,EAAlB2M,cACtB,OAAO,2BACHF,GAAI,IACPzM,KAAOA,EAAgB,2BACnBA,GAAI,IACPC,IAAI,2BACAA,GAAG,IACNb,QAAS,IAAIC,KAAKY,EAAIb,WAEvBsN,QAAS,IAAIrN,KAAKqN,GAClBC,cAAe,IAAItN,KAAKsN,UAPX5F,GAUhB,EAyFa6F,GAET,SAACC,GACJ,wDAAO,WAAOpN,EAAoBC,GAAyB,2EAEjD,OAFiD,cAEzDD,EAAQ,SAAY6J,GAASuD,EAAUjD,UAAS,kCAC9C1F,MAAK,SAACyF,GACFA,EACCA,EAAKc,MAAQoC,EAAUpC,IAC1BhL,EAAS,CACRE,KAAM2M,GAAeQ,aACrBnD,SAIDlK,EAAS,CACRE,KAAM2M,GAAeS,yBAKvBtN,EAAS,CACRE,KAAM2M,GAAeU,6BAGxB,IAAG,EAAF,8CAGF5M,QAAQC,MAAM,EAAD,IAAM,yDAEpB,qDA3BD,EA4BD,EC5NM4M,GAA6B,CAClClN,IARwB,CACxBmN,YAAY,EACZC,gBAAiB,KACjBC,KAAM,KACNC,UAAU,IAOL5H,GAAgBC,OAAOC,KAAK2G,IAAgB7F,QAAO,SAAAvH,GAAC,OAAIA,IAAMoN,GAAegB,QAAQ,IAUrFpH,GAA4C,WAG5C,IAFLzC,EAAK,uDAAGwJ,GACRnH,EAAM,uCAEN,OAAQA,EAAOnG,MAEd,KAAK2M,GAAegB,SACnB,OAAO,2BACH7J,GAAK,IACR1D,IAAI,2BACA+F,EAAO/F,KAAG,IACbwN,UAAW,OAKd,KAAKjB,GAAekB,SACnB,OAAO,2BACH/J,GAAK,IACR1D,IAAK,CACJmN,YAAY,EACZC,iBAAiB,EACjBC,KAAM,mBACNpN,KAAM,CACLC,IAAK6F,EAAO6D,KACZgD,cAAe,IAAItN,KACnBqN,QAAS,IAAIrN,MAEdgO,UAAU,KAKb,KAAKf,GAAemB,yBACnB,OAAO,2BACHhK,GAAK,IACR1D,IAAI,2BACA0D,EAAM1D,KAAG,IACZwN,UAAW,qDAKd,KAAKjB,GAAeoB,cACnB,OAAO,2BACHjK,GAAK,IACR1D,IAAI,2BACA0D,EAAM1D,KAAG,IACZmN,YAAazJ,EAAM1D,IAAImN,eAK1B,KAAKZ,GAAeqB,YACnB,OAAO,2BACHlK,GAAK,IACR1D,IAAI,2BACA0D,EAAM1D,KAAG,IACZsN,UAAW5J,EAAM1D,IAAIsN,aAKxB,KAAKf,GAAeQ,aACnB,OAAO,2BACHrJ,GAAK,IACR1D,IAAI,2BACA0D,EAAM1D,KAAG,IACZmN,YAAY,EACZC,iBAAiB,EACjBC,KAAM,mBACNpN,KAAM,CACLC,IAAK6F,EAAO6D,KACZgD,cAAe,IAAItN,KACnBqN,QAAS,IAAIrN,UAMjB,KAAKiN,GAAesB,eACnB,OAAO,2BACHnK,GAAK,IACR1D,IAAI,2BACA0D,EAAM1D,KAAG,IACZoN,iBAAiB,EACjBnN,UAAM+G,MAKT,KAAKuF,GAAeU,4BACnB,OAAO,2BACHvJ,GAAK,IACR1D,IAAI,2BACA0D,EAAM1D,KAAG,IACZwN,UAAW,0BAKd,KAAKjB,GAAeS,uBACnB,OAAO,2BACHtJ,GAAK,IACR1D,IAAI,2BACA0D,EAAM1D,KAAG,IACZwN,UAAW,8BAMd,QACC,OAAO9J,EAEV,ECvHMoK,GAAcC,YAA2B,CAC7CpK,gBRqC2E,SAACD,EAAOqC,GACpF,IAAMG,EAAWC,EAAUzC,EAAOqC,GAIlC,OAHIL,EAAcU,SAASL,EAAOnG,OACjCkD,aAAaC,QAAQ8D,EAAoB7D,KAAKC,UAAUiD,EAAStC,aAE3DsC,CACR,EQ1CErF,YPEiE,SAAC6C,EAAOqC,GAC1E,IAAMG,EAAWC,GAAUzC,EAAOqC,GAIlC,OAHIL,GAAcU,SAASL,EAAOnG,OACjCkD,aAAaC,QAAQxD,EAAiByD,KAAKC,UAAUiD,EAAS/E,UAExD+E,CACR,EOPEuD,WLwC4D,SAAC/F,EAAOqC,GACrE,IAAMG,EAAWC,GAAUzC,EAAOqC,GAIlC,OAHIL,GAAcU,SAASL,EAAOnG,OACjCkD,aAAaC,QAAQyH,GAAexH,KAAKC,UAAUiD,EAASwD,QAEtDxD,CACR,EK7CE8H,SHPwD,WAGpD,IAFJtK,EAAK,uDAAG2I,GACRtG,EAAM,uCAEN,OAAQA,EAAOnG,MAEd,KAAKwJ,GAAe6E,aACrB,OAAO,2BACEvK,GAAK,IACR4I,KAAMvG,EAAOuG,KAAKpN,KAAI,SAAAgP,GAAG,sBAASA,EAAG,MAI3C,KAAK9E,GAAe+E,QAChB,OAAO,2BACNzK,GAAK,IACJwK,IAAKnI,EAAOmI,MAInB,QACI,OAAOxK,EAEZ,EGfE3D,SDTwD,SAAC2D,EAAOqC,GACjE,IAAMG,EAAWC,GAAUzC,EAAOqC,GAIlC,OAHIL,GAAcU,SAASL,EAAOnG,OACjCkD,aAAaC,QAAQyJ,GAAaxJ,KAAKC,UAAUiD,EAASlG,MAEpDkG,CACR,I,yBEhBKkI,G,mCAKL,SALKA,KAAe,sBAAfA,EAAe,oBAKpB,CALKA,QAAe,KAUpB,IAAMC,GAAe,CACnBf,UAAU,EACVgB,QAAS,QACTC,GAAI,SAGOC,GAAeC,wBAAqE,CAC/F/K,MAAO2K,GACP3O,SAAU,kBAAM,IAAI,IAIhBgP,GAAe,SAAChL,EAAoBqC,GACxC,OAAQA,EAAOnG,MACb,IAAK,YACH,OAAO,2BAAK8D,GAAK,IAAE4J,UAAU,EAAOgB,QAAS,QAASC,GAAI,UAC5D,IAAK,WACH,OAAO,2BAAK7K,GAAK,IAAE4J,UAAU,EAAMgB,QAAS,OAAQC,GAAI,SAC1D,QACE,OAAO7K,EAEb,EAEO,SAASiL,GAAcC,GAE5B,IAAMC,EAAS,2BACVR,IAAY,IACff,SAAUsB,EAAMtB,SAChBgB,QAASM,EAAMtB,SAAU,OAAS,QAClCiB,GAAIK,EAAMtB,SAAU,OAAS,UAG/B,EAA0BwB,qBAAWJ,GAAcG,GAAU,oBAAtDnL,EAAK,KAAEhE,EAAQ,KACtB,OAAO,eAAC8O,GAAaO,SAAQ,CAACpH,MAAO,CAAEjE,QAAOhE,YAAW,SACtDkP,EAAMI,UAEX,C,gICvCA,IAAIC,GAAmBC,sBAEjBC,GAA2BC,KAEpBC,GAAW,oDAYvB,WAAYT,GAAa,IAAD,EAOvB,OAPuB,sBACvB,cAAMA,IAJPlL,WAAK,IA0DK4L,4BAA8B,WACvC,EAAKC,SAAS,CACbC,YAAa,IAEf,EAAE,EAmFMC,QAAU,SAACC,EAA0BC,GAAsC,IAC3C,EAD0C,cACxDD,GAAc,IAAvC,2BACC,KAAsC,EAD9BE,EAAY,sBACKD,GAAa,IAAtC,2BACC,KADQE,EAAY,QACpB,GAAID,EAAaE,KAAKD,GACrB,OAAO,CAAK,gCAAD,CAAC,+BACf,OAAO,CACR,EAlJC,EAAKnM,MAAQ,CACZiE,MAAOiH,EAAMxM,OAAS,GACtBoN,YAAa,EAAKO,eAAe,IACjCC,YAAa,IAEd,CACD,CAgMA,OAhMC,+CAED,WAECvL,YAAW,WAEVA,YAAW,WACVwL,OAAOC,QACPjB,GAAkBkB,QAASD,OAC5B,GAAG,IAEJ,GAAG,IAKJ,GAEA,oBACA,WAAuB,IAAD,OACrB,EAA+BE,KAAK1M,MAA5BiE,EAAK,EAALA,MAAO6H,EAAW,EAAXA,YAEf,OAAO,eAACL,GAAwB,CAC/BG,4BAA6Bc,KAAKd,4BAClCe,cAAc,EACdb,YAAaA,EACbc,4BAA6BF,KAAKE,4BAA4BC,KAAKH,MACnEI,qBAAsBJ,KAAKI,qBAAqBD,KAAKH,MACrDK,mBAAoBL,KAAKK,mBACzBC,iBAAkBN,KAAKM,iBACvBC,mBAAoBP,KAAKO,mBACzBC,sBAAuBR,KAAKQ,sBAE5BC,wBAAyBT,KAAKS,wBAAwBN,KAAKH,MAC3DU,0BAA0B,EAC1BC,qBAAsBX,KAAKW,qBAC3BC,2BAA4BZ,KAAKY,2BACjCC,6BAA6B,EAC7BC,WAAY,CACXC,YAAY,mBACZxJ,QACAyJ,SAAU,SAACC,EAAGC,GAAW,OAAK,EAAKF,SAASC,EAAGC,EAAY,EAC3DC,WAAW,IAGd,GAAC,kCAUD,SAA+BC,EAA6BvS,GAC3D,IAAMsE,EAAsBtE,EAAKwS,WAEjCrB,KAAKxB,MAAM8C,iBAAiBnO,EAASrC,WAAYqC,EAAShC,WAC3D,GAEA,8BAOA,SAA2BkQ,EAAuBE,GAGjD,IAAMC,EAAUC,KAA0BJ,EAAW/P,KAAMiQ,EAAOG,OAC5DC,EAAQC,KAA0BP,EAAW/P,KAAMkQ,GAEzD,OACC,gCACEG,EAAM7S,KAAI,SAAC+S,EAAMC,GACjB,IAAMC,EAAYF,EAAKG,UAAY,2CAAwCpL,EAE3E,OACC,uBAAMmL,UAAWA,EAAU,SACzBF,EAAKvQ,MAD0BwQ,EAInC,KAGH,GAAC,gCAED,SAA6BG,GAC5B,OAAO,kCAASA,EAAQpO,OACzB,GASA,kCAEA,SAA+BiN,GACKA,EAA3BoB,IAAR,IAAgBC,EAAc,aAAKrB,EAAU,IAI7C,OACC,+BACC,kDAAWqB,GAAc,IAAED,IAAKrD,OAGnC,GAAC,wCAGD,YAAsI,IAA/FuD,EAAc,EAAdA,eAAgBxD,EAAQ,EAARA,SAAe,EAAL8C,MAChE,OACC,gDAASU,GAAc,aACtB,gCAAOxD,MAGV,GACA,sBAEA,SAAmBwC,EAAoE,GAAuD,IAApDiB,EAAQ,EAARA,SAAgB,EAANC,OACnGtC,KAAKb,SAAS,CAAE5H,MAAO8K,GACxB,GAAC,yCAED,YAA6D,IAArB9K,EAAK,EAALA,MACvCyI,KAAKb,SAAS,CACbC,YAAaY,KAAKL,eAAepI,IAEnC,GAAC,4BAUD,SAAyBA,GAA6B,IAAD,OAC9CgL,EAAqChL,EAAMiL,OA3KvCC,QAAQ,sBAAuB,QA6KzC,GAAqB,KAAjBF,EACH,MAAO,GAGR,IACMjD,EADaiD,EAAanM,MAAM,KACJtH,KAAI,SAAA4T,GAAI,OAAI,IAAIC,OAAOD,EAAM,IAAI,IAenE,EAA0C1C,KAAKxB,MAAvChL,EAAU,EAAVA,WAAYkC,EAAiB,EAAjBA,kBACpB,OAAOlC,EACL1E,KAAI,SAAA6M,GAEJ,OADA1L,QAAQiL,IAAI,cAAeS,EAAM7K,WAAY4E,EAAkBG,IAAI8F,EAAM7K,YAAaF,WAC/E,2BACH+K,GAAK,IACR/K,UACC8E,EAAkBG,IAAI8F,EAAM7K,YAAaF,UACvC0F,QAAO,SAAAnD,GAAQ,OAAI,EAAKkM,QAAQC,EAAgBnM,EAAS+B,MAAO,KAErE,IACCoB,QAAO,SAAA2L,GAAO,OAAIA,EAAQrR,UAAU6H,OAAS,CAAC,GACjD,GAAC,gCAED,SAA6B4I,GAC5B,OAAOA,EAAW/P,IACnB,GAAC,mCAED,SAAgC2Q,GAC/B,OAAOA,EAAQrR,SAChB,GAAC,qCAED,SAAkC2Q,GACjCvB,KAAKb,SAAS,CACbS,YAAa2B,EAAOF,YAEtB,KACA,EApNuB,CAASuB,a,gDCbjC,IAQeC,gBARS,SAACC,EAAkBC,GAC1C,MAAO,CACN1K,QAASyK,EAAMzJ,WAAWyB,YAC1BkI,GAAID,EAASC,GAEf,GAGeH,ECJR,SAA2CrE,GAC9C,IAAQwE,EAAOxE,EAAPwE,GACFC,EAA+BzE,EAAMnG,QAAQ5E,MAAK,SAAAwP,GAAM,OAAIA,EAAO1L,QAAUyL,CAAE,IACrF,OACI,gCACKC,EACKA,EAAQzL,MACR,WAIlB,ICbM0L,GAA0C,SAAC1E,GAE/C,IAAM5J,EAAW4J,EAAM5J,SACf9D,EAAiE8D,EAAjE9D,WAAY+C,EAAqDe,EAArDf,MAAOjD,EAA8CgE,EAA9ChE,UAAW8F,EAAmC9B,EAAnC8B,WAAYhH,EAAuBkF,EAAvBlF,UAAWT,EAAY2F,EAAZ3F,QAEvDkU,EAASC,aAAU,CACvBC,oBAAoB,EACpBC,cAAe,CACbxS,aACA+C,QACAjD,YACA8F,aACAhH,YACAT,WAEFsU,iBAAkBC,KAAW,CAC3B3P,MAAO2P,OACJ7L,IAAI,IAAK,kCACT8L,SAAS,cAQdC,SAAU,SAAAC,GAERnF,EAAMoF,SAASD,EAAQnF,EAAMnO,SAC/B,IAGIwT,EAAS,WAAH,MAA4B,SAAnBrF,EAAMnO,QAAoB,EAG/C,OADAJ,QAAQiL,IAAI,YAAaiI,EAAOQ,QAE9B,gBAACG,GAAA,EAAI,CAACJ,SAAUP,EAAOY,aAAa,UAEjCF,KACC,gBAACC,GAAA,EAAKE,MAAK,CAACC,UAAU,aAAY,UAChC,eAACH,GAAA,EAAKI,MAAK,mBACX,sCAAQf,EAAOQ,OAAO7S,iBAI1B,gBAACgT,GAAA,EAAKE,MAAK,CAACC,UAAU,QAAO,UAC3B,eAACH,GAAA,EAAKI,MAAK,oBACX,eAACJ,GAAA,EAAKK,QAAO,CACXC,GAAG,WACHhL,KAAK,OACL4H,SAAUmC,EAAOkB,aAEjBC,OAAQ,SAACrD,GACH4C,KAAYV,EAAOG,cAAczP,QAAUsP,EAAOQ,OAAO9P,OAC3DsP,EAAOoB,YACX,EACAhN,MAAO4L,EAAOQ,OAAO9P,MACrB2Q,MAAO,CAAEC,MAAO,QAChBC,KAAM,IAER,eAACZ,GAAA,EAAKa,KAAI,CAAC5C,UAAU,cAAa,SAC/BoB,EAAOyB,QAAQ/Q,OAASsP,EAAO0B,OAAOhR,MACrC,sBAAKkO,UAAU,cAAa,SAAEoB,EAAO0B,OAAOhR,QAC1C,UAIR,wBAEA,gBAACiQ,GAAA,EAAKE,MAAK,CAACC,UAAU,YAAW,UAC/B,eAACH,GAAA,EAAKI,MAAK,0BACX,eAACY,GAAQ,CAAC9B,GAAIG,EAAOQ,OAAOjU,eAG9B,gBAACoU,GAAA,EAAKE,MAAK,CAACC,UAAU,UAAS,UAC7B,eAACH,GAAA,EAAKI,MAAK,CAACnC,UAAU,KAAI,sBAC1B,gCAAOoB,EAAOQ,OAAO1U,QAAQ8V,0BAE/B,yBACElB,KACA,uBAAK9B,UAAU,UAAS,UACrBvD,EAAMjN,SACL,eAACyT,GAAA,EAAM,CACL9G,QAAQ,YACR+G,KAAK,KACLC,QAAS,WACP1G,EAAM2G,QAER,EAAE,oBAGL3G,EAAMjN,SACL,eAACyT,GAAA,EAAM,CACL9G,QAAQ,UACR+G,KAAK,KACLzV,KAAK,SAAQ,uBAU3B,ECrEeqT,gBAvBS,SAACC,EAAkBC,GAC1C,IAAOxP,EAAoBuP,EAApBvP,gBAEP,MAAO,CACNqB,SAF8BrB,EAAvBqB,SAGPvE,SAH8BkD,EAAblD,SAIjBkB,QAASwR,EAASxR,QAEpB,IAG2B,SAACjC,GAC3B,MAAO,CACNsU,SAAU,SAAChP,EAAqBvE,GAAgB,OAC/Cf,EAAyB,QAAXe,EAAiByD,GAAc,EAAMc,GAAUE,GAAe,EAAMF,GAAU,EAC7FuQ,OAAQ,kBAAM7V,GlB8rBR,SAACA,GACP,IACCA,EAAS,CACRE,KAAMJ,EAAoB4I,iBAK5B,CAFA,MAAOhI,GACNC,QAAQC,MAAMF,EACf,CACD,GkBvsB8C,EAC7CmC,YAAa,SAACC,GACb9C,EAAc6C,EAAYC,GAC3B,EAGF,GAEeyQ,EDuE2C,SAACrE,GAEzD,IACA,EADc4G,qBAAWhH,IACe9K,MAAhC4J,EAAQ,EAARA,SAAiB,EAAPgB,QAAW,EAAFC,GAE3B,OACE,eAACkH,GAAA,EAAS,CAACtD,UAAS,UAAK7E,EAAW,OAAS,IAAK,SAChD,eAAC,GAAS,eAAKsB,KAGrB,I,kBE/GA,IAAMO,GAA2BC,KASpBsG,GAAiB,oDAI7B,WAAY9G,GAAa,IAAD,EAOpB,OAPoB,sBACtB,cAAMA,IAHRlL,WAAK,IAmCK4L,4BAA8B,WACvC,EAAKC,SAAS,CACZC,YAAa,IAEf,EAAE,EA0EKC,QAAU,SAACC,EAA0BC,GAAuC,IAC5C,EAD2C,cACzDD,GAAc,IAAvC,2BACC,KAAsC,EAD9BE,EAAY,sBACKD,GAAa,IAAtC,2BACC,KADQE,EAAY,QACpB,GAAID,EAAaE,KAAKD,GACrB,OAAO,CAAK,gCAAD,CAAC,+BACf,OAAO,CACR,EAlHE,EAAKnM,MAAQ,CACXiE,MAAO,GACP6H,YAAa,EAAKO,eAAe,IACjCC,YAAa,IACb,CACJ,CAwIA,OAvIA,oCACA,WAAuB,IAAD,OACpB,EAA6BI,KAAK1M,MAA3BiE,EAAK,EAALA,MAAO6H,EAAW,EAAXA,YAEd,OAAO,eAAC,GAAwB,CAC7BF,4BAA6Bc,KAAKd,4BACnCe,cAAc,EACdb,YAAaA,EACbc,4BAA6BF,KAAKE,4BAA4BC,KAAKH,MACnEI,qBAAsBJ,KAAKI,qBAAqBD,KAAKH,MACrDK,mBAAoBL,KAAKK,mBACzBC,iBAAkBN,KAAKM,iBAEvBG,wBAAyBT,KAAKS,wBAAwBN,KAAKH,MAC3DU,0BAA0B,EAE1BE,2BAA4BZ,KAAKY,2BACjCE,WAAY,CACZC,YAAY,oBACZxJ,QACAyJ,SAAU,SAACC,EAAGC,GAAW,OAAK,EAAKF,SAASC,EAAGC,EAAY,IAE/D,GAAC,kCAUD,SAA+BE,EAA6BvS,GAC1D,IAAMuB,EAAkBvB,EAAKwS,WAE7BrB,KAAKxB,MAAMzM,qBACViO,KAAKxB,MAAMrL,SAASrC,WACpBkP,KAAKxB,MAAMrL,SAAShC,WACpBf,EAAOM,UACTsP,KAAKb,SAAS,CACb5H,MAAO,IAET,GAEA,8BAOA,SAA2B8J,EAAqBE,GAG/C,IAAMC,EAAUC,KAA0BJ,EAAW/P,KAAMiQ,EAAOG,OAC5DC,EAAQC,KAA0BP,EAAW/P,KAAMkQ,GAEzD,OACE,gCACCG,EAAM7S,KAAI,SAAC+S,EAAMC,GAClB,IAAMC,EAAYF,EAAKG,UAAY,2CAAwCpL,EAE3E,OACE,uBAAMmL,UAAWA,EAAU,SAC1BF,EAAKvQ,MAD2BwQ,EAInC,KAGH,GASA,wCAEA,YAAoI,IAA9FM,EAAc,EAAdA,eAAgBxD,EAAQ,EAARA,SAAe,EAAL8C,MAC9D,OACE,gDAASU,GAAc,aACvB,gCAAOxD,MAGX,GACA,sBACA,SAAmBwC,EAA4B,GAAqD,IAAnDiB,EAAQ,EAARA,SAAgB,EAANC,OACtDtC,KAAKxB,MAAM+G,eACdvF,KAAKxB,MAAM+G,cAAclD,GAE1BrC,KAAKb,SAAS,CAAC5H,MAAO8K,GACvB,GAAC,yCAED,YAA2D,IAApB9K,EAAK,EAALA,MACrCyI,KAAKb,SAAS,CACZC,YAAaY,KAAKL,eAAepI,IAErC,GAAC,4BAUD,SAAyBA,GAA2B,IAAD,OAC5CgL,EAAqChL,EAAMiL,OAxIvCC,QAAQ,sBAAuB,QA0IzC,GAAqB,KAAjBF,EACH,MAAO,GAGR,IACMjD,EADaiD,EAAanM,MAAM,KACJtH,KAAI,SAAA4T,GAAI,OAAI,IAAIC,OAAOD,EAAM,IAAI,IAInE,OAAO1C,KAAKxB,MAAMgH,kBAAkBlP,QAAO,SAAAlG,GAAM,OAAI,EAAKiP,QAAQC,EAAgBlP,EAAO8E,MAAO,GACjG,GAAC,gCAED,SAA6BmM,GAC3B,OAAOA,EAAW/P,IACpB,GAAC,qCAGD,SAAkCiQ,GAChCvB,KAAKb,SAAS,CACZS,YAAa2B,EAAOF,YAExB,KACA,EApJ6B,CAASuB,aClBhC,SAAS6C,KACf,MAA+BC,mBAAS,CAAEC,WAAW,IAAQ,oBAAtDC,EAAU,KAAEC,EAAQ,KAErBC,EAASC,iBAAuB,MAEhCC,EAAkB,WAAH,OAASH,EAAS,CAAEF,WAAW,GAAQ,EACtDM,EAAiB,WAAH,OAASJ,EAAS,CAAEF,WAAW,GAAS,EAiB5D,OAfAO,qBACE,WACA,IAAMC,EAAOL,EAAO/F,QACpB,GAAIoG,EAIJ,OAHAA,EAAKC,iBAAiB,cAAc,kBAAMJ,GAAiB,IAC3DG,EAAKC,iBAAiB,cAAc,kBAAMH,GAAgB,IAEnD,WACNE,EAAKE,oBAAoB,cAAc,kBAAML,GAAiB,IAC9DG,EAAKE,oBAAoB,cAAc,kBAAMJ,GAAgB,GAC9D,CAEA,GAAG,CAACH,EAAO/F,UAGN,CAAC+F,EAAQF,EACjB,CCbA,IAwDeU,GAxD8C,SAAC9H,GAE7D,MAA+BiH,KAAU,oBAAlCc,EAAQ,KAAEX,EAAU,KAEnBzS,EAA6FqL,EAA7FrL,SAAUqT,EAAmFhI,EAAnFgI,eAA0DC,GAAyBjI,EAAnEkI,qBAAmElI,EAA7CmI,mBAA6CnI,EAAzBiI,sBACpE3V,EAA2BqC,EAA3BrC,WAAYK,EAAegC,EAAfhC,WACZT,EAAmB8V,EAAnB9V,SAAmB8V,EAATlV,KACV,6BAAyBZ,GAEjC,OACC,uBAAKwR,IAAKqE,EAAS,UAElB,yBACCrB,QAAS,WAER0B,MAAM,+BACP,EAAE,SAEDJ,EAAelV,OAEhBsU,EAAWD,WACX,yBAAQ5D,UAAU,cAAclO,MAAM,0BACrCqR,QAAS,SAACjE,GAEL4F,UAAUC,WACbD,UAAUC,UAAUC,UAAU,GAAD,OAAIP,EAAelV,OAC9CyC,MAAK,WACL9D,QAAQiL,IAAI,oCACb,IAAG,SAAClL,GACHC,QAAQiL,IAAI,wCAAyClL,EACtD,IAEFiR,EAAE+F,iBAEH,EACC,SACD,eAAC,KAAe,CAACC,KAAMC,KAAQzM,MAAM,gBAGtCmL,EAAWD,WACX,yBACC5D,UAAU,gBACVlO,MAAM,SACNqR,QAAS,SAACjE,GACRwF,EAAqB3V,EAAYK,EAAYT,GAC7CuQ,EAAEkG,gBACH,EACA,SAED,eAAC,KAAe,CAACF,KAAMG,KAAe3M,MAAM,kBAKjD,ECiEe4M,GAjH2B,SAAC7I,GAC1C,IACCrL,EAOGqL,EAPHrL,SACAmU,EAMG9I,EANH8I,gBACAvW,EAKGyN,EALHzN,QACAQ,EAIGiN,EAJHjN,QACAlB,EAGGmO,EAHHnO,SACAqW,EAEGlI,EAFHkI,qBAAsBC,EAEnBnI,EAFmBmI,mBAAoBF,EAEvCjI,EAFuCiI,qBAC1C1U,EACGyM,EADHzM,qBAAsBI,EACnBqM,EADmBrM,YAEjBqT,EAA2B,OAAPzU,QAAO,IAAPA,OAAO,EAAPA,EAASuF,QAAO,SAAAvH,GAAC,OAAKoE,EAASpC,QAAQjC,KAAI,SAAAC,GAAC,OAAEA,EAAE2B,QAAQ,IAAEsF,SAASjH,EAAE2B,SAAS,IAExG,EAA0BkS,WAAe,IAAG,oBAA9B2E,GAAF,KAAU,MA2BnB,OACE,sBAAKxF,UAAU,kCAAiC,SAMjDuF,EAAgB7O,QAAU,GAC3B,qCACA,yBAAOgM,MAAM,OAAM,UAClB,iCACC,gCACC,8BAAiC,IAA3B6C,EAAgB7O,OAAe,iBAAmB,YACtDlH,GAAwB,YAAblB,GAA0B,6BAGzC,mCACGiX,EAAgBxY,KAAI,SAAA0H,GAAE,OACvB,8BACC,qBAAI3C,MAAK,mBAAc2C,EAAG9F,SAAQ,uBAAe8F,EAAGxF,SAAS+T,qBAAoB,YAAIvO,EAAGxF,SAASwW,sBAAuB,SACvH,eAAC,GAAiB,CAEjBrU,SAAUA,EACVqT,eAAgBhQ,EAChBkQ,qBAAsBA,EACtBC,mBAAoBA,EACpBF,qBAAsBA,GALjBjQ,EAAG9F,aAHF8F,EAAG9F,SA0BP,IAELa,GAAwB,YAAblB,GAA0B,gCACrC,8BACC,eAAC,GAAiB,CACjB8C,SAAUA,EACVqS,kBAAmBA,EACnBzT,qBAAsBA,EACtBwT,cA9Ec,SAACkC,GACtBF,EAASE,EACV,MA+EM,qBAAIhD,MAAM,OAAM,SACf,yBAAQ1C,UAAU,cAAclO,MAAM,mBAAmBqR,QACxD,SAACjE,IAnEQ,SAAC7O,GACjBD,EAAYC,GAEZ,IAAMsV,EAAgBlV,SAASC,eAAe,iBAC9CiV,EAAeC,UAAUC,IAAI,oBAC7BF,EAAelD,MAAMqD,OAAS,GAE7B,CA6DOC,EAAS,GACT7G,EAAEkG,gBACH,EACA,SACA,eAAC,KAAe,CAACF,KAAMc,KAAQtN,MAAM,8BAU5C,EC1HK,SAASuN,GAA8BxJ,GAC1C,IAAMyJ,IAAWzJ,EAAMyJ,SAOvB,OACI,eAACnE,GAAA,EAAKkE,OAAM,CACRhF,GAAIxE,EAAMwE,GACVzL,MAAOiH,EAAMjH,MACbyJ,SAVR,SAAwBC,GACpB,IAAQiH,EAAkBjH,EAAEkH,cAApBD,cACFE,EAA6B5J,EAAMnG,QAAQ6P,GACjD1J,EAAMwC,SAASC,EAAGmH,EAAe7Q,MACrC,EAOQ0Q,SAAUA,EACVhD,KAAK,KAAI,SAERzG,EAAMnG,QAAQvJ,KAAI,SAAAmU,GAAM,OACrB,yBAA2B1L,MAAO0L,EAAO1L,MAAM,SAC1C0L,EAAOzL,OADCyL,EAAO1L,MAEX,KAIzB,CCpCO,IAAM8Q,GAAgB,CACzB,CAAE7Q,MAAO,UAAWD,MAAO,GAC3B,CAAEC,MAAO,QAASD,MAAO,GACzB,CAAEC,MAAO,UAAWD,MAAO,GAC3B,CAAEC,MAAO,QAASD,MAAO,GACzB,CAAEC,MAAO,OAAQD,MAAO,GACxB,CAAEC,MAAO,QAASD,MAAO,ICNhB+Q,GAAgB,CACzB,CAAE9Q,MAAO,UAAWD,MAAO,GAC3B,CAAEC,MAAO,cAAeD,MAAO,GAC/B,CAAEC,MAAO,kBAAmBD,MAAO,GACnC,CAAEC,MAAO,UAAWD,MAAO,GAC3B,CAAEC,MAAO,WAAYD,MAAO,ICW1BgR,GAA0C,SAAC/J,GAE/C,IAAMrL,EAAaqL,EAAbrL,SACDA,IACHA,EAAQ,eAAQ8B,IAElB,IAAMkO,EAASC,aAAU,CACvBC,oBAAoB,EACpBC,cAAe,CACbxS,WAAYqC,EAASrC,WACrBK,WAAYgC,EAAShC,WACrBG,KAAM6B,EAAS7B,KACf6D,OAAQhC,EAASgC,OACjBC,OAAQjC,EAASiC,OACjBrE,QAASoC,EAASpC,QAClBrB,UAAWyD,EAASzD,UACpBT,QAASkE,EAASlE,SAEpBsU,iBAAkBC,KAAW,CAC3BlS,KAAMkS,OACH7L,IAAI,IAAK,kCACT8L,SAAS,YACZ3S,WAAY0S,OACTgF,SAAS,EAAG,mBACZ/E,SAAS,cAEdC,SAAU,SAAAC,GAERnF,EAAMoF,SAASD,EAAQnF,EAAMnO,UAC7BmO,EAAMiK,aACR,IAGI5E,EAAS,WAAH,MAA4B,SAAnBrF,EAAMnO,QAAoB,EAG/C,OADAJ,QAAQiL,IAAI,YAAaiI,EAAOQ,QAE9B,gBAACG,GAAA,EAAI,CAACJ,SAAUP,EAAOY,aAAa,UACjCF,KACC,gBAACC,GAAA,EAAKE,MAAK,CAACC,UAAU,aAAY,UAChC,eAACH,GAAA,EAAKI,MAAK,2BACX,sCAAQf,EAAOQ,OAAOxS,iBAI1B,gBAAC2S,GAAA,EAAKE,MAAK,CAACC,UAAU,aAAY,UAChC,eAACH,GAAA,EAAKI,MAAK,uBACX,eAAC8D,GAAM,CACLhF,GAAG,aACH5J,KAAK,aACLf,QAASmG,EAAMzH,gBAEfiK,SAAU,SAACC,EAAG1J,GACZ4L,EAAOuF,cAAc,aAAcnR,GAC/BsM,KAAUV,EAAOoB,YACvB,EACAhN,MAAO4L,EAAOQ,OAAO7S,aAEvB,eAACgT,GAAA,EAAKa,KAAI,CAAC5C,UAAU,cAAa,SAC/BoB,EAAOyB,QAAQ9T,YAAcqS,EAAO0B,OAAO/T,WAC1C,sBAAKiR,UAAU,cAAa,SAAEoB,EAAO0B,OAAO/T,aAC1C,UAIR,gBAACgT,GAAA,EAAKE,MAAK,CAACC,UAAU,OAAM,UAC1B,eAACH,GAAA,EAAKI,MAAK,mBACX,eAACJ,GAAA,EAAKK,QAAO,CACXC,GAAG,WACHhL,KAAK,OACL4H,SAAUmC,EAAOkB,aAEjBC,OAAQ,SAACrD,GACH4C,KAAYV,EAAOG,cAAchS,OAAS6R,EAAOQ,OAAOrS,MAC1D6R,EAAOoB,YACX,EACAhN,MAAO4L,EAAOQ,OAAOrS,KACrBkT,MAAO,CAAEC,MAAO,QAChBC,KAAM,IAER,eAACZ,GAAA,EAAKa,KAAI,CAAC5C,UAAU,cAAa,SAC/BoB,EAAOyB,QAAQtT,MAAQ6R,EAAO0B,OAAOvT,KACpC,sBAAKyQ,UAAU,cAAa,SAAEoB,EAAO0B,OAAOvT,OAC1C,UAIR,gBAACwS,GAAA,EAAKE,MAAK,CAACC,UAAU,SAAQ,UAC5B,eAACH,GAAA,EAAKI,MAAK,qBACX,eAAC8D,GAAM,CACLhF,GAAG,SACH5J,KAAK,SACLf,QAASgQ,GAETrH,SAAU,SAACC,EAAG1J,GACZ4L,EAAOuF,cAAc,SAAUnR,GAC3BsM,KAAUV,EAAOoB,YACvB,EACAhN,MAAO4L,EAAOQ,OAAOxO,SAEvB,eAAC2O,GAAA,EAAKa,KAAI,CAAC5C,UAAU,cAAa,SAC/BoB,EAAOyB,QAAQzP,QAAUgO,EAAO0B,OAAO1P,OACtC,sBAAK4M,UAAU,cAAa,SAAEoB,EAAO0B,OAAO1P,SAC1C,UAIR,wBACA,eAAC,GAAe,CACdhC,SAAUA,EACVmU,gBAAiB9I,EAAM8I,gBACvBvW,QAASyN,EAAMzN,QACfQ,QAASiN,EAAMjN,QACflB,SAAUmO,EAAMnO,SAChBqW,qBAAsBlI,EAAMkI,qBAC5BC,mBAAoBnI,EAAMmI,mBAC1BF,qBAAsBjI,EAAMiI,qBAC5B1U,qBAAsByM,EAAMzM,qBAC5BI,YAAaqM,EAAMrM,cAErB,wBAEA,gBAAC2R,GAAA,EAAKE,MAAK,CAACC,UAAU,SAAQ,UAC5B,eAACH,GAAA,EAAKI,MAAK,qBACX,eAAC8D,GAAM,CACLhF,GAAG,SACH5J,KAAK,SACLf,QAASiQ,GAETtH,SAAU,SAACC,EAAG1J,GACZ4L,EAAOuF,cAAc,SAAUnR,GAC3BsM,KAAUV,EAAOoB,YACvB,EACAhN,MAAO4L,EAAOQ,OAAOvO,SAEvB,eAAC0O,GAAA,EAAKa,KAAI,CAAC5C,UAAU,cAAa,SAC/BoB,EAAOyB,QAAQxP,QAAU+N,EAAO0B,OAAOzP,OACtC,sBAAK2M,UAAU,cAAa,SAAEoB,EAAO0B,OAAOzP,SAC1C,UAIR,gBAAC0O,GAAA,EAAKE,MAAK,CAACC,UAAU,YAAW,UAC/B,eAACH,GAAA,EAAKI,MAAK,0BACX,eAACY,GAAQ,CAAC9B,GAAIG,EAAOQ,OAAOjU,eAG9B,gBAACoU,GAAA,EAAKE,MAAK,CAACC,UAAU,UAAS,UAC7B,eAACH,GAAA,EAAKI,MAAK,CAACnC,UAAU,KAAI,sBAC1B,gCAAOoB,EAAOQ,OAAO1U,QAAQ8V,2BAG7BlB,KACA,uBAAK9B,UAAU,UAAS,UACrBvD,EAAMjN,SACL,eAACyT,GAAA,EAAM,CACL9G,QAAQ,YACR+G,KAAK,KACLC,QAAS,WACP1G,EAAM2G,SACN3G,EAAMiK,aACR,EAAE,oBAGLjK,EAAMjN,SACL,eAACyT,GAAA,EAAM,CACL9G,QAAQ,UACR+G,KAAK,KACLzV,KAAK,SAAQ,uBAQ3B,ECzKMmZ,GAAsB,SAACxV,EAAiCpC,GAC7D,YAAiB6F,IAAbzD,GAAsD,IAA5BA,EAASpC,QAAQ0H,aAA4B7B,IAAZ7F,EACvD,IACRd,QAAQiL,IAAI,mBAAoB/H,EAASpC,SACjBoC,EAASpC,QAAQjC,KAAI,SAAA0H,GAAE,kCAC1CA,GAAE,IAAElF,KAAMP,EAAQ0C,MAAK,SAAA1E,GAAC,OAAIA,EAAE2B,WAAa8F,EAAG9F,QAAQ,IAAGY,MAAI,IAG3CsX,MAAK,SAAC7Z,EAAE8Z,GAAC,OAAK9Z,EAAEiC,SAAW6X,EAAE7X,SAAW,GAAK,CAAC,IACtE,EAmDe6R,gBA3CS,SAACC,EAAkBC,GAC1C,IAAOxP,EAAiCuP,EAAjCvP,gBAAiB9C,EAAgBqS,EAAhBrS,YAChB0C,EAAwCI,EAAxCJ,SAAU4D,EAA8BxD,EAA9BwD,gBAAiB1G,EAAakD,EAAblD,SAC3BU,EAAYN,EAAZM,QACR,MAAO,CACNgG,kBACA5D,SAAUA,EACVmU,gBAAiBqB,GAAoBxV,EAAUpC,GAC/CA,UACAV,WACAkB,QAASwR,EAASxR,QAClBkX,YAAa1F,EAAS0F,YAExB,IAG2B,SAACnZ,GAC3B,MAAO,CACNsU,SAAU,SAACzQ,EAAqB9C,GAAgB,OAC/Cf,EAAyB,QAAXe,EAAiB6C,GAAc,EAAMC,GAAUa,GAAe,EAAMb,GAAU,EAC7FgS,OAAQ,kBAAM7V,G3BwgBR,SAACA,GACP,IACCA,EAAS,CACRE,KAAMJ,EAAoBiH,iBAI5B,CAFE,MAAOrG,GACRC,QAAQC,MAAMF,EACf,CACD,G2BhhB8C,EAG7C0W,qBAAsB,SAAC5V,EAAoBK,EAAoBT,GAAgB,OAC9EpB,E3B0TC,SAACwB,EAAoBK,EAAoBT,GAC5C,wDAAO,WAAOpB,GAAkB,oGAExBsC,IAAO,OAEbtC,EAAS,CACRE,KAAMJ,EAAoBmH,uBAC1BzF,WAAYA,EACZK,WAAYA,EACZT,SAAUA,IAEX,+CAGAT,QAAQC,MAAM,EAAD,IAAM,wDAEpB,mDAfD,EAgBD,C2B3UiBwW,CAAqB5V,EAAYK,EAAYT,GAAU,EACtEiW,mBAAoB,SAAC7V,EAAoBK,EAAoBT,GAAgB,OAC5EpB,E3B6UC,SAACwB,EAAoBK,EAAoBT,GAC5C,wDAAO,WAAOpB,GAAkB,oGAExBsC,IAAO,OAEbtC,EAAS,CACRE,KAAMJ,EAAoBmH,uBAC1BzF,WAAYA,EACZK,WAAYA,EACZT,SAAUA,IAEX,+CAGAT,QAAQC,MAAM,EAAD,IAAM,wDAEpB,mDAfD,EAgBD,C2B9ViByW,CAAmB7V,EAAYK,EAAYT,GAAU,EACpE+V,qBAAsB,SAAC3V,EAAoBK,EAAoBT,GAAgB,OAC9EpB,E3BgWC,SAACwB,EAAoBK,EAAoBT,GAC5C,wDAAO,WAAOpB,GAAkB,oGAExBsC,IAAO,OACbtC,EAAS,CACRE,KAAMJ,EAAoBmH,uBAC1BzF,WAAYA,EACZK,WAAYA,EACZT,SAAUA,IAEX,+CAGAT,QAAQC,MAAM,EAAD,IAAM,wDAEpB,mDAdD,EAeD,C2BhXiBuW,CAAqB3V,EAAYK,EAAYT,GAAU,EAEtEqB,qBAAsB,SAACjB,EAAoBK,EAAoBT,GAAgB,OAC9EpB,EAAcyC,EAAqBjB,EAAYK,EAAYT,GAAU,EAEtEyB,YAAa,SAACC,GACb9C,EAAc6C,EAAYC,GAC3B,EAEA4C,sBAAuB,SAAClE,EAAoBK,EAAoBf,EAAiBC,GAChFf,EAAc0F,EAAsBlE,EAAYK,EAAYf,EAAQC,GACrE,EAEF,GAEewS,EDgH2C,SAACrE,GAEzD,IACA,EADc4G,qBAAWhH,IACe9K,MAAhC4J,EAAQ,EAARA,SAAiB,EAAPgB,QAAW,EAAFC,GAE3B,OACE,eAACkH,GAAA,EAAS,CAACtD,UAAS,UAAK7E,EAAW,OAAS,IAAK,SAChD,eAAC,GAAS,eAAKsB,KAGrB,I,8BExIesK,GAlDkC,SAACtK,GAEjD,MAA+BiH,KAAU,oBAAlCc,EAAQ,KAAEX,EAAU,KAEnBzS,EAA6CqL,EAA7CrL,SAAUmO,EAAmC9C,EAAnC8C,iBAAkByH,EAAiBvK,EAAjBuK,KAAMC,EAAWxK,EAAXwK,OAClClY,EAA2BqC,EAA3BrC,WAAYK,EAAegC,EAAfhC,WAGpB,EADciU,qBAAWhH,IACe9K,MAAtB4K,GAAF,EAARhB,SAAiB,EAAPgB,SAAW,EAAFC,GAE3B,OACC,eAAC8K,GAAA,EAAUC,KAAI,CAACnH,UAAU,OAAO7D,QAASA,EAASvI,QAAM,WACxD,uBAAKuM,IAAKqE,EAAUxE,UAAU,kDAAiD,UAC9E,eAACiD,GAAA,EAAM,CACNR,MAAO,CAAC2E,SAAU,QAClBjL,QAAQ,OACR+G,KAAK,KACLlD,UAAU,iCACVmD,QAAS,kBAAM5D,EAAiBxQ,EAAYK,EAAW,EAAC,SACvDgC,EAAS7B,OAEVsU,EAAWD,WACX,uCACA,eAACX,GAAA,EAAM,CACN9G,QAASA,EACT+G,KAAK,KACLlD,UAAU,YACVyC,MAAO,CAAC4E,gBAAiB,cAAeC,YAAY,KACpDxV,MAAM,OACNqR,QAAS,kBAAM6D,EAAKjY,EAAYK,GAAY,EAAK,EAAC,SAElD,eAAC,KAAe,CAAC8V,KAAMqC,KAAQ7O,MAAM,gBAEtC,eAACuK,GAAA,EAAM,CACN9G,QAASA,EACT+G,KAAK,KACLlD,UAAU,YACVyC,MAAO,CAAC4E,gBAAiB,cAAeC,YAAa,KACrDxV,MAAM,SACNqR,QAAS,kBAAM8D,EAAOlY,EAAYK,EAAW,EAAC,SAE9C,eAAC,KAAe,CAAC8V,KAAMG,KAAe3M,MAAM,uBAOlD,ECgDe8O,GA1FkC,SAAC/K,GAEjD,MAA+BiH,KAAU,oBAAlCc,EAAQ,KAAEX,EAAU,KACnBhR,EACiC4J,EADjC5J,SAAUhE,EACuB4N,EADvB5N,UAAW4Y,EACYhL,EADZgL,eAAgBC,EACJjL,EADIiL,aAAc/U,EAClB8J,EADkB9J,eAAgBgV,EAClClL,EADkCkL,iBAC1EpI,EAAwC9C,EAAxC8C,iBAAkBsG,EAAsBpJ,EAAtBoJ,IAAKmB,EAAiBvK,EAAjBuK,KAAMC,EAAWxK,EAAXwK,OACtBlY,EAAyD8D,EAAzD9D,WAAY+C,EAA6Ce,EAA7Cf,MAA8B6C,GAAe9B,EAAtChE,UAAsCgE,EAAf8B,YAGlD,EADc0O,qBAAWhH,IACe9K,MAAtB4K,GAAF,EAARhB,SAAiB,EAAPgB,SAAW,EAAFC,GAE3B,OACC,uCACC,eAAC8K,GAAA,EAAUC,KAAI,CACdhL,QAASA,EACT6D,UAAU,YACVqC,GAAG,KAAI,SAEP,uBAAKlC,IAAKqE,EAAUxE,UAAU,kDAAiD,UAC9E,eAACiD,GAAA,EAAM,CACN9G,QAAQ,OACR+G,KAAK,KACLlD,UAAU,YACVyC,MAAO,CAAE4E,gBAAiB,cAAeC,YAAa,KACtDnE,QAAS,kBAAMsE,EAAe1Y,EAAW,EACzC+C,MAAM,SAAQ,SAEd,eAAC,KAAe,CAACoT,KAAMvQ,EAAaiT,KAAcC,KAAcnP,MAAM,SAASwK,KAAK,SAErF,eAACD,GAAA,EAAM,CACN9G,QAAQ,OACR+G,KAAK,KACLlD,UAAU,iCACVmD,QAAS,kBAAMwE,EAAiB5Y,EAAW,EAAC,SAE3C+C,IAEF,eAACmR,GAAA,EAAM,CACN9G,QAASA,EACT+G,KAAK,KACLlD,UAAU,YACVyC,MAAO,CAAE4E,gBAAiB,cAAeC,YAAa,KACtDxV,MAAM,qBACNqR,QAAS,kBAAM0C,EAAIhT,EAAS9D,WAAY,IAAI,EAAK,EAAC,SAElD,eAAC,KAAe,CAACmW,KAAMc,KAAQ9C,KAAK,KAAKxK,MAAM,aAE/CmL,EAAWD,WACX,eAACX,GAAA,EAAM,CACN9G,QAASA,EACT+G,KAAK,KACLlD,UAAU,YACVyC,MAAO,CAAE4E,gBAAiB,cAAeC,YAAa,KACtDxV,MAAM,gBACNqR,QAAS,kBAAMuE,EAAa3Y,EAAW,EAAC,SACxC,eAAC,KAAe,CAACmW,KAAMqC,KAAQ7O,MAAM,gBAGtCmL,EAAWD,WAAkC,IAArB/U,EAAU6H,QAClC,eAACuM,GAAA,EAAM,CACNC,KAAK,KACLlD,UAAU,YACVyC,MAAO,CAAE4E,gBAAiB,cAAeC,YAAa,KACtDxV,MAAM,kBACNqR,QAAS,kBAAMxQ,EAAe5D,EAAW,EAAC,SAE1C,eAAC,KAAe,CAACmW,KAAMG,KAAe3M,MAAM,qBAM/C/D,GACA,eAACuS,GAAA,EAAUC,KAAI,CAACnH,UAAU,OAAO7D,QAASA,EAAQ,SACjD,eAAC+K,GAAA,EAAS,CAAC7E,GAAG,KAAKlG,QAASA,EAAS6D,UAAU,aAAY,SACzDnR,EAAU9B,KAAI,SAAAqE,GAAQ,OACtB,eAAC,GAAW,CAEXA,SAAUA,EACVmO,iBAAkBA,EAClByH,KAAMA,EACNC,OAAQA,GAJH7V,EAAShC,WAKb,UAOT,EC3Be0Y,GAvEoC,SAACrL,GAEnD,IACA,EADc4G,qBAAWhH,IACe9K,MAAtB4K,GAAF,EAARhB,SAAiB,EAAPgB,SAEV1K,GAFqB,EAAF2K,GAI0DK,EAF7EhL,YAAYkC,EAEiE8I,EAFjE9I,kBACAgU,GACiElL,EADpFvH,kBACoFuH,EADjEkL,kBAAkBpI,EAC+C9C,EAD/C8C,iBAAkBsG,EAC6BpJ,EAD7BoJ,IAAKmB,EACwBvK,EADxBuK,KAAMC,EACkBxK,EADlBwK,OAClEc,GAAoFtL,EADVjN,QACUiN,EAApFsL,aAAaN,EAAuEhL,EAAvEgL,eAAgBC,EAAuDjL,EAAvDiL,aAAc/U,EAAyC8J,EAAzC9J,eAGtCqV,GAH+EvL,EAAzB1J,eAAyB0J,EAAT3O,KAG5DkW,iBAAyB,OAgBzC,OAfA1R,YAAW,WACc,OAApB0V,EAAQhK,UACXgK,EAAQhK,QAASiK,SACjBD,EAAQhK,QAASD,QAEnB,GAAG,KAQH7P,QAAQiL,IAAI,kDAGX,uCACC,6CAAe,IACd,yBAAQ6G,UAAU,kCAAkClO,MAAM,qBAAqBqR,QAAS,kBAAM4E,GAAa,EAAC,SAC3G,eAAC,KAAe,CAAC7C,KAAMc,KAAQ9C,KAAK,KAAKxK,MAAM,mBAIjD,eAACwO,GAAA,EAAS,CAAC7E,GAAG,KAAKlG,QAASA,EAAQ,SAClC1K,EAAW1E,KAAI,SAAA8F,GACf,IAAQ9D,EAAkC8D,EAAlC9D,WAEAF,GAFkCgE,EAAtBf,MAAsBe,EAAf8B,WACLhB,EAAkBG,IAAI/E,GACpCF,WACR,OAQC,cAPA,CAOC,GAAW,CAEXgE,SAAUA,EACVhE,UAAWA,EACX8Y,iBAAkBA,EAClBF,eAAgBA,EAChBC,aAAcA,EACd/U,eAAgBA,EAChB4M,iBAAkBA,EAClBsG,IAAKA,EACLmB,KAAMA,EACNC,OAAQA,GAVHpU,EAAS9D,WAgBjB,QAKJ,ECce+R,gBAjES,SAACC,EAAkBC,GAC1C,IAAOxP,EAAuCuP,EAAvCvP,gBAAiBqK,EAAsBkF,EAAtBlF,SAAUjO,EAAYmT,EAAZnT,SAGjC6D,EAUGD,EAVHC,WACAkC,EASGnC,EATHmC,kBACAjE,EAQG8B,EARH9B,iBACAmD,EAOGrB,EAPHqB,SACAkC,EAMGvD,EANHuD,iBACA3D,EAKGI,EALHJ,SACA4D,EAIGxD,EAJHwD,gBACA1G,EAGGkD,EAHHlD,SACA4G,EAEG1D,EAFH0D,kBACA7E,EACGmB,EADHnB,SAGD,MAAO,CACNoB,aACAkC,oBACAqB,kBACAtF,mBACAmD,WACAkC,mBACA3D,WACA9C,WACA4G,oBACA1F,QAASwR,EAASxR,QAClBa,WACA6X,WAAYrM,EAAS1B,KAAKpN,KAAI,SAAAob,GAAC,MAAK,CAAE1S,MAAO0S,EAAE9Q,KAAM7B,MAAO2S,EAAEC,MAAO1P,MAAOyP,EAAEzP,MAAO,IACrF5K,KAAMF,EAASC,IAAIC,KACnBkN,WAAYpN,EAASC,IAAImN,WAE3B,IAE2B,SAACzN,GAC3B,MAAO,CACNgS,iBAAkB,SAACxQ,EAAoBK,GACtC7B,EAAc4B,EAAYJ,EAAYK,IACtC7B,EAAckF,IACf,EACAoT,IAAK,SAAC9W,EAAoBQ,EAAcC,GACvCjC,EAAc+B,EAAYP,EAAYQ,IACtChC,EAAckF,IACf,EAEAuU,KAAM,SAACjY,EAAoBK,EAAoB2F,GAAyB,OAAKxH,E/BsQ3E,SAACwB,EAAoBK,EAAoB2F,GAC5C,wDAAO,WAAOxH,GAAkB,2EAC/B,IACCA,EAAS,CACRE,KAAMJ,EAAoB+G,cAC1BrF,aACAK,aACAM,kBAAkB,EAClBqF,oBAIF,CAFE,MAAO9G,GACRC,QAAQC,MAAMF,EACf,CAAC,2CACD,mDAZD,EAaD,C+BpR6Foa,CAAatZ,EAAYK,EAAY2F,GAAkB,EAClJkS,OAAQ,SAAClY,EAAoBK,GAAkB,OAAK7B,EAAcoC,EAAeZ,EAAYK,GAAY,EACzGmD,kBAAmB,kBAAMhF,EAAcgF,IAAoB,EAC3DE,iBAAkB,kBAAMlF,EAAckF,IAAmB,EAGzDQ,sBAAuB,SAAClE,EAAoBK,EAAoBf,EAAiBC,GAChFf,EAAc0F,EAAsBlE,EAAYK,EAAYf,EAAQC,GACrE,EAEAqZ,iBAAkB,SAAC5Y,GAAkB,OAAKxB,E/BkhBxC,SAACwB,EAAoBW,GACxB,wDAAO,WAAOnC,GAAkB,2EAC/B,IACCA,EAAS,CACRE,KAAMJ,EAAoByI,aAC1B/G,aACAW,oBAIF,CAFE,MAAOzB,GACRC,QAAQC,MAAMF,EACf,CAAC,2CACD,mDAVD,EAWD,C+B9hB0Dqa,CAAYvZ,GAAY,GAAM,EACtFgZ,YAAa,kBAAMxa,E/BmiBpB,iDAAO,WAAOA,GAAkB,2EAC/B,IACCA,EAAS,CACRE,KAAMJ,EAAoB+H,aAC1B1F,kBAAkB,GAIpB,CAFE,MAAOzB,GACRC,QAAQC,MAAMF,EACf,CAAC,2CACD,mDATD,G+BniBgD,EAC/CwZ,eAAgB,SAAC1Y,GAAkB,OAAMxB,E/BgjBvC,SAACwB,GACJ,wDAAO,WAAOxB,GAAkB,2EAC/B,IACCA,EAAS,CACRE,KAAMJ,EAAoBgI,gBAC1BtG,cAIF,CAFE,MAAOd,GACRC,QAAQC,MAAMF,EACf,CAAC,2CACD,mDATD,EAUD,C+B3jByDwZ,CAAe1Y,GAAY,EAClF2Y,aAAc,SAAC3Y,GAAkB,OAAMxB,E/B+jBrC,SAACwB,GACJ,wDAAO,WAAOxB,GAAkB,2EAC/B,IACCA,EAAS,CACRE,KAAMJ,EAAoB0I,cAC1BhH,aACAW,kBAAkB,GAIpB,CAFE,MAAOzB,GACRC,QAAQC,MAAMF,EACf,CAAC,2CACD,mDAVD,EAWD,C+B3kBuDyZ,CAAa3Y,GAAY,EAC9E4D,eAAgB,SAAC5D,GAAkB,OAAKxB,EAAcoF,GAAe,EAAM5D,GAAY,EACvFgD,cAAe,SAAC6H,GAAgB,OAAKrM,EAAcwE,GAAc,EAAM6H,GAAO,EAC9E7G,eAAgB,SAAC6G,GAAgB,OAAKrM,EAAcwF,GAAe,EAAM6G,GAAO,EAElF,GAEekH,CAA6CgH,ICD7CS,GA5E0B,SAAC9L,GAEzC,IAAMxM,EAAUuY,eAAVvY,MAGLwB,EAQqBgL,EARrBhL,WACAkC,EAOqB8I,EAPrB9I,kBACAjE,EAMqB+M,EANrB/M,iBACAmD,EAKqB4J,EALrB5J,SACAkC,EAIqB0H,EAJrB1H,iBACA3D,EAGqBqL,EAHrBrL,SACA9C,EAEqBmO,EAFrBnO,SACAkB,EACqBiN,EADrBjN,QACA+P,EAAqB9C,EAArB8C,iBAKKyI,EAAUhE,iBAAyB,MACzC1R,YAAW,WACc,OAApB0V,EAAQhK,UACXgK,EAAQhK,QAASiK,SACjBD,EAAQhK,QAASD,QAEnB,GAAG,KAEH7P,QAAQiL,IAAI,kDAEZ,IACA,EADckK,qBAAWhH,IACe9K,MAAhC4J,EAAQ,EAARA,SAAiB,EAAPgB,QAAW,EAAFC,GAE3B,OACC,qCACC,eAACkH,GAAA,EAAS,CAACmF,OAAK,WACf,gBAACC,GAAA,EAAG,CAAC1I,UAAS,UAAK7E,EAAW,OAAS,SAAU,UAChD,eAACwN,GAAA,EAAG,CAACC,GAAI,EAAE,SACV,uBAAKnG,MAAO,CAAEoG,OAAQ,oBAAqB,UAC1C,eAAC,GAAW,CACXpX,WAAYA,EACZkC,kBAAmBA,EACnB1D,MAAOA,EACPsP,iBAAkB,SAACxQ,EAAoBK,GAAkB,OAAKmQ,EAAiBxQ,EAAYK,EAAW,IAEvG,wBAECqC,GACA,eAACqX,GAAqB,eAAKrM,SAI9B,eAACkM,GAAA,EAAG,CAACC,GAAI,EAAE,SACV,uBACC5I,UAAS,UAAK7E,EAAW,OAAS,SAAU,UAE3C1J,GAAc/B,GAAoBmD,GAClC,uBAAK4P,MAAO,CAAEoG,OAAQ,mBAAoBE,aAAc,MAAOC,QAAS,oBAAqB,UAC5F,qBAAIvG,MAAO,CAAEwG,UAAW,GAAG,sBAC3B,eAACC,GAAqB,CAAC1Z,QAAsB,YAAblB,GAAgCkB,OAIjEiC,GAAcsD,GAAoB3D,GAClC,uBAAKqR,MAAO,CAAEoG,OAAQ,mBAAoBE,aAAc,MAAOC,QAAS,oBAAqB,UAC5F,qBAAIvG,MAAO,CAAEwG,UAAW,GAAI,sBAC5B,eAACE,GAAqB,CAAC3Z,QAAsB,YAAblB,GAAgCkB,EAASkX,YAAa,WAAQ,kBAUvG,E,SCHe0C,GArEiC,SAAC3M,GAChD,IAAMxM,EAAUuY,eAAVvY,MACEwB,EAA2HgL,EAA3HhL,WAAYkC,EAA+G8I,EAA/G9I,kBAAmBd,EAA4F4J,EAA5F5J,SAAUzB,EAAkFqL,EAAlFrL,SAAU2D,EAAwE0H,EAAxE1H,iBAAkBwK,EAAsD9C,EAAtD8C,iBAAkBsG,EAAoCpJ,EAApCoJ,IAAwBrW,GAAYiN,EAA/BlK,kBAA+BkK,EAAZjN,SACvHtB,QAAQiL,IAAI,SAAUlJ,GACtB,MAAwB0T,oBAAS,GAAM,oBAAhC0F,EAAI,KAAEC,EAAO,KACd5C,EAAc,WAAH,OAAS4C,GAAQ,EAAO,EAEnCC,EAAO9X,IAAeoB,GAAYzB,GAGxC,EADciS,qBAAWhH,IACe9K,MAAhC4J,EAAQ,EAARA,SAAUgB,EAAO,EAAPA,QAAW,EAAFC,GAK3B,OACC,gBAACkH,GAAA,EAAS,CAACmF,OAAK,YACf,eAACC,GAAA,EAAG,CAAC1I,UAAS,UAAK7E,EAAW,OAAS,IAAK,SAC3C,gBAACwN,GAAA,EAAG,CAACC,GAAIW,EAAO,EAAI,GAAIC,GAAID,EAAO,EAAI,GAAG,UACzC,uBAAK9G,MAAO,CAAEgH,QAAS,OAAQC,WAAY,UAAW,UAErD,eAAC,GAAW,CACXjY,WAAYA,EACZkC,kBAAmBA,EACnB1D,MAAOA,EACPsP,iBAAkB,SAACxQ,EAAoBK,GAAkB,OAAKmQ,EAAiBxQ,EAAYK,EAAW,IAEvG,eAAC6T,GAAA,EAAM,CACN9G,QAASA,EACT6D,UAAU,cACVlO,MAAM,wBACNqR,QAAS,WAAQ0C,EAAI,EAAQ,OAAL5V,QAAK,IAALA,IAAS,IAAI,GAzBlBqZ,GAAQ,EAyB+B,EAAE,SAE5D,eAAC,KAAe,CAACpE,KAAMc,KAAQ9C,KAAK,YAGtC,sBAAKlD,UAAU,IAAG,SAChBvO,GAAcL,GAAY2D,GAC1B,iCACC,2CACA,eAACoU,GAAqB,CAAC3Z,QAASA,EAASkX,YAAa,WAAQ,cAMnE,gBAACiD,GAAA,EAAK,CAACN,KAAMA,EAAMO,OAAQlD,EAAamD,WAAW,EAAM3G,KAAK,KAAK4G,UAAQ,EAC1E9J,UAAS,UAAK7E,EAAW,OAAS,IAClC4O,iBAAgB,UAAK5O,EAAW,OAAS,IAAK,UAC9C,eAACwO,GAAA,EAAMK,OAAM,CAACC,aAAW,WACxB,eAACN,GAAA,EAAMO,MAAK,+BAEb,eAACP,GAAA,EAAMQ,KAAI,UACV,eAAChB,GAAqB,CAAC3Z,QAASA,EAASkX,YAAaA,WAc3D,EClEM0D,GAAkB,SAACrJ,EAAkBC,GAC1C,IAAOxP,EAAuCuP,EAAvCvP,gBAAiBqK,EAAsBkF,EAAtBlF,SAAUjO,EAAYmT,EAAZnT,SAGjC6D,EAUGD,EAVHC,WACAkC,EASGnC,EATHmC,kBACAjE,EAQG8B,EARH9B,iBACAmD,EAOGrB,EAPHqB,SACAkC,EAMGvD,EANHuD,iBACA3D,EAKGI,EALHJ,SACA4D,EAIGxD,EAJHwD,gBACA1G,EAGGkD,EAHHlD,SACA4G,EAEG1D,EAFH0D,kBACA7E,EACGmB,EADHnB,SAGD,MAAO,CACNoB,aACAkC,oBACAqB,kBACAtF,mBACAmD,WACAkC,mBACA3D,WACA9C,WACA4G,oBACA1F,QAASwR,EAASxR,QAClBa,WACA6X,WAAYrM,EAAS1B,KAAKpN,KAAI,SAAAob,GAAC,MAAK,CAAE1S,MAAO0S,EAAE9Q,KAAM7B,MAAO2S,EAAEC,MAAO1P,MAAOyP,EAAEzP,MAAO,IAErF5K,KAAMF,EAASC,IAAIC,KACnBkN,WAAYpN,EAASC,IAAImN,WAE3B,EAEMqP,GAAqB,SAAC9c,GAC3B,MAAO,CACNgS,iBAAkB,SAACxQ,EAAoBK,GACtC7B,EAAc4B,EAAYJ,EAAYK,IACtC7B,EAAckF,IACf,EACAoT,IAAK,SAAC9W,EAAoBQ,EAAcC,GAAiB,OAAKjC,EAAc+B,EAAYP,EAAYQ,GAAe,EACnHgD,kBAAmB,kBAAMhF,EAAcgF,IAAoB,EAE7D,EAGe,IACdd,WAAYqP,YAAQsJ,GAAiBC,GAAzBvJ,CAA6CwJ,IACzDC,UAAWzJ,YAAQsJ,GAAiBC,GAAzBvJ,CAA6CsI,KC/DzD9W,YAAW,WACT,IAAMkY,EAAM/Z,SAASga,cAAc,iBAC/BD,GACFA,EAAKE,aAAa,QAAS,eAC/B,GAAG,KAEH,IAceC,GAde,WAC5B,OACE,uCACE,qBAAIlI,MAAO,CAACmI,UAAW,SAAUC,iBAAkB,UAAWC,eAAgB,UAAW,iCACzF,sBAAK7J,GAAG,eAAejB,UAAU,YAAW,SAC1C,qBAAIyC,MAAO,CAACmI,UAAW,SAAUlS,MAAO,OAAQ0O,SAAS,QAAQ,SAAC,2EAChE,wBAAK,kDAA+C,wBAAK,oDAG7D,eAAC,GAAWmD,UAAS,CAAC/a,SAAS,MAGrC,ECXMub,GAA4B,SAACtO,GAClC,IAAM2E,EAASC,aAAU,CACxBC,oBAAoB,EACpBC,cAAe,CACd5S,SAAU8N,EAAMpO,OAAOM,SACvBY,KAAMkN,EAAMpO,OAAOkB,KACnB5B,UAAW8O,EAAMpO,OAAOV,UACxBT,QAASuP,EAAMpO,OAAOnB,SAEvBsU,iBAAkBC,KAAW,CAC5BlS,KAAMkS,OACJ7L,IAAI,IAAK,kCACT8L,SAAS,cAEZC,SAAU,SAACC,GAEVnF,EAAMoF,SAASD,EAAQnF,EAAMnO,SAC9B,IAGKwT,EAAS,WAAH,MAA4B,SAAnBrF,EAAMnO,QAAoB,EAG/C,OAFAJ,QAAQiL,IAAI,YAAaiI,EAAOQ,QAG/B,gBAACG,GAAA,EAAI,CAACJ,SAAUP,EAAOY,aAAa,UAClCF,KACA,gBAACC,GAAA,EAAKE,MAAK,CAACC,UAAU,WAAU,UAC/B,eAACH,GAAA,EAAKI,MAAK,mBACX,sCAAQf,EAAOQ,OAAOjT,eAKxB,gBAACoT,GAAA,EAAKE,MAAK,CAACC,UAAU,OAAM,UAC3B,eAACH,GAAA,EAAKI,MAAK,qBACX,eAACJ,GAAA,EAAKK,QAAO,CACZC,GAAG,WACHhL,KAAK,OACL4H,SAAUmC,EAAOkB,aAEjBC,OAAQ,SAACrD,GACJ4C,KAAYV,EAAOG,cAAchS,OAAS6R,EAAOQ,OAAOrS,MAC3D6R,EAAOoB,YACT,EACAhN,MAAO4L,EAAOQ,OAAOrS,KACrBkT,MAAO,CAAEC,MAAO,QAChBC,KAAM,IAEP,eAACZ,GAAA,EAAKa,KAAI,CAAC5C,UAAU,cAAa,SAChCoB,EAAOyB,QAAQtT,MAAQ6R,EAAO0B,OAAOvT,KACrC,sBAAKyQ,UAAU,cAAa,SAAEoB,EAAO0B,OAAOvT,OACzC,UAIN,gBAACwS,GAAA,EAAKE,MAAK,CAACC,UAAU,YAAW,UAChC,eAACH,GAAA,EAAKI,MAAK,0BACX,eAACY,GAAQ,CAAC9B,GAAIG,EAAOQ,OAAOjU,eAG7B,gBAACoU,GAAA,EAAKE,MAAK,CAACC,UAAU,UAAS,UAC9B,eAACH,GAAA,EAAKI,MAAK,CAACnC,UAAU,KAAI,sBAC1B,gCAAOoB,EAAOQ,OAAO1U,QAAQ8V,2BAG5BlB,KACD,uBAAK9B,UAAU,UAAS,UACvB,eAACiD,GAAA,EAAM,CACN9G,QAAQ,YACR+G,KAAK,KACLC,QAAS,WACR1G,EAAM2G,QAEP,EAAE,oBAGH,eAACH,GAAA,EAAM,CACN9G,QAAQ,UACR+G,KAAK,KACLzV,KAAK,SAAQ,uBAQnB,EAEaud,GAA+B,SAACvO,GAC5C,IACA,EADc4G,qBAAWhH,IACe9K,MAAhC4J,EAAQ,EAARA,SAAiB,EAAPgB,QAAW,EAAFC,GAE3B,OACC,eAACkH,GAAA,EAAS,CAACtD,UAAS,UAAK7E,EAAW,OAAS,IAAK,SACjD,eAAC,GAAO,eAAKsB,KAGhB,E,UCnGawO,GAA4B,SAACxO,GACzC,IAAQpO,EAA2DoO,EAA3DpO,OAAQ6c,EAAmDzO,EAAnDyO,YAAaC,EAAsC1O,EAAtC0O,oBAAqBnE,EAAiBvK,EAAjBuK,KAAMC,EAAWxK,EAAXwK,OACxD,OACC,gCACC,8BACE5Y,EAAOM,WAET,8BACEN,EAAOkB,OAET,8BACC,yBACCyQ,UAAU,cACVlO,MAAM,mBACNqR,QAAS,kBAAM6D,EAAK3Y,EAAOM,SAAS,EAAC,SACrC,eAAC,KAAe,CAACuW,KAAMqC,KAAQ7O,MAAM,kBAGvC,8BACC,yBACCsH,UAAU,gBACVlO,MAAM,gBACNqR,QAAS,WACR,IAAM1O,EAAKyW,EAAYxZ,MAAK,SAAA1E,GAAC,OAAIA,EAAE2B,WAAaN,EAAOM,QAAQ,IAC3D8F,EACHoQ,MAAM,0CAAD,OAA2CsG,EAAoB1W,EAAG1F,WAAa0F,EAAGrF,YAAY,8CAEnG6X,EAAO5Y,EAAOM,SAChB,EACC,SACD,eAAC,KAAe,CAACuW,KAAMG,KAAe3M,MAAM,oBA3BtCrK,EAAOM,SAgClB,ECFeyc,GAhCgB,SAAC3O,GAC/B,IAAQzN,EAA4DyN,EAA5DzN,QAASkc,EAAmDzO,EAAnDyO,YAAaC,EAAsC1O,EAAtC0O,oBAAqBnE,EAAiBvK,EAAjBuK,KAAMC,EAAWxK,EAAXwK,OAGzD,EADc5D,qBAAWhH,IACe9K,MAAtB4K,GAAF,EAARhB,SAAiB,EAAPgB,SAAW,EAAFC,GAE3B,OACC,gBAACiP,GAAA,EAAK,CAAClP,QAASA,EAASmP,YAAU,EAACC,SAAO,EAACC,UAAQ,EAACC,OAAK,EAACvI,KAAK,KAAI,UACnE,iCACC,gCACC,qCACA,yCACA,wBACA,6BAGF,iCACGlU,EAAQjC,KAAI,SAAAsB,GAAM,OACnB,eAAC,GAAO,CAEPA,OAAQA,EACR6c,YAAaA,EACbC,oBAAqBA,EACrBnE,KAAMA,EACNC,OAAQA,GALH5Y,EAAOM,SAMX,QAKL,ECoCa4Z,GAtDgB,SAAC9L,GAChB+L,eAATkD,KAAN,IAGA,EADcrI,qBAAWhH,IACe9K,MAAhC4J,EAAQ,EAARA,SAGAnM,GAHiB,EAAPmN,QAAW,EAAFC,GAGkFK,EAArGzN,SAASX,EAA4FoO,EAA5FpO,OAAQ6c,EAAoFzO,EAApFyO,YAAaC,EAAuE1O,EAAvE0O,oBAAqB7c,EAAkDmO,EAAlDnO,SAAUuX,EAAwCpJ,EAAxCoJ,IAAKmB,EAAmCvK,EAAnCuK,KAAMC,EAA6BxK,EAA7BwK,OAAQ7D,EAAqB3G,EAArB2G,OAAQvB,EAAapF,EAAboF,SAChG,OACC,eAACyB,GAAA,EAAS,CAACmF,OAAK,WACf,gBAACC,GAAA,EAAG,CAAC1I,UAAS,UAAK7E,EAAW,OAAS,SAAU,UAChD,eAACwN,GAAA,EAAG,CAACC,GAAI,EAAE,SACV,uBAAK5I,UAAS,UAAK7E,EAAW,OAAS,IAAK,UAC3C,eAAC8H,GAAA,EAAM,CAAC9G,QAAQ,UAAUgH,QAAS,kBAAM0C,GAAK,EAAE7F,UAAU,OAAM,qBAC5C,IAAnBhR,EAAQ0H,OACR,+BACE,wBAIF,+BACC,eAAC,GAAI,CACJ1H,QAASA,EACTkc,YAAaA,EACbC,oBAAqBA,EACrBnE,KAAMA,EACNC,OAAQA,WAKb,eAAC0B,GAAA,EAAG,CAACC,GAAI,EAAE,SACV,sBAAK5I,UAAS,UAAK7E,EAAW,OAAS,SAAU,SAC/C9M,GACA,uBAAKoU,MAAO,CAAEoG,OAAQ,mBAAoBE,aAAc,MAAOC,QAAS,oBAAqB,UAC5F,8BACe,QAAb1a,EAAqB,aAAe,WAEtC,eAAC,GAAU,CACVD,OAAQA,EACRC,SAAUA,EACV8U,OAAQA,EACRvB,SAAU,SAACxT,GAAe,OAAKwT,EAASxT,EAAQC,EAAS,eAUlE,ECpEMqd,GAAiB,SAACna,GACvB,IAE+B,EAFvBC,EAAkCD,EAAlCC,WAAYkC,EAAsBnC,EAAtBmC,kBAChB4R,EAAqC,GAAG,cACvB9T,GAAU,yBAEc,EAFpCoB,EAAQ,QACVgB,EAAgBF,EAAkBG,IAAIjB,EAAS9D,YAAa,cAC7C8E,EAAchF,WAAS,yBAAnCuC,EAAQ,QACVwa,EAAMxa,EAASpC,QAAQjC,KAAI,SAAAC,GAAC,kCAC9BA,GAAC,IACJ+B,WAAY8D,EAAS9D,WACrBK,WAAYgC,EAAShC,YAAU,IAEhCmW,EAAkBA,EAAgBnM,OAAOwS,EAAI,EAN9C,2BAA+C,GAO9C,iCATF,2BAAkC,GAUjC,+BACD,OAAOrG,CACR,EAiCezE,gBAtBS,SAACC,GACvB,MAAO,CACR/R,QAAS+R,EAAMrS,YAAYM,QAC3BX,OAAQ0S,EAAMrS,YAAYL,OAC1BC,SAAUyS,EAAMrS,YAAYJ,SAC5B4c,YAAaS,GAAe5K,EAAMvP,iBAClC2Z,oBAAqB,SAACpc,EAAoBK,GAAkB,OAfjC,SAACoC,EAAmCzC,EAAoBK,GACnF,IAAQqC,EAAkCD,EAAlCC,WAAYkC,EAAsBnC,EAAtBmC,kBACdd,EAAWpB,EAAWC,MAAM,SAAA9C,GAAC,OAAIA,EAAEG,aAAeA,CAAU,IAE5DqC,EADgBuC,EAAkBG,IAAIjB,EAAU9D,YACvBF,UAAU6C,MAAK,SAAA5C,GAAC,OAAIA,EAAEM,aAAeA,CAAU,IAC9E,MAAM,GAAN,OAAUyD,EAAUf,MAAK,YAAIV,EAAU7B,KAExC,CAQ0E4b,CAAoBpK,EAAMvP,gBAAiBzC,EAAYK,EAAW,EAC3IrB,IAAKgT,EAAMnT,SAASC,IAAIC,KAAMC,IAE/B,IAE2B,SAACR,GAC3B,MAAO,CAENsY,IAAK,kBAAMtY,EAAcD,IAAY,EACrC0Z,KAAM,SAACrY,GAAgB,OAAKpB,EzCwF1B,SAACoB,GACJ,wDAAO,WAAOpB,GAAkB,2EAC/B,IACCA,EAAS,CACRE,KAAMb,EAAkB+J,YACxBhI,YAIF,CAFE,MAAOV,GACRC,QAAQC,MAAMF,EACf,CAAC,2CACD,mDATD,EAUD,CyCnG4C4d,CAAWld,GAAU,EAC/DsY,OAAQ,SAACtY,GAAgB,OAAKpB,EzCsG5B,SAACoB,GACJ,wDAAO,WAAOpB,GAAkB,2EAC/B,IACCA,EAAS,CACRE,KAAMb,EAAkBiK,cACxBlI,YAIF,CAFE,MAAOV,GACRC,QAAQC,MAAMF,EACf,CAAC,2CACD,mDATD,EAUD,CyCjH8C6d,CAAand,GAAU,EACnEkT,SAAU,SAACxT,EAAiBC,GAAgB,OAAKf,EAAca,EAAYC,EAAQC,GAAU,EAC7F8U,OAAQ,kBAAM7V,GzC6IR,SAACA,GACN,IACAA,EAAS,CACTE,KAAMb,EAAkBgK,eAIxB,CAFE,MAAO3I,GACTC,QAAQC,MAAMF,EACd,CACF,GyCrJ4C,EAE7C,GAEe6S,CAA6CyH,ICjDtDwD,GAAgC,SAACtP,GACrC,IAAQ7D,EAAsB6D,EAAtB7D,YACA7K,EADsB0O,EAAT3O,KACbC,IACR,EAA0E6K,EAAlEhB,EAAM,EAANA,OAAQ5J,EAAM,EAANA,OAAQ0J,EAAQ,EAARA,SAAUa,EAAG,EAAHA,IAAKC,EAAU,EAAVA,WAAY7K,EAAS,EAATA,UAAWT,EAAO,EAAPA,QACxDkU,EAASC,aAAU,CACvBC,oBAAoB,EACpBC,cAAe,CACb3J,SACA5J,SACA0J,WACAa,MACAC,aACA7K,YACAT,WAEFsU,iBAAkBC,KAAW,CAC3B7J,OAAQ6J,OACLC,SAAS,YAEZhK,SAAU+J,OACP7L,IAAI,GAAI,iCACR8L,SAAS,YACZnJ,IAAKkJ,OAEFuK,IAAI,GACJpW,IAAI,IACJ8L,aAELC,SAAU,SAAAC,GACRiD,MAAMhU,KAAKC,UAAU8Q,EAAQ,KAAM,IAChB,KAAf7T,EAAI6J,OACNiN,MAAM,iCAENpI,EAAMoF,SAASD,EAAQnF,EAAMnO,SACjC,IAGIwT,EAAS,WAAH,MAA4B,SAAnBrF,EAAMnO,QAAoB,EAI/C,OAFAJ,QAAQiL,IAAI,iBAAkBiI,EAAOQ,QAGnC,gBAACG,GAAA,EAAI,CAACJ,SAAUP,EAAOY,aAAa,UAElC,gBAACD,GAAA,EAAKE,MAAK,CAACC,UAAU,SAAQ,UAC5B,eAACH,GAAA,EAAKI,MAAK,sBAAqB,wBAAMlB,GAAG,SAAQ,UAAE,IAAKG,EAAOQ,OAAO5T,aAGxE,gBAAC+T,GAAA,EAAKE,MAAK,CAACC,UAAU,SAAQ,UAC5B,eAACH,GAAA,EAAKI,MAAK,mBACX,eAAC8D,GAAM,CACLhF,GAAG,SACH5J,KAAK,SACLf,QAAoB,KAAXsB,EAAgB6E,EAAM3D,YAAc2D,EAAM3D,YAAYvE,QAAO,SAAA0X,GAAC,OAAgB,KAAZA,EAAEzW,KAAY,IAEzFyJ,SAAU,SAACC,EAAG1J,GACZ4L,EAAOuF,cAAc,SAAUnR,GAC3BsM,KAAUV,EAAOoB,YACvB,EACAhN,MAAO4L,EAAOQ,OAAOhK,OACrBsO,SAAqB,KAAXtO,OAId,gBAACmK,GAAA,EAAKE,MAAK,CAACC,UAAU,WAAU,UAC9B,eAACH,GAAA,EAAKI,MAAK,mBACX,eAACJ,GAAA,EAAKK,QAAO,CACXC,GAAG,QACHhL,KAAK,WACL4H,SAAUmC,EAAOkB,aAEjBC,OAAQ,SAACrD,GACH4C,KAAYV,EAAOG,cAAc7J,WAAa0J,EAAOQ,OAAOlK,UAC9D0J,EAAOoB,YACX,EACAhN,MAAO4L,EAAOQ,OAAOlK,SACrB+K,MAAO,CAAEC,MAAO,UAElB,eAACX,GAAA,EAAKa,KAAI,CAAC5C,UAAU,cAAa,SAC/BoB,EAAOyB,QAAQnL,UAAY0J,EAAO0B,OAAOpL,SACxC,sBAAKsI,UAAU,cAAa,SAAEoB,EAAO0B,OAAOpL,WAC1C,UAIR,gBAACqK,GAAA,EAAKE,MAAK,CAACjC,UAAU,OAAOkC,UAAU,MAAK,UAC1C,eAACH,GAAA,EAAKI,MAAK,uBACX,eAACJ,GAAA,EAAKK,QAAO,CACX3U,KAAK,WACLuR,YAAY,WACZ3H,KAAK,MACL7B,MAAO4L,EAAOQ,OAAOrJ,IACrB0G,SAAUmC,EAAOkB,aACjBC,OAAQ,SAACrD,GACH4C,KAAYV,EAAOG,cAAchJ,MAAQ6I,EAAOQ,OAAOrJ,KACzD6I,EAAOoB,YACX,IAEF,eAACT,GAAA,EAAKa,KAAI,CAAC5C,UAAU,cAAa,SAC/BoB,EAAOyB,QAAQtK,KAAO6I,EAAO0B,OAAOvK,IACnC,sBAAKyH,UAAU,cAAa,SAAEoB,EAAO0B,OAAOvK,MAC1C,UAKR,gBAACwJ,GAAA,EAAKE,MAAK,CAACC,UAAU,YAAW,UAC/B,eAACH,GAAA,EAAKI,MAAK,0BACX,eAACY,GAAQ,CAAC9B,GAAIG,EAAOQ,OAAOjU,eAI9B,gBAACoU,GAAA,EAAKE,MAAK,CAACC,UAAU,UAAS,UAC7B,eAACH,GAAA,EAAKI,MAAK,CAACnC,UAAU,KAAI,sBAC1B,gCAAOoB,EAAOQ,OAAO1U,QAAQ8V,2BAG7BlB,KACA,uBAAK9B,UAAU,UAAS,UACrBvD,EAAMjN,SACL,eAACyT,GAAA,EAAM,CACL9G,QAAQ,YACR+G,KAAK,KACLC,QAAS,WACP1G,EAAM2G,QAER,EAAE,oBAGL3G,EAAMjN,SACL,eAACyT,GAAA,EAAM,CACL9G,QAAQ,UACR+G,KAAK,KACLzV,KAAK,SAAQ,uBAQ3B,ECnGeqT,gBA7BS,SAACC,EAAkBC,GAC1C,IAAO1J,EAAkCyJ,EAAlCzJ,WAAsB1J,GAAYmT,EAAtBlF,SAAsBkF,EAAZnT,UACrB2J,EAA6DD,EAA7DC,MAAOqB,EAAsDtB,EAAtDsB,YAAaE,EAAyCxB,EAAzCwB,YAAaxK,EAA4BgJ,EAA5BhJ,SAAU0K,EAAkB1B,EAAlB0B,cACnD,MAAO,CACNlL,KAAMF,EAASC,IAAIC,KACnByJ,QACAuB,cACAF,cACAtK,WACA0K,gBACAxJ,QAASwR,EAASxR,QAEpB,IAE2B,SAACjC,GAC3B,MAAO,CACN2e,aAAc,SAACle,GAAc,OAAKT,EAAc2J,GAAQlJ,GAAQ,EAChE6X,IAAK,SAACsG,EAAoB5c,EAAcC,GAAiB,OAAKjC,EAAcoK,GAAQwU,EAAY5c,GAAe,EAC/GyX,KAAM,SAACmF,EAAoBne,GAAc,OAAKT,EAAcuK,GAASqU,EAAYne,GAAQ,EACzFiZ,OAAQ,SAACkF,EAAoBne,GAAc,OAAKT,EAAcyK,GAAWmU,EAAYne,GAAQ,EAC7F6T,SAAU,SAACpK,EAAanJ,GAAgB,OAAKf,EAAc4K,GAAUV,EAAMnJ,GAAU,EACrF8U,OAAQ,kBAAM7V,GzCuSR,SAACA,GACP,IACCA,EAAS,CACRE,KAAMyB,EAAgBqK,aAIxB,CAFE,MAAOtL,GACRC,QAAQC,MAAMF,EACf,CACD,GyC/S0C,EAEzCmC,YAAa,SAACC,GACb9C,EzCkOC,SAAC8C,GACJ,wDAAO,WAAO9C,GAAkB,2EAC/B,IACCA,EAAS,CACRE,KAAMyB,EAAgBoB,cACtBD,YAKF,CAFA,MAAOpC,GACNC,QAAQC,MAAMF,EACf,CAAC,2CACD,mDAVD,EAWD,CyC9OiBmC,CAAYC,GAC3B,EAEF,GAEeyQ,EDsG+B,SAACrE,GAC7C,IACA,EADc4G,qBAAWhH,IACe9K,MAAhC4J,EAAQ,EAARA,SAAiB,EAAPgB,QAAW,EAAFC,GAC3B,OACE,eAACkH,GAAA,EAAS,CAACtD,UAAS,UAAK7E,EAAW,OAAS,IAAK,SAChD,eAAC,GAAO,eAAKsB,KAGnB,IEzFe2P,GAtDsB,SAAC3P,GAErC,MAA+BiH,KAAU,oBAAlCc,EAAQ,KAAEX,EAAU,KAEnB9V,EAA0C0O,EAA1C1O,IAAK0J,EAAqCgF,EAArChF,KAAMyU,EAA+BzP,EAA/ByP,aAAclF,EAAiBvK,EAAjBuK,KAAMC,EAAWxK,EAAXwK,OAC/BrP,EAA6BH,EAA7BG,OAAQ5J,EAAqByJ,EAArBzJ,OAAQ0J,EAAaD,EAAbC,SAGxB,EADcmJ,aAAiBxE,IACS9K,MAAtB4K,GAAF,EAARhB,SAAiB,EAAPgB,SAAW,EAAFC,GAE3B,OACC,eAAC8K,GAAA,EAAUC,KAAI,CACd9E,GAAG,KACHrC,UAAU,OACV7D,QAASA,EAAQ,SAEjB,uBAAKgE,IAAKqE,EAAUxE,UAAU,kDAAiD,UAC9E,gBAACiD,GAAA,EAAM,CACNR,MAAO,CAAE2E,SAAU,QACnBjL,QAAQ,OACR+G,KAAK,KACLlD,UAAU,iCACVmD,QAAS,kBAAM+I,EAAale,EAAO,EAAC,UACnC0J,EAAQ,IAAG1J,KAEZ6V,EAAWD,WACX,eAACX,GAAA,EAAM,CACN9G,QAASA,EACT+G,KAAK,KACLlD,UAAU,YACVyC,MAAO,CAAE4E,gBAAiB,cAAeC,YAAa,KACtDxV,MAAM,OACNqR,QAAS,kBAAM6D,EAAKpP,EAAQ5J,EAAO,EAAC,SAEpC,eAAC,KAAe,CAACkX,KAAMqC,KAAQ7O,MAAM,gBAGtCmL,EAAWD,WAA4B,KAAf7V,EAAI6J,QAC5B,eAACqL,GAAA,EAAM,CACN9G,QAASA,EACT+G,KAAK,KACLlD,UAAU,YACVyC,MAAO,CAAE4E,gBAAiB,cAAeC,YAAa,KACtDxV,MAAM,SACNqR,QAAS,kBAAM8D,EAAOrP,EAAQ5J,EAAO,EAAC,SAEtC,eAAC,KAAe,CAACkX,KAAMG,KAAe3M,MAAM,oBAMlD,E,UCGe2T,GAtD0B,SAAC5P,GAEzC,MAA+BiH,KAAU,oBAAlCc,EAAQ,KAAEX,EAAU,KACnB9V,EAAyD0O,EAAzD1O,IAAKuL,EAAoDmD,EAApDnD,SAAUgT,EAA0C7P,EAA1C6P,WAAYC,EAA8B9P,EAA9B8P,SAAUC,EAAoB/P,EAApB+P,WAAY3G,EAAQpJ,EAARoJ,IACjDjO,EAA4C0B,EAA5C1B,OAAQ9F,EAAoCwH,EAApCxH,MAAOiF,EAA6BuC,EAA7BvC,MAAOpC,EAAsB2E,EAAtB3E,WAAY+D,EAAUY,EAAVZ,MAG1C,EADcmI,aAAiBxE,IACS9K,MAAtB4K,GAAF,EAARhB,SAAiB,EAAPgB,SAAW,EAAFC,GAE3B,OACC,uBAAK+D,IAAKqE,EAAS,UAClB,yBACCxE,UAAU,cACVlO,MAAM,SACNqR,QAAS,kBAAMmJ,EAAW1U,EAAO,EACjC6K,MAAO,CAAEgK,WAAY,OAAQ,SAE7B,eAAC,KAAe,CAACvH,KAAMvQ,EAAaiT,KAAcC,KAAcnP,MAAOA,EAAOwK,KAAK,SAEpF,eAACD,GAAA,EAAM,CACN9G,QAAQ,OACR+G,KAAK,KACLlD,UAAU,iCAAgC,SAEzClO,IAEF,eAACmR,GAAA,EAAM,CACN9G,QAASA,EACT+G,KAAK,KACLlD,UAAU,YACVyC,MAAO,CAAE4E,gBAAiB,cAAeC,YAAa,KACtDxV,MAAM,iBACNqR,QAAS,kBAAM0C,EAAIjO,EAAQ,GAAG,EAC9BsO,SAAqB,KAAXtO,EAAc,SAExB,eAAC,KAAe,CAACsN,KAAMc,KAAQ9C,KAAK,KAAKxK,MAAM,aAE/CmL,EAAWD,WAA4B,KAAf7V,EAAI6J,QAC5B,yBAAQoI,UAAU,cAAclO,MAAM,eAAeqR,QAAS,kBAAMoJ,EAAS3U,EAAO,EAAC,SACpF,eAAC,KAAe,CAACsN,KAAMqC,KAAQ7O,MAAM,gBAGtCmL,EAAWD,WAA8B,IAAjB7M,EAAML,QAA+B,KAAf3I,EAAI6J,QAClD,yBAAQoI,UAAU,gBAAgBlO,MAAM,iBAAiBqR,QAAS,kBAAMqJ,EAAW5U,EAAO,EAAC,SAC1F,eAAC,KAAe,CAACsN,KAAMG,KAAe3M,MAAM,gBAG9C,eAACgU,GAAA,EAAK,CAACtQ,GAAG,UAAUuQ,MAAI,WACtB5V,EAAML,WAIX,ECiEekW,GApHyB,SAACnQ,GAGxC,IAAQ1O,EAGkD0O,EAHlD1O,IAAKwJ,EAG6CkF,EAH7ClF,MAAOqB,EAGsC6D,EAHtC7D,YACnBtK,EAEyDmO,EAFzDnO,SAAU0K,EAE+CyD,EAF/CzD,cACVkT,EACyDzP,EADzDyP,aAAcrG,EAC2CpJ,EAD3CoJ,IAAKmB,EACsCvK,EADtCuK,KAAMC,EACgCxK,EADhCwK,OAAQzX,EACwBiN,EADxBjN,QACjCqd,EAAyDpQ,EAAzDoQ,QAASP,EAAgD7P,EAAhD6P,WAAYC,EAAoC9P,EAApC8P,SAAUC,EAA0B/P,EAA1B+P,WAAYM,EAAcrQ,EAAdqQ,UAEtC9E,EAAUhE,iBAAyB,MACzC1R,YAAW,WACc,OAApB0V,EAAQhK,UACXgK,EAAQhK,QAASiK,SACjBD,EAAQhK,QAASD,QAEnB,GAAG,KAOH,IACA,EADcsF,qBAAWhH,IACe9K,MAAhC4J,EAAQ,EAARA,SAAUgB,EAAO,EAAPA,QAEZ4Q,GAFuB,EAAF3Q,GAEK,OAAL7E,QAAK,IAALA,IAAS,IAGpC,OAFArJ,QAAQiL,IAAI,CAAC4T,cAGZ,eAACzJ,GAAA,EAAS,CAACmF,OAAK,WACf,gBAACC,GAAA,EAAG,CAAC1I,UAAS,UAAK7E,EAAW,OAAS,SAAU,UAChD,eAACwN,GAAA,EAAG,CAACC,GAAI,EAAE,SACV,uBAAKnG,MAAO,CAAEoG,OAAQ,oBAAqB,UAC1C,gDAAkB,IACjB,yBAAQ7I,UAAU,kCAAkClO,MAAM,iBAAiBqR,QAAS,kBAAM0J,GAAS,EAAC,SACnG,eAAC,KAAe,CAAC3H,KAAMc,KAAQ9C,KAAK,KAAKxK,MAAM,mBAGjD,eAACwO,GAAA,EAAS,CACT7E,GAAG,KACHlG,QAASA,EAAQ,SAEhB4Q,EAAUhgB,KAAI,SAAAyK,GACd,IAAQI,EAAqCJ,EAArCI,OAAQ9F,EAA6B0F,EAA7B1F,MAAO6C,EAAsB6C,EAAtB7C,WAAYoC,EAAUS,EAAVT,MACnC,OACC,gBAAC,WAAQ,WACR,eAACmQ,GAAA,EAAUC,KAAI,CACdhL,QAASA,EACT6D,UAAU,YACVqC,GAAG,KAAI,SAGP,uBAAKrC,UAAU,kDAAkDyC,MAAO,CAAEmI,UAAW,SAAU,UAC7F5R,IAAkBpB,GAClB,wBAAOuI,IAAK6H,EAAS3Q,KAAK,aAAa5J,KAAK,OAC3C8U,OAAQ,SAACrD,GAAC,OAAK4N,EAAU,2BAAKtV,GAAI,IAAE1F,MAAOoN,EAAE8N,OAAOxX,QAAQ,EAC5DyX,aAAcnb,IAGfkH,IAAkBpB,GAClB,eAAC,GAAO,CACP7J,IAAKA,EACLuL,SAAU9B,EACV8U,WAAYA,EACZC,SAAUA,EACVC,WAAYA,EACZ3G,IAAKA,QAhBHjO,EAAS,MAqBdjD,GAAc6C,EAAKT,MAAML,OAAS,GAClC,eAACwQ,GAAA,EAAUC,KAAI,CACdhL,QAASA,EACT6D,UAAU,YACVqC,GAAG,KAAI,SAGP,eAAC6E,GAAA,EAAS,CACT7E,GAAG,KACHlG,QAASA,EACT6D,UAAU,uBAAsB,SAE/BjJ,EAAMhK,KAAI,SAAA0K,GAAI,OACd,eAAC,GAAO,CACP1J,IAAKA,EAEL0J,KAAMA,EACNyU,aAAcA,EACdlF,KAAMA,EACNC,OAAQA,GAJHxP,EAAKzJ,OAKT,OAfC4J,EAAS,QA/BFA,EAqDjB,WAIH,eAAC+Q,GAAA,EAAG,CAACC,GAAI,EAAE,SACV,sBAAK5I,UAAS,UAAK7E,EAAW,OAAS,SAAU,SAC/C4R,GAAanU,GACb,uBAAK6J,MAAO,CAAEoG,OAAQ,mBAAoBE,aAAc,MAAOC,QAAS,oBAAqB,UAC5F,qBAAIvG,MAAO,CAAEwG,UAAW,EAAGvQ,MAAO,SAAU,kBAC5C,eAAC,GAAQ,CAAClJ,QAAsB,YAAblB,GAAiCkB,eAQ5D,EC9EesR,gBA9BS,SAACC,EAAkBC,GAC1C,IAAQ1J,EAAyByJ,EAAzBzJ,WAAa1J,EAAYmT,EAAZnT,SACb2J,EAAgDD,EAAhDC,MAAOqB,EAAyCtB,EAAzCsB,YAAatK,EAA4BgJ,EAA5BhJ,SAAU0K,EAAkB1B,EAAlB0B,cACtC,MAAO,CACNjL,IAAKH,EAASC,IAAIC,KAAMC,IACxBwJ,QACAqB,cACAtK,WACA0K,gBACAxJ,QAASwR,EAASxR,QAEpB,IAE2B,SAACjC,GAC3B,MAAO,CAEN2e,aAAc,SAACle,GAAc,OAAKT,EAAc2J,GAAQlJ,GAAQ,EAChE6X,IAAK,SAACsG,EAAoB5c,EAAcC,GAAiB,OAAKjC,EAAcoK,GAAQwU,EAAY5c,GAAe,EAC/GyX,KAAM,SAACmF,EAAoBne,GAAc,OAAKT,EAAcuK,GAASqU,EAAYne,GAAQ,EACzFiZ,OAAQ,SAACkF,EAAoBne,GAAc,OAAKT,EAAcyK,GAAWmU,EAAYne,GAAQ,EAE7F6e,QAAS,kBAAMtf,E7CoThB,iDAAO,WAAOA,GAAkB,2EAC/B,IACCA,EAAS,CACRE,KAAMyB,EAAgBuK,UAIxB,CAFE,MAAOxL,GACRC,QAAQC,MAAMF,EACf,CAAC,2CACD,mDARD,G6CpTwC,EACvCqe,WAAY,SAAC1U,GAAc,OAAMrK,E7CgU/B,SAACqK,GACJ,wDAAO,WAAOrK,GAAkB,2EAC/B,IACCA,EAAS,CACRE,KAAMyB,EAAgBwK,YACtB9B,UAIF,CAFE,MAAO3J,GACRC,QAAQC,MAAMF,EACf,CAAC,2CACD,mDATD,EAUD,C6C3UiDqe,CAAW1U,GAAQ,EAClE2U,SAAU,SAAC3U,GAAc,OAAMrK,E7C+U7B,SAACqK,GACJ,wDAAO,WAAOrK,GAAkB,2EAC/B,IACCA,EAAS,CACRE,KAAMyB,EAAgByK,UACtB/B,UAIF,CAFE,MAAO3J,GACRC,QAAQC,MAAMF,EACf,CAAC,2CACD,mDATD,EAUD,C6C1V+Cse,CAAS3U,GAAQ,EAC9D4U,WAAY,SAAC5U,GAAc,OAAKrK,E7C6V9B,SAACqK,GACJ,wDAAO,WAAOrK,GAAkB,oGAExBsC,KAAO,OACbtC,EAAS,CACRE,KAAMyB,EAAgB4K,YACtBlC,OAAQA,IACN,+CAEH1J,QAAQC,MAAM,EAAD,IAAM,wDAEpB,mDAVD,EAWD,C6CzWgDqe,CAAW5U,GAAQ,EACjEkV,UAAW,SAACtV,GAAW,OAAKjK,G7C4WzBqM,E6C5WiDpC,E7C6WrD,iDAAO,WAAOjK,GAAkB,2EAC/B,IAECA,EAAS,CACRE,KAAMyB,EAAgB2K,WACtBD,SAIF,CAFE,MAAO3L,GACRC,QAAQC,MAAMF,EACf,CAAC,2CACD,mDAVD,KADG,IAAC2L,C6C5WuD,EAE5D,GAGekH,CAA6CoM,ICzD/CC,GAFAC,EAAQ,IAECC,CADI,WCWpBC,GAAgC,SAAC7Q,GAEPA,EAAxBnO,SAAN,IAAgB+M,EAAcoB,EAAdpB,UAEZkS,EAAWC,eACX/Q,EAAMxB,iBACRsS,EAAS,cAGX,IAAMnM,EAASC,aAAU,CACvBC,oBAAoB,EACpBC,cAAe,CACb7J,SAAU,GACVa,IAAK,IAEPiJ,iBAAkBC,KAAW,CAC3B/J,SAAU+J,OAEP7L,IAAI,GAAI,iCACR8L,SAAS,YACZnJ,IAAKkJ,OAEFuK,IAAI,GACJpW,IAAI,IAEJ8L,aAELC,SAAU,SAAAC,GAERnF,EAAMoF,SAASD,EAAQnF,EAAMnO,SAAUmO,EAAMgR,WAC/C,IAOF,OAFAvf,QAAQiL,IAAI,sBAAuBiI,EAAOQ,QAGxC,gBAACG,GAAA,EAAI,CAACJ,SAAUP,EAAOY,aAAa,UAGlC,gBAACD,GAAA,EAAKE,MAAK,CAACC,UAAU,WAAU,UAC9B,eAACH,GAAA,EAAKI,MAAK,mBACX,eAACJ,GAAA,EAAKK,QAAO,CACXC,GAAG,QACHhL,KAAK,WACL4H,SAAUmC,EAAOkB,aACjBC,OAAQnB,EAAOsM,WAKflY,MAAO4L,EAAOQ,OAAOlK,SACrBsH,YAAY,YACZ2O,UAAW,KAEZvM,EAAOyB,QAAQnL,UAAY0J,EAAO0B,OAAOpL,SACxC,+BAAM0J,EAAO0B,OAAOpL,WAClB,QAGN,gBAACqK,GAAA,EAAKE,MAAK,CAACC,UAAU,MAAK,UACzB,eAACH,GAAA,EAAKI,MAAK,uBACX,eAACJ,GAAA,EAAKK,QAAO,CACXC,GAAG,QACHhL,KAAK,MACL5J,KAAK,WACLwR,SAAUmC,EAAOkB,aACjBC,OAAQnB,EAAOsM,WACflY,MAAO4L,EAAOQ,OAAOrJ,IACrByG,YAAY,WAEZ2O,UAAW,KAEZvM,EAAOyB,QAAQtK,KAAO6I,EAAO0B,OAAOvK,IACnC,+BAAM6I,EAAO0B,OAAOvK,MAClB,QAGL8C,GACC,+BAAMA,IAGR,wBAEA,uBAAK2E,UAAU,UAAS,UACtB,eAACiD,GAAA,EAAM,CACL9G,QAAQ,YACR+G,KAAK,KACLC,QAAS,WACP1G,EAAM2G,QAER,EAAE,oBAGJ,eAACH,GAAA,EAAM,CACL9G,QAAQ,UACR+G,KAAK,KACLzV,KAAK,SAAQ,yBAQvB,EC9EeqT,gBAvBS,SAACC,EAAkBC,GAC1C,IACQnT,EADakT,EAAbnT,SACAC,IACR,MAAO,CACNoN,gBAAiBpN,EAAIoN,gBACrBC,KAAMrN,EAAIqN,KACVG,UAAWxN,EAAIwN,UACf7L,QAASwR,EAASxR,QAClBie,WAAYzM,EAASyM,WACrBnf,SAAU,OAEZ,IAG2B,SAACf,GAC3B,MAAO,CACNsU,SAAU,SAAC+L,EAAetf,EAAkBmf,GAAmB,OAC9DlgB,EAAckgB,GvCuHZ9S,EuCtHQiT,EvCuHZ,iDAAO,WAAOrgB,EAAoBC,GAAyB,qFAC1D,IAAK,EACmBA,IAAf8J,EAAU,EAAVA,WACAuB,EAAavB,EAAbuB,SACRtL,EAAc6J,GAASuD,EAAUjD,WAC/B1F,MAAK,SAACyF,GACN,GAAIA,EACHlK,EAAS,CACRE,KAAM2M,GAAemB,+BAGlB,CACJ,IAAI3D,EAASoC,GAAO6T,QAChB7f,EAAS,EACW,IAApB6K,EAASnC,QACZkB,EAASoC,GAAO8T,MAChB9f,EAASsJ,EAAW2B,aAGpBjL,EAAS2H,KAAKC,IAAG,MAARD,KAAI,YAAQkD,EAAS9L,KAAI,SAAAiK,GAAC,OAAIA,EAAEhJ,MAAM,MAAK,EAErD,IAAMyJ,EAAc,CACnBG,SACA5J,SACA0J,SAAUiD,EAAUjD,SACpBa,IAAKoC,EAAUpC,IACfC,WAAY,QACZ7K,UAAWK,EACXd,QAAS,IAAIC,MAGdI,EAAc4K,GAAUV,EAAM,QAC5BzF,MAAK,SAACyF,GACNlK,EAAS,CACRE,KAAM2M,GAAekB,SACrB7D,SAEDlK,EAAcmN,GAAaC,IAC3BpN,EAAS,CAACE,KAAMyB,EAAgBgJ,gBACjC,GACF,CACD,GAIF,CAFA,MAAOjK,GACNC,QAAQC,MAAMF,EACf,CAAC,2CACD,qDA9CD,IuCvHqByM,GAAakT,IvCsH/B,IAACjT,CuCtHqC,EACxCyI,OAAQ,kBAAM7V,GvCwNR,SAACA,GACP,IACCA,EAAS,CACRE,KAAM2M,GAAe2T,QAIvB,CAFE,MAAO9f,GACRC,QAAQC,MAAMF,EACf,CACD,GuChO2C,EAE5C,GAEe6S,EDmFgC,SAACrE,GAC9C,OACE,uBAAKgG,MAAO,CAAEuL,OAAQ,OAAQhF,QAAS,KAAMS,QAAS,OAAQC,WAAY,SAAUuE,eAAgB,SAAUC,cAAe,UAAW,UACtI,+BACGzR,EAAMgR,WACL,6CAEA,8CAGJ,wBACA,sBACEhL,MAAO,CACLuL,OAAQ,OACRG,WAAYhB,GAAY,KAAE,GAC1BnE,QAAS,YACTtG,MAAO,SACP,SAEF,sBACED,MAAO,CACLsG,aAAc,MACdqF,UAAW,4BACXD,WAAY,OACZE,SAAU,MACVC,OAAQ,SACRtF,QAAS,OACTtG,MAAO,SACP,SAEF,eAAC,GAAO,eAAKjG,UAKvB,IEnJe8R,GANqB,SAAC9R,GACnC,OACE,6CAEJ,E,oCCkLA,IAeeqE,gBAfS,SAACC,EAAkBC,GAAmB,MAAM,CAClE/F,gBAAiB8F,EAAMnT,SAASC,IAAIoN,gBACpCC,KAAM6F,EAAMnT,SAASC,IAAIqN,KACzBpN,KAAMiT,EAAMnT,SAASC,IAAIC,KACzB0gB,QAASxN,EAASwN,QAClB9H,YAAa1F,EAAS0F,YACvB,IAE0B,SAACnZ,GAC1B,MAAO,CACLkhB,WAAY,kBAAMlhB,GzCoEd,SAACA,GACP,IACCA,EAAS,CACRE,KAAM2M,GAAeqB,aAIvB,CAFE,MAAOxN,GACRC,QAAQC,MAAMF,EACf,CACD,GyC5EgD,EAEjD,GAGe6S,EArKf,SAAiB,GAAmF,IAAjF7F,EAAe,EAAfA,gBAAuBnN,GAAF,EAAJoN,KAAU,EAAJpN,MAAM0gB,EAAO,EAAPA,QAAsBC,GAAF,EAAX/H,YAAuB,EAAV+H,YAE9DC,EAAQrL,qBAAWhH,IACzB,EAAkCqS,EAAMnd,MAAhC4J,EAAQ,EAARA,SAAUgB,EAAO,EAAPA,QAASC,EAAE,EAAFA,GAEvBmR,EAAWC,eASf,OACE,eAACmB,GAAA,EAAM,CAACC,OAAQ,KAAMzS,QAASA,EAASC,GAAIA,EAAIyS,kBAAgB,EAAC7O,UAAU,aAAY,SACrF,gBAACsD,GAAA,EAAS,CAACmF,OAAK,YACd,eAACkG,GAAA,EAAOG,MAAK,CAACC,KAAK,IAAI/O,UAAU,OAAM,+BACvC,eAAC2O,GAAA,EAAOK,OAAM,CAAC,2CACf,gBAACL,GAAA,EAAOM,UAAS,CACfhO,GAAE,yBACF,gDACAiO,UAAU,MACVlP,UAAS,kBAAa5D,GAAK,UAE1BjB,EACC,eAAC8T,GAAA,EAAUjF,OAAM,CAACC,aAAW,EAACkF,aAAa,QAAO,SAChD,eAACF,GAAA,EAAU/E,MAAK,CAACjJ,GAAE,8BAAgC,uBAGrD,eAACgO,GAAA,EAAUjF,OAAM,CAACC,aAAW,WAC3B,eAACgF,GAAA,EAAU/E,MAAK,CAACjJ,GAAE,8BAAgC,uBAIvD,eAAEgO,GAAA,EAAU9E,KAAI,UACd,gBAACiF,GAAA,EAAG,CACFpP,UAAU,0DACVqP,SAAU,SAACC,GACL,CAAC,YAAa,YAAYrb,SAASqb,KACjC7e,SAAS8e,KAAK3J,UAAU4J,SAAS,SACnC/e,SAAS8e,KAAK3J,UAAUqB,OAAO,QAC/BxW,SAAS8e,KAAK3J,UAAUC,IAAI,UAG5BpV,SAAS8e,KAAK3J,UAAUC,IAAI,QAE9B6I,EAAMnhB,SAAS,CAAEE,KAAM6hB,IACvBb,IAEJ,EACC,UAEAxT,GACC,gBAACmU,GAAA,EAAIK,KAAI,CAACV,KAAK,oBAAmB,UAChC,eAAC,KAAe,CAAC7J,KAAMwK,KAAYhX,MAAM,cAAe,IAAG,eAG9DuC,GACC,gBAACmU,GAAA,EAAIK,KAAI,CAACV,KAAK,cAAa,UAC1B,eAAC,KAAe,CAAC7J,KAAMyK,KAAYjX,MAAM,cAAe,IAAG,eAG9DuC,GACC,gBAACmU,GAAA,EAAIK,KAAI,CAACV,KAAK,iBAAgB,UAC7B,eAAC,KAAe,CAAC7J,KAAM0K,KAAUlX,MAAM,cAAe,IAAG,aAG5DuC,GAAmBnN,GAA6B,KAArBA,EAAMC,IAAI6J,QACpC,gBAACwX,GAAA,EAAIK,KAAI,CAACV,KAAK,YAAW,UACxB,eAAC,KAAe,CAAC7J,KAAM2K,KAAenX,MAAM,cAAe,IAAG,YAIhEuC,GACA,eAACmU,GAAA,EAAIK,KAAI,CAACV,KAAK,YAAW,sBAI1B9T,GACA,eAACmU,GAAA,EAAIK,KAAI,CAACV,KAAK,UAAS,oBAYxB9T,GACA,eAACmU,GAAA,EAAIK,KAAI,CAACV,KAAK,aAAY,uBAI3B9T,GACA,eAACmU,GAAA,EAAIK,KAAI,CAACV,KAAK,aAAY,qBAK5B9T,GAKC,gBAAC6U,GAAA,EAAW,CACVhe,MAAO,uCAAE,eAAC,KAAe,CAACoT,KAAM6K,OAAW,IAAKjiB,EAAMC,IAAI2J,YAC1DuJ,GAAE,iCACF+O,YAAa7T,EACb8T,MAAM,MAAK,UAEb,eAACH,GAAA,EAAY3I,KAAI,CAACmI,SAAS,WAAU,uBAGrC,eAACQ,GAAA,EAAY3I,KAAI,CAACmI,SAAS,YAAW,wBAYnC,eAACQ,GAAA,EAAYI,QAAO,IACpBjV,GACC,eAAC6U,GAAA,EAAY3I,KAAI,CAAC4H,KAAK,IAAI5L,QA5H5B,WACfqL,IACAjB,EAAS,WACX,EAyH+D,qCAajE,ICxDezM,gBAfS,SAACC,GAAgB,MAAM,CAC9C/F,WAAY+F,EAAMnT,SAASC,IAAImN,WAC/BC,gBAAiB8F,EAAMnT,SAASC,IAAIoN,gBACpCnN,KAAMiT,EAAMnT,SAASC,IAAIC,KACzBoN,KAAM6F,EAAMnT,SAASC,IAAIqN,KACzB,IAE0B,SAAC3N,GAC3B,MAAO,CACN4iB,aAAc,kBAAM5iB,G1C+Jd,SAACA,GACP,IACCA,EAAS,CACRE,KAAM2M,GAAeoB,eAKvB,CAFA,MAAOvN,GACNC,QAAQC,MAAMF,EACf,CACD,G0CxKkD,EACjDmiB,oBAAoB,WAAD,sCAAE,WAAOxC,GAAa,2FAAWrgB,EAAcmN,GAAakT,IAAO,sIAAlE,GACpBY,QAAS,kBAAMjhB,E1CsHhB,iDAAO,WAAOA,GAAkB,2EAC/B,IACCA,EAAS,CACRE,KAAM2M,GAAesB,gBAKvB,CAFA,MAAOzN,GACNC,QAAQC,MAAMF,EACf,CAAC,2CACD,mDATD,G0CtH+C,EAEhD,GAEe6S,EAvFH,SAAH,GAAgB,EAAV9F,WAA2B,EAAfC,gBAAqB,EAAJC,KAAU,EAAJpN,KAAkB,EAAZqiB,aAAiC,EAAnBC,oBAA4C,IAAvB5B,EAAO,EAAPA,QAM1F,EAA4B7K,mBAAS,GAAE,oBACvC,GADa,KAAW,KACIA,mBAAS,KAAG,oBAGxC,GAHa,KAAW,KAEVN,qBAAWhH,IACe9K,OAAhC4J,EAAQ,EAARA,SAAUgB,EAAO,EAAPA,QAASC,EAAE,EAAFA,GAE3B+H,qBAAU,WAMT1T,SAAS8e,KAAK3J,UAAUC,IAAIzJ,EAC7B,GAAG,IAEH,MAAwBuH,oBAAS,GAAM,oBAA1B0M,GAAF,KAAS,MAMdC,EAEL,gBAAC,KAAM,WACN,eAAC,GAAO,CAAC5J,YARS,WACnB2J,GAAQ,EACT,EAMqC7B,QAASA,IAC5C,eAAClL,GAAA,EAAS,CAACmF,OAAK,WACf,eAACC,GAAA,EAAG,CAAC1I,UAAS,UAAK7E,EAAW,OAAS,IAAK,SAE3C,gBAACwN,GAAA,EAAG,CAAC1H,GAAG,OAAOjB,UAAU,qBAAqB7D,QAASA,EAASC,GAAID,EAAQ,UAC3E,sBAAK6D,UAAU,4GAGf,sBAAKA,UAAS,UAAK7E,EAAW,OAAS,IAAK,SAC3C,gBAAC,KAAM,WACN,eAAC,KAAK,CAACoV,KAAK,IAAIC,QAAS,eAAC,GAAO,MACjC,eAAC,KAAK,CAACD,KAAK,WAAWC,QACtB,eAAC,GAAS,CAAChhB,SAAS,EAAMie,YAAY,MAEvC,eAAC,KAAK,CAAC8C,KAAK,YAAYC,QACvB,eAAC,GAAS,CAAChhB,SAAS,EAAMie,YAAY,MAEvC,eAAC,KAAK,CAAC8C,KAAK,oBAAoBC,QAAS,eAAC,GAAO,MACjD,eAAC,KAAK,CAACD,KAAK,aAAaC,QAAS,eAAC,GAAW/e,WAAU,CAACjC,SAAS,MAClE,eAAC,KAAK,CAAC+gB,KAAK,iBAAiBC,QAAS,eAAC,GAAW,MAClD,eAAC,KAAK,CAACD,KAAK,eAAeC,QAAS,eAAC,GAAS,CAAChhB,SAAS,qBAe/D,OACC,eAAC8T,GAAA,EAAS,CAACmF,OAAK,EAACzI,UAAU,MAAK,SAC9BsQ,GAGJ,IC3DMvP,GzCfU0P,YAAY9U,QAAa9G,EAAW6b,YAAgBC,MyCgBpE5P,GAAMxT,SrD0LL,iDAAO,WAAOA,GAAkB,uGAC/B,IAoBC,GAnBIkE,EAA0B,GAC1Bmf,GAAoB,EAVS,iBAAkB9S,QAa9B,QADd+S,EAAclgB,aAAaM,QAAQyD,MAGlCoc,EAAiBjgB,KAAKkgB,MAAMF,IAClCpf,EAAmCqf,EAnN5B/jB,KAAI,SAAA6B,GAAC,OAAI3B,EAAW2B,EAAE,KAoNlBoiB,SAAQ,SAAAne,GAClB,IAAMoe,EAAatgB,aAAaM,QAAQ,YAAD,OAAa4B,EAAS9D,aAC7D,GAAIkiB,EAAY,CACf,IAAM1W,EAAO1J,KAAKkgB,MAAME,GACxBpe,EAAShE,UAA2C0L,EAlOzCxN,KAAI,SAAA+B,GAAC,kCAClBA,GAAC,IACJC,WAAYD,EAAEC,WACdC,QAASF,EAAEE,QAAQjC,KAAI,SAAAC,GAAC,kCAAUA,GAAC,IAAEiC,SAAU,IAAI9B,KAAKH,EAAEiC,WAAS,IACnE/B,QAAS,IAAIC,KAAK2B,EAAE5B,UAAQ,GA+NxB,CACD,IACA0jB,GAAoB,IAIjBA,EAAmB,CAEvBnf,EA/OI3E,EAAKC,KAAI,SAAA6B,GAAC,OAAI3B,EAAW2B,EAAE,IA+OF,cACR6C,GAAU,IAA/B,IAA+B,iBAAtBoB,EAAQ,QAChBA,EAAShE,UAAUmiB,SAAQ,SAAAliB,GAC1BA,EAAEC,WAAa8D,EAAS9D,WACxBD,EAAEqE,MAAQrE,EAAES,KAAK8E,MAAM,IACxB,IACA1D,aAAaC,QAAQ,YAAD,OAAaiC,EAAS9D,YAAc8B,KAAKC,UAAU+B,EAAShE,WAAY,EAL7F,uBAAkC,GAMjC,+BACF,CAEM8E,EAAoB,IAAImB,IAA8B,EAAD,YACtCrD,GAAU,IAA/B,2BAASoB,EAAQ,QACVgB,EAAgC,CACrChF,UAAU,YAAKgE,EAAShE,YAEzB8E,EAAkBO,IAAIrB,EAAS9D,WAAY8E,GAC3ChB,EAAShE,UAAY,EACrB,+BAEI+hB,GACJjgB,aAAaC,QAAQ8D,EAAoB7D,KAAKC,UAAUW,IAGzDlE,EAAS,CACRE,KAAMJ,EAAoBkI,gBAC1B9D,aACAkC,qBAKF,CAFA,MAAO1F,GACNC,QAAQC,MAAMF,EACf,CAAC,2CACD,mDAvDD,IqDzLD8S,GAAMxT,StD+BL,iDAAO,WAAOA,GAAkB,qFAC/B,IAEKyB,EAAqB,GATQ,iBAAkB8O,QAW5CoT,EAAWvgB,aAAaM,QAAQ7D,GACtCc,QAAQiL,IAAI,WAAa+X,GACR,OAAbA,GACGC,EAAStgB,KAAKkgB,MAAMG,GAC1BliB,EAAgCmiB,EA7EzBpkB,KAAI,SAAAC,GAAC,OAAIC,EAAWD,EAAE,KAgF7BgC,EAAUnC,KAIXmC,EAAUnC,IAGXU,EAAS,CACRE,KAAMb,EAAkB4J,gBACxBxH,WAIF,CAFE,MAAOf,GACRC,QAAQC,MAAMF,EACf,CAAC,2CACD,mDA1BD,IsD9BD8S,GAAMxT,SpD8FL,iDAAO,WAAOA,GAAkB,qFAC/B,IAEKgK,EAAiB,GATY,iBAAkBuG,QAY/B,QADbsT,EAAazgB,aAAaM,QAAQoH,MAIjC8Y,EAAStgB,KAAKkgB,MAAMK,GAC1B7Z,EAA8B4Z,EApIvBpkB,KAAI,SAAA6B,GAAC,OAAIkI,GAAUlI,EAAE,KA2I7B2I,EAAQ1K,KAITU,EAAS,CACRE,KAAMyB,EAAgBgK,cACtB3B,UAEDhK,EAAS,CAACE,KAAMyB,EAAgBgJ,gBAIjC,CAFA,MAAOjK,GACNC,QAAQC,MAAMF,EACf,CAAC,2CACD,mDA9BD,IoD7FD8S,GAAMxT,S3CkEL,iDAAO,WAAOA,GAAkB,qFAsB7B,OAtB6B,SAE1BM,OAAMgH,EAnCuB,iBAAkBiJ,QAuCxC,QADJuT,EAAI1gB,aAAaM,QAAQoJ,OAIxB8W,EAAStgB,KAAKkgB,MAAMM,GAC1BnjB,QAAQiL,IAAI,SAAUgY,GACtBtjB,EAzCGyM,GAyCyB6W,IAG1BtjB,IACHN,EAAS,CACRE,KAAM2M,GAAegB,SACrBvN,QAEGA,EAAIC,MAAQD,EAAIC,KAAKC,KACxBR,EAAcmN,GAAa7M,EAAIC,KAAMC,OAEtC,kBACMF,GAAG,gCAGVK,QAAQC,MAAM,EAAD,IAAM,yDAEpB,mDA5BD,I2CjEC6D,MAAK,SAACnE,GACNK,QAAQiL,IAAI,CAACtL,OACd,IACCyjB,OAAM,SAACrjB,GACPC,QAAQC,MAAMF,EAAIsjB,aACnB,IACDxQ,GAAMxT,S/CpBJ,iDAAO,WAAOA,GAAkB,iFAC9B,IAPgC,iBAAkBuQ,QAWrC,QADR0T,EAAQ7gB,aAAaM,QAlBF,iBAoBHJ,KAAKkgB,MAAMS,GAC3BzkB,KAAI,SAAA6B,GAAC,OAAIqL,GAAY7D,KAAKxH,EAAE,IAOlCmL,GAAgBhN,KAAI,SAAA6B,GAAC,OAAIqL,GAAY7D,KAAKxH,EAAE,IAIzCrB,EAAS,CACPE,KAAMwJ,GAAe6E,aACrB3B,KAAMF,IAIV,CAFE,MAAOhM,GACPC,QAAQC,MAAMF,EAChB,CAAC,2CACF,mDAzBD,I+CsBF,IAAM8C,GAAY4E,KAAK8b,MAAuB,IAAhB9b,KAAK+b,SAAoB,GACvD1gB,eAAeJ,QAAQ,YAAaG,GAAU4gB,YAE9C7T,OAAOuG,iBAAiB,oBAAoB,SAAUuN,GAErD,IAAQC,EAAWD,EAAXC,OACF9gB,EAAYC,eAAeC,QAAQ,aAEzC,GADA/C,QAAQiL,IAAI,qBAAsBpI,EAAW,WAAY8gB,GACrD9gB,IAAc8gB,EAAO9gB,UACxB,OAAQ8gB,EAAOpkB,MACd,IAAK,iBACJokB,EAAOthB,OAAOrD,QAAU,IAAIC,KAAK0kB,EAAOthB,OAAOrD,SAC/C6T,GAAMxT,SAASwE,GAAc,EAAO8f,EAAOthB,SAC3C,MACD,IAAK,kBACJshB,EAAOthB,OAAOrD,QAAU,IAAIC,KAAK0kB,EAAOthB,OAAOrD,SAC/C6T,GAAMxT,SAASwF,GAAe,EAAO8e,EAAOthB,SAC5C,MACD,IAAK,kBACJwQ,GAAMxT,SAASoF,GAAe,EAAOkf,EAAOthB,SAC5C,MACD,IAAK,iBACJshB,EAAOthB,OAAOrD,QAAU,IAAIC,KAAK0kB,EAAOthB,OAAOrD,SAC/C6T,GAAMxT,SAAS4D,GAAc,EAAO0gB,EAAOthB,SAC3C,MACD,IAAK,kBACJ,IAAMa,EAAWygB,EAAOthB,OACxBa,EAASlE,QAAU,IAAIC,KAAKiE,EAASlE,SACrC,IAAK,IAAI4kB,EAAI,EAAGA,EAAI1gB,EAASpC,QAAQ0H,OAAQob,IAAK,CACjD,IAAM9kB,EAAIoE,EAASpC,QAAQ8iB,GAC3B9kB,EAAEiC,SAAW,IAAI9B,KAAKH,EAAEiC,SACzB,CACA8R,GAAMxT,SAAS0E,GAAe,EAAOb,IAErC,MACD,IAAK,kBACJ,MAAmCygB,EAAOthB,OAAlCxB,EAAU,EAAVA,WAAYK,EAAU,EAAVA,WACpB2R,GAAMxT,SAASoC,GAAe,EAAOZ,EAAYK,IAQrD,IAAG,GAGH,IAAMmC,GAAQwP,GAAMvT,WAEpBukB,SACC,eAAC,IAAMC,WAAU,UAChB,eAAC,IAAQ,CAACjR,MAAOA,GAAM,SACtB,eAACvE,GAAa,CAACrB,SAAU5J,GAAM3D,SAASC,IAAIsN,SAAU,SACrD,eAAC,GAAG,UAIP1K,SAASC,eAAe,Q","file":"static/js/main.342a8cb4.chunk.js","sourcesContent":["// Import redux types\r\nimport { ActionCreator, Dispatch } from 'redux';\r\nimport { ThunkAction } from 'redux-thunk';\r\n// Import Answer Typing\r\nimport { IAnswer, IAnswerState, IAnswerJson } from './types';\r\n\r\nimport { IAppState } from '../store/Store';\r\n\r\nimport data from \"./data.json\"\r\nconst parseFromJson = (): IAnswer[] => {\r\n\treturn data.map(a => parseDates(a))\r\n}\r\n\r\nconst parseFromLocalStorage = (arr: IAnswerJson[]) : IAnswer[] =>  {\r\n\treturn arr.map(a => parseDates(a));\r\n}\r\n\r\nconst parseDates = (a: IAnswerJson): IAnswer => ({\r\n\t...a, \r\n\tcreated: new Date(a.created)\r\n})\r\n\r\n// localStorage\r\nexport const SUPPORT_ANSWERS = 'SUPPORT_ANSWERS';\r\n \r\n// Create Action Constants\r\nexport enum AnswerActionTypes {\r\n  GET_ALL_ANSWERS = 'GET_ALL_ANSWERS',\r\n  GET_ANSWER = 'GET_ANSWER',\r\n  ADD_ANSWER = 'ADD_ANSWER',\r\n  EDIT_ANSWER = 'EDIT_ANSWER',\r\n  REMOVE_ANSWER = 'REMOVE_ANSWER',\r\n  STORE_ANSWER = 'STORE_ANSWER',\r\n  CANCEL_ANSWER = 'CANCEL_ANSWER'\r\n}\r\n\r\n// Interface for Get All Action Type\r\nexport interface IGetAll {\r\n\ttype: AnswerActionTypes.GET_ALL_ANSWERS;\r\n\tanswers: IAnswer[];\r\n }\r\n \r\nexport interface IGet {\r\n\ttype: AnswerActionTypes.GET_ANSWER;\r\n\tanswerId: number;\r\n}\r\n\r\nexport interface IAdd {\r\n\ttype: AnswerActionTypes.ADD_ANSWER;\r\n\tcreatedBy: number\r\n}\r\n\r\nexport interface IEdit {\r\n\ttype: AnswerActionTypes.EDIT_ANSWER;\r\n\tanswerId: number;\r\n}\r\n\r\nexport interface IRemove {\r\n\ttype: AnswerActionTypes.REMOVE_ANSWER;\r\n\tanswerId: number;\r\n}\r\n\r\nexport interface IStore {\r\n\ttype: AnswerActionTypes.STORE_ANSWER;\r\n\tanswer: IAnswer;\r\n\tassignToQuestion?: boolean\r\n}\r\n\r\nexport interface ICancel {\r\n\ttype: AnswerActionTypes.CANCEL_ANSWER;\r\n}\r\n\r\n\r\n// Combine the action types with a union (we assume there are more)\r\nexport type AnswerActions = IGetAll | IGet | IAdd | IEdit | IRemove | IStore | ICancel;\r\n\r\nconst isWebStorageSupported = () => 'localStorage' in window\r\n\r\n// Get All Action <Promise<Return Type>, State Interface, Type of Param, Type of Action>\r\nexport const getAllAnswers: ActionCreator<\r\n\tThunkAction<Promise<any>, IAnswerState, null, IGetAll>\r\n> = () => {\r\n\treturn async (dispatch: Dispatch) => {\r\n\t\ttry {\r\n\t\t\t// const response = await axios.get('https://swapi.co/api/people/');\r\n\t\t\tlet answers: IAnswer[] = [];\r\n\t\t\tif (isWebStorageSupported()) {\r\n\t\t\t\tconst sAnswers = localStorage.getItem(SUPPORT_ANSWERS);\r\n\t\t\t\tconsole.log('SAnswers',  sAnswers)\r\n\t\t\t\tif (sAnswers !== null) {\r\n\t\t\t\t\tconst parsed = JSON.parse(sAnswers);\r\n\t\t\t\t\tanswers = parseFromLocalStorage(parsed);\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tanswers = parseFromJson();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tanswers = parseFromJson();\r\n\t\t\t}\r\n\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: AnswerActionTypes.GET_ALL_ANSWERS,\r\n\t\t\t\tanswers\r\n\t\t\t});\r\n\t\t} catch (err) {\r\n\t\t\tconsole.error(err);\r\n\t\t}\r\n\t};\r\n};\r\n\r\n\r\nexport const addAnswer: ActionCreator<any> = () => {\r\n  return (dispatch: Dispatch, getState: () => IAppState) => {\r\n    try {\r\n      dispatch({\r\n        type: AnswerActionTypes.ADD_ANSWER,\r\n\t\tcreatedBy: getState().topState.top!.auth!.who!.userId,\t\r\n      });\r\n    } catch (err) {\r\n      console.error(err);\r\n    }\r\n  };\r\n};\r\n\r\nexport const getAnswer: ActionCreator<\r\n\tThunkAction<Promise<any>, IAnswerState, null, IGet>\r\n> = (answerId: number) => {\r\n\treturn async (dispatch: Dispatch) => {\r\n\t\ttry {\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: AnswerActionTypes.GET_ANSWER,\r\n\t\t\t\tanswerId\r\n\t\t\t});\r\n\t\t} catch (err) {\r\n\t\t\tconsole.error(err);\r\n\t\t}\r\n\t};\r\n};\r\n\r\nexport const editAnswer: ActionCreator<\r\n\tThunkAction<Promise<any>, IAnswerState, null, IEdit>\r\n> = (answerId: number) => {\r\n\treturn async (dispatch: Dispatch) => {\r\n\t\ttry {\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: AnswerActionTypes.EDIT_ANSWER,\r\n\t\t\t\tanswerId\r\n\t\t\t});\r\n\t\t} catch (err) {\r\n\t\t\tconsole.error(err);\r\n\t\t}\r\n\t};\r\n};\r\n\r\nexport const removeAnswer: ActionCreator<\r\n\tThunkAction<Promise<any>, IAnswerState, null, IGetAll>\r\n> = (answerId: number) => {\r\n\treturn async (dispatch: Dispatch) => {\r\n\t\ttry {\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: AnswerActionTypes.REMOVE_ANSWER,\r\n\t\t\t\tanswerId\r\n\t\t\t});\r\n\t\t} catch (err) {\r\n\t\t\tconsole.error(err);\r\n\t\t}\r\n\t};\r\n};\r\n\r\n\r\nexport const storeAnswer: ActionCreator<\r\n\tThunkAction<Promise<any>, IAppState, null, IStore>\r\n> = (answer: IAnswer, formMode: string) => {\r\n\treturn async (dispatch: Dispatch, getState: () => IAppState ): Promise<any> => {\r\n\t\ttry {\r\n\t\t\tif (formMode === 'add') {\r\n\t\t\t\tdispatch({\r\n\t\t\t\t\ttype: AnswerActionTypes.STORE_ANSWER,\r\n\t\t\t\t\tanswer\r\n\t\t\t\t});\r\n\t\t\t\treturn Promise.resolve(getState().answerState.answer!.answerId)\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tdispatch({\r\n\t\t\t\t\ttype: AnswerActionTypes.STORE_ANSWER,\r\n\t\t\t\t\tanswer\r\n\t\t\t\t});\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t}\r\n\t\tcatch (err) {\r\n\t\t\tconsole.error(err);\r\n\t\t}\r\n\t};\r\n};\r\n\r\nexport const cancelAnswer: ActionCreator<any> = () => {\r\n\treturn (dispatch: Dispatch) => {\r\n\t  try {\r\n\t\t dispatch({\r\n\t\t\ttype: AnswerActionTypes.CANCEL_ANSWER\r\n\t\t });\r\n\t  } catch (err) {\r\n\t\t console.error(err);\r\n\t  }\r\n\t};\r\n };\r\n \r\n\r\n// const addAnswerToLocalStorage = (answer: IAnswer): Promise<any> => {\r\n// \treturn new Promise((resolve, reject) => {\r\n// \t\tsetTimeout(() => {\r\n// \t\t\tresolve({\r\n// \t\t\t\t'status': 200,\r\n// \t\t\t\t'content-type': 'application/json',\r\n// \t\t\t\t'data' : {\r\n// \t\t\t\t'results': answer\r\n// \t\t\t\t}\r\n// \t\t\t})\r\n// \t\t}, 50)\r\n// \t})\r\n// }\r\n\r\n","// Import redux types\r\nimport { ActionCreator, Dispatch } from 'redux';\r\nimport { ThunkAction } from 'redux-thunk';\r\n// import axios from 'axios';\r\n\r\n// Import Question Typing\r\nimport { IQuestion, ICategory, ICategoryJson, ICategoriesState, IQuestionJson, ICategoryState } from './types';\r\n\r\nimport { addAnswer, AnswerActionTypes, storeAnswer } from '../Answers/actions'\r\nimport { IAnswer, IAnswerState } from '../Answers/types';\r\n\r\n///////////////////////////////////////////////////\r\n// localStorage\r\nimport { initialCategory, SUPPORT_CATEGORIES } from './categoriesReducer';\r\n\r\nimport data from \"./data.json\"\r\nimport { IAppState } from '../store/Store';\r\nimport { reduceQuestions } from './categoryReducer';\r\n\r\nconst parseFromJson = (): ICategory[] => {\r\n\treturn data.map(g => parseDates(g));\r\n}\r\n\r\nconst parseQuestionsFromLocalStorage = (questions: IQuestionJson[]): IQuestion[] => {\r\n\treturn questions.map(q => ({\r\n\t\t...q,\r\n\t\tcategoryId: q.categoryId!,\r\n\t\tanswers: q.answers.map(a => ({ ...a, assigned: new Date(a.assigned) })),\r\n\t\tcreated: new Date(q.created)\r\n\t})\r\n\t)\r\n}\r\n\r\nconst parseFromLocalStorage = (arr: ICategoryJson[]): ICategory[] => {\r\n\treturn arr.map(g => parseDates(g));\r\n}\r\n\r\nconst parseDates = (g: ICategoryJson): ICategory => {\r\n\treturn {\r\n\t\t...g,\r\n\t\tquestions: g.questions.map(q => ({\r\n\t\t\t...q,\r\n\t\t\tcategoryId: g.categoryId,\r\n\t\t\tanswers: q.answers.map(a => ({ ...a, assigned: new Date(a.assigned) })),\r\n\t\t\tcreated: new Date(q.created)\r\n\t\t})),\r\n\t\tcreated: new Date(g.created)\r\n\t}\r\n}\r\n\r\n// Create Action Constants\r\nexport enum QuestionActionTypes {\r\n\tLOAD_CATEGORIES = 'LOAD_CATEGORIES',\r\n\tGET_QUESTION = 'GET_QUESTION',\r\n\tADD_QUESTION = 'ADD_QUESTION',\r\n\tEDIT_QUESTION = 'EDIT_QUESTION',\r\n\tREMOVE_QUESTION = 'REMOVE_QUESTION',\r\n\tSTORE_QUESTION = 'STORE_QUESTION',\r\n\tUPDATE_QUESTION = 'UPDATE_QUESTION',\r\n\tCANCEL_QUESTION = 'CANCEL_QUESTION',\r\n\tCLOSE_QUESTION_FORM = 'CLOSE_QUESTION_FORM',\r\n\tOPEN_QUESTION_FORM = 'OPEN_QUESTION_FORM',\r\n\r\n\t// groups\r\n\tGET_CATEGORY = 'GET_CATEGORY',\r\n\tADD_CATEGORY = 'ADD_CATEGORY',\r\n\tTOGGLE_CATEGORY = 'EXPAND_CATEGORY',\r\n\tEDIT_CATEGORY = 'EDIT_CATEGORY',\r\n\tREMOVE_CATEGORY = 'REMOVE_CATEGORY',\r\n\tSTORE_CATEGORY = 'STORE_CATEGORY',\r\n\tUPDATE_CATEGORY = 'UPDATE_CATEGORY',\r\n\tCANCEL_CATEGORY = 'CANCEL_CATEGORY',\r\n\t// question answers\r\n\tREMOVE_QUESTION_ANSWER = 'REMOVE_QUESTION_ANSWER',\r\n\tASSIGN_QUESTION_ANSWER = 'ASSIGN_QUESTION_ANSWER',\r\n\t// localSTorage\r\n\tSET_IS_DETAIL = 'SET_IS_DETAIL',\r\n\tSET_LAST_ANSWER_ID = 'SET_LAST_ANSWER_ID'\r\n}\r\n\r\n\r\n// Interface for Get All Action Type\r\nexport interface ILoad {\r\n\ttype: QuestionActionTypes.LOAD_CATEGORIES;\r\n\tcategories: ICategory[];\r\n\tcategoryQuestions: Map<number, ICategoryState>\r\n}\r\n\r\n\r\nexport interface IGet {\r\n\ttype: QuestionActionTypes.GET_QUESTION;\r\n\tcategoryId: number;\r\n\tquestionId: number;\r\n}\r\n\r\nexport interface IAdd {\r\n\ttype: QuestionActionTypes.ADD_QUESTION;\r\n\tcreatedBy: number;\r\n\tcategoryId: number;\r\n\ttext: string;\r\n}\r\n\r\nexport interface IEdit {\r\n\ttype: QuestionActionTypes.EDIT_QUESTION;\r\n\tcategoryId: number;\r\n\tquestionId: number;\r\n\tshowQuestionForm: boolean;\r\n}\r\n\r\nexport interface IRemove {\r\n\ttype: QuestionActionTypes.REMOVE_QUESTION;\r\n\tcategoryId: number;\r\n\tquestionId: number;\r\n}\r\n\r\n\r\n\r\nexport interface IStore {\r\n\ttype: QuestionActionTypes.STORE_QUESTION;\r\n\tquestion: IQuestion;\r\n}\r\n\r\nexport interface IUpdate {\r\n\ttype: QuestionActionTypes.UPDATE_QUESTION;\r\n\tquestion: IQuestion;\r\n}\r\n\r\nexport interface ICancel {\r\n\ttype: QuestionActionTypes.CANCEL_QUESTION;\r\n}\r\n\r\nexport interface ICloseQuestionForm {\r\n\ttype: QuestionActionTypes.CLOSE_QUESTION_FORM;\r\n}\r\n\r\nexport interface IOpenQuestionForm {\r\n\ttype: QuestionActionTypes.OPEN_QUESTION_FORM;\r\n}\r\n\r\n\r\n// group\r\n\r\nexport interface IGetCategory {\r\n\ttype: QuestionActionTypes.GET_CATEGORY;\r\n\tcategoryId: number,\r\n\tshowCategoryForm: boolean\r\n}\r\n\r\nexport interface IAddCategory {\r\n\ttype: QuestionActionTypes.ADD_CATEGORY;\r\n\t//categoryId: number\r\n\tshowCategoryForm: boolean\r\n}\r\n\r\nexport interface ICancelCategory {\r\n\ttype: QuestionActionTypes.CANCEL_CATEGORY;\r\n}\r\n\r\n\r\nexport interface IToggleCategory {\r\n\ttype: QuestionActionTypes.TOGGLE_CATEGORY;\r\n\tcategoryId: number\r\n}\r\n\r\nexport interface IEditCategory {\r\n\ttype: QuestionActionTypes.EDIT_CATEGORY;\r\n\tcategoryId: number,\r\n\tshowCategoryForm: boolean\r\n}\r\n\r\nexport interface IRemoveCategory {\r\n\ttype: QuestionActionTypes.REMOVE_CATEGORY;\r\n\tcategoryId: number\r\n}\r\n\r\nexport interface IStoreCategory {\r\n\ttype: QuestionActionTypes.STORE_CATEGORY;\r\n\tcategory: ICategory;\r\n}\r\n\r\nexport interface IUpdateCategory {\r\n\ttype: QuestionActionTypes.UPDATE_CATEGORY;\r\n\tcategory: ICategory;\r\n}\r\n\r\nexport interface ICancelCategory {\r\n\ttype: QuestionActionTypes.CANCEL_CATEGORY;\r\n}\r\n\r\n\r\n// question answers\r\nexport interface IRemoveQuestionAnswer {\r\n\ttype: QuestionActionTypes.REMOVE_QUESTION_ANSWER;\r\n\tcategoryId: number,\r\n\tquestionId: number,\r\n\tanswerId: number\r\n}\r\n\r\nexport interface IAssignQuestionAnswer {\r\n\ttype: QuestionActionTypes.ASSIGN_QUESTION_ANSWER;\r\n\tcategoryId: number,\r\n\tquestionId: number,\r\n\tanswerId: number,\r\n\tassignedBy: number,\r\n\ttekst?: string\r\n}\r\n\r\nexport interface ISetIsDetail {\r\n\ttype: QuestionActionTypes.SET_IS_DETAIL;\r\n\tisDetail: boolean\r\n}\r\n\r\nexport interface IAddAndAssignNewAnswer {\r\n\ttype: AnswerActionTypes.STORE_ANSWER;\r\n\tcategoryId: number,\r\n\tquestionId: number,\r\n\tanswer: IAnswer;\r\n}\r\n\r\n\r\n// Combine the action types with a union (we assume there are more)\r\nexport type QuestionActions = ILoad | IGet | IAdd | IEdit | IRemove | IStore | IUpdate | ICancel | \r\n\tIGetCategory | IAddCategory | IToggleCategory | IEditCategory | IRemoveCategory | \r\n\tIStoreCategory | IUpdateCategory | ICancelCategory |\r\n\tIRemoveQuestionAnswer | IAssignQuestionAnswer |\r\n\tISetIsDetail |\r\n\tIAddAndAssignNewAnswer |\r\n\tICloseQuestionForm | IOpenQuestionForm;\r\n\r\nconst isWebStorageSupported = () => 'localStorage' in window\r\n\r\n\r\n// Get All Action <Promise<Return Type>, State Interface, Type of Param, Type of Action>\r\nexport const loadCategories: ActionCreator<\r\n\tThunkAction<Promise<any>, ICategoriesState, null, ILoad>\r\n> = () => {\r\n\treturn async (dispatch: Dispatch) => {\r\n\t\ttry {\r\n\t\t\tlet categories: ICategory[] = [];\r\n\t\t\tlet loadedFromStorage = false;\r\n\t\t\tif (isWebStorageSupported()) {\r\n\t\t\t\tconst sCategories = localStorage.getItem(SUPPORT_CATEGORIES);\r\n\t\t\t\tif (sCategories !== null) {\r\n\t\t\t\t\t// load from storage\r\n\t\t\t\t\tconst categoriesJson = JSON.parse(sCategories);\r\n\t\t\t\t\tcategories = parseFromLocalStorage(categoriesJson);\r\n\t\t\t\t\tcategories.forEach(category => {\r\n\t\t\t\t\t\tconst sQuestions = localStorage.getItem(`CATEGORY_${category.categoryId}`);\r\n\t\t\t\t\t\tif (sQuestions) {\r\n\t\t\t\t\t\t\tconst json = JSON.parse(sQuestions);\r\n\t\t\t\t\t\t\tcategory.questions = parseQuestionsFromLocalStorage(json);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t})\r\n\t\t\t\t\tloadedFromStorage = true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (!loadedFromStorage) {\r\n\t\t\t\t// load from data\r\n\t\t\t\tcategories = parseFromJson();\r\n\t\t\t\tfor (let category of categories) {\r\n\t\t\t\t\tcategory.questions.forEach(q => {\r\n\t\t\t\t\t\tq.categoryId = category.categoryId;\r\n\t\t\t\t\t\tq.words = q.text.split(' ');\r\n\t\t\t\t\t})\r\n\t\t\t\t\tlocalStorage.setItem(`CATEGORY_${category.categoryId}`, JSON.stringify(category.questions));\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tconst categoryQuestions = new Map<number, ICategoryState>();\r\n\t\t\tfor (let category of categories) {\r\n\t\t\t\tconst categoryState: ICategoryState = {\r\n\t\t\t\t\tquestions: [...category.questions]\r\n\t\t\t\t}\r\n\t\t\t\tcategoryQuestions.set(category.categoryId, categoryState);\r\n\t\t\t\tcategory.questions = [];\r\n\t\t\t}\r\n\r\n\t\t\tif (!loadedFromStorage) {\r\n\t\t\t\tlocalStorage.setItem(SUPPORT_CATEGORIES, JSON.stringify(categories));\r\n\t\t\t}\r\n\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: QuestionActionTypes.LOAD_CATEGORIES,\r\n\t\t\t\tcategories,\r\n\t\t\t\tcategoryQuestions\r\n\t\t\t});\r\n\t\t}\r\n\t\tcatch (err) {\r\n\t\t\tconsole.error(err);\r\n\t\t}\r\n\t};\r\n};\r\n\r\n\r\n// Get Question <Promise<Return Type>, State Interface, Type of Param, Type of Action> \r\nexport const getQuestion: ActionCreator<\r\n\tThunkAction<Promise<any>, ICategoriesState, string, IGet>\r\n> = (categoryId: number, questionId: number) => {\r\n\treturn async (dispatch: Dispatch) => {\r\n\t\ttry {\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: QuestionActionTypes.GET_QUESTION,\r\n\t\t\t\tcategoryId,\r\n\t\t\t\tquestionId\r\n\t\t\t});\r\n\t\t} catch (err) {\r\n\t\t\tconsole.error(err);\r\n\t\t}\r\n\t};\r\n};\r\n\r\ninterface IMsg {\r\n\tttype: string,\r\n\tdata: object\r\n}\r\n\r\n\r\n\r\nexport const addQuestion: ActionCreator<\r\n\tThunkAction<Promise<any>, IAppState, null, IAdd>\r\n> = (categoryId: number, text: string, canEdit?: boolean) => {\r\n\treturn async (dispatch: Dispatch, getState: () => IAppState) => {\r\n\t\ttry {\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: QuestionActionTypes.ADD_QUESTION,\r\n\t\t\t\tcreatedBy: getState().topState.top!.auth!.who!.userId,\r\n\t\t\t\tcategoryId,\r\n\t\t\t\ttext,\r\n\t\t\t\tshowCategoryForm: false\r\n\t\t\t});\r\n\t\t}\r\n\t\tcatch (err) {\r\n\t\t\tconsole.error(err);\r\n\t\t}\r\n\t};\r\n};\r\n\r\nexport const editQuestion: ActionCreator<\r\n\tThunkAction<Promise<any>, ICategoriesState, null, IEdit>\r\n> = (categoryId: number, questionId: number, showQuestionForm: boolean) => {\r\n\treturn async (dispatch: Dispatch) => {\r\n\t\ttry {\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: QuestionActionTypes.EDIT_QUESTION,\r\n\t\t\t\tcategoryId,\r\n\t\t\t\tquestionId,\r\n\t\t\t\tshowCategoryForm: false,\r\n\t\t\t\tshowQuestionForm\r\n\t\t\t});\r\n\t\t} catch (err) {\r\n\t\t\tconsole.error(err);\r\n\t\t}\r\n\t};\r\n};\r\n\r\nexport const removeQuestion: ActionCreator<\r\n\tThunkAction<Promise<any>, ICategoriesState, null, IRemove>\r\n> = (doSync: boolean, categoryId: number, questionId: number) => {\r\n\treturn async (dispatch: Dispatch) => {\r\n\t\ttry {\r\n\t\t\tawait delay()\r\n\t\t\t// warning: store answer, after upodate, to local storage\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: QuestionActionTypes.REMOVE_QUESTION,\r\n\t\t\t\tcategoryId,\r\n\t\t\t\tquestionId\r\n\t\t\t});\r\n\t\t\tif (doSync)\r\n\t\t\t\tsyncWithOthers(QuestionActionTypes.REMOVE_QUESTION, {categoryId, questionId});\r\n\t\t} catch (err) {\r\n\t\t\tconsole.error(err);\r\n\t\t}\r\n\t};\r\n};\r\n\r\nexport const selectQuestionAnswer: ActionCreator<\r\n\tThunkAction<Promise<any>, ICategoriesState, null, IRemoveQuestionAnswer>\r\n> = (categoryId: number, questionId: number, answerId: number) => {\r\n\treturn async (dispatch: Dispatch) => {\r\n\t\ttry {\r\n\t\t\tawait delay()\r\n\t\t\t// warning: store answer, after upodate, to local storage\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: QuestionActionTypes.REMOVE_QUESTION_ANSWER,\r\n\t\t\t\tcategoryId: categoryId,\r\n\t\t\t\tquestionId: questionId,\r\n\t\t\t\tanswerId: answerId,\r\n\t\t\t});\r\n\t\t\t//dispatch<any>(getQuestion(questionId))\t// refresh state of question\r\n\t\t}\r\n\t\tcatch (err) {\r\n\t\t\tconsole.error(err);\r\n\t\t}\r\n\t};\r\n};\r\n\r\nexport const copyQuestionAnswer: ActionCreator<\r\n\tThunkAction<Promise<any>, ICategoriesState, null, IRemoveQuestionAnswer>\r\n> = (categoryId: number, questionId: number, answerId: number) => {\r\n\treturn async (dispatch: Dispatch) => {\r\n\t\ttry {\r\n\t\t\tawait delay()\r\n\t\t\t// warning: store answer, after upodate, to local storage\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: QuestionActionTypes.REMOVE_QUESTION_ANSWER,\r\n\t\t\t\tcategoryId: categoryId,\r\n\t\t\t\tquestionId: questionId,\r\n\t\t\t\tanswerId: answerId,\r\n\t\t\t});\r\n\t\t\t//dispatch<any>(getQuestion(questionId))\t// refresh state of question\r\n\t\t}\r\n\t\tcatch (err) {\r\n\t\t\tconsole.error(err);\r\n\t\t}\r\n\t};\r\n};\r\n\r\nexport const removeQuestionAnswer: ActionCreator<\r\n\tThunkAction<Promise<any>, ICategoriesState, null, IRemoveQuestionAnswer>\r\n> = (categoryId: number, questionId: number, answerId: number) => {\r\n\treturn async (dispatch: Dispatch) => {\r\n\t\ttry {\r\n\t\t\tawait delay()\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: QuestionActionTypes.REMOVE_QUESTION_ANSWER,\r\n\t\t\t\tcategoryId: categoryId,\r\n\t\t\t\tquestionId: questionId,\r\n\t\t\t\tanswerId: answerId,\r\n\t\t\t});\r\n\t\t\t// dispatch<any>(getQuestion(questionId))\t// refresh state of question\r\n\t\t}\r\n\t\tcatch (err) {\r\n\t\t\tconsole.error(err);\r\n\t\t}\r\n\t};\r\n};\r\n\r\n\r\nexport const assignQuestionAnswer: ActionCreator<\r\n\tThunkAction<Promise<any>, IAppState, null, IRemoveQuestionAnswer>\r\n> = (categoryId: number, questionId: number, answerId: number, tekst?: string) => {\r\n\r\n\treturn async (dispatch: Dispatch, getState: () => IAppState) => {\r\n\t\ttry {\r\n\t\t\tawait delay();\r\n\t\t\t// warning: store answer, after upodate, to local storage\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: QuestionActionTypes.ASSIGN_QUESTION_ANSWER,\r\n\t\t\t\tcategoryId,\r\n\t\t\t\tquestionId,\r\n\t\t\t\tanswerId,\r\n\t\t\t\tassignedBy: getState().topState.top!.auth!.who!.userId,\r\n\t\t\t});\r\n\t\t\t//dispatch<any>(getQuestion(questionId))\t// refresh state of question\r\n\t\t}\r\n\t\tcatch (err) {\r\n\t\t\tconsole.error(err);\r\n\t\t}\r\n\t};\r\n};\r\n\r\nexport const setIsDetail: ActionCreator<\r\n\tThunkAction<Promise<any>, ICategoriesState, null, ISetIsDetail>\r\n> = (isDetail: boolean) => {\r\n\treturn async (dispatch: Dispatch) => {\r\n\t\ttry {\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: QuestionActionTypes.SET_IS_DETAIL,\r\n\t\t\t\tisDetail\r\n\t\t\t});\r\n\t\t}\r\n\t\tcatch (err) {\r\n\t\t\tconsole.error(err);\r\n\t\t}\r\n\t};\r\n};\r\n\r\nconst syncWithOthers = (type: string, entity: any) => {\r\n\tconst btnSync = document.getElementById('btnSync');\r\n\tlocalStorage.setItem('syncAction', JSON.stringify({\r\n\t\t\ttype,\r\n\t\t\tentity,\r\n\t\t\tsessionId: sessionStorage.getItem('sessionId')\r\n\t\t})\r\n\t);\r\n\tbtnSync!.click();\r\n};\r\n\r\nexport const storeQuestion: ActionCreator<\r\n\tThunkAction<Promise<any>, IAppState, null, IStore>\r\n> = (doSync: boolean, question: IQuestion) => {\r\n\treturn async (dispatch: Dispatch, getState: () => IAppState) => {\r\n\t\tconst { categoryId } = question;\r\n\t\ttry {\r\n\t\t\t//await delay();\r\n\t\t\tif (categoryId === 0) {\r\n\t\t\t\tconst res = await addCategoryUnknown(getState(), dispatch);\r\n\t\t\t\tdispatch({\r\n\t\t\t\t\ttype: QuestionActionTypes.STORE_QUESTION,\r\n\t\t\t\t\tquestion\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tdispatch({\r\n\t\t\t\t\ttype: QuestionActionTypes.STORE_QUESTION,\r\n\t\t\t\t\tquestion\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\tif (doSync)\r\n\t\t\t\tsyncWithOthers(QuestionActionTypes.STORE_QUESTION, question);\r\n\t\t}\r\n\t\tcatch (err) {\r\n\t\t\tconsole.error(err);\r\n\t\t}\r\n\t};\r\n};\r\n\r\nconst addCategoryUnknown = async (state: IAppState, dispatch: Dispatch) => {\r\n\tif (state.categoriesState.categories.find(c => c.categoryId === 0))\r\n\t\treturn Promise.resolve(-1);\r\n\tconst newCategory = {\r\n\t\t...initialCategory,\r\n\t\tcategoryId: 0,\r\n\t\ttitle: 'Unknown',\r\n\t\tquestions: []\r\n\t}\r\n\treturn dispatch<any>(storeCategory(newCategory))\r\n\t\t.then((categoryId: number) => {\r\n\t\t\treturn categoryId;\r\n\t\t});\r\n}\r\n\r\nexport const updateQuestion: ActionCreator<\r\n\tThunkAction<Promise<any>, IAppState, null, IUpdate>\r\n> = (doSync: boolean, question: IQuestion) => {\r\n\treturn async (dispatch: Dispatch, getState: () => IAppState) => {\r\n\t\ttry {\r\n\t\t\tconst { categoryId } = question;\r\n\t\t\tawait delay();\r\n\t\t\tif (categoryId === 0) {\r\n\t\t\t\tconst res = await addCategoryUnknown(getState(), dispatch);\r\n\t\t\t\tdispatch({\r\n\t\t\t\t\ttype: QuestionActionTypes.UPDATE_QUESTION,\r\n\t\t\t\t\tquestion\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tdispatch({\r\n\t\t\t\t\ttype: QuestionActionTypes.UPDATE_QUESTION,\r\n\t\t\t\t\tquestion\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\tif (doSync) {\r\n\t\t\t\tquestion.categoryIdWas = getState().categoriesState.questionCopy!.categoryId;\r\n\t\t\t\tsyncWithOthers(QuestionActionTypes.UPDATE_QUESTION, question);\r\n\t\t\t}\r\n\t\t}\r\n\t\tcatch (err) {\r\n\t\t\tconsole.error(err);\r\n\t\t}\r\n\t};\r\n};\r\n\r\n\r\nconst delay = (): Promise<any> => {\r\n\treturn new Promise((resolve, reject) => {\r\n\t\tsetTimeout(() => {\r\n\t\t\tresolve({\r\n\t\t\t\t'status': 200,\r\n\t\t\t\t'content-type': 'application/json',\r\n\t\t\t\t'data': {\r\n\t\t\t\t\t'results': 1\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t}, 50)\r\n\t})\r\n}\r\n\r\nexport const cancelQuestion: ActionCreator<any> = () => {\r\n\treturn (dispatch: Dispatch) => {\r\n\t\ttry {\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: QuestionActionTypes.CANCEL_QUESTION\r\n\t\t\t});\r\n\t\t} catch (err) {\r\n\t\t\tconsole.error(err);\r\n\t\t}\r\n\t};\r\n};\r\n\r\nexport const closeQuestionForm: ActionCreator<any> = () => {\r\n\treturn (dispatch: Dispatch) => {\r\n\t\ttry {\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: QuestionActionTypes.CLOSE_QUESTION_FORM\r\n\t\t\t});\r\n\t\t} catch (err) {\r\n\t\t\tconsole.error(err);\r\n\t\t}\r\n\t};\r\n};\r\n\r\nexport const openQuestionForm: ActionCreator<any> = () => {\r\n\treturn (dispatch: Dispatch) => {\r\n\t\ttry {\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: QuestionActionTypes.OPEN_QUESTION_FORM\r\n\t\t\t});\r\n\t\t} catch (err) {\r\n\t\t\tconsole.error(err);\r\n\t\t}\r\n\t};\r\n};\r\n\r\n\r\nexport const getCategory: ActionCreator<\r\n\tThunkAction<Promise<any>, ICategoriesState, string, IGet>\r\n> = (categoryId: number, showCategoryForm:boolean) => {\r\n\treturn async (dispatch: Dispatch) => {\r\n\t\ttry {\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: QuestionActionTypes.GET_CATEGORY,\r\n\t\t\t\tcategoryId,\r\n\t\t\t\tshowCategoryForm\r\n\t\t\t});\r\n\t\t} catch (err) {\r\n\t\t\tconsole.error(err);\r\n\t\t}\r\n\t};\r\n};\r\n\r\n\r\nexport const addCategory: ActionCreator<\r\n\tThunkAction<Promise<any>, ICategoriesState, null, IAddCategory>\r\n> = () => {\r\n\treturn async (dispatch: Dispatch) => {\r\n\t\ttry {\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: QuestionActionTypes.ADD_CATEGORY,\r\n\t\t\t\tshowCategoryForm: true\r\n\t\t\t});\r\n\t\t} catch (err) {\r\n\t\t\tconsole.error(err);\r\n\t\t}\r\n\t};\r\n};\r\n\r\nexport const toggleCategory: ActionCreator<\r\n\tThunkAction<Promise<any>, ICategoriesState, null, IEditCategory>\r\n> = (categoryId: number) => {\r\n\treturn async (dispatch: Dispatch) => {\r\n\t\ttry {\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: QuestionActionTypes.TOGGLE_CATEGORY,\r\n\t\t\t\tcategoryId\r\n\t\t\t});\r\n\t\t} catch (err) {\r\n\t\t\tconsole.error(err);\r\n\t\t}\r\n\t};\r\n};\r\n\r\n\r\nexport const editCategory: ActionCreator<\r\n\tThunkAction<Promise<any>, ICategoriesState, null, IEditCategory>\r\n> = (categoryId: number) => {\r\n\treturn async (dispatch: Dispatch) => {\r\n\t\ttry {\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: QuestionActionTypes.EDIT_CATEGORY,\r\n\t\t\t\tcategoryId,\r\n\t\t\t\tshowCategoryForm: true\r\n\t\t\t});\r\n\t\t} catch (err) {\r\n\t\t\tconsole.error(err);\r\n\t\t}\r\n\t};\r\n}\r\n\r\nexport const removeCategory: ActionCreator<\r\n\tThunkAction<Promise<any>, ICategoriesState, null, IRemoveCategory>\r\n> = (doSync: boolean, categoryId: number) => {\r\n\treturn async (dispatch: Dispatch) => {\r\n\t\ttry {\r\n\t\t\tawait delay()\r\n\t\t\t// warning: store answer, after update, to local storage\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: QuestionActionTypes.REMOVE_CATEGORY,\r\n\t\t\t\tcategoryId\r\n\t\t\t});\r\n\t\t\tif (doSync)\r\n\t\t\t\tsyncWithOthers(QuestionActionTypes.REMOVE_CATEGORY, categoryId);\r\n\t\t} catch (err) {\r\n\t\t\tconsole.error(err);\r\n\t\t}\r\n\t};\r\n};\r\n\r\nexport const storeCategory: ActionCreator<\r\n\tThunkAction<Promise<any>, IAppState, null, IStoreCategory>\r\n> = (doSync: boolean, category: ICategory) => {\r\n\treturn async (dispatch: Dispatch, getState: () => IAppState) => {\r\n\t\ttry {\r\n\t\t\t// await updateCategoryFromLocalStorage(group);\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: QuestionActionTypes.STORE_CATEGORY,\r\n\t\t\t\tcategory\r\n\t\t\t});\r\n\t\t\tif (doSync)\r\n\t\t\t\tsyncWithOthers(QuestionActionTypes.STORE_CATEGORY, category);\r\n\t\t\treturn Promise.resolve(category.categoryId) //getState().categoriesState.categories.length)\r\n\t\t}\r\n\t\tcatch (err) {\r\n\t\t\tconsole.error(err);\r\n\t\t}\r\n\t};\r\n};\r\n\r\n\r\nexport const updateCategory: ActionCreator<\r\n\tThunkAction<Promise<any>, ICategoriesState, null, IStoreCategory>\r\n> = (doSync: boolean, category: ICategory) => {\r\n\treturn async (dispatch: Dispatch) => {\r\n\t\ttry {\r\n\t\t\t// await updateCategoryFromLocalStorage(group);\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: QuestionActionTypes.UPDATE_CATEGORY,\r\n\t\t\t\tcategory\r\n\t\t\t});\r\n\t\t\tif (doSync)\r\n\t\t\t\tsyncWithOthers(QuestionActionTypes.UPDATE_CATEGORY, category);\r\n\t\t} \r\n\t\tcatch (err) {\r\n\t\t\tconsole.error(err);\r\n\t\t}\r\n\t};\r\n};\r\n\r\nexport const cancelCategory: ActionCreator<any> = () => {\r\n\treturn (dispatch: Dispatch) => {\r\n\t\ttry {\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: QuestionActionTypes.CANCEL_CATEGORY\r\n\t\t\t});\r\n\t\t}\r\n\t\tcatch (err) {\r\n\t\t\tconsole.error(err);\r\n\t\t}\r\n\t};\r\n};\r\n\r\n\r\nexport const addAndAssignNewAnswer: ActionCreator<\r\n\tThunkAction<Promise<any>, IAppState, null, IStore>\r\n> = (categoryId: number, questionId: number, answer: IAnswer, formMode: string) => {\r\n\treturn async (dispatch: Dispatch, getState: () => IAppState) => {\r\n\t\ttry {\r\n\t\t\tanswer.createdBy = getState().topState.top!.auth!.who!.userId;\r\n\t\t\tdispatch<any>(addAnswer());\r\n\t\t\tdispatch<any>(storeAnswer(answer, formMode))\r\n\t\t\t\t.then((answerId: number) => {\r\n\t\t\t\t\tdispatch<any>(assignQuestionAnswer(categoryId, questionId, answerId))\r\n\t\t\t\t});\r\n\t\t}\r\n\t\tcatch (err) {\r\n\t\t\tconsole.error(err);\r\n\t\t}\r\n\t};\r\n};","// Import redux types\r\nimport { ActionCreator, Dispatch } from 'redux';\r\nimport { ThunkAction } from 'redux-thunk';\r\n// import axios from 'axios';\r\n\r\n// Import User Typing\r\nimport { IUser, IRole, IRoleJson, IUsersState } from './types';\r\n\r\n\r\n///////////////////////////////////////////////////\r\n// localStorage\r\nimport { SUPPORT_USERS } from './reducer';\r\n\r\nimport data from \"./data.json\"\r\nimport { IAppState } from '../store/Store';\r\nimport { TopActionTypes } from '../Top/actions';\r\n\r\nconst parseFromJson = (): IRole[] => {\r\n\treturn data.map(g => {\r\n\t\treturn parseRole(g)\r\n\t})\r\n}\r\n\r\nconst parseFromLocalStorage = (arr: IRoleJson[]): IRole[] => {\r\n\treturn arr.map(g => parseRole(g));\r\n}\r\n\r\nconst parseRole = (g: IRoleJson): IRole => ({\r\n\t...g,\r\n\tusers: g.users.map(u => ({ ...u, created: new Date(u.created) })),\r\n\tcreated: new Date(g.created)\r\n})\r\n\r\n\r\n// Create Action Constants\r\nexport enum UserActionTypes {\r\n\tLOAD_USER_GROUPS = 'LOAD_USER_GROUPS',\r\n\tCREATE_OPTIONS = 'CREATE_OPTIONS',\r\n\tGET_ALL_USERS = 'GET_ALL_USERS',\r\n\tGET_USER = 'GET_USER',\r\n\tADD_USER = 'ADD_USER',\r\n\tEDIT_USER = 'EDIT_USER',\r\n\tREMOVE_USER = 'REMOVE_USER',\r\n\tSTORE_USER = 'STORE_USER',\r\n\tCANCEL_USER = 'CANCEL_USER',\r\n\t// groups\r\n\tADD_ROLE = 'ADD_ROLE',\r\n\tTOGGLE_ROLE = 'EXPAND_ROLE',\r\n\tEDIT_ROLE = 'EDIT_ROLE',\r\n\tREMOVE_ROLE = 'REMOVE_ROLE',\r\n\tSTORE_ROLE = 'STORE_ROLE',\r\n\t// localSTorage\r\n\tSET_IS_DETAIL = 'SET_IS_DETAIL',\r\n}\r\n\r\n\r\n// Interface for Get All Action Type\r\nexport interface IGetAll {\r\n\ttype: UserActionTypes.GET_ALL_USERS;\r\n\troles: IRole[];\r\n}\r\n\r\nexport interface ICreateOptions {\r\n\ttype: UserActionTypes.CREATE_OPTIONS;\r\n}\r\n\r\nexport interface IGet {\r\n\ttype: UserActionTypes.GET_USER;\r\n\tuserId: number;\r\n}\r\n\r\nexport interface IAdd {\r\n\ttype: UserActionTypes.ADD_USER;\r\n\tcreatedBy: number,\r\n\troleId: number,\r\n\ttext: string\r\n\t//userId: number,\r\n}\r\n\r\nexport interface IEdit {\r\n\ttype: UserActionTypes.EDIT_USER;\r\n\troleId: number,\r\n\tuserId: number\r\n}\r\n\r\nexport interface IRemove {\r\n\ttype: UserActionTypes.REMOVE_USER;\r\n\troleId: number,\r\n\tuserId: number,\r\n}\r\n\r\nexport interface IStore {\r\n\ttype: UserActionTypes.STORE_USER;\r\n\tuser: IUser;\r\n\tformMode: string;\r\n}\r\n\r\nexport interface ICancel {\r\n\ttype: UserActionTypes.CANCEL_USER;\r\n}\r\n\r\n// group\r\nexport interface IAddRole {\r\n\ttype: UserActionTypes.ADD_ROLE;\r\n\t//roleId: number\r\n}\r\n\r\nexport interface IToggleRole {\r\n\ttype: UserActionTypes.TOGGLE_ROLE;\r\n\troleId: number\r\n}\r\n\r\nexport interface IEditRole {\r\n\ttype: UserActionTypes.EDIT_ROLE;\r\n\troleId: number\r\n}\r\n\r\nexport interface IRemoveRole {\r\n\ttype: UserActionTypes.REMOVE_ROLE;\r\n\troleId: number\r\n}\r\n\r\nexport interface IStoreRole {\r\n\ttype: UserActionTypes.STORE_ROLE;\r\n\tgroup: IRole;\r\n}\r\n\r\n\r\nexport interface ISetIsDetail {\r\n\ttype: UserActionTypes.SET_IS_DETAIL;\r\n\tisDetail: boolean\r\n}\r\n\r\n\r\n\r\n// Combine the action types with a union (we assume there are more)\r\nexport type UserActions = IGetAll | IGet | IAdd | IEdit | IRemove | IStore | ICancel |\r\n\tIAddRole | IToggleRole | IEditRole | IRemoveRole | IStoreRole |\r\n\tICreateOptions;\r\n\r\nconst isWebStorageSupported = () => 'localStorage' in window\r\n\r\n\r\nexport const getAllUsers: ActionCreator<\r\n\tThunkAction<Promise<any>, IUsersState, null, IGetAll>\r\n> = () => {\r\n\treturn async (dispatch: Dispatch) => {\r\n\t\ttry {\r\n\t\t\t// const response = await axios.get('https://swapi.co/api/people/');\r\n\t\t\tlet roles: IRole[] = [];\r\n\t\t\tif (isWebStorageSupported()) {\r\n\t\t\t\tconst sUserRoles = localStorage.getItem(SUPPORT_USERS);\r\n\t\t\t\tif (sUserRoles !== null) {\r\n\t\t\t\t\t//const Users: IRole[] = JSON.parse(sUsers);\r\n\t\t\t\t\t//Users.map(g => storageUsers.push(g))\r\n\t\t\t\t\tconst parsed = JSON.parse(sUserRoles);\r\n\t\t\t\t\troles = parseFromLocalStorage(parsed);\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\troles = parseFromJson()\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\troles = parseFromJson()\r\n\t\t\t}\r\n\r\n\t\t\t//const response = await getUsersFromLocalStorage(); \r\n\t\t\tdispatch({\r\n\t\t\t\ttype: UserActionTypes.GET_ALL_USERS,\r\n\t\t\t\troles  //response.data.results,\r\n\t\t\t});\r\n\t\t\tdispatch({type: UserActionTypes.CREATE_OPTIONS})\r\n\t\t}\r\n\t\tcatch (err) {\r\n\t\t\tconsole.error(err);\r\n\t\t}\r\n\t};\r\n};\r\n\r\n\r\n\r\n// Get User <Promise<Return Type>, State Interface, Type of Param, Type of Action> \r\nexport const getUser: ActionCreator<\r\n\tThunkAction<Promise<any>, IUsersState, string, IGet>\r\n> = (userId: number) => {\r\n\treturn async (dispatch: Dispatch) => {\r\n\t\ttry {\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: UserActionTypes.GET_USER,\r\n\t\t\t\tuserId\r\n\t\t\t});\r\n\t\t} catch (err) {\r\n\t\t\tconsole.error(err);\r\n\t\t}\r\n\t};\r\n};\r\n\r\nexport const findUser: ActionCreator<\r\n\tThunkAction<Promise<any>, IAppState, string, IGet>\r\n> = (name: string) => {\r\n\treturn async (dispatch: Dispatch, getState: () => IAppState) => {\r\n\t\ttry {\r\n\t\t\tconst {usersState} = getState();\r\n\t\t\tlet user;\r\n\t\t\tfor (let role of usersState.roles) {\r\n\t\t\t\tuser = role.users.find(user => user.userName === name);\r\n\t\t\t\tif (user)\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\treturn user;\r\n\t\t}\r\n\t\tcatch (err) {\r\n\t\t\tconsole.error(err);\r\n\t\t}\r\n\t};\r\n};\r\n\r\n\r\n\r\nexport const addUser: ActionCreator<\r\n\tThunkAction<Promise<any>, IAppState, null, IAdd>\r\n> = (roleId: number, text: string, canEdit?: boolean) => {\r\n\treturn async (dispatch: Dispatch, getState: () => IAppState) => {\r\n\t\ttry {\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: UserActionTypes.ADD_USER,\r\n\t\t\t\tcreatedBy: getState().topState.top!.auth!.who!.userId,\r\n\t\t\t\troleId,\r\n\t\t\t\ttext\r\n\t\t\t});\r\n\t\t}\r\n\t\tcatch (err) {\r\n\t\t\tconsole.error(err);\r\n\t\t}\r\n\t};\r\n};\r\n\r\nexport const editUser: ActionCreator<\r\n\tThunkAction<Promise<any>, IUsersState, null, IEdit>\r\n> = (roleId: number, userId: number) => {\r\n\treturn async (dispatch: Dispatch) => {\r\n\t\ttry {\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: UserActionTypes.EDIT_USER,\r\n\t\t\t\troleId,\r\n\t\t\t\tuserId\r\n\t\t\t});\r\n\t\t} catch (err) {\r\n\t\t\tconsole.error(err);\r\n\t\t}\r\n\t};\r\n};\r\n\r\nexport const removeUser: ActionCreator<\r\n\tThunkAction<Promise<any>, IUsersState, null, IRemove>\r\n> = (roleId: number, userId: number) => {\r\n\treturn async (dispatch: Dispatch) => {\r\n\t\ttry {\r\n\t\t\tawait delay()\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: UserActionTypes.REMOVE_USER,\r\n\t\t\t\troleId,\r\n\t\t\t\tuserId\r\n\t\t\t});\r\n\t\t\tdispatch({type: UserActionTypes.CREATE_OPTIONS})\r\n\t\t}\r\n\t\tcatch (err) {\r\n\t\t\tconsole.error(err);\r\n\t\t}\r\n\t};\r\n};\r\n\r\n\r\nexport const setIsDetail: ActionCreator<\r\n\tThunkAction<Promise<any>, IUsersState, null, ISetIsDetail>\r\n> = (isDetail: boolean) => {\r\n\treturn async (dispatch: Dispatch) => {\r\n\t\ttry {\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: UserActionTypes.SET_IS_DETAIL,\r\n\t\t\t\tisDetail\r\n\t\t\t});\r\n\t\t}\r\n\t\tcatch (err) {\r\n\t\t\tconsole.error(err);\r\n\t\t}\r\n\t};\r\n};\r\n\r\nexport const storeUser: ActionCreator<\r\n\tThunkAction<Promise<any>, IAppState, null, IStore>\r\n> = (user: IUser, formMode: string) => {\r\n\treturn async (dispatch: Dispatch, getState: () => IAppState) => {\r\n\t\ttry {\r\n\t\t\tif (formMode === 'add') {\r\n\t\t\t\tawait delay(); \r\n\r\n\t\t\t\t// if userId == -1 nadji max\r\n\t\t\t\t// return dispatch<any>(addUser(xxx))\r\n\t\t\t\t// \t.then((categoryId: number) => {\r\n\t\t\t\t// \t\treturn categoryId;\r\n\t\t\t\t// \t});\r\n\r\n\t\t\t\tawait dispatch({\r\n\t\t\t\t\ttype: UserActionTypes.STORE_USER,\r\n\t\t\t\t\tuser,\r\n\t\t\t\t\tformMode\r\n\t\t\t\t});\r\n\t\t\t\treturn user;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tawait delay();\r\n\t\t\t\tdispatch({\r\n\t\t\t\t\ttype: UserActionTypes.STORE_USER,\r\n\t\t\t\t\tuser,\r\n\t\t\t\t\tformMode\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\tdispatch({type: UserActionTypes.CREATE_OPTIONS})\r\n\t\t} \r\n\t\tcatch (err) {\r\n\t\t\tconsole.error(err);\r\n\t\t}\r\n\t};\r\n};\r\n\r\nconst delay = (): Promise<any> => {\r\n\treturn new Promise((resolve, reject) => {\r\n\t\tsetTimeout(() => {\r\n\t\t\tresolve({\r\n\t\t\t\t'status': 200,\r\n\t\t\t\t'content-type': 'application/json',\r\n\t\t\t\t'data': {\r\n\t\t\t\t\t'results': 1\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t}, 50)\r\n\t})\r\n}\r\n\r\nexport const cancelUser: ActionCreator<any> = () => {\r\n\treturn (dispatch: Dispatch) => {\r\n\t\ttry {\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: UserActionTypes.CANCEL_USER\r\n\t\t\t});\r\n\t\t} catch (err) {\r\n\t\t\tconsole.error(err);\r\n\t\t}\r\n\t};\r\n};\r\n\r\n/*\r\n * User Roles\r\n */\r\nexport const addRole: ActionCreator<\r\n\tThunkAction<Promise<any>, IUsersState, null, IAddRole>\r\n> = () => {\r\n\treturn async (dispatch: Dispatch) => {\r\n\t\ttry {\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: UserActionTypes.ADD_ROLE\r\n\t\t\t});\r\n\t\t} catch (err) {\r\n\t\t\tconsole.error(err);\r\n\t\t}\r\n\t};\r\n};\r\n\r\nexport const toggleRole: ActionCreator<\r\n\tThunkAction<Promise<any>, IUsersState, null, IEditRole>\r\n> = (roleId: number) => {\r\n\treturn async (dispatch: Dispatch) => {\r\n\t\ttry {\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: UserActionTypes.TOGGLE_ROLE,\r\n\t\t\t\troleId\r\n\t\t\t});\r\n\t\t} catch (err) {\r\n\t\t\tconsole.error(err);\r\n\t\t}\r\n\t};\r\n};\r\n\r\n\r\nexport const editRole: ActionCreator<\r\n\tThunkAction<Promise<any>, IUsersState, null, IEditRole>\r\n> = (roleId: number) => {\r\n\treturn async (dispatch: Dispatch) => {\r\n\t\ttry {\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: UserActionTypes.EDIT_ROLE,\r\n\t\t\t\troleId\r\n\t\t\t});\r\n\t\t} catch (err) {\r\n\t\t\tconsole.error(err);\r\n\t\t}\r\n\t};\r\n};\r\n\r\nexport const removeRole: ActionCreator<\r\n\tThunkAction<Promise<any>, IUsersState, null, IRemoveRole>\r\n> = (roleId: number) => {\r\n\treturn async (dispatch: Dispatch) => {\r\n\t\ttry {\r\n\t\t\tawait delay()\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: UserActionTypes.REMOVE_ROLE,\r\n\t\t\t\troleId: roleId\r\n\t\t\t});\r\n\t\t} catch (err) {\r\n\t\t\tconsole.error(err);\r\n\t\t}\r\n\t};\r\n};\r\n\r\nexport const storeRole: ActionCreator<\r\n\tThunkAction<Promise<any>, IUsersState, null, IStoreRole>\r\n> = (group: IRole) => {\r\n\treturn async (dispatch: Dispatch) => {\r\n\t\ttry {\r\n\t\t\t// await updateRoleFromLocalStorage(group);\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: UserActionTypes.STORE_ROLE,\r\n\t\t\t\tgroup\r\n\t\t\t});\r\n\t\t} catch (err) {\r\n\t\t\tconsole.error(err);\r\n\t\t}\r\n\t};\r\n};\r\n\r\n","import { IAnswer } from '../Answers/types'\r\nimport { IOption } from '../common/types';\r\nimport { IUser } from '../Users/types';\r\nimport { IAuth } from \"../Top/types\";\r\n\r\n// Define the Question type\r\n\r\nexport interface IQuestionAnswer {\r\n\tcategoryId?: number;\r\n\tquestionId?: number;\r\n\tanswerId: number,\r\n\tassignedBy: number,\r\n\tassigned: Date,\r\n\ttext?: string\r\n}\r\n\r\nexport interface IQuestionAnswerJson extends Omit<IQuestionAnswer, 'assigned'> {\r\n\tassigned: string\r\n}\r\n\r\n\r\nexport interface IQuestion {\r\n\tcategoryId: number,\r\n\tquestionId: number,\r\n\ttext: string,\r\n\twords?: string[],\r\n\tanswers: IQuestionAnswer[],\r\n\tsource: number,\r\n\tstatus: number,\r\n\tcreatedBy: number,\r\n\tcreated: Date,\r\n\tcategoryIdWas?: number\r\n}\r\n\r\nexport interface IQuestionJson extends Omit<IQuestion, 'categoryId' | 'answers' | 'created'> {\r\n\tcategoryId?: number,\r\n\tanswers: IQuestionAnswerJson[],\r\n\tcreated: string\r\n}\r\n\r\nexport interface ICategory {\r\n\tcategoryId: number,\r\n\ttitle: string,\r\n\tquestions: IQuestion[],\r\n\tisExpanded?: boolean,\r\n\tcreatedBy: number,\r\n\tcreated: Date\r\n}\r\n\r\nexport interface ICategoryJson extends Omit<ICategory, 'created' | 'questions'> {\r\n\tquestions: IQuestionJson[],\r\n\tcreated: string\r\n}\r\n\r\nexport const initialQuestion: IQuestion = {\r\n\tcategoryId: 0,\r\n\tquestionId: 0,\r\n\ttext: '',\r\n\twords: [],\r\n\tanswers: [],\r\n\tsource: 0,\r\n\tstatus: 0,\r\n\tcreatedBy: 0,\r\n\tcreated: new Date()\r\n };\r\n\r\nexport interface ICategoriesProps {\r\n\tcategories: ICategory[];\r\n\tcategoryQuestions: Map<number, ICategoryState>,\r\n\tshowCategoryForm: boolean;\r\n\tshowQuestionForm: boolean;\r\n\tcategory: ICategory | undefined;\r\n\tquestion: IQuestion | undefined;\r\n\tformMode: string,\r\n\tcanEdit: boolean,\r\n\tauth?: IAuth,\r\n\tnavbarOpen: boolean,\r\n\tonSelectQuestion: (categoryId: number, questionId: number) => void;\r\n\tadd:  (categoryId: number, text: string, canEdit?: boolean) => void;\r\n\tcloseQuestionForm: () => void;\r\n}\r\n\r\nexport interface ICategoryListProps {\r\n\tcategories: ICategory[];\r\n\tcategoryQuestions: Map<number, ICategoryState>,\r\n\tcategoryOptions: IOption<number>[],\r\n\tshowCategoryForm: boolean;\r\n\tshowQuestionForm: boolean;\r\n\tcategory: ICategory | undefined;\r\n\tquestion: IQuestion | undefined;\r\n\tlastAnswer?: IAnswer;\r\n\tformMode: string,\r\n\tcategoryIdEditing: number,\r\n\tcanEdit: boolean,\r\n\tauth?: IAuth,\r\n\tnavbarOpen: boolean,\r\n\tonSelectQuestion: (categoryId: number, questionId: number) => void;\r\n\tadd: (categoryId: number, text: string, canEdit?: boolean) => void;\r\n\tedit: (categoryId: number, questionId: number, showQuestionForm: boolean) => void;\r\n\tremove: (categoryId: number, questionId: number) => void;\r\n\tcloseQuestionForm: () => void;\r\n\topenQuestionForm: () => void;\r\n\r\n\t// groups\r\n\tonSelectCategory: (categoryId: number) => ICategory;\r\n\taddCategory: () => void;\r\n\ttoggleCategory: (categoryId: number) => void;\r\n\teditCategory: (categoryId: number) => void;\r\n\tremoveCategory: (categoryId: number) => void;\r\n\tstoreCategory: (group: ICategory) => void;\r\n\tupdateCategory: (group: ICategory) => void;\r\n\t// question answer\r\n\taddAndAssignNewAnswer: (categoryId: number, questionId: number, answer: IAnswer, formMode: string) => void\r\n}\r\n\r\n\r\nexport interface ICategoryState {\r\n\tquestions: IQuestion[];\r\n}\r\n\r\n\r\n// Define the Question State\r\nexport interface ICategoriesState {\r\n\treadonly categories: ICategory[];\r\n\treadonly category: ICategory | undefined;\r\n\treadonly question: IQuestion | undefined;\r\n\tshowCategoryForm: boolean,\r\n\tshowQuestionForm: boolean,\r\n\tcategoryCopy?: ICategory;\r\n\tquestionCopy?: IQuestion;\r\n\tcategoryQuestions: Map<number, ICategoryState>,\r\n\tcategoryOptions: IOption<number>[];\r\n\tloading: boolean,\r\n\tformMode: string;\r\n\tcategoryIdEditing: number;\r\n\tisDetail: boolean;\r\n}\r\n\r\n\r\nexport interface IQuestionFormProps {\r\n\tquestion: IQuestion;\r\n\tquestionAnswers: IQuestionAnswer[];\r\n\tanswers: IAnswer[];\r\n\tformMode: string;\r\n\tcanEdit: boolean,\r\n\thandleClose: () => void;\r\n\tcancel: () => void;\r\n\tsaveForm: (question: IQuestion, formMode: string) => void;\r\n\tselectQuestionAnswer: (categoryId: number, questionId: number, answerId: number) => void;\r\n\tcopyQuestionAnswer: (categoryId: number, questionId: number, answerId: number) => void;\r\n\tremoveQuestionAnswer: (categoryId: number, questionId: number, answerId: number) => void;\r\n\tassignQuestionAnswer: (categoryId: number, questionId: number, answerId: number) => void;\r\n\tsetIsDetail: (isDetail: boolean) => void;\r\n\tcategoryOptions: IOption<number>[];\r\n  }\r\n\r\n  export interface ICategoryFormProps {\r\n\tcategory: ICategory | undefined;\r\n\tformMode: string;\r\n\tcanEdit: boolean,\r\n\tcancel: () => void;\r\n\tsaveForm: (category: ICategory, formMode: string) => void;\r\n\tsetIsDetail: (isDetail: boolean) => void;\r\n  }\r\n\r\n ","// Import Reducer type\r\nimport { Reducer } from 'redux';\r\n\r\nimport {\r\n\tQuestionActions,\r\n\tQuestionActionTypes\r\n} from './actions';\r\nimport { initialCategory } from './categoriesReducer';\r\n\r\nimport { IQuestion, ICategoryState, initialQuestion } from './types'\r\n\r\nexport const CATEGORY = 'CATEGORY';\r\n\r\n// Define the initial state\r\nexport const initialCategoryState: ICategoryState = {\r\n\tquestions: []\r\n};\r\n\r\n\r\nconst aTypesToStore = Object.keys(QuestionActionTypes);\r\n\t//.filter(a => a !== QuestionActionTypes.LOAD_CATEGORY);\r\n\r\nexport const reduceQuestions = (\r\n\tcategoryQuestions: Map<number, ICategoryState>,\r\n\taction: QuestionActions,\r\n\tcategoryId: number,\r\n\tquestionId?: number\r\n): {categoryQuestions: Map<number, ICategoryState>, question: IQuestion|undefined} => {\r\n\tconst categoryState = categoryQuestions.get(categoryId)!;\r\n\tconst newState: ICategoryState = myReducer(categoryState, action);\r\n\tif (aTypesToStore.includes(action.type)) {\r\n\t\tlocalStorage.setItem(`CATEGORY_${categoryId}`, JSON.stringify(newState.questions));\r\n\t}\r\n\tcategoryQuestions.set(categoryId, newState);\r\n\tconst question = newState.questions.find(q => q.questionId === questionId);\r\n\treturn { categoryQuestions, question }\r\n}\r\n\r\n\r\nconst myReducer: Reducer<ICategoryState, QuestionActions> = (\r\n\tstate = initialCategoryState,\r\n\taction\r\n) => {\r\n\tswitch (action.type) {\r\n\r\n\t\tcase QuestionActionTypes.GET_QUESTION: {\r\n\t\t\tconst question = state.questions.find(q => q.questionId === action.questionId);\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tquestion\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tcase QuestionActionTypes.ADD_QUESTION: {\r\n\t\t\tlet questionIdMax = 0;\r\n\t\t\tfor (let question of state.questions)\r\n\t\t\t\tif (question.questionId > questionIdMax)\r\n\t\t\t\t\tquestionIdMax = question.questionId\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tformMode: 'add',\r\n\t\t\t\tquestion: {\r\n\t\t\t\t\t...initialQuestion,\r\n\t\t\t\t\tcreatedBy: action.createdBy,\r\n\t\t\t\t\tcategoryId: action.categoryId,\r\n\t\t\t\t\tquestionId: questionIdMax + 1,\r\n\t\t\t\t\ttext: action.text\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tcase QuestionActionTypes.EDIT_QUESTION: {\r\n\t\t\tconst question = state.questions\r\n\t\t\t\t.find(question => question.questionId === action.questionId);\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tformMode: 'edit',\r\n\t\t\t\tquestion\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tcase QuestionActionTypes.STORE_QUESTION: {\r\n\t\t\tconst { question } = action;\r\n\t\t\tquestion.words = question.text.split(' ');\r\n\t\t\tconst { questionId } = question;\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tquestions: [...state.questions, {...question}]\r\n\t\t\t\t// questions: state.questions\r\n\t\t\t\t// \t.map(q => q.questionId !== questionId\r\n\t\t\t\t// \t\t? q\r\n\t\t\t\t// \t\t: { ...question }\r\n\t\t\t\t// \t)\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tcase QuestionActionTypes.UPDATE_QUESTION: {\r\n\t\t\tconst { question } = action;\r\n\t\t\tconst { questionId } = question;\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tquestions: state.questions\r\n\t\t\t\t\t.map(q => q.questionId !== questionId\r\n\t\t\t\t\t\t? q\r\n\t\t\t\t\t\t: { ...question }\r\n\t\t\t\t\t)\r\n\t\t\t};\t\t\t\r\n\t\t}\r\n\r\n\t\tcase QuestionActionTypes.CANCEL_QUESTION: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tformMode: 'display'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tcase QuestionActionTypes.REMOVE_QUESTION: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tquestions: state.questions.filter(q => q.questionId !== action.questionId)\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\t// Question answers\r\n\t\tcase QuestionActionTypes.REMOVE_QUESTION_ANSWER: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tquestions: state.questions.map(q => q.questionId !== action.questionId\r\n\t\t\t\t\t? { ...q, answers: [...q.answers] }\r\n\t\t\t\t\t: { ...q, answers: q.answers.filter(qa => qa.answerId !== action.answerId) }\r\n\t\t\t\t)\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tcase QuestionActionTypes.ASSIGN_QUESTION_ANSWER: {\r\n\t\t\tconst { questionId, answerId, assignedBy } = action;\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tquestions: state.questions.map(q => q.questionId !== questionId\r\n\t\t\t\t\t? { ...q, answers: [...q.answers] }\r\n\t\t\t\t\t: { ...q, answers: [...q.answers, { answerId, assignedBy, assigned: new Date() }] }\r\n\t\t\t\t)\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tcase QuestionActionTypes.SET_IS_DETAIL: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tisDetail: action.isDetail\r\n\t\t\t}\r\n\t\t}\r\n\r\n\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n};\r\n\r\n","// Import Reducer type\r\nimport { Reducer } from 'redux';\r\n\r\nimport {\r\n\tQuestionActions,\r\n\tQuestionActionTypes\r\n} from './actions';\r\n\r\nimport { IQuestion, ICategory, ICategoriesState, ICategoryState } from './types'\r\nimport { reduceQuestions } from './categoryReducer'\r\nimport { createWatchCompilerHost } from 'typescript';\r\n\r\nexport const SUPPORT_CATEGORIES = 'SUPPORT_CATEGORIES';\r\n\r\nexport const initialQuestion: IQuestion = {\r\n\tcategoryId: 0,\r\n\tquestionId: 0,\r\n\ttext: '',\r\n\twords: [],\r\n\tsource: 0,\r\n\tstatus: 0,\r\n\tanswers: [],\r\n\tcreatedBy: 0,\r\n\tcreated: new Date()\r\n};\r\n\r\nexport const initialCategory: ICategory = {\r\n\tcategoryId: 0,\r\n\ttitle: '',\r\n\tquestions: [],\r\n\tisExpanded: false,\r\n\tcreatedBy: 0,\r\n\tcreated: new Date()\r\n};\r\n\r\n\r\n// Define the initial state\r\nexport const initialCategoriesState: ICategoriesState = {\r\n\tcategories: [],\r\n\tcategory: undefined,\r\n\tcategoryQuestions: new Map<number, ICategoryState>(),\r\n\tquestion: undefined,\r\n\tshowCategoryForm: false,\r\n\tshowQuestionForm: false,\r\n\tcategoryOptions: [],\r\n\tloading: false,\r\n\tformMode: 'display',\r\n\tcategoryIdEditing: -1,\r\n\tisDetail: false\r\n};\r\n\r\nconst storeToStorage: string[] = [\r\n\tQuestionActionTypes.ADD_CATEGORY,\r\n\tQuestionActionTypes.TOGGLE_CATEGORY,\r\n\tQuestionActionTypes.STORE_CATEGORY,\r\n\tQuestionActionTypes.UPDATE_CATEGORY,\r\n\tQuestionActionTypes.REMOVE_CATEGORY\r\n]\r\n\r\nconst aTypesToStore = Object.keys(QuestionActionTypes)\r\n\t.filter(a => storeToStorage.includes(a));\r\n\r\nexport const categoriesReducer: Reducer<ICategoriesState, QuestionActions> = (state, action) => {\r\n\tconst newState = myReducer(state, action);\r\n\tif (aTypesToStore.includes(action.type)) {\r\n\t\tlocalStorage.setItem(SUPPORT_CATEGORIES, JSON.stringify(newState.categories));\r\n\t}\r\n\treturn newState;\r\n}\r\n\r\nconst getQuestions = (categoryId: number, state: ICategoriesState): IQuestion[] => {\r\n\tconst { categoryQuestions } = state;\r\n\tconst categoryState = categoryQuestions.get(categoryId)!;\r\n\treturn categoryState.questions\r\n}\r\n\r\nconst myReducer: Reducer<ICategoriesState, QuestionActions> = (\r\n\tstate = initialCategoriesState,\r\n\taction\r\n) => {\r\n\tswitch (action.type) {\r\n\r\n\t\tcase QuestionActionTypes.LOAD_CATEGORIES: {\r\n\t\t\tconst { categories, categoryQuestions } = action;\r\n\r\n\t\t\tconst categoryOptions = categories.map(g => ({ value: g.categoryId, label: g.title }))\r\n\t\t\tcategoryOptions.unshift({ value: 0, label: 'Unknown' })\r\n\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tcategories,\r\n\t\t\t\tcategoryQuestions,\r\n\t\t\t\tcategoryOptions\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tcase QuestionActionTypes.GET_QUESTION: {\r\n\t\t\tconst { categoryId, questionId } = action;\r\n\t\t\tconst questions = getQuestions(categoryId, state)\r\n\t\t\tconst question = questions.find(q => q.questionId === questionId);\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tcategory: undefined,\r\n\t\t\t\tquestion\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tcase QuestionActionTypes.ADD_QUESTION: {\r\n\t\t\tconst { categoryId } = action;\r\n\t\t\tlet questionId = 0;\r\n\t\t\tif (categoryId !== 0) {\r\n\t\t\t\tconst questions = getQuestions(categoryId, state)\r\n\t\t\t\tquestionId = Math.max(...questions.map(q => q.questionId)) + 1;\r\n\t\t\t}\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tformMode: 'add',\r\n\t\t\t\tcategory: undefined,\r\n\t\t\t\tquestion: {\r\n\t\t\t\t\t...initialQuestion,\r\n\t\t\t\t\tcreatedBy: action.createdBy,\r\n\t\t\t\t\tcategoryId,\r\n\t\t\t\t\tquestionId,\r\n\t\t\t\t\ttext: action.text\r\n\t\t\t\t},\r\n\t\t\t\tshowCategoryForm: false\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tcase QuestionActionTypes.EDIT_QUESTION: {\r\n\t\t\tconst { categoryId, questionId, showQuestionForm } = action;\r\n\t\t\tconst questions = getQuestions(categoryId, state)\r\n\t\t\tconst question = questions.find(q => q.questionId === questionId)!;\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tformMode: 'edit',\r\n\t\t\t\tquestion,\r\n\t\t\t\tquestionCopy: { ...question },\r\n\t\t\t\tshowCategoryForm: false,\r\n\t\t\t\tshowQuestionForm\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tcase QuestionActionTypes.STORE_QUESTION: {\r\n\t\t\tconst { question } = action;\r\n\t\t\tconst { categoryId, questionId } = question;\r\n\t\t\tconst { categoryQuestions } = reduceQuestions(state.categoryQuestions, action, categoryId);\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tformMode: 'edit',\r\n\t\t\t\tcategoryQuestions\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tcase QuestionActionTypes.UPDATE_QUESTION: {\r\n\t\t\tlet { questionCopy } = state;\r\n\t\t\tconst { categoryId, questionId, categoryIdWas } = action.question; // comes from other user update\r\n\t\t\tconst categoryIdCopy = categoryIdWas ? categoryIdWas : questionCopy!.categoryId;\r\n\t\t\tif (action.question.categoryId === categoryIdCopy) {\r\n\t\t\t\t// category hasn't been changed\r\n\t\t\t\tconst { categoryQuestions, question } = reduceQuestions(state.categoryQuestions, action, categoryId, questionId);\r\n\t\t\t\treturn {\r\n\t\t\t\t\t...state,\r\n\t\t\t\t\tcategoryQuestions,\r\n\t\t\t\t\tformMode: 'edit',\r\n\t\t\t\t\tquestion\r\n\t\t\t\t};\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\t// assing question to another group\r\n\t\t\t\t// 1) remove question from old category\r\n\t\t\t\tlet { categoryQuestions } = reduceQuestions(state.categoryQuestions, {\r\n\t\t\t\t\t...action,\r\n\t\t\t\t\ttype: QuestionActionTypes.REMOVE_QUESTION,\r\n\t\t\t\t\tcategoryId: categoryIdCopy,\r\n\t\t\t\t\tquestionId\r\n\t\t\t\t}, categoryIdCopy);\r\n\t\t\t\t// 2) add question  to new category\r\n\t\t\t\tcategoryQuestions = reduceQuestions(categoryQuestions, {\r\n\t\t\t\t\t...action,\r\n\t\t\t\t\ttype: QuestionActionTypes.STORE_QUESTION\r\n\t\t\t\t}, categoryId).categoryQuestions;\r\n\t\t\t\t//\r\n\t\t\t\treturn {\r\n\t\t\t\t\t...state,\r\n\t\t\t\t\tcategoryQuestions,\r\n\t\t\t\t\tformMode: 'edit'\r\n\t\t\t\t};\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tcase QuestionActionTypes.CANCEL_QUESTION: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tformMode: 'display',\r\n\t\t\t\tquestion: undefined,\r\n\t\t\t\tshowQuestionForm: false\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tcase QuestionActionTypes.REMOVE_QUESTION: {\r\n\t\t\tconst { categoryId } = action;\r\n\t\t\tconst { categoryQuestions } = reduceQuestions(state.categoryQuestions, action, categoryId);\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tcategoryQuestions,\r\n\t\t\t\tformMode: 'display',\r\n\t\t\t\tquestion: undefined\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\t\r\n\r\n\t\t// Question answers\r\n\t\tcase QuestionActionTypes.REMOVE_QUESTION_ANSWER: {\r\n\t\t\tconst { categoryId, questionId } = action;\r\n\t\t\tconst { categoryQuestions, question } = reduceQuestions(state.categoryQuestions, action, categoryId, questionId);\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tcategoryQuestions,\r\n\t\t\t\tquestion\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tcase QuestionActionTypes.ASSIGN_QUESTION_ANSWER: {\r\n\t\t\tconst { categoryId, questionId } = action;\r\n\t\t\tconst { categoryQuestions, question } = reduceQuestions(state.categoryQuestions, action, categoryId, questionId);\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tcategoryQuestions,\r\n\t\t\t\tquestion\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tcase QuestionActionTypes.SET_IS_DETAIL: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tisDetail: action.isDetail\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tcase QuestionActionTypes.CLOSE_QUESTION_FORM: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tshowQuestionForm: false\r\n\t\t\t}\r\n\t\t}\r\n\t\tcase QuestionActionTypes.OPEN_QUESTION_FORM: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tshowQuestionForm: true\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t///////////////////////////////////////////////////////////////////////////////////\r\n\t\t// groups\r\n\t\tcase QuestionActionTypes.GET_CATEGORY: {\r\n\t\t\tconst { categoryId, showCategoryForm } = action;\r\n\t\t\t//const questions = getQuestions(categoryId, state)\r\n\t\t\t//const question = questions.find(q => q.questionId === questionId);\r\n\t\t\tconst category = state.categories.find(g => g.categoryId === categoryId);\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tcategory,\r\n\t\t\t\tquestion: undefined,\r\n\t\t\t\tshowCategoryForm,\r\n\t\t\t\tshowQuestionForm: false\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tcase QuestionActionTypes.ADD_CATEGORY: {\r\n\t\t\t// const group =  state.categories.find(g => g.categoryId === action.categoryId);\r\n\t\t\tconst { categoryQuestions } = state;\r\n\t\t\tconst { showCategoryForm } = action;\r\n\t\t\tlet categoryId = Math.max(...state.categories.map(g => g.categoryId)) + 1;\r\n\t\t\tconst categoryState: ICategoryState = {\r\n\t\t\t\tquestions: []\r\n\t\t\t}\r\n\t\t\tcategoryQuestions.set(categoryId, categoryState)\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tformMode: 'add',\r\n\t\t\t\tcategoryIdEditing: categoryId,\r\n\t\t\t\tcategory: { \r\n\t\t\t\t\t...initialCategory,\r\n\t\t\t\t\ttitle: \"New Category\",\r\n\t\t\t\t\tcategoryId \r\n\t\t\t\t},\r\n\t\t\t\tquestion: undefined,\r\n\t\t\t\tshowCategoryForm,\r\n\t\t\t\tshowQuestionForm: false\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tcase QuestionActionTypes.TOGGLE_CATEGORY: {\r\n\t\t\tconst group = state.categories.find(g => g.categoryId === action.categoryId);\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tcategories: state.categories.map(g => g.categoryId !== action.categoryId\r\n\t\t\t\t\t? g\r\n\t\t\t\t\t: { ...g, isExpanded: !g.isExpanded }\r\n\t\t\t\t)\r\n\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tcase QuestionActionTypes.EDIT_CATEGORY: {\r\n\t\t\tconst { categories } = state;\r\n\t\t\tconst { categoryId, showCategoryForm } = action;\r\n\t\t\tconst category = categories.find(g => g.categoryId === categoryId)!\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tcategory,\r\n\t\t\t\tformMode: 'edit',\r\n\t\t\t\tcategoryCopy: { ...category },\r\n\t\t\t\tcategoryIdEditing: category.categoryId,\r\n\t\t\t\tshowCategoryForm,\r\n\t\t\t\tshowQuestionForm: false\r\n\t\t\t\t//,category for now lets keep inline editing\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tcase QuestionActionTypes.STORE_CATEGORY: {\r\n\t\t\t// const group = state.categories.find(g => g.categoryId === action.question.categoryId);\r\n\t\t\tconst { category } = action;\r\n\t\t\tconst { categoryQuestions } = state;\r\n\t\t\tconst categoryState: ICategoryState = {\r\n\t\t\t\tquestions: [] //...category.questions]\r\n\t\t\t}\r\n\t\t\tcategoryQuestions.set(category.categoryId, categoryState)\r\n\t\t\tcategory.questions = [];\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tformMode: 'edit',\r\n\t\t\t\tcategoryIdEditing: -1,\r\n\t\t\t\tcategories: [...state.categories, category],\r\n\t\t\t\tcategoryQuestions\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tcase QuestionActionTypes.UPDATE_CATEGORY: {\r\n\t\t\t// const group = state.categories.find(g => g.categoryId === action.question.categoryId);\r\n\t\t\tconst { category } = action;\r\n\t\t\tconst { categoryId, title } = category;\r\n\t\t\tlet { categoryCopy } = state;\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tcategoryIdEditing: -1,\r\n\t\t\t\tcategories: state.categories.map(g => g.categoryId !== categoryId\r\n\t\t\t\t\t? g\r\n\t\t\t\t\t: { ...g, title }\r\n\t\t\t\t)\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tcase QuestionActionTypes.CANCEL_CATEGORY: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tformMode: 'display',\r\n\t\t\t\tcategory: undefined\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tcase QuestionActionTypes.REMOVE_CATEGORY: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tcategories: state.categories.reduce((acc: ICategory[], g) => {\r\n\t\t\t\t\tif (g.categoryId !== action.categoryId)\r\n\t\t\t\t\t\tacc.push({ ...g, questions: [...g.questions] })\r\n\t\t\t\t\treturn acc\r\n\t\t\t\t}, [])\r\n\t\t\t};\r\n\t\t}\r\n\r\n\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n};\r\n\r\n","// Import Reducer type\r\nimport { Reducer } from 'redux';\r\nimport {\r\n\tAnswerActions,\r\n\tAnswerActionTypes,\r\n\tSUPPORT_ANSWERS\r\n} from './actions';\r\n\r\nimport { IAnswer, IAnswerState } from './types'\r\n\r\nconst initialAnswer: IAnswer = {\r\n\tanswerId: 0,\r\n\ttext: '',\r\n\twords: [],\r\n\toptions: [],\r\n\tcreatedBy: 0,\r\n\tcreated: new Date()\r\n};\r\n\r\nconst initialAnswerState: IAnswerState = {\r\n\tanswers: [],\r\n\tanswer: undefined,\r\n\tloading: false,\r\n\tformMode: 'display'\r\n};\r\n\r\nconst aTypesToStore = Object.keys(AnswerActionTypes).filter(a => a !== AnswerActionTypes.GET_ALL_ANSWERS);\r\n\r\nexport const answerReducer: Reducer<IAnswerState, AnswerActions> = (state, action) => {\r\n\tconst newState = myReducer(state, action);\r\n\tif (aTypesToStore.includes(action.type)) {\r\n\t\tlocalStorage.setItem(SUPPORT_ANSWERS, JSON.stringify(newState.answers));\r\n\t}\r\n\treturn newState;\r\n}\r\n\r\nconst myReducer: Reducer<IAnswerState, AnswerActions> = (\r\n\tstate = initialAnswerState,\r\n\taction\r\n) => {\r\n\tswitch (action.type) {\r\n\r\n\t\tcase AnswerActionTypes.GET_ALL_ANSWERS: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tanswers: action.answers.map(answer => { return { \r\n\t\t\t\t\t...answer,\r\n\t\t\t\t\twords: answer.text.split(' ') \r\n\t\t\t\t} }),\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tcase AnswerActionTypes.GET_ANSWER: {\r\n\t\t\tconst answer = state.answers.find(a => a.answerId === action.answerId);\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tanswer\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tcase AnswerActionTypes.ADD_ANSWER: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tformMode: 'add',\r\n\t\t\t\tanswer: {\r\n\t\t\t\t\t...initialAnswer,\r\n\t\t\t\t\tcreatedBy: action.createdBy,\r\n\t\t\t\t\tanswerId: state.answers.length === 0 \r\n\t\t\t\t\t\t? 1\r\n\t\t\t\t\t\t: Math.max(...state.answers.map(a => a.answerId)) + 1\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tcase AnswerActionTypes.EDIT_ANSWER: {\r\n\t\t\tconst answer = state.answers.find(a => a.answerId === action.answerId);\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tformMode: 'edit',\r\n\t\t\t\tanswer: { ...answer!, words: answer!.text.split(' ') }\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tcase AnswerActionTypes.STORE_ANSWER: {\r\n\t\t\tconst { answer } = action;\r\n\t\t\tlet { answerId } = answer!;\r\n\t\t\tlet answers = [];\r\n\t\t\tif (state.formMode === 'add') {\r\n\t\t\t\tif (answerId === -1) {\r\n\t\t\t\t\tanswer.answerId = state.answers.length === 0\r\n\t\t\t\t\t\t? 1\r\n\t\t\t\t\t\t: Math.max(...state.answers.map(a => a.answerId)) + 1;\r\n\t\t\t\t}\r\n\t\t\t\tanswers = [...state.answers, { ...answer, words: answer.text.split(' ') }]\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tanswers = state.answers.map(a => a.answerId === answerId\r\n\t\t\t\t\t? { ...answer, words: answer.text.split(' ') }\r\n\t\t\t\t\t: a)\r\n\t\t\t}\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tformMode: 'edit',\r\n\t\t\t\tanswers,\r\n\t\t\t\tanswer\r\n\t\t\t};\r\n\t\t}\t\r\n\r\n\t\tcase AnswerActionTypes.CANCEL_ANSWER: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tformMode: 'display'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tcase AnswerActionTypes.REMOVE_ANSWER: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tformMode: 'display',\r\n\t\t\t\tanswers: state.answers.filter(a => a.answerId !== action.answerId)\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\t// case AnswerActionTypes.STORE_ANSWERS_TO_LOCAL_STORAGE: {\r\n\t\t// \tlocalStorage.setItem(SUPPORT_ANSWERS, JSON.stringify(state.answers));\r\n\t\t// \treturn state;\r\n\t\t// }   \t\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n};","// Import redux types\r\nimport { ActionCreator, Dispatch } from 'redux';\r\nimport { ThunkAction } from 'redux-thunk';\r\n// Import Tag Typing\r\nimport { ITag, ITagState } from './types';\r\nimport data from \"./data.json\"\r\nconst storageTagsDemo: ITag[] = data;\r\n\r\n// Create Action Constants\r\nexport enum TagActionTypes {\r\n\tGET_ALL_TAGS = 'GET_ALL_TAGS',\r\n  \tGET_TAG = 'GET_TAG'\r\n}\r\n\r\n// Interface for Get All Action Type\r\nexport interface IGetAll {\r\n\ttype: TagActionTypes.GET_ALL_TAGS;\r\n\ttags: ITag[];\r\n }\r\n \r\nexport interface IGet {\r\n\ttype: TagActionTypes.GET_TAG;\r\n\ttag: ITag;\r\n}\r\n\r\n// localStorage\r\nexport const SUPPORT_TAGS = 'SUPPORT_TAGS' \r\nconst storageTags: ITag[] = [\r\n]\r\n\r\n\r\n// Combine the action types with a union (we assume there are more)\r\nexport type TagActions = IGetAll | IGet;\r\n\r\nconst isWebStorageSupported = () => 'localStorage' in window\r\n\r\n// Get All Action <Promise<Return Type>, State Interface, Type of Param, Type of Action>\r\nexport const getAllTags: ActionCreator<\r\n  ThunkAction<Promise<any>, ITagState, null, IGetAll>\r\n> = () => {\r\n  return async (dispatch: Dispatch) => {\r\n    try {\r\n\t\t// const response = await axios.get('https://swapi.co/api/people/');\r\n\t\tif (isWebStorageSupported()) {\r\n\t\t\tconst sTags = localStorage.getItem(SUPPORT_TAGS);\r\n\t\t\tif (sTags !== null) {\r\n\t\t\t\tconst Tags: ITag[] = JSON.parse(sTags);\r\n\t\t\t\tTags.map(g => storageTags.push(g))\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tstorageTagsDemo.map(g => storageTags.push(g))\t\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {\r\n\t\t\tstorageTagsDemo.map(g => storageTags.push(g))\r\n\t\t}\r\n\r\n\t\t//const response = await getTagsFromLocalStorage(); \r\n      dispatch({\r\n        type: TagActionTypes.GET_ALL_TAGS,\r\n        tags: storageTags //response.data.results,\r\n      });\r\n    } catch (err) {\r\n      console.error(err);\r\n    }\r\n  };\r\n};\r\n\r\n\r\n\r\n\r\n","// Import Reducer type\r\nimport { Reducer } from 'redux';\r\n\r\nimport {\r\n\tUserActions,\r\n\tUserActionTypes\r\n} from './actions';\r\n\r\nimport { IUser, IRole, IUsersState } from './types'\r\n\r\nexport const SUPPORT_USERS = 'SUPPORT_USERS';\r\n\r\nexport const initialUser: IUser = {\r\n\troleId: 0,\r\n\tuserId: 0,\r\n\tuserName: '',\r\n\tpwd: '',\r\n\tdepartment: 'neki',\r\n\tcreatedBy: 0,\r\n\tcreated: new Date(),\r\n};\r\n\r\nexport const initialUserRole: IRole = {\r\n\troleId: 0,\r\n\ttitle: '',\r\n\tcolor: 'lightgreen',\r\n\tusers: [],\r\n\tisExpanded: false,\r\n\tcreatedBy: 0,\r\n\tcreated: new Date()\r\n};\r\n\r\n\r\n// Define the initial state\r\nexport const initialUsersState: IUsersState = {\r\n\troles: [],\r\n\tuserEditing: undefined,\r\n\tallUsers: [],\r\n\troleOptions: [],\r\n\tuserOptions: [],\r\n\tloading: false,\r\n\tformMode: 'display',\r\n\troleIdEditing: -1,\r\n\townerUserId: 101\r\n};\r\n\r\n\r\n/*\r\nconst getUser = (\r\n\t\t\troles: IRole[], \r\n\t\t\troleId: number, \r\n\t\t\tuserId: number) : IUser|undefined => {\r\n\tconst group = roles.find(g => g.roleId === roleId)\r\n\tif (!group)\r\n\t\treturn undefined;\r\n\r\n\tconst user = group\r\n\t\t\t\t\t\t\t.users\r\n\t\t\t\t\t\t\t.find(q => q.userId === userId);\r\n\treturn user;\r\n}\r\n*/\r\n\r\n\r\nconst aTypesToStore = Object.keys(UserActionTypes)\r\n\t.filter(a => a !== UserActionTypes.GET_ALL_USERS);\r\n\r\nexport const userReducer: Reducer<IUsersState, UserActions> = (state, action) => {\r\n\tconst newState = myReducer(state, action);\r\n\tif (aTypesToStore.includes(action.type)) {\r\n\t\tlocalStorage.setItem(SUPPORT_USERS, JSON.stringify(newState.roles));\r\n\t}\r\n\treturn newState;\r\n}\r\n\r\nconst myReducer: Reducer<IUsersState, UserActions> = (\r\n\tstate = initialUsersState,\r\n\taction\r\n) => {\r\n\tswitch (action.type) {\r\n\r\n\t\tcase UserActionTypes.GET_ALL_USERS: {\r\n\t\t\tconst { roles } = action;\r\n\t\t\tconsole.log('roles', roles)\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\troles\r\n\t\t\t};\r\n\t\t}\r\n\t\t//roleOptions: roles.map(g => ({ label: g.title, value: g.roleId })),\r\n\t\t//userOptions: allUsers.map(user => ({ label: user.name, value: user.userId }))\r\n\r\n\t\tcase UserActionTypes.CREATE_OPTIONS: {\r\n\t\t\tconst {roles} = state;\r\n\t\t\tlet allUsers: IUser[] = [];\r\n\t\t\troles.map(g => {\r\n\t\t\t\t//console.log('g', g)\r\n\t\t\t\tallUsers = allUsers.concat(g.users)\r\n\t\t\t});\r\n\t\t\tconsole.log('allUsers', allUsers)\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tallUsers,\r\n\t\t\t\troleOptions: roles.map(g => ({ label: g.title, value: g.roleId })),\r\n\t\t\t\tuserOptions: allUsers.map(user => ({ label: user.userName, value: user.userId }))\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tcase UserActionTypes.GET_USER: {\r\n\t\t\tlet user = undefined;\r\n\t\t\tfor (let role of state.roles) {\r\n\t\t\t\tuser = role.users\r\n\t\t\t\t\t.find(user => user.userId === action.userId);\r\n\t\t\t\tif (user)\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tuserEditing: user\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tcase UserActionTypes.ADD_USER: {\r\n\t\t\tlet userIdMax = 0;\r\n\t\t\tfor (let role of state.roles) {\r\n\t\t\t\tfor (let user of role.users) \r\n\t\t\t\t\tif (user.userId > userIdMax)\r\n\t\t\t\t\t\tuserIdMax = user.userId\r\n\t\t\t}\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tformMode: 'add',\r\n\t\t\t\tuserEditing: { \r\n\t\t\t\t\t...initialUser, \r\n\t\t\t\t\tcreatedBy: action.createdBy,\r\n\t\t\t\t\troleId: action.roleId, \r\n\t\t\t\t\tuserId: userIdMax + 1,\r\n\t\t\t\t\ttext: action.text\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tcase UserActionTypes.EDIT_USER: {\r\n\t\t\tconst userRole = state.roles.find(g => g.roleId === action.roleId);\r\n\t\t\tconst user = userRole!.users\r\n\t\t\t\t.find(user => user.userId === action.userId);\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tformMode: 'edit',\r\n\t\t\t\tuserEditing: user\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tcase UserActionTypes.STORE_USER: {\r\n\t\t\tconst { user, formMode } = action;\r\n\t\t\tif (formMode === 'add') { // state.formMode\r\n\t\t\t\tconsole.log(' UserActionTypes.STORE_USER user', user)\r\n\t\t\t\tif (user.roleId === 0 && !state.roles.map(g => g.roleId).includes(0)) {\r\n\t\t\t\t\tconsole.log('unisao')\r\n\t\t\t\t\t// do something\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\t...state,\r\n\t\t\t\t\t\tformMode: 'edit',\r\n\t\t\t\t\t\troles: [\r\n\t\t\t\t\t\t\t...state.roles,\r\n\t\t\t\t\t\t\t{ \r\n\t\t\t\t\t\t\t\t...initialUserRole, \r\n\t\t\t\t\t\t\t\troleId: 0,\r\n\t\t\t\t\t\t\t\ttitle: 'Unknown',\r\n\t\t\t\t\t\t\t\tusers: [user]\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t]\r\n\t\t\t\t\t};\r\n\t\t\t\t}\r\n\t\t\t\treturn {\r\n\t\t\t\t\t...state,\r\n\t\t\t\t\tformMode: 'edit',\r\n\t\t\t\t\troles: state.roles.map(g => g.roleId !== user.roleId ?\r\n\t\t\t\t\t\t{ ...g, users: [...g.users] }\r\n\t\t\t\t\t\t:\r\n\t\t\t\t\t\t{ ...g, users: [...g.users, { ...user }] }\r\n\t\t\t\t\t)\r\n\t\t\t\t};\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tconst { roles } = state;\r\n\t\t\t\tconst {user} = action;\r\n\t\t\t\tconst userId: number = user.roleId;\r\n\t\t\t\tconst g = roles.find(g => g.roleId === user.roleId);\r\n\t\t\t\tconst q = g!.users.find(q => q.userId === user.userId);\r\n\t\t\t\tif (q) { // change user\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\t...state,\r\n\t\t\t\t\t\tformMode: 'edit',\r\n\t\t\t\t\t\troles: roles.map(g => g.roleId !== user.roleId\r\n\t\t\t\t\t\t\t? { ...g, users: [...g.users]\t}\r\n\t\t\t\t\t\t\t: {\r\n\t\t\t\t\t\t\t\t...g, \r\n\t\t\t\t\t\t\t\tusers: g.users\r\n\t\t\t\t\t\t\t\t\t.map(q => q.userId !== user.userId ?\r\n\t\t\t\t\t\t\t\t\t\tq : { ...user }\r\n\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t};\r\n\t\t\t\t}\r\n\t\t\t\telse { // assing user to another group\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\t...state,\r\n\t\t\t\t\t\tformMode: 'edit',\r\n\t\t\t\t\t\troles: roles.map(g => g.roleId !== user.roleId\r\n\t\t\t\t\t\t\t? { ...g, users: [...g.users.filter(q=> q.userId !== user.userId)]\t}\r\n\t\t\t\t\t\t\t: {\t...g, users: [...g.users, { ...user } ]\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t};\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tcase UserActionTypes.CANCEL_USER: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tformMode: 'display',\r\n\t\t\t\tuserEdited: undefined\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tcase UserActionTypes.REMOVE_USER: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tformMode: 'display',\r\n\t\t\t\tuserEdited: undefined,\r\n\t\t\t\troles: state.roles.map(g => g.roleId !== action.roleId ?\r\n\t\t\t\t\t{ ...g, users: [...g.users] }\r\n\t\t\t\t\t:\r\n\t\t\t\t\t{ ...g, users: g.users.filter(q => q.userId !== action.userId) }\r\n\t\t\t\t)\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\t///////////////////////////////////////////////////////////////////////////////////\r\n\t\t// groups\r\n\r\n\t\tcase UserActionTypes.ADD_ROLE: {\r\n\t\t\tlet roleId = Math.max(...state.roles.map(g => g.roleId)) + 1\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\troleIdEditing: roleId,\r\n\t\t\t\troles: [...state.roles, { ...initialUserRole, title: \"New Section\", roleId: roleId }]\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tcase UserActionTypes.TOGGLE_ROLE: {\r\n\t\t\tconsole.log(action)\r\n\t\t\tconst group = state.roles.find(g => g.roleId === action.roleId);\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\troles: state.roles.map(g => g.roleId !== action.roleId\r\n\t\t\t\t\t? g\r\n\t\t\t\t\t: { ...g, isExpanded: !g.isExpanded }\r\n\t\t\t\t)\r\n\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tcase UserActionTypes.EDIT_ROLE: {\r\n\t\t\tconst group = state.roles.find(g => g.roleId === action.roleId)\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\troleIdEditing: group!.roleId\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tcase UserActionTypes.STORE_ROLE: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\troleIdEditing: -1,\r\n\t\t\t\troles: state.roles.map(g => g.roleId !== action.group.roleId ?\r\n\t\t\t\t\tg\r\n\t\t\t\t\t:\r\n\t\t\t\t\t{ ...g, title: action.group.title }\r\n\t\t\t\t)\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tcase UserActionTypes.REMOVE_ROLE: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\troles: state.roles.reduce((acc: IRole[], g) => {\r\n\t\t\t\t\tif (g.roleId !== action.roleId)\r\n\t\t\t\t\t\tacc.push({ ...g, users: [...g.users] })\r\n\t\t\t\t\treturn acc\r\n\t\t\t\t}, [])\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n};\r\n\r\n","// Define the User State\r\nimport { IOption } from '../common/types';\r\nimport { IAuth } from '../Top/types';\r\n\r\nexport interface IUser {\r\n\troleId: number,\r\n\tuserId: number,\r\n\tuserName: string;\r\n\tpwd: string,\r\n\tdepartment: string,\r\n\t\tcreatedBy: number,\r\n\t\tcreated: Date\r\n}\r\n\r\nexport interface IUserJson extends Omit<IUser, 'created'> {\r\n\tcreated: string\r\n}\r\n\r\nexport interface IRole {\r\n\troleId: number,\r\n\ttitle: string,\r\n\tcolor: string,\r\n\tusers: IUser[],\r\n\tisExpanded?: boolean,\r\n\tcreatedBy: number,\r\n\tcreated: Date\r\n}\r\n\r\n// Define the User State\r\nexport interface IUsersState {\r\n\treadonly roles: IRole[];\r\n\treadonly userEditing: IUser | undefined;\r\n\tallUsers: IUser[],\r\n\troleOptions: IOption<number>[];\r\n\tuserOptions: IOption<number>[];\r\n\tloading: boolean,\r\n\tformMode: string;\r\n\troleIdEditing: number;\r\n\townerUserId: number;\r\n}\r\n\r\n\r\nexport interface IRoleJson extends Omit<IRole, 'created' | 'users'> {\r\n\tusers: IUserJson[],\r\n\tcreated: string\r\n}\r\n\r\nexport interface IRolesProps {\r\n\twho: IUser, \r\n\troles: IRole[];\r\n\tuserEditing: IUser | undefined;\r\n\tformMode: string,\r\n\troleIdEditing: number,\r\n\tcanEdit: boolean,\r\n\tonSelectUser: (userId: number) => IUser;\r\n\tadd: (roleId: number, text: string, canEdit?: boolean) => void;\r\n\tedit: (roleId: number, userId: number) => void;\r\n\tremove: (roleId: number, userId: number) => void;\r\n\t// roles\r\n\taddRole: () => void;\r\n\ttoggleRole: (roleId: number) => void;\r\n\teditRole: (roleId: number) => void;\r\n\tremoveRole: (removeId: number) => void;\r\n\tstoreRole: (role: IRole) => void;\r\n}\r\n\r\nexport interface IFormProps {\r\n\tauth?: IAuth;\r\n\tuserEditing: IUser | undefined;\r\n\tformMode: string;\r\n\tcanEdit: boolean,\r\n\tcancel: () => void;\r\n\tsaveForm: (user: IUser, formMode: string) => void;\r\n\tsetIsDetail: (isDetail: boolean) => void;\r\n\troleOptions: IOption<number>[];\r\n  }\r\n \r\n  export enum RoleId {\r\n\tOWNER = 11,\r\n\tADMINS = 22,\r\n\tEDITORS = 33,\r\n\tVIEWERS = 44\r\n}\r\n ","// Import Reducer type\r\nimport { Reducer } from 'redux';\r\nimport {\r\n  TagActions,\r\n  TagActionTypes\r\n} from './actions';\r\n\r\nimport {ITag, ITagState } from './types'\r\n\r\nconst initialTag: ITag = {\r\n\ttagId: 0,\r\n\tname: ''\r\n};\r\n\r\nconst initialTagState: ITagState = {\r\n\ttags: [],\r\n\tloading: false,\r\n\tformMode: 'display'\r\n};\r\n\r\n\r\nexport const tagReducer: Reducer<ITagState, TagActions> = (\r\n  state = initialTagState,\r\n  action\r\n) => {\r\n  switch (action.type) {\r\n\r\n   case TagActionTypes.GET_ALL_TAGS: {\r\n\t\treturn {\r\n        ...state,\r\n        tags: action.tags.map(tag => ({...tag}) ),\r\n      };\r\n\t} \r\n\r\n \tcase TagActionTypes.GET_TAG: {\r\n      return {\r\n\t\t  ...state,\r\n        tag: action.tag\r\n      };\r\n\t}    \r\n\r\n\tdefault:\r\n   \t\treturn state;\r\n  }\r\n};"," // Import redux types\r\nimport { ActionCreator, Dispatch } from 'redux';\r\nimport { ThunkAction } from 'redux-thunk';\r\n// Import Top Typing\r\nimport { ILogin, ITop, ITopJson, ITopState } from './types';\r\n\r\nimport { IAppState } from '../store/Store';\r\nimport { IUser, RoleId, IUsersState } from '../Users/types';\r\nimport { findUser, getUser, storeUser, UserActionTypes } from '../Users/actions';\r\nimport { ThemeContext } from '../ThemeContext';\r\nimport { useContext } from 'react';\r\n\r\n// localStorage\r\nexport const SUPPORT_TOP = 'SUPPORT_TOP';\r\n\r\n// Create Action Constants\r\nexport enum TopActionTypes {\r\n\tLOAD_TOP = \"LOAD_TOP\",\r\n\tNAVBAR_TOGGLE = 'NAVBAR_TOGGLE',\r\n\tREGISTER = 'REGISTER',\r\n\tREGISTER_USERNAME_EXISTS = 'REGISTER_USERNAME_EXISTS',\r\n\tAUTHENTICATE = 'AUTHENTICATE',\r\n\tUNAUTHENTICATE = 'UNAUTHENTICATE',\r\n\tAUTHENTICATE_WRONG_USERNAME = 'AUTHENTICATE_WRONG_USERNAME',\r\n\tAUTHENTICATE_WRONG_PWD = 'AUTHENTICATE_WRONG_PWD',\r\n\tCANCEL = 'CANCEL',\r\n\tTOGGLE_MODE = 'TOGGLE_MODE'\r\n}\r\n\r\n\r\nexport interface INavbarToggle {\r\n\ttype: TopActionTypes.NAVBAR_TOGGLE;\r\n}\r\n\r\nexport interface ILoadTop {\r\n\ttype: TopActionTypes.LOAD_TOP;\r\n\ttop: ITop\r\n}\r\n\r\nexport interface IRegister {\r\n\ttype: TopActionTypes.REGISTER;\r\n\tuser: IUser;\r\n}\r\n\r\nexport interface IRegisterUsernameExists {\r\n\ttype: TopActionTypes.REGISTER_USERNAME_EXISTS;\r\n}\r\n\r\nexport interface IAuthenticate {\r\n\ttype: TopActionTypes.AUTHENTICATE;\r\n\tuser: IUser;\r\n}\r\n\r\nexport interface IAuthenticateWrongUsername {\r\n\ttype: TopActionTypes.AUTHENTICATE_WRONG_USERNAME;\r\n}\r\n\r\nexport interface IAuthenticateWrongPwd {\r\n\ttype: TopActionTypes.AUTHENTICATE_WRONG_PWD;\r\n}\r\n\r\nexport interface IUnAuthenticate {\r\n\ttype: TopActionTypes.UNAUTHENTICATE;\r\n}\r\n\r\nexport interface ICancel {\r\n\ttype: TopActionTypes.CANCEL;\r\n}\r\n\r\nexport interface IToggleMode {\r\n\ttype: TopActionTypes.TOGGLE_MODE;\r\n}\r\n\r\n\r\n// Combine the action types with a union (we assume there are more)\r\nexport type TopActions = ILoadTop |\r\n\tINavbarToggle |\r\n\tIRegister |\r\n\tIRegisterUsernameExists |\r\n\tIAuthenticate |\r\n\tIAuthenticateWrongUsername |\r\n\tIAuthenticateWrongPwd |\r\n\tIUnAuthenticate |\r\n\tICancel |\r\n\tIToggleMode;\r\n\r\nconst isWebStorageSupported = () => 'localStorage' in window\r\n\r\nconst parseFromLocalStorage = (json: ITopJson): ITop => {\r\n\treturn parseObj(json);\r\n}\r\n\r\nconst parseObj = (json: ITopJson): ITop => {\r\n\tconst { auth } = json;\r\n\tif (!auth) {\r\n\t\treturn {\r\n\t\t\t...json,\r\n\t\t\tauth: undefined\r\n\t\t}\r\n\t}\r\n\r\n\tconst { who, visited, authenticated } = auth;\r\n\treturn {\r\n\t\t...json,\r\n\t\tauth: !auth ? undefined : {\r\n\t\t\t...auth,\r\n\t\t\twho: {\r\n\t\t\t\t...who,\r\n\t\t\t\tcreated: new Date(who.created!)\r\n\t\t\t},\r\n\t\t\tvisited: new Date(visited),\r\n\t\t\tauthenticated: new Date(authenticated)\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport const loadTop: ActionCreator<\r\n\tThunkAction<Promise<any>, IAppState, null, ILoadTop>\r\n> = () => {\r\n\treturn async (dispatch: Dispatch) => {\r\n\t\ttry {\r\n\t\t\tlet top = undefined;\r\n\r\n\t\t\tif (isWebStorageSupported()) {\r\n\t\t\t\tconst s = localStorage.getItem(SUPPORT_TOP);\r\n\t\t\t\tif (s !== null) {\r\n\t\t\t\t\t//const Users: IUserRole[] = JSON.parse(sUsers);\r\n\t\t\t\t\t//Users.map(g => storageUsers.push(g))\r\n\t\t\t\t\tconst parsed = JSON.parse(s);\r\n\t\t\t\t\tconsole.log('parsed', parsed)\r\n\t\t\t\t\ttop = parseFromLocalStorage(parsed);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (top) {\r\n\t\t\t\tdispatch({\r\n\t\t\t\t\ttype: TopActionTypes.LOAD_TOP,\r\n\t\t\t\t\ttop\r\n\t\t\t\t});\r\n\t\t\t\tif (top.auth && top.auth.who) { // check if date is older then a few months\r\n\t\t\t\t\tdispatch<any>(authenticate(top.auth!.who))\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn top;\r\n\t\t}\r\n\t\tcatch (err) {\r\n\t\t\tconsole.error(err);\r\n\t\t}\r\n\t};\r\n}\r\n\r\n\r\nexport const register: ActionCreator<\r\n\tThunkAction<Promise<any>, IAppState, null, IAuthenticate>\r\n> = (loginUser: ILogin) => {\r\n\treturn async (dispatch: Dispatch, getState: () => IAppState) => {\r\n\t\ttry {\r\n\t\t\tconst { usersState } = getState();\r\n\t\t\tconst { allUsers } = usersState;\r\n\t\t\tdispatch<any>(findUser(loginUser.userName))\r\n\t\t\t\t.then((user: IUser) => {\r\n\t\t\t\t\tif (user) {\r\n\t\t\t\t\t\tdispatch({\r\n\t\t\t\t\t\t\ttype: TopActionTypes.REGISTER_USERNAME_EXISTS\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tlet roleId = RoleId.VIEWERS;\r\n\t\t\t\t\t\tlet userId = 0;\r\n\t\t\t\t\t\tif (allUsers.length === 0) {\r\n\t\t\t\t\t\t\troleId = RoleId.OWNER;\r\n\t\t\t\t\t\t\tuserId = usersState.ownerUserId; // owner userId would be 101\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\tuserId = Math.max(...allUsers.map(u => u.userId)) + 1;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tconst user: IUser = {\r\n\t\t\t\t\t\t\troleId,\r\n\t\t\t\t\t\t\tuserId, \r\n\t\t\t\t\t\t\tuserName: loginUser.userName,\r\n\t\t\t\t\t\t\tpwd: loginUser.pwd,\r\n\t\t\t\t\t\t\tdepartment: \"dept1\",\r\n\t\t\t\t\t\t\tcreatedBy: userId, // registered user is treated as creator\r\n\t\t\t\t\t\t\tcreated: new Date()\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tdispatch<any>(storeUser(user, 'add'))\r\n\t\t\t\t\t\t\t.then((user: IUser) => {\r\n\t\t\t\t\t\t\t\tdispatch({\r\n\t\t\t\t\t\t\t\t\ttype: TopActionTypes.REGISTER,\r\n\t\t\t\t\t\t\t\t\tuser\r\n\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\tdispatch<any>(authenticate(loginUser));\r\n\t\t\t\t\t\t\t\tdispatch({type: UserActionTypes.CREATE_OPTIONS})\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t}\r\n\t\tcatch (err) {\r\n\t\t\tconsole.error(err);\r\n\t\t}\r\n\t};\r\n}\r\n\r\nexport const authenticate: ActionCreator<\r\n\tThunkAction<Promise<any>, IAppState, null, IAuthenticate>\r\n> = (loginUser: ILogin) => {\r\n\treturn async (dispatch: Dispatch, getState: () => IAppState) => {\r\n\t\ttry {\r\n\t\t\tdispatch<any>(await findUser(loginUser.userName))\r\n\t\t\t\t.then((user: IUser) => {\r\n\t\t\t\t\tif (user) {\r\n\t\t\t\t\t\tif (user.pwd === loginUser.pwd) {\r\n\t\t\t\t\t\t\tdispatch({\r\n\t\t\t\t\t\t\t\ttype: TopActionTypes.AUTHENTICATE,\r\n\t\t\t\t\t\t\t\tuser\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\tdispatch({\r\n\t\t\t\t\t\t\t\ttype: TopActionTypes.AUTHENTICATE_WRONG_PWD\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tdispatch({\r\n\t\t\t\t\t\t\ttype: TopActionTypes.AUTHENTICATE_WRONG_USERNAME\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t}\r\n\t\tcatch (err) {\r\n\t\t\tconsole.error(err);\r\n\t\t}\r\n\t};\r\n}\r\n\r\nexport const unAuthenticate: ActionCreator<\r\n\tThunkAction<Promise<any>, IAppState, null, IAuthenticate>\r\n> = () => {\r\n\treturn async (dispatch: Dispatch) => {\r\n\t\ttry {\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: TopActionTypes.UNAUTHENTICATE\r\n\t\t\t});\r\n\t\t}\r\n\t\tcatch (err) {\r\n\t\t\tconsole.error(err);\r\n\t\t}\r\n\t};\r\n}\r\n\r\nexport const cancelLogin: ActionCreator<any> = () => {\r\n\treturn (dispatch: Dispatch) => {\r\n\t\ttry {\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: TopActionTypes.CANCEL\r\n\t\t\t});\r\n\t\t} catch (err) {\r\n\t\t\tconsole.error(err);\r\n\t\t}\r\n\t};\r\n};\r\n\r\n\r\nexport const toggleMode: ActionCreator<any> = () => {\r\n\treturn (dispatch: Dispatch) => {\r\n\t\ttry {\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: TopActionTypes.TOGGLE_MODE\r\n\t\t\t});\r\n\t\t} catch (err) {\r\n\t\t\tconsole.error(err);\r\n\t\t}\r\n\t};\r\n};\r\n\r\n\r\nexport const navbarToggle: ActionCreator<any> = () => {\r\n\treturn (dispatch: Dispatch) => {\r\n\t\ttry {\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: TopActionTypes.NAVBAR_TOGGLE\r\n\t\t\t});\r\n\t\t}\r\n\t\tcatch (err) {\r\n\t\t\tconsole.error(err);\r\n\t\t}\r\n\t};\r\n};\r\n\r\n/*\r\nexport function checkAuthentication() {\r\n\treturn async (dispatch: Dispatch) => {\r\n\t  const auth = await window.localStorage.getItem(\"authenticated\");\r\n\t  const formattedAuth = typeof auth === \"string\" ?\r\n\t\tJSON.parse(auth) :\r\n\t\tnull;\r\n  \r\n\t  formattedAuth ? dispatch(authenticate()) : dispatch(unauthenticate());\r\n\t};\r\n  }\r\n*/","// Import Reducer type\r\nimport { Reducer } from 'redux';\r\nimport {\r\n\tSUPPORT_TOP, TopActions, TopActionTypes\r\n} from './actions';\r\nimport { ITop, ITopState } from './types';\r\n\r\nconst initialTop: ITop = {\r\n\tnavbarOpen: true,\r\n\tisAuthenticated: null,\r\n\tuuid: null,\r\n\tdarkMode: true\r\n};\r\n\r\nconst initialTopState: ITopState = {\r\n\ttop: initialTop\r\n};\r\n\r\nconst aTypesToStore = Object.keys(TopActionTypes).filter(a => a !== TopActionTypes.LOAD_TOP);\r\n\r\nexport const topReducer: Reducer<ITopState, TopActions> = (state, action) => {\r\n\tconst newState = myReducer(state, action);\r\n\tif (aTypesToStore.includes(action.type)) {\r\n\t\tlocalStorage.setItem(SUPPORT_TOP, JSON.stringify(newState.top));\r\n\t}\r\n\treturn newState;\r\n}\r\n\r\nconst myReducer: Reducer<ITopState, TopActions> = (\r\n\tstate = initialTopState,\r\n\taction\r\n) => {\r\n\tswitch (action.type) {\r\n\r\n\t\tcase TopActionTypes.LOAD_TOP: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\ttop: { \r\n\t\t\t\t\t...action.top, \r\n\t\t\t\t\tauthError: ''\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tcase TopActionTypes.REGISTER: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\ttop: {\r\n\t\t\t\t\tnavbarOpen: true,\r\n\t\t\t\t\tisAuthenticated: true,\r\n\t\t\t\t\tuuid: \"placeholder-uuid\",\r\n\t\t\t\t\tauth: {\r\n\t\t\t\t\t\twho: action.user,\r\n\t\t\t\t\t\tauthenticated: new Date(),\r\n\t\t\t\t\t\tvisited: new Date()\r\n\t\t\t\t\t},\r\n\t\t\t\t\tdarkMode: false\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tcase TopActionTypes.REGISTER_USERNAME_EXISTS: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\ttop: {\r\n\t\t\t\t\t...state.top,\r\n\t\t\t\t\tauthError: \"Username already exists, please chose another!\"\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t}\t\t\r\n\r\n\t\tcase TopActionTypes.NAVBAR_TOGGLE: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\ttop: {\r\n\t\t\t\t\t...state.top,\r\n\t\t\t\t\tnavbarOpen: !state.top.navbarOpen\t\t\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t}\t\r\n\r\n\t\tcase TopActionTypes.TOGGLE_MODE: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\ttop: {\r\n\t\t\t\t\t...state.top,\r\n\t\t\t\t\tdarkMode: !state.top.darkMode\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t}\t\r\n\r\n\t\tcase TopActionTypes.AUTHENTICATE: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\ttop: {\r\n\t\t\t\t\t...state.top,\r\n\t\t\t\t\tnavbarOpen: true,\r\n\t\t\t\t\tisAuthenticated: true,\r\n\t\t\t\t\tuuid: \"placeholder-uuid\",\r\n\t\t\t\t\tauth: {\r\n\t\t\t\t\t\twho: action.user,\r\n\t\t\t\t\t\tauthenticated: new Date(),\r\n\t\t\t\t\t\tvisited: new Date()\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tcase TopActionTypes.UNAUTHENTICATE: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\ttop: {\r\n\t\t\t\t\t...state.top,\r\n\t\t\t\t\tisAuthenticated: false,\r\n\t\t\t\t\tauth: undefined\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tcase TopActionTypes.AUTHENTICATE_WRONG_USERNAME: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\ttop: {\r\n\t\t\t\t\t...state.top,\r\n\t\t\t\t\tauthError: \"User doesn't exist!\"\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tcase TopActionTypes.AUTHENTICATE_WRONG_PWD: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\ttop: {\r\n\t\t\t\t\t...state.top,\r\n\t\t\t\t\tauthError: \"Password doesn't match!\"\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t}\r\n\r\n\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n};","import { applyMiddleware, combineReducers, createStore, Store } from 'redux';\r\nimport thunk from 'redux-thunk';\r\n\r\nimport { categoriesReducer } from '../Categories/categoriesReducer';\r\nimport { answerReducer } from '../Answers/reducer';\r\n\r\nimport { IAnswerState } from '../Answers/types';\r\nimport { ICategoriesState } from '../Categories/types';\r\nimport { IUsersState } from '../Users/types';\r\nimport { userReducer } from '../Users/reducer';\r\nimport { ITagState } from '../roleTags/types';\r\nimport { tagReducer } from '../roleTags/reducer';\r\nimport { ITopState } from '../Top/types';\r\nimport { topReducer } from '../Top/reducer';\r\n\r\nexport interface IAppState {\r\n  categoriesState: ICategoriesState;\r\n  answerState: IAnswerState;\r\n  usersState: IUsersState;\r\n  tagState: ITagState;\r\n  topState: ITopState;\r\n}\r\n\r\n// Create the root reducer\r\nconst rootReducer = combineReducers<IAppState>({\r\n  categoriesState: categoriesReducer,\r\n  answerState: answerReducer,\r\n  usersState: userReducer,\r\n  tagState: tagReducer,\r\n  topState: topReducer\r\n});\r\n\r\n// Create a configure store function of type `IAppState`\r\nexport default function configureStore(): Store<IAppState, any> {\r\n  const store = createStore(rootReducer, undefined, applyMiddleware(thunk));\r\n  return store;\r\n}","import { connect, Provider } from 'react-redux';\r\nimport { createContext, useReducer } from \"react\";\r\nimport { IAppState } from './store/Store';\r\n\r\nexport interface IThemeState {\r\n  darkMode: boolean,\r\n  variant?: string,\r\n  bg: string\r\n}\r\n\r\nenum ThemeActionKind {\r\n  LIGHTMODE = 'LIGHTMODE',\r\n  DARKMODE = 'DARKMODE',\r\n}\r\n\r\n// An interface for our actions\r\ninterface IThemeAction {\r\n  type: ThemeActionKind;\r\n}\r\n\r\nconst initialState = {\r\n  darkMode: false,\r\n  variant: 'light',\r\n  bg: 'light'\r\n};\r\n\r\nexport const ThemeContext = createContext<{ state: IThemeState; dispatch: React.Dispatch<any> }>({\r\n  state: initialState,\r\n  dispatch: () => null\r\n});\r\n\r\n\r\nconst themeReducer = (state: IThemeState, action: IThemeAction) => {\r\n  switch (action.type) {\r\n    case \"LIGHTMODE\":\r\n      return { ...state, darkMode: false, variant: 'light', bg: 'light' };\r\n    case \"DARKMODE\":\r\n      return { ...state, darkMode: true, variant: 'dark', bg: 'dark' };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport function ThemeProvider(props: { children: React.ReactNode, darkMode: boolean })\r\n{\r\n  const initState = {\r\n    ...initialState, \r\n    darkMode: props.darkMode,\r\n    variant: props.darkMode? 'dark' : 'light',\r\n    bg: props.darkMode? 'dark' : 'light'\r\n  }\r\n\r\n  const [state, dispatch] = useReducer(themeReducer, initState);\r\n  return <ThemeContext.Provider value={{ state, dispatch }}>\r\n    {props.children}\r\n  </ThemeContext.Provider>;\r\n}\r\n\r\n","import * as React from 'react';\r\nimport { createRef, forwardRef } from 'react'\r\n\r\nimport Autosuggest from 'react-autosuggest';\r\nimport AutosuggestHighlightMatch from \"autosuggest-highlight/match\";\r\nimport AutosuggestHighlightParse from \"autosuggest-highlight/parse\";\r\n\r\nimport { IQuestion, ICategory, ICategoryState } from '../Categories/types'\r\nimport './AutoSuggest.css'\r\n\r\n// https://developer.mozilla.org/en/docs/Web/JavaScript/Guide/Regular_Expression\r\n// s#Using_Special_Characters\r\nfunction escapeRegexCharacters(str: string): string {\r\n\treturn str.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&');\r\n}\r\n\r\n\r\nlet inputAutosuggest = createRef<HTMLInputElement>();\r\n\r\nconst QuestionAutosuggestMulti = Autosuggest as { new(): Autosuggest<IQuestion, ICategory> };\r\n\r\nexport class AutoSuggest extends React.Component<{\r\n\tcategories: ICategory[],\r\n\tcategoryQuestions: Map<number, ICategoryState>,\r\n\ttekst: string | undefined,\r\n\tonSelectQuestion: (categoryId: number, questionId: number) => void\r\n}, any\r\n> {\r\n\t// region Fields\r\n\r\n\tstate: any;\r\n\t//inputAutosuggest: React.RefObject<HTMLInputElement>;\r\n\t// endregion region Constructor\r\n\tconstructor(props: any) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tvalue: props.tekst || '',\r\n\t\t\tsuggestions: this.getSuggestions(''),\r\n\t\t\thighlighted: ''\r\n\t\t};\r\n\t\t//this.inputAutosuggest = createRef<HTMLInputElement>();\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\r\n\t\tsetTimeout(() => {\r\n\t\t\t//inputAutosuggest!.current!.focus();\r\n\t\t\tsetTimeout(() => {\r\n\t\t\t\twindow.focus()\r\n\t\t\t\tinputAutosuggest!.current!.focus();\r\n\t\t\t}, 500)\r\n\r\n\t\t}, 100)\r\n\r\n\t\t// console.log('componentDidMount', document)\r\n\t\t// console.log(document?.getElementById('inputAutoSuggest'))\r\n\t\t//document?.getElementById('inputAutoSuggest')?.focus(); \r\n\t}\r\n\r\n\t// endregion region Rendering methods\r\n\trender(): JSX.Element {\r\n\t\tconst { value, suggestions } = this.state;\r\n\r\n\t\treturn <QuestionAutosuggestMulti\r\n\t\t\tonSuggestionsClearRequested={this.onSuggestionsClearRequested}  // (sl) added\r\n\t\t\tmultiSection={true}\r\n\t\t\tsuggestions={suggestions}\r\n\t\t\tonSuggestionsFetchRequested={this.onSuggestionsFetchRequested.bind(this)}\r\n\t\t\tonSuggestionSelected={this.onSuggestionSelected.bind(this)}\r\n\t\t\tgetSuggestionValue={this.getSuggestionValue}\r\n\t\t\trenderSuggestion={this.renderSuggestion}\r\n\t\t\trenderSectionTitle={this.renderSectionTitle}\r\n\t\t\tgetSectionSuggestions={this.getSectionSuggestions}\r\n\t\t\t// onSuggestionHighlighted={this.onSuggestionHighlighted} (sl)\r\n\t\t\tonSuggestionHighlighted={this.onSuggestionHighlighted.bind(this)}\r\n\t\t\thighlightFirstSuggestion={false}\r\n\t\t\trenderInputComponent={this.renderInputComponent}\r\n\t\t\trenderSuggestionsContainer={this.renderSuggestionsContainer}\r\n\t\t\tfocusInputOnSuggestionClick={false}\r\n\t\t\tinputProps={{\r\n\t\t\t\tplaceholder: `Type 'promocode'`,\r\n\t\t\t\tvalue,\r\n\t\t\t\tonChange: (e, changeEvent) => this.onChange(e, changeEvent),\r\n\t\t\t\tautoFocus: true\r\n\t\t\t}}\r\n\t\t/>;\r\n\t}\r\n\r\n\tprotected onSuggestionsClearRequested = () => {\r\n\t\tthis.setState({\r\n\t\t\tsuggestions: []\r\n\t\t});\r\n\t};\r\n\r\n\r\n\r\n\tprotected onSuggestionSelected(event: React.FormEvent<any>, data: Autosuggest.SuggestionSelectedEventData<IQuestion>): void {\r\n\t\tconst question: IQuestion = data.suggestion;\r\n\t\t// alert(`Selected question is ${question.questionId} (${question.text}).`);\r\n\t\tthis.props.onSelectQuestion(question.categoryId, question.questionId);\r\n\t}\r\n\r\n\t/*\r\n\tprotected renderSuggestion(suggestion: Question, params: Autosuggest.RenderSuggestionParams): JSX.Element {\r\n\t\t const className = params.isHighlighted ? \"highlighted\" : undefined;\r\n\t\t return <span className={className}>{suggestion.name}</span>;\r\n\t}\r\n\t*/\r\n\r\n\tprotected renderSuggestion(suggestion: IQuestion, params: Autosuggest.RenderSuggestionParams): JSX.Element {\r\n\t\t// const className = params.isHighlighted ? \"highlighted\" : undefined;\r\n\t\t//return <span className={className}>{suggestion.name}</span>;\r\n\t\tconst matches = AutosuggestHighlightMatch(suggestion.text, params.query);\r\n\t\tconst parts = AutosuggestHighlightParse(suggestion.text, matches);\r\n\r\n\t\treturn (\r\n\t\t\t<span>\r\n\t\t\t\t{parts.map((part, index) => {\r\n\t\t\t\t\tconst className = part.highlight ? 'react-autosuggest__suggestion-match' : undefined;\r\n\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\t<span className={className} key={index}>\r\n\t\t\t\t\t\t\t{part.text}\r\n\t\t\t\t\t\t</span>\r\n\t\t\t\t\t);\r\n\t\t\t\t})}\r\n\t\t\t</span>\r\n\t\t);\r\n\t}\r\n\r\n\tprotected renderSectionTitle(section: ICategory): JSX.Element {\r\n\t\treturn <strong>{section.title}</strong>;\r\n\t}\r\n\r\n\t// protected renderInputComponent(inputProps: Autosuggest.InputProps<IQuestion>): JSX.Element {\r\n\t// \t const { onChange, onBlur, ...restInputProps } = inputProps;\r\n\t// \t return (\r\n\t// \t\t  <div>\r\n\t// \t\t\t\t<input {...restInputProps} />\r\n\t// \t\t  </div>\r\n\t// \t );\r\n\t// }\r\n\r\n\tprotected renderInputComponent(inputProps: Autosuggest.RenderInputComponentProps): JSX.Element {\r\n\t\tconst { ref, ...restInputProps } = inputProps;\r\n\t\t// if (ref !== undefined)\r\n\t\t// \tthis.inputAutosuggest = ref as React.RefObject<HTMLInputElement>;\r\n\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t<input {...restInputProps} ref={inputAutosuggest} />\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n\r\n\r\n\tprotected renderSuggestionsContainer({ containerProps, children, query }: Autosuggest.RenderSuggestionsContainerParams): JSX.Element {\r\n\t\treturn (\r\n\t\t\t<div {...containerProps}>\r\n\t\t\t\t<span>{children}</span>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n\t// endregion region Event handlers\r\n\r\n\tprotected onChange(event: /*React.ChangeEvent<HTMLInputElement>*/ React.FormEvent<any>, { newValue, method }: Autosuggest.ChangeEvent): void {\r\n\t\tthis.setState({ value: newValue });\r\n\t}\r\n\r\n\tprotected onSuggestionsFetchRequested({ value }: any): void {\r\n\t\tthis.setState({\r\n\t\t\tsuggestions: this.getSuggestions(value)\r\n\t\t});\r\n\t}\r\n\r\n\tprivate anyWord = (valueWordRegex: RegExp[], questionWords: string[]): boolean => {\r\n\t\tfor (let valWordRegex of valueWordRegex)\r\n\t\t\tfor (let questionWord of questionWords)\r\n\t\t\t\tif (valWordRegex.test(questionWord))\r\n\t\t\t\t\treturn true;\r\n\t\treturn false;\r\n\t}\r\n\t// endregion region Helper methods\r\n\tprotected getSuggestions(value: string): ICategory[] {\r\n\t\tconst escapedValue = escapeRegexCharacters(value.trim());\r\n\r\n\t\tif (escapedValue === '') {\r\n\t\t\treturn [];\r\n\t\t}\r\n\r\n\t\tconst valueWords = escapedValue.split(' ');\r\n\t\tconst valueWordRegex = valueWords.map(word => new RegExp(word, 'i'))\r\n\t\t// const regex = new RegExp('^' + escapedValue, 'i');\r\n\t\t// const regex = new RegExp(escapedValue, 'i');\r\n\r\n\t\t// return AutoSuggest.questions\t \r\n\t\t//  return this.props.categories\r\n\t\t// \t\t.map(section => {\r\n\t\t// \t\t\treturn {\r\n\t\t// \t\t\t\t\ttitle: section.title,\r\n\t\t// \t\t\t\t\tquestions: section\r\n\t\t// \t\t\t\t\t\t.questions\r\n\t\t// \t\t\t\t\t\t.filter(question => regex.test(question.text))\r\n\t\t// \t\t\t};\r\n\t\t// \t\t})\r\n\t\t// \t\t.filter(section => section.questions.length > 0);\r\n\t\tconst { categories, categoryQuestions } = this.props;\r\n\t\treturn categories\r\n\t\t\t.map(group => {\r\n\t\t\t\tconsole.log('categoryId:', group.categoryId, categoryQuestions.get(group.categoryId)!.questions)\r\n\t\t\t\treturn {\r\n\t\t\t\t\t...group,\r\n\t\t\t\t\tquestions: //.group.questions\r\n\t\t\t\t\t\tcategoryQuestions.get(group.categoryId)!.questions\r\n\t\t\t\t\t\t\t.filter(question => this.anyWord(valueWordRegex, question.words!))\r\n\t\t\t\t};\r\n\t\t\t})\r\n\t\t\t.filter(section => section.questions.length > 0);\r\n\t}\r\n\r\n\tprotected getSuggestionValue(suggestion: IQuestion) {\r\n\t\treturn suggestion.text;\r\n\t}\r\n\r\n\tprotected getSectionSuggestions(section: ICategory) {\r\n\t\treturn section.questions;\r\n\t}\r\n\r\n\tprotected onSuggestionHighlighted(params: Autosuggest.SuggestionHighlightedParams): void {\r\n\t\tthis.setState({\r\n\t\t\thighlighted: params.suggestion\r\n\t\t});\r\n\t}\r\n\t// endregion\r\n}\r\n\r\n","import { connect } from 'react-redux';\r\nimport { IAppState } from '../../store/Store';\r\nimport {OptionName}  from '../components/OptionName'\r\n\r\ninterface IOwnProps {\r\n\tid: number\r\n}\r\n\r\nconst mapStateToProps = (store: IAppState, ownProps: IOwnProps ) => {\r\n\treturn {\r\n\t\toptions: store.usersState.userOptions,\r\n\t\tid: ownProps.id\r\n\t};\r\n};\r\n\r\n\r\nexport default connect(mapStateToProps)(OptionName);\r\n","import { IOption, OptionValue } from \"../types\";\r\n\r\ntype Props<T extends OptionValue> = {\r\n    options: IOption<T>[];\r\n    id: T;\r\n};\r\n\r\nexport interface IProps {\r\n\toptions: IOption<number>[];\r\n  id: number;\r\n}\r\n\r\nexport function OptionName<T extends OptionValue>(props: Props<T>) {\r\n    const { id } = props;\r\n    const option: IOption<T>|undefined = props.options.find(option => option.value === id);\r\n    return (\r\n        <span>\r\n            {option\r\n                ? option!.label\r\n                : \"Unknown\"\r\n            }\r\n        </span>\r\n    );\r\n}","import React, { useContext } from 'react';\r\nimport { useFormik } from 'formik';\r\nimport * as Yup from 'yup'\r\nimport { ICategoryFormProps } from '../types';\r\n\r\nimport { ThemeContext } from \"../../ThemeContext\";\r\nimport { Button, Container, Form } from \"react-bootstrap\";\r\nimport UserName from '../../common/containers/UserName';\r\n//import { number } from 'yup/lib/locale';\r\n\r\nconst CategForm: React.FC<ICategoryFormProps> = (props: ICategoryFormProps) => {\r\n\r\n  const category = props.category!;\r\n  const { categoryId, title, questions, isExpanded, createdBy, created } = category;\r\n\r\n  const formik = useFormik({\r\n    enableReinitialize: true,\r\n    initialValues: {\r\n      categoryId,\r\n      title,\r\n      questions,\r\n      isExpanded,\r\n      createdBy,\r\n      created\r\n    },\r\n    validationSchema: Yup.object({\r\n      title: Yup.string()\r\n        .max(150, 'Must be 150 characters or less')\r\n        .required('Required'),\r\n      /*answers: Yup.string()\r\n        .max(20, 'Must be 20 characters or less')\r\n        .required('Required'),\r\n      email: Yup.string()\r\n        .email('Invalid email address')\r\n        .required('Required'),*/\r\n    }),\r\n    onSubmit: values => {\r\n      // alert(JSON.stringify(values, null, 2));\r\n      props.saveForm(values, props.formMode)\r\n    }\r\n  });\r\n\r\n  const isEdit = () => props.formMode === 'edit';\r\n\r\n  console.log('RENDERING', formik.values)\r\n  return (\r\n    <Form onSubmit={formik.handleSubmit}>\r\n\r\n      {isEdit() &&\r\n        <Form.Group controlId=\"categoryId\">\r\n          <Form.Label>Id: </Form.Label>\r\n          <span> {formik.values.categoryId}</span>\r\n        </Form.Group>\r\n      }\r\n\r\n      <Form.Group controlId=\"title\">\r\n        <Form.Label>Title</Form.Label>\r\n        <Form.Control\r\n          as=\"textarea\"\r\n          name=\"text\"\r\n          onChange={formik.handleChange}\r\n          //onBlur={formik.handleBlur}\r\n          onBlur={(e: React.FocusEvent<HTMLTextAreaElement>): void => {\r\n            if (isEdit() && formik.initialValues.title !== formik.values.title)\r\n              formik.submitForm();\r\n          }}\r\n          value={formik.values.title}\r\n          style={{ width: '100%' }}\r\n          rows={2}\r\n        />\r\n        <Form.Text className=\"text-danger\">\r\n          {formik.touched.title && formik.errors.title ? (\r\n            <div className=\"text-danger\">{formik.errors.title}</div>\r\n          ) : null}\r\n        </Form.Text>\r\n      </Form.Group>\r\n\r\n      <br />\r\n\r\n      <Form.Group controlId=\"createdBy\">\r\n        <Form.Label>Created by:</Form.Label>\r\n        <UserName id={formik.values.createdBy} />\r\n      </Form.Group>\r\n      {/* <br /> */}\r\n      <Form.Group controlId=\"created\">\r\n        <Form.Label className=\"id\">Created:</Form.Label>\r\n        <span>{formik.values.created.toLocaleDateString()}</span>\r\n      </Form.Group>\r\n      <br />\r\n      {!isEdit() &&\r\n        <div className=\"buttons\">\r\n          {props.canEdit &&\r\n            <Button\r\n              variant=\"secondary\"\r\n              size=\"sm\"\r\n              onClick={() => {\r\n                props.cancel();\r\n                //props.handleClose()\r\n              }}>\r\n              Cancel\r\n            </Button>}\r\n          {props.canEdit &&\r\n            <Button\r\n              variant=\"primary\"\r\n              size=\"sm\"\r\n              type=\"submit\"\r\n            >\r\n              Save\r\n            </Button>}\r\n        </div>\r\n      }\r\n    </Form>\r\n\r\n\r\n  );\r\n};\r\n\r\nexport const CategoryForm: React.FC<ICategoryFormProps> = (props: ICategoryFormProps) => {\r\n\r\n  const theme = useContext(ThemeContext);\r\n  const { darkMode, variant, bg } = theme.state;\r\n\r\n  return (\r\n    <Container className={`${darkMode ? \"dark\" : \"\"}`}>\r\n      <CategForm {...props} />\r\n    </Container>\r\n  )\r\n}","// import * as React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { IAppState } from '../../store/Store';\r\nimport { ICategory } from '../types'\r\n\r\nimport { Dispatch } from 'redux';  // ActionCreatorsMapObject, \r\n\r\nimport {\r\n\tstoreCategory,\r\n\tupdateCategory,\r\n\tcancelCategory,\r\n\tsetIsDetail,\r\n\tQuestionActions\r\n} from '../actions'\r\n\r\nimport { CategoryForm } from '../components/CategoryForm';\r\n\r\ninterface IProps {\r\n\tcanEdit: boolean\r\n}\r\n\r\n// Grab the categories from the store and make them available on props\r\nconst mapStateToProps = (store: IAppState, ownProps: IProps ) => {\r\n\tconst {categoriesState } = store;\r\n\tconst { category, formMode } = categoriesState; \r\n\treturn {\r\n\t\tcategory,\r\n\t\tformMode,\r\n\t\tcanEdit: ownProps.canEdit\r\n\t};\r\n};\r\n\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch<QuestionActions>) => {\r\n\treturn {\r\n\t\tsaveForm: (category: ICategory, formMode: string) => \r\n\t\t\tdispatch<any>(formMode==='add'?storeCategory(true, category):updateCategory(true, category)),\r\n\t\tcancel: () => dispatch<any>(cancelCategory()),\r\n\t\tsetIsDetail: (isDetail: boolean) => {\r\n\t\t\tdispatch<any>(setIsDetail(isDetail))\r\n\t\t},\r\n\r\n\t}\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CategoryForm);\r\n","import * as React from 'react';\r\n\r\nimport Autosuggest from 'react-autosuggest';\r\nimport AutosuggestHighlightMatch from \"autosuggest-highlight/match\";\r\nimport AutosuggestHighlightParse from \"autosuggest-highlight/parse\";\r\n\r\nimport { IAnswer }  from '../Answers/types'\r\nimport './AutoSuggest.css'\r\nimport { IQuestion } from '../Categories/types';\r\n\r\n// https://developer.mozilla.org/en/docs/Web/JavaScript/Guide/Regular_Expression\r\n// s#Using_Special_Characters\r\nfunction escapeRegexCharacters(str: string): string {\r\n\treturn str.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&');\r\n}\r\n\r\nconst QuestionAutosuggestMulti = Autosuggest as { new (): Autosuggest<IAnswer> };\r\n\r\ninterface IProps {\r\n\tanswersUnassigned: IAnswer[], \r\n\tquestion: IQuestion,\r\n\tassignQuestionAnswer: (categoryId: number, questionId: number, answerId: number) => void\r\n\tsetAnswerText?: (val: string) => void\r\n}\r\n\r\nexport class AutoSuggestAnswer extends React.Component<IProps, any> {\r\n\r\n\tstate: any;\r\n\r\n\tconstructor(props: any) {\r\n\t\t super(props);\r\n\r\n\t\t this.state = {\r\n\t\t\t  value: '',\r\n\t\t\t  suggestions: this.getSuggestions(''),\r\n\t\t\t  highlighted: ''\r\n\t\t };\r\n\t}\r\n\t// endregion region Rendering methods\r\n\trender(): JSX.Element {\r\n\t\t const {value, suggestions} = this.state;\r\n\r\n\t\t return <QuestionAutosuggestMulti\r\n\t\t \t  onSuggestionsClearRequested={this.onSuggestionsClearRequested}  // (sl) added\r\n\t\t\t  multiSection={false}\r\n\t\t\t  suggestions={suggestions}\r\n\t\t\t  onSuggestionsFetchRequested={this.onSuggestionsFetchRequested.bind(this)}\r\n\t\t\t  onSuggestionSelected={this.onSuggestionSelected.bind(this)}\r\n\t\t\t  getSuggestionValue={this.getSuggestionValue}\r\n\t\t\t  renderSuggestion={this.renderSuggestion}\r\n\t\t\t  // onSuggestionHighlighted={this.onSuggestionHighlighted} (sl)\r\n\t\t\t  onSuggestionHighlighted={this.onSuggestionHighlighted.bind(this)}  \r\n\t\t\t  highlightFirstSuggestion={true}\r\n\t\t\t  // renderInputComponent={this.renderInputComponent}\r\n\t\t\t  renderSuggestionsContainer={this.renderSuggestionsContainer}\r\n\t\t\t  inputProps={{\r\n\t\t\t\t\tplaceholder: `Search answers...`,\r\n\t\t\t\t\tvalue,\r\n\t\t\t\t\tonChange: (e, changeEvent) => this.onChange(e, changeEvent),\r\n\t\t\t  }}/>;\r\n\t}\r\n\r\n\tprotected onSuggestionsClearRequested = () => {\r\n\t\tthis.setState({\r\n\t\t  suggestions: []\r\n\t\t});\r\n\t };\r\n  \r\n  \r\n\r\n\tprotected onSuggestionSelected(event: React.FormEvent<any>, data: Autosuggest.SuggestionSelectedEventData<IAnswer>): void {\r\n\t\t const answer: IAnswer = data.suggestion;\r\n\t\t // alert(`Selected question is ${question.answerId} (${question.text}).`);\r\n\t\t this.props.assignQuestionAnswer(\r\n\t\t\t this.props.question.categoryId,\r\n\t\t\t this.props.question.questionId, \r\n\t\t\t answer.answerId);\r\n\t\tthis.setState({\r\n\t\t\tvalue: ''\r\n\t\t})\r\n\t}\r\n\r\n\t/*\r\n\tprotected renderSuggestion(suggestion: Question, params: Autosuggest.RenderSuggestionParams): JSX.Element {\r\n\t\t const className = params.isHighlighted ? \"highlighted\" : undefined;\r\n\t\t return <span className={className}>{suggestion.name}</span>;\r\n\t}\r\n\t*/\r\n\r\n\tprotected renderSuggestion(suggestion: IAnswer, params: Autosuggest.RenderSuggestionParams): JSX.Element {\r\n\t\t// const className = params.isHighlighted ? \"highlighted\" : undefined;\r\n\t\t//return <span className={className}>{suggestion.name}</span>;\r\n\t\tconst matches = AutosuggestHighlightMatch(suggestion.text, params.query);\r\n\t\tconst parts = AutosuggestHighlightParse(suggestion.text, matches);\r\n\t \r\n\t\treturn (\r\n\t\t  <span>\r\n\t\t\t {parts.map((part, index) => {\r\n\t\t\t\tconst className = part.highlight ? 'react-autosuggest__suggestion-match' : undefined;\r\n\t \r\n\t\t\t\treturn (\r\n\t\t\t\t  <span className={className} key={index}>\r\n\t\t\t\t\t {part.text}\r\n\t\t\t\t  </span>\r\n\t\t\t\t);\r\n\t\t\t })}\r\n\t\t  </span>\r\n\t\t);\r\n\t}\r\n\r\n\t// protected renderInputComponent(inputProps: Autosuggest.InputProps<IAnswer>): JSX.Element {\r\n\t// \t const { onChange, onBlur, ...restInputProps } = inputProps;\r\n\t// \t return (\r\n\t// \t\t  <div>\r\n\t// \t\t\t\t<input {...restInputProps} />\r\n\t// \t\t  </div>\r\n\t// \t );\r\n\t// }\r\n\r\n\tprotected renderSuggestionsContainer({containerProps, children, query}: Autosuggest.RenderSuggestionsContainerParams): JSX.Element {\r\n\t\t return (\r\n\t\t\t  <div {...containerProps}>\r\n\t\t\t\t\t<span>{children}</span>\r\n\t\t\t  </div>\r\n\t\t );\r\n\t}\r\n\t// endregion region Event handlers\r\n\tprotected onChange(event: React.FormEvent<any>, {newValue, method}: Autosuggest.ChangeEvent): void {\r\n\t\tif (this.props.setAnswerText) {\r\n\t\t\tthis.props.setAnswerText(newValue);\r\n\t\t}\r\n\t\tthis.setState({value: newValue});\r\n\t}\r\n\r\n\tprotected onSuggestionsFetchRequested({value}: any): void {\r\n\t\t this.setState({\r\n\t\t\t  suggestions: this.getSuggestions(value)\r\n\t\t });\r\n\t}\r\n\r\n\tprivate anyWord = (valueWordRegex: RegExp[], questionWords: string[]) : boolean => {\r\n\t\tfor (let valWordRegex of valueWordRegex)\r\n\t\t\tfor (let questionWord of questionWords)\r\n\t\t\t\tif (valWordRegex.test(questionWord))\r\n\t\t\t\t\treturn true;\r\n\t\treturn false;\r\n\t} \r\n\t// endregion region Helper methods\r\n\tprotected getSuggestions(value: string): IAnswer[] {\r\n\t\tconst escapedValue = escapeRegexCharacters(value.trim());\r\n\r\n\t\tif (escapedValue === '') {\r\n\t\t\treturn [];\r\n\t\t}\r\n\r\n\t\tconst valueWords = escapedValue.split(' ');\r\n\t\tconst valueWordRegex = valueWords.map(word => new RegExp(word, 'i') )\r\n\t\t// const regex = new RegExp('^' + escapedValue, 'i');\r\n\t\t// const regex = new RegExp(escapedValue, 'i');\r\n\r\n\t\treturn this.props.answersUnassigned.filter(answer => this.anyWord(valueWordRegex, answer.words!))\r\n\t}\r\n\r\n\tprotected getSuggestionValue(suggestion: IAnswer) {\r\n\t\t return suggestion.text;\r\n\t}\r\n\r\n\r\n\tprotected onSuggestionHighlighted(params: Autosuggest.SuggestionHighlightedParams): void {\r\n\t\t this.setState({\r\n\t\t\t  highlighted: params.suggestion\r\n\t\t });\r\n\t}\r\n\t// endregion\r\n}\r\n\r\n","import { useRef, useState, useEffect } from 'react';\r\n\r\ninterface IHoverProps {\r\n\tisHovered: boolean;\r\n}\r\n\r\n// Hook\r\nexport function useHover() : [React.RefObject<HTMLDivElement>, IHoverProps] {\r\n\tconst [hoverProps, setValue] = useState({ isHovered: false });\r\n \r\n\tconst divRef = useRef<HTMLDivElement>(null);\r\n \r\n\tconst handleMouseOver = () => setValue({ isHovered: true });\r\n\tconst handleMouseOut = () => setValue({ isHovered: false });\r\n \r\n\tuseEffect(\r\n\t  () => {\r\n\t\t const node = divRef.current;\r\n\t\t if (node) {\r\n\t\t\tnode.addEventListener('mouseenter', () => handleMouseOver());\r\n\t\t\tnode.addEventListener('mouseleave', () => handleMouseOut());\r\n \r\n\t\t\treturn () => {\r\n\t\t\t\tnode.removeEventListener('mouseenter', () => handleMouseOver());\r\n\t\t\t\tnode.removeEventListener('mouseleave', () => handleMouseOut());\r\n\t\t\t};\r\n\t\t }\r\n\t  }, [divRef.current] // Recall only if ref changes\r\n\t);\r\n \r\n\treturn [divRef, hoverProps];\r\n}\r\n\r\n","import * as React from 'react';\r\n\r\nimport { useHover } from '../../common/useHover'\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faWindowClose, faEdit, faCopy } from '@fortawesome/free-solid-svg-icons'\r\n\r\nimport { IQuestion, IQuestionAnswer } from '../types';\r\n\r\n\r\ninterface IQuestionAnswerRowProps {\r\n\tquestion: IQuestion;\r\n\tquestionAnswer: IQuestionAnswer;\r\n\tselectQuestionAnswer: (categoryId: number, questionId: number, answerId: number) => void;\r\n\tcopyQuestionAnswer: (categoryId: number, questionId: number, answerId: number) => void;\r\n\tremoveQuestionAnswer: (categoryId: number, questionId: number, answerId: number) => void;\r\n}\r\n\r\nconst QuestionAnswerRow: React.FC<IQuestionAnswerRowProps> = (props: IQuestionAnswerRowProps) => {\r\n\r\n\tconst [hoverRef, hoverProps] = useHover();\r\n\r\n\tconst { question, questionAnswer, selectQuestionAnswer, copyQuestionAnswer, removeQuestionAnswer } = props;\r\n\tconst { categoryId, questionId } = question;\r\n\tconst { answerId, text } = questionAnswer;\r\n\tconst id = `inputQuestionAnswer${answerId}`;\r\n\r\n\treturn (\r\n\t\t<div ref={hoverRef}>\r\n\t\t\t{/* <input id={id} type=\"hidden\" value={questionAnswer.text}></input> */}\r\n\t\t\t<button\r\n\t\t\t\tonClick={() => {\r\n\t\t\t\t\t// selectQuestionAnswer(categoryId, questionId, answerId)}\r\n\t\t\t\t\talert('No action for the time being')\r\n\t\t\t\t}}\r\n\t\t\t>\r\n\t\t\t\t{questionAnswer.text}\r\n\t\t\t</button>\r\n\t\t\t{hoverProps.isHovered &&\r\n\t\t\t\t<button className=\"button-edit\" title=\"Copy Answer to Cliboard\"\r\n\t\t\t\t\tonClick={(e) => {\r\n\t\t\t\t\t\t//const input = document.querySelector<HTMLInputElement>('#' + id);\r\n\t\t\t\t\t\tif (navigator.clipboard) {\r\n\t\t\t\t\t\t\tnavigator.clipboard.writeText(`${questionAnswer.text}`) // input!.value)\r\n\t\t\t\t\t\t\t\t.then(() => {\r\n\t\t\t\t\t\t\t\t\tconsole.log('Copied to clipboard successfully.');\r\n\t\t\t\t\t\t\t\t}, (err) => {\r\n\t\t\t\t\t\t\t\t\tconsole.log('Failed to copy the text to clipboard.', err);\r\n\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\te.stopPropagation();\r\n\t\t\t\t\t\t// copyQuestionAnswer(categoryId, questionId, answerId);\r\n\t\t\t\t\t}\r\n\t\t\t\t\t}>\r\n\t\t\t\t\t<FontAwesomeIcon icon={faCopy} color='lightblue' />\r\n\t\t\t\t</button>\r\n\t\t\t}\r\n\t\t\t{hoverProps.isHovered &&\r\n\t\t\t\t<button \r\n\t\t\t\t\tclassName=\"button-remove\"\r\n\t\t\t\t\ttitle=\"Remove\"\r\n\t\t\t\t\tonClick={(e) => {\r\n\t\t\t\t\t\t\tremoveQuestionAnswer(categoryId, questionId, answerId);\r\n\t\t\t\t\t\t\te.preventDefault();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t>\r\n\t\t\t\t\t<FontAwesomeIcon icon={faWindowClose} color='lightblue' />\r\n\t\t\t\t</button>\r\n\t\t\t}\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default QuestionAnswerRow\r\n\r\n","import * as React from 'react';\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faPlus, faWindowClose } from '@fortawesome/free-solid-svg-icons'\r\n\r\nimport { IQuestion, IQuestionAnswer } from '../types';\r\nimport { IAnswer } from '../../Answers/types';\r\nimport { AutoSuggestAnswer } from '../../components/AutoSuggestAnswer';\r\nimport QuestionAnswerRow from './QuestionAnswerRow';\r\n\r\ninterface IProps {\r\n\tquestion: IQuestion,\r\n\tquestionAnswers: IQuestionAnswer[],\r\n\tanswers?: IAnswer[],\r\n\tcanEdit: boolean,\r\n\tformMode: string,\r\n\tselectQuestionAnswer: (categoryId: number, questionId: number, answerId: number) => void,\r\n\tcopyQuestionAnswer: (categoryId: number, questionId: number, answerId: number) => void,\r\n\tremoveQuestionAnswer: (categoryId: number, questionId: number, answerId: number) => void,\r\n\tassignQuestionAnswer?: (categoryId: number, questionId: number, answerId: number, tekst?: string) => void,\r\n\tsetAnswerText?: (val: string) => void,\r\n\tsetIsDetail: (isDetail: boolean) => void\r\n}\r\n\r\nconst QuestionAnswers: React.FC<IProps> = (props: IProps) => {\r\n\tconst { \r\n\t\tquestion, \r\n\t\tquestionAnswers, \r\n\t\tanswers, \r\n\t\tcanEdit, \r\n\t\tformMode, \r\n\t\tselectQuestionAnswer, copyQuestionAnswer, removeQuestionAnswer, \r\n\t\tassignQuestionAnswer, setIsDetail \r\n\t} = props; \r\n\tconst answersUnassigned = answers?.filter(a => !question.answers.map(a=>a.answerId).includes(a.answerId))\r\n\r\n\tconst [tekst, setTekst] = React.useState('');\r\n\tconst setAnswerText = (val: string) => {\r\n\t\tsetTekst(val);\r\n\t}\r\n\r\n\tconst assignQuestionAnswerTekst = () => {\r\n\t\tif (assignQuestionAnswer) {\r\n\t\t\t//storeAnswer({ answerId: -1, text: tekst }, 'add')\r\n\t\t\tassignQuestionAnswer(\r\n\t\t\t\tquestion.categoryId,\r\n\t\t\t\tquestion.questionId, \r\n\t\t\t\t-1,\r\n\t\t\t\ttekst\r\n\t\t\t);\r\n\t\t}\r\n\t}\r\n\r\n\tconst goDetail = (isDetail: boolean) => {\r\n\t\tsetIsDetail(isDetail);\r\n\r\n\t\tconst divDetailView = document.getElementById('divDetailView');\r\n\t\tdivDetailView!.classList.add('detail-view-open');\r\n\t\tdivDetailView!.style.zIndex = '3';\r\n\t\t//document.body.classList.add('hide-scroll-bar');\r\n  \t}\t\r\n\r\n\r\n    return (\r\n      <div className=\"name-container question-answers\">\r\n\t\t\t{/* { questionAnswers.length === 0 && \r\n\t\t\t\t<div>\r\n\t\t\t\t\tNo answers yet\r\n\t\t\t\t</div>\r\n\t\t\t} */}\r\n\t\t\t{ questionAnswers.length > -1 && \r\n\t\t\t\t<>\r\n\t\t\t\t<table width=\"100%\">\r\n\t\t\t\t\t<thead>\r\n\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t<th>{ questionAnswers.length === 0 ? 'No answers yet' : 'Answers'}</th>\r\n\t\t\t\t\t\t\t{ canEdit && formMode !== 'display' && <th></th> }\r\n\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t</thead>\r\n\t\t\t\t\t<tbody>\r\n\t\t\t\t\t\t{ questionAnswers.map(qa => \r\n\t\t\t\t\t\t\t<tr key={qa.answerId}>\r\n\t\t\t\t\t\t\t\t<td title={`AnswerId:${qa.answerId}\\nAssigned: ${qa.assigned.toLocaleDateString()} ${qa.assigned.toLocaleTimeString()}`}>\r\n\t\t\t\t\t\t\t\t\t<QuestionAnswerRow\r\n\t\t\t\t\t\t\t\t\t\tkey={qa.answerId}\r\n\t\t\t\t\t\t\t\t\t\tquestion={question}\r\n\t\t\t\t\t\t\t\t\t\tquestionAnswer={qa}\r\n\t\t\t\t\t\t\t\t\t\tselectQuestionAnswer={selectQuestionAnswer}\r\n\t\t\t\t\t\t\t\t\t\tcopyQuestionAnswer={copyQuestionAnswer}\r\n\t\t\t\t\t\t\t\t\t\tremoveQuestionAnswer={removeQuestionAnswer}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t{/* <td title={`AnswerId:${qa.answerId}\\nAssigned: ${qa.assigned.toLocaleDateString()} ${qa.assigned.toLocaleTimeString()}`}>\r\n\t\t\t\t\t\t\t\t\t{qa.text}\r\n\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t{ canEdit && formMode !== 'display' &&\r\n\t\t\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t\t\t\t<button className=\"button-remove\" title=\"Remove Answer\" \r\n\t\t\t\t\t\t\t\t\t\t\tonClick={(e) => { \r\n\t\t\t\t\t\t\t\t\t\t\t\te.stopPropagation();\r\n\t\t\t\t\t\t\t\t\t\t\t\te.preventDefault();\r\n\t\t\t\t\t\t\t\t\t\t\t\tremoveQuestionAnswer!(question.categoryId, question.questionId, qa.answerId)\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\t\t\t<FontAwesomeIcon icon={faWindowClose}  color='lightblue' />\r\n\t\t\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t} */}\r\n\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t{canEdit && formMode !== 'display' && <tr>\r\n\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t\t<AutoSuggestAnswer\r\n\t\t\t\t\t\t\t\t\tquestion={question}\r\n\t\t\t\t\t\t\t\t\tanswersUnassigned={answersUnassigned!}\r\n\t\t\t\t\t\t\t\t\tassignQuestionAnswer={assignQuestionAnswer!}\r\n\t\t\t\t\t\t\t\t\tsetAnswerText={setAnswerText}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t<td width=\"35px\">\r\n\t\t\t\t\t\t\t\t<button className=\"button-edit\" title=\"Add a new Answer\" onClick={\r\n\t\t\t\t\t\t\t\t\t(e) => {\r\n\t\t\t\t\t\t\t\t\t\tgoDetail(true);\r\n\t\t\t\t\t\t\t\t\t\te.preventDefault()\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}>\r\n\t\t\t\t\t\t\t\t\t<FontAwesomeIcon icon={faPlus} color='lightblue' />\r\n\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t</tr>}\r\n\t\t\t\t\t</tbody>\r\n\t\t\t\t</table>\r\n\t\t\t\t</>\r\n\t\t\t}\r\n      </div>\r\n    );\r\n  }\r\n\r\nexport default QuestionAnswers\r\n\r\n","import React from \"react\";\r\nimport Form from 'react-bootstrap/Form';\r\nimport { IOption, OptionValue } from \"./types\";\r\n\r\ntype Props<T extends OptionValue> = {\r\n    options: IOption<T>[];\r\n    value: T;\r\n    onChange: (e: React.FormEvent<HTMLSelectElement>, value: T) => void;\r\n    id: string,\r\n    name: string,\r\n    disabled?: boolean\r\n};\r\n\r\nexport function Select<T extends OptionValue>(props: Props<T>) {\r\n    const disabled = props.disabled ? true : false;\r\n    function handleOnChange(e: React.FormEvent<HTMLSelectElement>) {\r\n        const { selectedIndex } = e.currentTarget;\r\n        const selectedOption: IOption<T> = props.options[selectedIndex];\r\n        props.onChange(e, selectedOption.value);\r\n    }\r\n\r\n    return (\r\n        <Form.Select\r\n            id={props.id}\r\n            value={props.value}\r\n            onChange={handleOnChange}\r\n            disabled={disabled}\r\n            size=\"sm\"\r\n        >\r\n            {props.options.map(option => (\r\n                <option key={option.value} value={option.value}>\r\n                    {option.label}\r\n                </option>\r\n            ))}\r\n        </Form.Select>\r\n    );\r\n}","export const sourceOptions = [\r\n    { label: \"Unknown\", value: 0 },\r\n    { label: \"Gmail\", value: 1 },\r\n    { label: \"Outlook\", value: 2 },\r\n    { label: \"Phone\", value: 3 },\r\n    { label: \"Chat\", value: 4 },\r\n    { label: \"Slack\", value: 5 }\r\n]","export const statusOptions = [\r\n    { label: \"Unknown\", value: 0 },\r\n    { label: \"In progress\", value: 1 },\r\n    { label: \"Can't reproduce\", value: 2 },\r\n    { label: \"Blocked\", value: 3 },\r\n    { label: \"Complete\", value: 4 }\r\n]","import React, { useState, useContext } from 'react';\r\nimport { useFormik } from 'formik';\r\nimport * as Yup from 'yup'\r\nimport { IQuestionFormProps } from '../types';\r\n\r\nimport QuestionAnswers from './QuestionAnswers'\r\nimport { Select } from '../../common/Select';\r\nimport UserName from '../../common/containers/UserName';\r\n//import { number } from 'yup/lib/locale';\r\nimport { ThemeContext } from \"../../ThemeContext\";\r\nimport { Button, Container, Form } from \"react-bootstrap\";\r\n\r\nimport { sourceOptions } from '../sourceOptions'\r\nimport { statusOptions } from '../statusOptions'\r\nimport { initialQuestion } from '../categoriesReducer';\r\n\r\nconst QuestForm: React.FC<IQuestionFormProps> = (props: IQuestionFormProps) => {\r\n\r\n  let { question } = props;\r\n  if (!question) // it is still view in modal, although hidden\r\n    question = { ...initialQuestion };\r\n\r\n  const formik = useFormik({\r\n    enableReinitialize: true,\r\n    initialValues: {\r\n      categoryId: question.categoryId,\r\n      questionId: question.questionId,\r\n      text: question.text,\r\n      source: question.source,\r\n      status: question.status,\r\n      answers: question.answers,\r\n      createdBy: question.createdBy,\r\n      created: question.created\r\n    },\r\n    validationSchema: Yup.object({\r\n      text: Yup.string()\r\n        .max(150, 'Must be 150 characters or less')\r\n        .required('Required'),\r\n      categoryId: Yup.number()\r\n        .moreThan(0, 'Select Category')\r\n        .required('Required')\r\n    }),\r\n    onSubmit: values => {\r\n      // alert(JSON.stringify(values, null, 2));\r\n      props.saveForm(values, props.formMode);\r\n      props.handleClose();\r\n    }\r\n  });\r\n\r\n  const isEdit = () => props.formMode === 'edit';\r\n\r\n  console.log('RENDERING', formik.values)\r\n  return (\r\n    <Form onSubmit={formik.handleSubmit}>\r\n      {isEdit() &&\r\n        <Form.Group controlId=\"questionId\">\r\n          <Form.Label>QuestionId: </Form.Label>\r\n          <span> {formik.values.questionId}</span>\r\n        </Form.Group>\r\n      }\r\n\r\n      <Form.Group controlId=\"categoryId\">\r\n        <Form.Label>Category</Form.Label>\r\n        <Select\r\n          id=\"categoryId\"\r\n          name=\"categoryId\"\r\n          options={props.categoryOptions}\r\n          //onChange={formik.handleChange}\r\n          onChange={(e, value) => {\r\n            formik.setFieldValue(\"categoryId\", value);\r\n            if (isEdit()) formik.submitForm();\r\n          }}\r\n          value={formik.values.categoryId}\r\n        />\r\n        <Form.Text className=\"text-danger\">\r\n          {formik.touched.categoryId && formik.errors.categoryId ? (\r\n            <div className=\"text-danger\">{formik.errors.categoryId}</div>\r\n          ) : null}\r\n        </Form.Text>\r\n      </Form.Group>\r\n\r\n      <Form.Group controlId=\"text\">\r\n        <Form.Label>Text</Form.Label>\r\n        <Form.Control\r\n          as=\"textarea\"\r\n          name=\"text\"\r\n          onChange={formik.handleChange}\r\n          //onBlur={formik.handleBlur}\r\n          onBlur={(e: React.FocusEvent<HTMLTextAreaElement>): void => {\r\n            if (isEdit() && formik.initialValues.text !== formik.values.text)\r\n              formik.submitForm();\r\n          }}\r\n          value={formik.values.text}\r\n          style={{ width: '100%' }}\r\n          rows={2}\r\n        />\r\n        <Form.Text className=\"text-danger\">\r\n          {formik.touched.text && formik.errors.text ? (\r\n            <div className=\"text-danger\">{formik.errors.text}</div>\r\n          ) : null}\r\n        </Form.Text>\r\n      </Form.Group>\r\n\r\n      <Form.Group controlId=\"source\">\r\n        <Form.Label>Source</Form.Label>\r\n        <Select\r\n          id=\"source\"\r\n          name=\"source\"\r\n          options={sourceOptions}\r\n          // onChange={formik.handleChange}\r\n          onChange={(e, value) => {\r\n            formik.setFieldValue(\"source\", value)\r\n            if (isEdit()) formik.submitForm();\r\n          }}\r\n          value={formik.values.source}\r\n        />\r\n        <Form.Text className=\"text-danger\">\r\n          {formik.touched.source && formik.errors.source ? (\r\n            <div className=\"text-danger\">{formik.errors.source}</div>\r\n          ) : null}\r\n        </Form.Text>\r\n      </Form.Group>\r\n\r\n      <br />\r\n      <QuestionAnswers\r\n        question={question}\r\n        questionAnswers={props.questionAnswers}\r\n        answers={props.answers}\r\n        canEdit={props.canEdit}\r\n        formMode={props.formMode}\r\n        selectQuestionAnswer={props.selectQuestionAnswer}\r\n        copyQuestionAnswer={props.copyQuestionAnswer}\r\n        removeQuestionAnswer={props.removeQuestionAnswer}\r\n        assignQuestionAnswer={props.assignQuestionAnswer}\r\n        setIsDetail={props.setIsDetail}\r\n      />\r\n      <br />\r\n\r\n      <Form.Group controlId=\"status\">\r\n        <Form.Label>Status</Form.Label>\r\n        <Select\r\n          id=\"status\"\r\n          name=\"status\"\r\n          options={statusOptions}\r\n          //onChange={formik.handleChange}\r\n          onChange={(e, value) => {\r\n            formik.setFieldValue(\"status\", value)\r\n            if (isEdit()) formik.submitForm();\r\n          }}\r\n          value={formik.values.status}\r\n        />\r\n        <Form.Text className=\"text-danger\">\r\n          {formik.touched.status && formik.errors.status ? (\r\n            <div className=\"text-danger\">{formik.errors.status}</div>\r\n          ) : null}\r\n        </Form.Text>\r\n      </Form.Group>\r\n\r\n      <Form.Group controlId=\"createdBy\">\r\n        <Form.Label>Created by:</Form.Label>\r\n        <UserName id={formik.values.createdBy} />\r\n      </Form.Group>\r\n      {/* <br /> */}\r\n      <Form.Group controlId=\"created\">\r\n        <Form.Label className=\"id\">Created:</Form.Label>\r\n        <span>{formik.values.created.toLocaleDateString()}</span>\r\n      </Form.Group>\r\n\r\n      {!isEdit() &&\r\n        <div className=\"buttons\">\r\n          {props.canEdit &&\r\n            <Button\r\n              variant=\"secondary\"\r\n              size=\"sm\"\r\n              onClick={() => {\r\n                props.cancel();\r\n                props.handleClose()\r\n              }}>\r\n              Cancel\r\n            </Button>}\r\n          {props.canEdit &&\r\n            <Button\r\n              variant=\"primary\"\r\n              size=\"sm\"\r\n              type=\"submit\"\r\n            >\r\n              Save\r\n            </Button>}\r\n        </div>\r\n      }\r\n    </Form>\r\n  );\r\n};\r\n\r\n\r\nexport const QuestionForm: React.FC<IQuestionFormProps> = (props: IQuestionFormProps) => {\r\n\r\n  const theme = useContext(ThemeContext);\r\n  const { darkMode, variant, bg } = theme.state;\r\n\r\n  return (\r\n    <Container className={`${darkMode ? \"dark\" : \"\"}`}>\r\n      <QuestForm {...props} />\r\n    </Container>\r\n  )\r\n}","// import * as React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { IAppState } from '../../store/Store';\r\nimport { IQuestion, IQuestionAnswer, ICategory } from '../types'\r\nimport { IAnswer } from '../../Answers/types'\r\n\r\nimport { Dispatch } from 'redux';\r\n\r\nimport { QuestionActions,  \r\n\tstoreQuestion,\r\n\tupdateQuestion,\r\n\tcancelQuestion,\r\n\tremoveQuestionAnswer,\r\n\tassignQuestionAnswer,\r\n\tsetIsDetail,\r\n\taddAndAssignNewAnswer,\r\n\tselectQuestionAnswer,\r\n\tcopyQuestionAnswer\r\n} from '../actions'\r\n\r\nimport { QuestionForm } from '../components/QuestionForm';\r\n\r\nconst joinQuestionAnswers = (question: IQuestion | undefined, answers: IAnswer[]) : IQuestionAnswer[]=> {\r\n\tif (question === undefined || question.answers.length === 0 || answers === undefined)\r\n\t\treturn [];\r\n\tconsole.log(\"question.answers\", question.answers)\r\n\tconst questionAnswers = question.answers.map(qa => ({\r\n\t\t\t...qa, text: answers.find(a => a.answerId === qa.answerId)!.text\r\n\t\t})\r\n\t);\r\n\treturn questionAnswers.sort((a,b) => a.assigned < b.assigned ? 1 : -1);\r\n}\r\n\r\ninterface IProps {\r\n\tcanEdit: boolean,\r\n\thandleClose: () => void\r\n}\r\n\r\n// Grab the categories from the store and make them available on props\r\nconst mapStateToProps = (store: IAppState, ownProps: IProps ) => {\r\n\tconst {categoriesState, answerState } = store;\r\n\tconst { question, categoryOptions, formMode } = categoriesState; \r\n\tconst { answers } = answerState;\r\n\treturn {\r\n\t\tcategoryOptions,\r\n\t\tquestion: question!,\r\n\t\tquestionAnswers: joinQuestionAnswers(question, answers),\r\n\t\tanswers,\r\n\t\tformMode,\r\n\t\tcanEdit: ownProps.canEdit,\r\n\t\thandleClose: ownProps.handleClose\r\n\t};\r\n};\r\n\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch<QuestionActions>) => {\r\n\treturn {\r\n\t\tsaveForm: (question: IQuestion, formMode: string) => \r\n\t\t\tdispatch<any>(formMode==='add'?storeQuestion(true, question):updateQuestion(true, question)),\r\n\t\tcancel: () => dispatch<any>(cancelQuestion()),\r\n\r\n\t\t// question answers\r\n\t\tselectQuestionAnswer: (categoryId: number, questionId: number, answerId: number) => \r\n\t\t\tdispatch<any>(selectQuestionAnswer(categoryId, questionId, answerId)),\r\n\t\tcopyQuestionAnswer: (categoryId: number, questionId: number, answerId: number) => \r\n\t\t\tdispatch<any>(copyQuestionAnswer(categoryId, questionId, answerId)),\r\n\t\tremoveQuestionAnswer: (categoryId: number, questionId: number, answerId: number) => \r\n\t\t\tdispatch<any>(removeQuestionAnswer(categoryId, questionId, answerId)),\r\n\r\n\t\tassignQuestionAnswer: (categoryId: number, questionId: number, answerId: number) => \r\n\t\t\tdispatch<any>(assignQuestionAnswer(categoryId, questionId, answerId)),\r\n\t\t\r\n\t\tsetIsDetail: (isDetail: boolean) => {\r\n\t\t\tdispatch<any>(setIsDetail(isDetail))\r\n\t\t},\r\n\r\n\t\taddAndAssignNewAnswer: (categoryId: number, questionId: number, answer: IAnswer, formMode: string) => {\r\n\t\t\tdispatch<any>(addAndAssignNewAnswer(categoryId, questionId, answer, formMode))\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(QuestionForm);\r\n\r\n","import { useContext } from 'react';\r\n\r\nimport { useHover } from '../../common/useHover'\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faWindowClose, faEdit } from '@fortawesome/free-solid-svg-icons'\r\nimport { Button, ListGroup } from 'react-bootstrap'\r\n\r\nimport { IQuestion } from '../types';\r\nimport { ThemeContext } from '../../ThemeContext';\r\n\r\n\r\ninterface IQuestionRowProps {\r\n\tquestion: IQuestion;\r\n\tonSelectQuestion: (categoryId: number, questionId: number) => void;\r\n\tedit: (categoryId: number, questionId: number, showQuestionForm: boolean) => void;\r\n\tremove: (categoryId: number, questionId: number) => void;\r\n}\r\n\r\nconst QuestionRow: React.FC<IQuestionRowProps> = (props: IQuestionRowProps) => {\r\n\r\n\tconst [hoverRef, hoverProps] = useHover();\r\n\r\n\tconst { question, onSelectQuestion, edit, remove } = props;\r\n\tconst { categoryId, questionId } = question;\r\n\r\n\tconst theme = useContext(ThemeContext);\r\n\tconst { darkMode, variant, bg } = theme.state;\r\n\r\n\treturn (\r\n\t\t<ListGroup.Item className=\"py-0\" variant={variant} action>\r\n\t\t\t<div ref={hoverRef} className=\"d-flex justify-content-start align-items-center\">\r\n\t\t\t\t<Button\r\n\t\t\t\t\tstyle={{fontSize: '13px'}}\r\n\t\t\t\t\tvariant='link'\r\n\t\t\t\t\tsize=\"sm\"\r\n\t\t\t\t\tclassName=\"py-0 px-1 text-decoration-none\"\r\n\t\t\t\t\tonClick={() => onSelectQuestion(categoryId, questionId)}>\r\n\t\t\t\t\t{question.text}\r\n\t\t\t\t</Button>\r\n\t\t\t\t{hoverProps.isHovered &&\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t<Button\r\n\t\t\t\t\t\tvariant={variant}\r\n\t\t\t\t\t\tsize=\"sm\"\r\n\t\t\t\t\t\tclassName=\"py-0 px-1\"\r\n\t\t\t\t\t\tstyle={{backgroundColor: 'transparent', borderWidth:'0'}}\r\n\t\t\t\t\t\ttitle=\"Edit\"\r\n\t\t\t\t\t\tonClick={() => edit(categoryId, questionId, true)}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<FontAwesomeIcon icon={faEdit} color='lightblue' />\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t\t<Button\r\n\t\t\t\t\t\tvariant={variant}\r\n\t\t\t\t\t\tsize=\"sm\"\r\n\t\t\t\t\t\tclassName=\"py-0 px-1\"\r\n\t\t\t\t\t\tstyle={{backgroundColor: 'transparent', borderWidth: '0'}}\r\n\t\t\t\t\t\ttitle=\"Remove\"\r\n\t\t\t\t\t\tonClick={() => remove(categoryId, questionId)}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<FontAwesomeIcon icon={faWindowClose} color='lightblue' />\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t\t</>\r\n\t\t\t\t}\r\n\t\t\t</div>\r\n\t\t</ListGroup.Item>\r\n\t)\r\n}\r\n\r\nexport default QuestionRow\r\n\r\n","import { useContext } from 'react'\r\nimport { useHover } from '../../common/useHover'\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faWindowClose, faEdit, faCaretRight, faCaretDown, faPlus } from '@fortawesome/free-solid-svg-icons'\r\nimport { ThemeContext } from \"../../ThemeContext\";\r\nimport { Button, ListGroup } from 'react-bootstrap'\r\n\r\nimport { ICategory, IQuestion } from '../types';\r\nimport QuestionRow from './QuestionRow';\r\n\r\n\r\ninterface ICategoryRowProps {\r\n\tcategory: ICategory;\r\n\tquestions: IQuestion[];\r\n\ttoggleCategory: (categoryId: number) => void;\r\n\teditCategory: (categoryId: number) => void;\r\n\tremoveCategory: (categoryId: number) => void;\r\n\tonSelectCategory: (categoryId: number) => void;\r\n\tonSelectQuestion: (categoryId: number, questionId: number) => void;\r\n\tadd: (categoryId: number, text: string, canEdit?: boolean) => void;\r\n\tedit: (categoryId: number, questionId: number, showQuestionForm: boolean) => void;\r\n\tremove: (categoryId: number, questionId: number) => void;\r\n}\r\n\r\nconst CategoryRow: React.FC<ICategoryRowProps> = (props: ICategoryRowProps) => {\r\n\r\n\tconst [hoverRef, hoverProps] = useHover();\r\n\tconst { category, questions, toggleCategory, editCategory, removeCategory, onSelectCategory,\r\n\t\tonSelectQuestion, add, edit, remove } = props;\r\n\tconst { categoryId, title, questions: categories, isExpanded } = category;\r\n\r\n\tconst theme = useContext(ThemeContext);\r\n\tconst { darkMode, variant, bg } = theme.state;\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<ListGroup.Item\r\n\t\t\t\tvariant={variant}\r\n\t\t\t\tclassName=\"py-0 px-1\"\r\n\t\t\t\tas=\"li\"\r\n\t\t\t>\r\n\t\t\t\t<div ref={hoverRef} className=\"d-flex justify-content-start align-items-center\">\r\n\t\t\t\t\t<Button\r\n\t\t\t\t\t\tvariant='link'\r\n\t\t\t\t\t\tsize=\"sm\"\r\n\t\t\t\t\t\tclassName=\"py-0 px-1\"\r\n\t\t\t\t\t\tstyle={{ backgroundColor: 'transparent', borderWidth: '0' }}\r\n\t\t\t\t\t\tonClick={() => toggleCategory(categoryId)}\r\n\t\t\t\t\t\ttitle=\"Expand\"\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<FontAwesomeIcon icon={isExpanded ? faCaretDown : faCaretRight} color='orange' size='lg' />\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t\t<Button\r\n\t\t\t\t\t\tvariant='link'\r\n\t\t\t\t\t\tsize=\"sm\"\r\n\t\t\t\t\t\tclassName=\"py-0 mx-1 text-decoration-none\"\r\n\t\t\t\t\t\tonClick={() => onSelectCategory(categoryId)}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t{title}\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t\t<Button\r\n\t\t\t\t\t\tvariant={variant}\r\n\t\t\t\t\t\tsize=\"lg\"\r\n\t\t\t\t\t\tclassName=\"py-0 px-1\"\r\n\t\t\t\t\t\tstyle={{ backgroundColor: 'transparent', borderWidth: '0' }}\r\n\t\t\t\t\t\ttitle=\"Add a new Question\"\r\n\t\t\t\t\t\tonClick={() => add(category.categoryId, '', true)}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<FontAwesomeIcon icon={faPlus} size='xs' color='orange' />\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t\t{hoverProps.isHovered &&\r\n\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\tvariant={variant}\r\n\t\t\t\t\t\t\tsize=\"sm\"\r\n\t\t\t\t\t\t\tclassName=\"py-0 px-1\"\r\n\t\t\t\t\t\t\tstyle={{ backgroundColor: 'transparent', borderWidth: '0' }}\r\n\t\t\t\t\t\t\ttitle=\"Edit Category\"\r\n\t\t\t\t\t\t\tonClick={() => editCategory(categoryId)}>\r\n\t\t\t\t\t\t\t<FontAwesomeIcon icon={faEdit} color='lightblue' />\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t}\r\n\t\t\t\t\t{hoverProps.isHovered && questions.length === 0 &&\r\n\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\tsize=\"sm\"\r\n\t\t\t\t\t\t\tclassName=\"py-0 px-1\"\r\n\t\t\t\t\t\t\tstyle={{ backgroundColor: 'transparent', borderWidth: '0' }}\r\n\t\t\t\t\t\t\ttitle=\"Remove Category\"\r\n\t\t\t\t\t\t\tonClick={() => removeCategory(categoryId)}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<FontAwesomeIcon icon={faWindowClose} color='lightblue' />\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t}\r\n\t\t\t\t</div>\r\n\t\t\t</ListGroup.Item>\r\n\r\n\t\t\t{isExpanded &&\r\n\t\t\t\t<ListGroup.Item className=\"py-0\" variant={variant}>\r\n\t\t\t\t\t<ListGroup as=\"ul\" variant={variant} className=\"inner-list\">\r\n\t\t\t\t\t\t{questions.map(question =>\r\n\t\t\t\t\t\t\t<QuestionRow\r\n\t\t\t\t\t\t\t\tkey={question.questionId}\r\n\t\t\t\t\t\t\t\tquestion={question}\r\n\t\t\t\t\t\t\t\tonSelectQuestion={onSelectQuestion}\r\n\t\t\t\t\t\t\t\tedit={edit}\r\n\t\t\t\t\t\t\t\tremove={remove}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t</ListGroup>\r\n\t\t\t\t</ListGroup.Item>\r\n\t\t\t}\r\n\t\t</>\r\n\t)\r\n}\r\n\r\nexport default CategoryRow\r\n\r\n","import { useRef, useContext } from 'react'\r\nimport { faPlus, faWindowClose } from '@fortawesome/free-solid-svg-icons'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nimport { ThemeContext } from \"../../ThemeContext\";\r\n\r\nimport { ICategoryListProps } from '../types'\r\n\r\nimport QuestionRow from './QuestionRow';\r\nimport CategoryRow from './CategoryRow';\r\n\r\nimport { COLORS } from '../../formik/theme';\r\nimport { ListGroup } from 'react-bootstrap';\r\nconst color = 'blue';\r\n\r\nconst CategoryList: React.FC<ICategoryListProps> = (props: ICategoryListProps) => {\r\n\r\n\tconst theme = useContext(ThemeContext);\r\n\tconst { darkMode, variant, bg } = theme.state;\r\n\r\n\tconst { categories, categoryQuestions,\r\n\t\tcategoryIdEditing, onSelectCategory, onSelectQuestion, add, edit, remove, canEdit,\r\n\t\taddCategory, toggleCategory, editCategory, removeCategory, updateCategory, auth } = props;\r\n\r\n\r\n\tconst inputEl = useRef<HTMLInputElement>(null);\r\n\tsetTimeout(() => {\r\n\t\tif (inputEl.current !== null) {\r\n\t\t\tinputEl.current!.select();\r\n\t\t\tinputEl.current!.focus()\r\n\t\t}\r\n\t}, 100)\r\n\r\n\t// const expandCategory = (categoryId: number): void => {\r\n\t// \tconst div = document.querySelector<HTMLDivElement>(\"#divCategory\" + categoryId);\r\n\t// \tconsole.log(div)\r\n\t// \tdiv!.style.display = 'block';\r\n\t// }\r\n\r\n\tconsole.log('RENDERUJEM Categories ----------->>>>>>>>>>')\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<h5>Categories{' '}\r\n\t\t\t\t<button className=\"button-add-category button-edit\" title=\"Add a new Category\" onClick={() => addCategory()}>\r\n\t\t\t\t\t<FontAwesomeIcon icon={faPlus} size='xs' color='lightblue' />\r\n\t\t\t\t</button>\r\n\t\t\t</h5>\r\n\r\n\t\t\t<ListGroup as=\"ul\" variant={variant}>\r\n\t\t\t\t{categories.map(category => {\r\n\t\t\t\t\tconst { categoryId, title, isExpanded } = category;\r\n\t\t\t\t\tconst categoryState = categoryQuestions.get(categoryId);\r\n\t\t\t\t\tconst { questions } = categoryState!;\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\t// {categoryIdEditing === categoryId &&\r\n\t\t\t\t\t\t// \t<input ref={inputEl} name=\"groupTitle\" type=\"text\"\r\n\t\t\t\t\t\t// \t\tonBlur={(e) => updateCategory({ ...category, title: e.target.value })}\r\n\t\t\t\t\t\t// \t\tdefaultValue={title}\r\n\t\t\t\t\t\t// \t/>\r\n\t\t\t\t\t\t// }\r\n\t\t\t\t\t\t// {categoryIdEditing !== categoryId && (\r\n\t\t\t\t\t\t<CategoryRow\r\n\t\t\t\t\t\t\tkey={category.categoryId}\r\n\t\t\t\t\t\t\tcategory={category}\r\n\t\t\t\t\t\t\tquestions={questions}\r\n\t\t\t\t\t\t\tonSelectCategory={onSelectCategory}\r\n\t\t\t\t\t\t\ttoggleCategory={toggleCategory}\r\n\t\t\t\t\t\t\teditCategory={editCategory}\r\n\t\t\t\t\t\t\tremoveCategory={removeCategory}\r\n\t\t\t\t\t\t\tonSelectQuestion={onSelectQuestion}\r\n\t\t\t\t\t\t\tadd={add}\r\n\t\t\t\t\t\t\tedit={edit}\r\n\t\t\t\t\t\t\tremove={remove}\r\n\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t// )}\r\n\r\n\t\t\t\t\t);\r\n\t\t\t\t})\r\n\t\t\t\t}\r\n\t\t\t</ListGroup>\r\n\t\t</>\r\n\t)\r\n}\r\n\r\nexport default CategoryList","// import * as React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { IAppState } from '../../store/Store';\r\nimport { ICategory } from '../types'\r\nimport { IAnswer } from '../../Answers/types'\r\n\r\nimport { Dispatch } from 'redux';\r\n\r\nimport { QuestionActions,  \r\n\tgetQuestion, \r\n\taddQuestion, \r\n\teditQuestion,\r\n\tremoveQuestion,\r\n\tcloseQuestionForm,\r\n\topenQuestionForm,\r\n\taddCategory,\r\n\teditCategory,\r\n\tremoveCategory,\r\n\tstoreCategory,\r\n\tupdateCategory,\r\n\taddAndAssignNewAnswer,\r\n\ttoggleCategory,\r\n\tgetCategory\r\n} from '../actions'\r\n\r\nimport CategoryList from '../components/CategoryList'\r\n\r\ninterface IProps {\r\n\tcanEdit: boolean\r\n}\r\n\r\n// Grab the categories from the store and make them available on props\r\nconst mapStateToProps = (store: IAppState, ownProps: IProps ) => {\r\n\tconst {categoriesState, tagState, topState} = store;\r\n\t\r\n\tconst { \r\n\t\tcategories,\r\n\t\tcategoryQuestions,\r\n\t\tshowCategoryForm,\r\n\t\tcategory,\r\n\t\tshowQuestionForm,\r\n\t\tquestion,\r\n\t\tcategoryOptions,\r\n\t\tformMode,\r\n\t\tcategoryIdEditing,\r\n\t\tisDetail\r\n\t} = categoriesState;\r\n\r\n\treturn {\r\n\t\tcategories,\r\n\t\tcategoryQuestions,\r\n\t\tcategoryOptions,\r\n\t\tshowCategoryForm,\r\n\t\tcategory,\r\n\t\tshowQuestionForm,\r\n\t\tquestion,\r\n\t\tformMode,\r\n\t\tcategoryIdEditing,\r\n\t\tcanEdit: ownProps.canEdit,\r\n\t\tisDetail,\r\n\t\ttagOptions: tagState.tags.map(f => ({ label: f.name, value: f.tagId, color: f.color })),\r\n\t\tauth: topState.top.auth,\r\n\t\tnavbarOpen: topState.top.navbarOpen\r\n\t};\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch<QuestionActions>) => {\r\n\treturn {\r\n\t\tonSelectQuestion: (categoryId: number, questionId: number) => {\r\n\t\t\tdispatch<any>(getQuestion(categoryId, questionId));\r\n\t\t\tdispatch<any>(openQuestionForm());\r\n\t\t},\r\n\t\tadd: (categoryId: number, text: string, canEdit?: boolean) => {\r\n\t\t\tdispatch<any>(addQuestion(categoryId, text, canEdit))\r\n\t\t\tdispatch<any>(openQuestionForm());\r\n\t\t},\r\n\t\t//edit: (categoryId: number, questionId: number) => dispatch<any>(editQuestion(categoryId, questionId)),\r\n\t\tedit: (categoryId: number, questionId: number, showQuestionForm: boolean) => dispatch<any>(editQuestion(categoryId, questionId, showQuestionForm)),\r\n\t\tremove: (categoryId: number, questionId: number) => dispatch<any>(removeQuestion(categoryId, questionId)),\r\n\t\tcloseQuestionForm: () => dispatch<any>(closeQuestionForm()),\r\n\t\topenQuestionForm: () => dispatch<any>(openQuestionForm()),\r\n\r\n\t\t// question answer\r\n\t\taddAndAssignNewAnswer: (categoryId: number, questionId: number, answer: IAnswer, formMode: string) => {\r\n\t\t\tdispatch<any>(addAndAssignNewAnswer(categoryId, questionId, answer, formMode))\r\n\t\t},\r\n\t\t// groups\r\n\t\tonSelectCategory: (categoryId: number) => dispatch<any>(getCategory(categoryId, true)),\r\n\t\taddCategory: () => dispatch<any>(addCategory()),\r\n\t\ttoggleCategory: (categoryId: number) =>  dispatch<any>(toggleCategory(categoryId)),\r\n\t\teditCategory: (categoryId: number) =>  dispatch<any>(editCategory(categoryId)),\r\n\t\tremoveCategory: (categoryId: number) => dispatch<any>(removeCategory(true, categoryId)),\r\n\t\tstoreCategory: (group: ICategory) => dispatch<any>(storeCategory(true, group)),\r\n\t\tupdateCategory: (group: ICategory) => dispatch<any>(updateCategory(true, group)),\r\n\t}\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CategoryList)\r\n","import * as React from 'react';\r\nimport { useRef, useState, useContext } from 'react'\r\n\r\nimport { ICategoriesProps } from '../types'\r\n\r\nimport { AutoSuggest } from '../../components/AutoSuggest';\r\nimport ContainerCategoryForm from '../containers/ContainerCategoryForm';\r\nimport ContainerQuestionForm from '../containers/ContainerQuestionForm';\r\nimport { useParams } from 'react-router-dom' // useRouteMatch\r\nimport { ThemeContext } from \"../../ThemeContext\";\r\n\r\nimport { COLORS } from '../../formik/theme';\r\nimport { Col, Container, Row } from 'react-bootstrap';\r\nimport ContainerCategoryList from '../containers/ContainerCategoryList';\r\n\r\nconst color = 'blue';\r\n\r\ntype SupportParams = {\r\n\ttekst: string;\r\n};\r\n\r\nconst Page: React.FC<ICategoriesProps> = (props: ICategoriesProps) => {\r\n\r\n\tlet { tekst } = useParams<SupportParams>();\r\n\r\n\tconst { \r\n\t\tcategories, \r\n\t\tcategoryQuestions, \r\n\t\tshowCategoryForm, \r\n\t\tcategory, \r\n\t\tshowQuestionForm, \r\n\t\tquestion, \r\n\t\tformMode, \r\n\t\tcanEdit,\r\n\t\tonSelectQuestion } = props;\r\n\r\n\t//const [open, setOpen] = useState(false);\r\n\tconst open = categories && (category || question)\r\n\r\n\tconst inputEl = useRef<HTMLInputElement>(null);\r\n\tsetTimeout(() => {\r\n\t\tif (inputEl.current !== null) {\r\n\t\t\tinputEl.current!.select();\r\n\t\t\tinputEl.current!.focus()\r\n\t\t}\r\n\t}, 100)\r\n\r\n\tconsole.log('RENDERUJEM Categories ----------->>>>>>>>>>')\r\n\t\r\n\tconst theme = useContext(ThemeContext);\r\n\tconst { darkMode, variant, bg } = theme.state;\r\n\t\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Container fluid>\r\n\t\t\t\t<Row className={`${darkMode ? \"dark\" : \"light\"}`}>\r\n\t\t\t\t\t<Col md={7}>\r\n\t\t\t\t\t\t<div style={{ border: '0px solid silver' }}>\r\n\t\t\t\t\t\t\t<AutoSuggest\r\n\t\t\t\t\t\t\t\tcategories={categories}\r\n\t\t\t\t\t\t\t\tcategoryQuestions={categoryQuestions}\r\n\t\t\t\t\t\t\t\ttekst={tekst}\r\n\t\t\t\t\t\t\t\tonSelectQuestion={(categoryId: number, questionId: number) => onSelectQuestion(categoryId, questionId)}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<hr />\r\n\t\t\t\t\t\t\t{/* <h3>Categories</h3> */}\r\n\t\t\t\t\t\t\t{categories && \r\n\t\t\t\t\t\t\t\t<ContainerCategoryList {...props} />\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t\t<Col md={5}>\r\n\t\t\t\t\t\t<div \r\n\t\t\t\t\t\t\tclassName={`${darkMode ? \"dark\" : \"light\"}`}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t{categories && showCategoryForm && category &&\r\n\t\t\t\t\t\t\t\t<div style={{ border: '1px solid silver', borderRadius: '5px', padding: '5px 5px 15px 5px' }}>\r\n\t\t\t\t\t\t\t\t\t<h4 style={{ marginTop: 0}}>Category</h4>\r\n\t\t\t\t\t\t\t\t\t<ContainerCategoryForm canEdit={formMode === 'display' ? false: canEdit} />\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t{categories && showQuestionForm && question &&\r\n\t\t\t\t\t\t\t\t<div style={{ border: '1px solid silver', borderRadius: '5px', padding: '5px 5px 15px 5px' }}>\r\n\t\t\t\t\t\t\t\t\t<h4 style={{ marginTop: 0 }}>Question</h4>\r\n\t\t\t\t\t\t\t\t\t<ContainerQuestionForm canEdit={formMode === 'display' ? false: canEdit} handleClose={() => { }} />\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t\t{/* </Collapse> */}\r\n\t\t\t\t</Row>\r\n\t\t\t</Container>\r\n\t\t</>\r\n\t);\r\n}\r\n\r\nexport default Page;","import React, { useState, useContext } from 'react';\r\nimport { useParams } from 'react-router-dom' // useRouteMatch\r\n\r\nimport { IQuestion, ICategoriesProps, initialQuestion } from '../types';\r\n\r\nimport { AutoSuggest } from '../../components/AutoSuggest';\r\nimport ContainerQuestionForm from '../containers/ContainerQuestionForm'\r\nimport { ThemeContext } from \"../../ThemeContext\";\r\n\r\nimport { COLORS } from '../../formik/theme';\r\nimport { faPlus, faWindowClose } from '@fortawesome/free-solid-svg-icons'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport { Select } from '../../common/Select';\r\nimport { Col, Container, Row } from 'react-bootstrap';\r\n\r\nconst color = 'blue';\r\n\r\ntype SupportParams = {\r\n\ttekst: string;\r\n};\r\n\r\nconst SupportPage: React.FC<ICategoriesProps> = (props: ICategoriesProps) => {\r\n\tlet { tekst } = useParams<SupportParams>();\r\n\tconst { categories, categoryQuestions, category, question, showQuestionForm, onSelectQuestion, add, closeQuestionForm, canEdit } = props;\r\n\tconsole.log('tekst:', tekst)\r\n\tconst [show, setShow] = useState(false);\r\n\tconst handleClose = () => setShow(false);\r\n\tconst handleShow = () => setShow(true);\r\n\tconst open = categories && (category || question)\r\n\r\n\tconst theme = useContext(ThemeContext);\r\n\tconst { darkMode, variant, bg } = theme.state;\r\n\r\n\t// if (showQuestionForm)\r\n\t// \tcloseQuestionForm();\r\n\t\r\n\treturn (\r\n\t\t<Container fluid>\r\n\t\t\t<Row className={`${darkMode ? \"dark\" : \"\"}`}>\r\n\t\t\t\t<Col md={open ? 6 : 12} lg={open ? 6 : 12}>\r\n\t\t\t\t\t<div style={{ display: 'flex', alignItems: 'center' }}>\r\n\t\t\t\t\t\t{/* Support Page tekst: {tekst} */}\r\n\t\t\t\t\t\t<AutoSuggest\r\n\t\t\t\t\t\t\tcategories={categories}\r\n\t\t\t\t\t\t\tcategoryQuestions={categoryQuestions}\r\n\t\t\t\t\t\t\ttekst={tekst}\r\n\t\t\t\t\t\t\tonSelectQuestion={(categoryId: number, questionId: number) => onSelectQuestion(categoryId, questionId)}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\tvariant={variant}\r\n\t\t\t\t\t\t\tclassName=\"button-edit\"\r\n\t\t\t\t\t\t\ttitle=\"Create a new Question\"\r\n\t\t\t\t\t\t\tonClick={() => { add(0, tekst ?? '', true); handleShow(); }}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<FontAwesomeIcon icon={faPlus} size=\"lg\" />\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"b\">\r\n\t\t\t\t\t\t{categories && question && showQuestionForm &&\r\n\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t<h4>Question</h4>\r\n\t\t\t\t\t\t\t\t<ContainerQuestionForm canEdit={canEdit} handleClose={() => { }} />\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</Col>\r\n\t\t\t</Row>\r\n\t\t\t<Modal show={show} onHide={handleClose} animation={true} size=\"sm\" centered \r\n\t\t\t\tclassName={`${darkMode ? \"dark\" : \"\"}`}\r\n\t\t\t\tcontentClassName={`${darkMode ? \"dark\" : \"\"}`}>\r\n\t\t\t\t<Modal.Header closeButton>\r\n\t\t\t\t\t<Modal.Title>Store question</Modal.Title>\r\n\t\t\t\t</Modal.Header>\r\n\t\t\t\t<Modal.Body>\r\n\t\t\t\t\t<ContainerQuestionForm canEdit={canEdit} handleClose={handleClose} />\r\n\t\t\t\t</Modal.Body>\r\n\t\t\t\t{/* <Modal.Footer>\r\n\t\t\t\t\t<Button variant=\"secondary\" onClick={handleClose}>\r\n\t\t\t\t\t\tClose\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t\t<Button variant=\"primary\" onClick={handleClose}>\r\n\t\t\t\t\t\tSave Changes\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t</Modal.Footer> */}\r\n\t\t\t</Modal>\r\n\t\t</Container>\r\n\r\n\t);\r\n}\r\n\r\nexport default SupportPage\r\n\r\n","// import * as React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { IAppState } from '../../store/Store';\r\nimport { IQuestion, IQuestionAnswer, ICategory } from '../types'\r\nimport { IAnswer } from '../../Answers/types'\r\n\r\nimport { Dispatch } from 'redux';  // ActionCreatorsMapObject, \r\n\r\nimport { QuestionActions,  \r\n\tgetQuestion, \r\n\taddQuestion, \r\n\tcloseQuestionForm,\r\n\topenQuestionForm,\r\n} from '../actions'\r\n\r\nimport CategoriesPage from '../components/CategoriesPage'\r\nimport SupportPage from '../components/SuportPage'\r\n\r\ninterface IProps {\r\n\tcanEdit: boolean\r\n}\r\n\r\n// Grab the categories from the store and make them available on props\r\nconst mapStateToProps = (store: IAppState, ownProps: IProps ) => {\r\n\tconst {categoriesState, tagState, topState} = store;\r\n\t\r\n\tconst { \r\n\t\tcategories,\r\n\t\tcategoryQuestions,\r\n\t\tshowCategoryForm,\r\n\t\tcategory,\r\n\t\tshowQuestionForm,\r\n\t\tquestion,\r\n\t\tcategoryOptions,\r\n\t\tformMode,\r\n\t\tcategoryIdEditing,\r\n\t\tisDetail\r\n\t} = categoriesState;\r\n\r\n\treturn {\r\n\t\tcategories,\r\n\t\tcategoryQuestions,\r\n\t\tcategoryOptions,\r\n\t\tshowCategoryForm,\r\n\t\tcategory,\r\n\t\tshowQuestionForm,\r\n\t\tquestion,\r\n\t\tformMode,\r\n\t\tcategoryIdEditing,\r\n\t\tcanEdit: ownProps.canEdit,\r\n\t\tisDetail,\r\n\t\ttagOptions: tagState.tags.map(f => ({ label: f.name, value: f.tagId, color: f.color })),\r\n\t\t//who: topState.top.auth!.who,\r\n\t\tauth: topState.top.auth,\r\n\t\tnavbarOpen: topState.top.navbarOpen\r\n\t};\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch<QuestionActions>) => {\r\n\treturn {\r\n\t\tonSelectQuestion: (categoryId: number, questionId: number) => {\r\n\t\t\tdispatch<any>(getQuestion(categoryId, questionId));\r\n\t\t\tdispatch<any>(openQuestionForm());\r\n\t\t},\r\n\t\tadd: (categoryId: number, text: string, canEdit?: boolean) => dispatch<any>(addQuestion(categoryId, text, canEdit)),\r\n\t\tcloseQuestionForm: () => dispatch<any>(closeQuestionForm())\r\n\t}\r\n}\r\n\r\n\r\nexport default {\r\n\tcategories: connect(mapStateToProps, mapDispatchToProps)(CategoriesPage),\r\n\tsupporter: connect(mapStateToProps, mapDispatchToProps)(SupportPage)\r\n};","import * as React from 'react';\r\n\r\nimport containers from '../Categories/containers/ContainerCategoriesPage'\r\n\r\n// type TParams = { id: string };\r\n\r\n// function Product({ match }: RouteComponentProps<TParams>) {\r\n//   return <h2>This is a page for product with ID: {match.params.id} </h2>;\r\n// }\r\n\r\nsetTimeout(() => {\r\n  const div = document.querySelector('#divKnowledge');\r\n  if (div)\r\n    div!.setAttribute('style', 'display:none') \r\n}, 10000)\r\n\r\nconst Support: React.FC<{}> = () => { \r\n  return (\r\n    <>\r\n      <h2 style={{textAlign: 'center', marginBlockStart: '0.66rem', marginBlockEnd: '0.1rem' }}>Questions &amp; Answers</h2>\r\n      <div id='divKnowledge' className='knowledge'>\r\n        <h5 style={{textAlign: 'center', color: 'blue', fontSize:'15px'}}><i>A knowledge base for sharing information. \r\n          <br/>When you record your experiences and insights, <br/>other members of your team can share info.\r\n          </i></h5>\r\n      </div>\r\n      <containers.supporter canEdit={true} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Support;","import React, { useContext } from 'react';\r\nimport { Button, Container, Form } from \"react-bootstrap\";\r\nimport { useFormik } from 'formik';\r\nimport * as Yup from 'yup'\r\nimport { IAnswer } from '../types';\r\nimport UserName from '../../common/containers/UserName'\r\nimport { ThemeContext } from '../../ThemeContext';\r\n\r\ninterface IProps {\r\n\tanswer: IAnswer;\r\n\tformMode: string;\r\n\toptions?: string[];\r\n\tcancel: () => void;\r\n\tsaveForm: (answer: IAnswer, formMode: string) => void;\r\n}\r\n\r\n\r\nconst AnsForm: React.FC<IProps> = (props: IProps) => {\r\n\tconst formik = useFormik({\r\n\t\tenableReinitialize: true,\r\n\t\tinitialValues: {\r\n\t\t\tanswerId: props.answer.answerId,\r\n\t\t\ttext: props.answer.text,\r\n\t\t\tcreatedBy: props.answer.createdBy,\r\n\t\t\tcreated: props.answer.created,\r\n\t\t},\r\n\t\tvalidationSchema: Yup.object({\r\n\t\t\ttext: Yup.string()\r\n\t\t\t\t.max(150, 'Must be 150 characters or less')\r\n\t\t\t\t.required('Required'),\r\n\t\t}),\r\n\t\tonSubmit: (values) => {\r\n\t\t\t// alert(JSON.stringify(values, null, 2));\r\n\t\t\tprops.saveForm(values, props.formMode)\r\n\t\t},\r\n\t});\r\n\r\n\tconst isEdit = () => props.formMode === 'edit';\r\n\tconsole.log('RENDERING', formik.values)\r\n\r\n\treturn (\r\n\t\t<Form onSubmit={formik.handleSubmit}>\r\n\t\t\t{isEdit() &&\r\n\t\t\t\t<Form.Group controlId=\"answerId\">\r\n\t\t\t\t\t<Form.Label>Id: </Form.Label>\r\n\t\t\t\t\t<span> {formik.values.answerId}</span>\r\n\t\t\t\t</Form.Group>\r\n\t\t\t}\r\n\r\n\r\n\t\t\t<Form.Group controlId=\"text\">\r\n\t\t\t\t<Form.Label>Answer</Form.Label>\r\n\t\t\t\t<Form.Control\r\n\t\t\t\t\tas=\"textarea\"\r\n\t\t\t\t\tname=\"text\"\r\n\t\t\t\t\tonChange={formik.handleChange}\r\n\t\t\t\t\t//onBlur={formik.handleBlur}\r\n\t\t\t\t\tonBlur={(e: React.FocusEvent<HTMLTextAreaElement>): void => {\r\n\t\t\t\t\t\tif (isEdit() && formik.initialValues.text !== formik.values.text)\r\n\t\t\t\t\t\t\tformik.submitForm();\r\n\t\t\t\t\t}}\r\n\t\t\t\t\tvalue={formik.values.text}\r\n\t\t\t\t\tstyle={{ width: '100%' }}\r\n\t\t\t\t\trows={2}\r\n\t\t\t\t/>\r\n\t\t\t\t<Form.Text className=\"text-danger\">\r\n\t\t\t\t\t{formik.touched.text && formik.errors.text ? (\r\n\t\t\t\t\t\t<div className=\"text-danger\">{formik.errors.text}</div>\r\n\t\t\t\t\t) : null}\r\n\t\t\t\t</Form.Text>\r\n\t\t\t</Form.Group>\r\n\r\n\t\t\t<Form.Group controlId=\"createdBy\">\r\n\t\t\t\t<Form.Label>Created by:</Form.Label>\r\n\t\t\t\t<UserName id={formik.values.createdBy} />\r\n\t\t\t</Form.Group>\r\n\t\t\t{/* <br /> */}\r\n\t\t\t<Form.Group controlId=\"created\">\r\n\t\t\t\t<Form.Label className=\"id\">Created:</Form.Label>\r\n\t\t\t\t<span>{formik.values.created.toLocaleDateString()}</span>\r\n\t\t\t</Form.Group>\r\n\r\n\t\t\t{!isEdit() &&\r\n\t\t\t\t<div className=\"buttons\">\r\n\t\t\t\t\t<Button\r\n\t\t\t\t\t\tvariant=\"secondary\"\r\n\t\t\t\t\t\tsize=\"sm\"\r\n\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\tprops.cancel();\r\n\t\t\t\t\t\t\t//props.handleClose()\r\n\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\tCancel\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t\t<Button\r\n\t\t\t\t\t\tvariant=\"primary\"\r\n\t\t\t\t\t\tsize=\"sm\"\r\n\t\t\t\t\t\ttype=\"submit\"\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\tSave\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t</div>\r\n\t\t\t}\r\n\t\t</Form>\r\n\t);\r\n};\r\n\r\nexport const AnswerForm: React.FC<IProps> = (props: IProps) => {\r\n\tconst theme = useContext(ThemeContext);\r\n\tconst { darkMode, variant, bg } = theme.state;\r\n\r\n\treturn (\r\n\t\t<Container className={`${darkMode ? \"dark\" : \"\"}`}>\r\n\t\t\t<AnsForm {...props} />\r\n\t\t</Container>\r\n\t)\r\n}","import * as React from 'react';\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faWindowClose, faEdit } from '@fortawesome/free-solid-svg-icons'\r\n\r\nimport { IAnswer } from '../types';\r\nimport { IQuestionAnswer } from '../../Categories/types';\r\n\r\ninterface IProps {\r\n\tanswer: IAnswer,\r\n\tusedAnswers: IQuestionAnswer[],\r\n\tgetCategoryQuestion: (categoryId: number, questionId: number) => string,\r\n\tedit: (answerId: number) => void;\r\n\tremove: (answerId: number) => void;\r\n}\r\n\r\nexport const ListRow: React.FC<IProps> = (props: IProps) => {\r\n\tconst { answer, usedAnswers, getCategoryQuestion, edit, remove } = props;\r\n\treturn (\r\n\t\t<tr key={answer.answerId} >\r\n\t\t\t<td>\r\n\t\t\t\t{answer.answerId}\r\n\t\t\t</td>\r\n\t\t\t<td>\r\n\t\t\t\t{answer.text}\r\n\t\t\t</td>\r\n\t\t\t<td>\r\n\t\t\t\t<button\r\n\t\t\t\t\tclassName=\"button-edit\"\r\n\t\t\t\t\ttitle=\"Add a new Answer\"\r\n\t\t\t\t\tonClick={() => edit(answer.answerId)}>\r\n\t\t\t\t\t<FontAwesomeIcon icon={faEdit} color='lightblue' />\r\n\t\t\t\t</button>\r\n\t\t\t</td>\r\n\t\t\t<td>\r\n\t\t\t\t<button\r\n\t\t\t\t\tclassName=\"button-remove\"\r\n\t\t\t\t\ttitle=\"Remove Answer\"\r\n\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\tconst qa = usedAnswers.find(a => a.answerId === answer.answerId);\r\n\t\t\t\t\t\tif (qa)\r\n\t\t\t\t\t\t\talert(`Answer is assigned to the question: \\n\"${getCategoryQuestion(qa.categoryId!, qa.questionId!)}\". \\nFirst unassign answer from question!`)\r\n\t\t\t\t\t\telse\r\n\t\t\t\t\t\t\tremove(answer.answerId)\r\n\t\t\t\t\t}\r\n\t\t\t\t\t}>\r\n\t\t\t\t\t<FontAwesomeIcon icon={faWindowClose} color='lightblue' />\r\n\t\t\t\t</button>\r\n\t\t\t</td>\r\n\t\t</tr>\r\n\t);\r\n}\r\n\r\n","import * as React from 'react';\r\nimport { useContext } from 'react';\r\nimport { Table } from 'react-bootstrap';\r\nimport { IQuestionAnswer } from '../../Categories/types';\r\nimport { ThemeContext } from '../../ThemeContext';\r\n\r\nimport { IAnswer } from '../types';\r\nimport { ListRow } from './ListRow';\r\n\r\ninterface IProps {\r\n\tanswers: IAnswer[],\r\n\tusedAnswers: IQuestionAnswer[],\r\n\tgetCategoryQuestion: (categoryId: number, questionId: number) => string,\r\n\tedit: (answerId: number) => void;\r\n\tremove: (answerId: number) => void;\r\n}\r\n\r\nconst List: React.FC<IProps> = (props: IProps) => {\r\n\tconst { answers, usedAnswers, getCategoryQuestion, edit, remove } = props;\r\n\r\n\tconst theme = useContext(ThemeContext);\r\n\tconst { darkMode, variant, bg } = theme.state;\r\n\r\n\treturn (\r\n\t\t<Table variant={variant} responsive striped bordered hover size=\"sm\">\r\n\t\t\t<thead>\r\n\t\t\t\t<tr>\r\n\t\t\t\t\t<th>Id</th>\r\n\t\t\t\t\t<th>Answer</th>\r\n\t\t\t\t\t<th></th>\r\n\t\t\t\t\t<th></th>\r\n\t\t\t\t</tr>\r\n\t\t\t</thead>\r\n\t\t\t<tbody>\r\n\t\t\t\t{ answers.map(answer => \r\n\t\t\t\t\t<ListRow\r\n\t\t\t\t\t\tkey={answer.answerId}\r\n\t\t\t\t\t\tanswer={answer}\r\n\t\t\t\t\t\tusedAnswers={usedAnswers}\r\n\t\t\t\t\t\tgetCategoryQuestion={getCategoryQuestion}\r\n\t\t\t\t\t\tedit={edit}\r\n\t\t\t\t\t\tremove={remove}\r\n\t\t\t\t\t/>\r\n\t\t\t\t)}\r\n\t\t\t</tbody>\r\n\t\t</Table>\r\n\t);\r\n  }\r\n\r\nexport default List\r\n\r\n","import { useContext } from 'react';\r\nimport { useParams } from 'react-router-dom' // useRouteMatch\r\nimport { ThemeContext } from \"../../ThemeContext\";\r\n\r\nimport { IAnswer } from '../types';\r\nimport { AnswerForm } from './Form'\r\nimport List from './List';\r\nimport { COLORS } from '../../formik/theme';\r\nimport { IQuestionAnswer } from '../../Categories/types';\r\nimport { Button, Col, Container, Row } from 'react-bootstrap';\r\nconst color = 'blue';\r\n\r\ninterface IProps {\r\n\tanswers: IAnswer[],\r\n\tanswer: IAnswer,\r\n\tusedAnswers: IQuestionAnswer[],\r\n\tgetCategoryQuestion: (categoryId: number, questionId: number) => string,\r\n\tformMode: string,\r\n\tadd: () => void;\r\n\tedit: (answerId: number) => void;\r\n\tremove: (answerId: number) => void;\r\n\tcancel: () => void;\r\n\tsaveForm: (answer: IAnswer, formMode: string) => void;\r\n}\r\n\r\ntype MyParams = {\r\n\tslug: string;\r\n};\r\n\r\nconst Page: React.FC<IProps> = (props: IProps) => {\r\n\tlet { slug } = useParams<MyParams>();\r\n\r\n\tconst theme = useContext(ThemeContext);\r\n\tconst { darkMode, variant, bg } = theme.state;\r\n\r\n\t// slug = ''\r\n\tconst { answers, answer, usedAnswers, getCategoryQuestion, formMode, add, edit, remove, cancel, saveForm } = props;\r\n\treturn (\r\n\t\t<Container fluid>\r\n\t\t\t<Row className={`${darkMode ? \"dark\" : \"light\"}`}>\r\n\t\t\t\t<Col md={7}>\r\n\t\t\t\t\t<div className={`${darkMode ? \"dark\" : \"\"}`}>\r\n\t\t\t\t\t\t<Button variant=\"primary\" onClick={() => add()} className=\"mb-1\">Add new</Button>\r\n\t\t\t\t\t\t{answers.length === 0 ? (\r\n\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t{'No answers at all  '}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t\t: (\r\n\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t<List\r\n\t\t\t\t\t\t\t\t\tanswers={answers}\r\n\t\t\t\t\t\t\t\t\tusedAnswers={usedAnswers}\r\n\t\t\t\t\t\t\t\t\tgetCategoryQuestion={getCategoryQuestion}\r\n\t\t\t\t\t\t\t\t\tedit={edit}\r\n\t\t\t\t\t\t\t\t\tremove={remove} />\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</Col>\r\n\t\t\t\t<Col md={5}>\r\n\t\t\t\t\t<div className={`${darkMode ? \"dark\" : \"light\"}`}>\r\n\t\t\t\t\t\t{answer &&\r\n\t\t\t\t\t\t\t<div style={{ border: '1px solid silver', borderRadius: '5px', padding: '5px 5px 15px 5px' }}>\r\n\t\t\t\t\t\t\t\t<h4>\r\n\t\t\t\t\t\t\t\t\t{formMode === 'add' ? 'New Answer' : 'Answer'}\r\n\t\t\t\t\t\t\t\t</h4>\r\n\t\t\t\t\t\t\t\t<AnswerForm\r\n\t\t\t\t\t\t\t\t\tanswer={answer}\r\n\t\t\t\t\t\t\t\t\tformMode={formMode}\r\n\t\t\t\t\t\t\t\t\tcancel={cancel}\r\n\t\t\t\t\t\t\t\t\tsaveForm={(answer: IAnswer) => saveForm(answer, formMode)}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t</Col>\r\n\t\t\t</Row>\r\n\t\t</Container>\r\n\t);\r\n}\r\n\r\nexport default Page\r\n\r\n","// import * as React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Dispatch } from 'redux';\r\n\r\nimport { IAppState } from '../../store/Store';\r\n\r\nimport { AnswerActions,  addAnswer, editAnswer, removeAnswer, storeAnswer, cancelAnswer } from '../actions' // , IAddAnswer\r\n\r\nimport { IAnswer } from '../types'\r\n\r\nimport Page from '../components/Page'\r\nimport { IQuestionAnswer, ICategory, ICategoriesState } from '../../Categories/types';\r\n\r\nconst getUsedAnswers = (categoriesState: ICategoriesState) : IQuestionAnswer[]=> {\r\n\tconst { categories, categoryQuestions } = categoriesState;\r\n\tlet questionAnswers: IQuestionAnswer[] = [];\r\n\tfor (let category of categories) {\r\n\t\tconst categoryState = categoryQuestions.get(category.categoryId)!;\r\n\t\tfor (let question of categoryState.questions) {\r\n\t\t\tconst arr = question.answers.map(a => ({\r\n\t\t\t\t...a,\r\n\t\t\t\tcategoryId: category.categoryId,\r\n\t\t\t\tquestionId: question.questionId\r\n\t\t\t}))\r\n\t\t\tquestionAnswers = questionAnswers.concat(arr)\r\n\t\t}\r\n\t}\r\n\treturn questionAnswers;\r\n}\r\n\r\nconst getCategoryQuestion = (categoriesState: ICategoriesState, categoryId: number, questionId: number) : string => {\r\n\tconst { categories, categoryQuestions } = categoriesState;\r\n\tconst category = categories.find( g => g.categoryId === categoryId);\r\n\tconst categoryState = categoryQuestions.get(category!.categoryId)!;\r\n\tconst question = categoryState.questions.find(q => q.questionId === questionId);\r\n\treturn `${category!.title}/${question!.text}`;\r\n\r\n}\r\n\r\nconst mapStateToProps = (store: IAppState) => {\r\n  return {\r\n\tanswers: store.answerState.answers,\r\n\tanswer: store.answerState.answer!,\r\n\tformMode: store.answerState.formMode,\r\n\tusedAnswers: getUsedAnswers(store.categoriesState),\r\n\tgetCategoryQuestion: (categoryId: number, questionId: number): string => getCategoryQuestion(store.categoriesState, categoryId, questionId),\r\n\twho: store.topState.top.auth!.who\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch<AnswerActions>) => {\r\n\treturn {\r\n\t\t//setFormMode: (formMode: string) => dispatch<any>(setFormMode(formMode)),\r\n\t\tadd: () => dispatch<any>(addAnswer()),\r\n\t\tedit: (answerId: number) => dispatch<any>(editAnswer(answerId)),\r\n\t\tremove: (answerId: number) => dispatch<any>(removeAnswer(answerId)),\r\n\t\tsaveForm: (answer: IAnswer, formMode: string) => dispatch<any>(storeAnswer(answer, formMode)),\r\n\t\tcancel: () => dispatch<any>(cancelAnswer()),\r\n\t}\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Page);","import React, { useContext } from 'react';\r\nimport { useFormik } from 'formik';\r\nimport * as Yup from 'yup'\r\nimport { IUser } from '../types';\r\n\r\nimport { Select } from '../../common/Select';\r\nimport { IFormProps } from '../types'\r\nimport UserName from '../../common/containers/UserName';\r\n\r\nimport { Button, Container, Row, Form } from \"react-bootstrap\";\r\nimport { ThemeContext } from '../../ThemeContext';\r\n\r\nconst UsrForm: React.FC<IFormProps> = (props: IFormProps) => {\r\n  const { userEditing, auth } = props;\r\n  const { who } = auth!;\r\n  const { roleId, userId, userName, pwd, department, createdBy, created } = userEditing!;\r\n  const formik = useFormik({\r\n    enableReinitialize: true,\r\n    initialValues: {\r\n      roleId,\r\n      userId,\r\n      userName,\r\n      pwd,\r\n      department,\r\n      createdBy,\r\n      created\r\n    },\r\n    validationSchema: Yup.object({\r\n      roleId: Yup.string()\r\n        .required('Required'),\r\n      //.notOneOf(['11']),\r\n      userName: Yup.string()\r\n        .max(64, 'Must be 64 characters or less')\r\n        .required('Required'),\r\n      pwd: Yup\r\n        .string()\r\n        .min(7)\r\n        .max(16)\r\n        .required()\r\n    }),\r\n    onSubmit: values => {\r\n      alert(JSON.stringify(values, null, 2));\r\n      if (who.roleId !== 11)\r\n        alert(\"Only Owner can maintain Users\")\r\n      else\r\n        props.saveForm(values, props.formMode)\r\n    }\r\n  });\r\n\r\n  const isEdit = () => props.formMode === 'edit';\r\n\r\n  console.log('RENDERING user', formik.values)\r\n\r\n  return (\r\n    <Form onSubmit={formik.handleSubmit}>\r\n\r\n      <Form.Group controlId=\"userId\">\r\n        <Form.Label>UserId:</Form.Label><span id=\"userId\">{' '}{formik.values.userId}</span>\r\n      </Form.Group>\r\n\r\n      <Form.Group controlId=\"roleId\">\r\n        <Form.Label>Role</Form.Label>\r\n        <Select\r\n          id=\"roleId\"\r\n          name=\"roleId\"\r\n          options={roleId === 11 ? props.roleOptions : props.roleOptions.filter(r => r.value !== 11)}\r\n          //onChange={formik.handleChange}\r\n          onChange={(e, value) => {\r\n            formik.setFieldValue(\"roleId\", value);\r\n            if (isEdit()) formik.submitForm();\r\n          }}\r\n          value={formik.values.roleId}\r\n          disabled={roleId === 11}\r\n        />\r\n      </Form.Group>\r\n\r\n      <Form.Group controlId=\"userName\">\r\n        <Form.Label>Name</Form.Label>\r\n        <Form.Control\r\n          as=\"input\"\r\n          name=\"userName\"\r\n          onChange={formik.handleChange}\r\n          //onBlur={formik.handleBlur}\r\n          onBlur={(e: React.FocusEvent<HTMLTextAreaElement>): void => {\r\n            if (isEdit() && formik.initialValues.userName !== formik.values.userName)\r\n              formik.submitForm();\r\n          }}\r\n          value={formik.values.userName}\r\n          style={{ width: '100%' }}\r\n        />\r\n        <Form.Text className=\"text-danger\">\r\n          {formik.touched.userName && formik.errors.userName ? (\r\n            <div className=\"text-danger\">{formik.errors.userName}</div>\r\n          ) : null}\r\n        </Form.Text>\r\n      </Form.Group>\r\n\r\n      <Form.Group className=\"mb-3\" controlId=\"pwd\">\r\n        <Form.Label>Password</Form.Label>\r\n        <Form.Control\r\n          type=\"password\"\r\n          placeholder=\"Password\"\r\n          name=\"pwd\"\r\n          value={formik.values.pwd}\r\n          onChange={formik.handleChange}\r\n          onBlur={(e: React.FocusEvent<HTMLTextAreaElement>): void => {\r\n            if (isEdit() && formik.initialValues.pwd !== formik.values.pwd)\r\n              formik.submitForm();\r\n          }}\r\n        />\r\n        <Form.Text className=\"text-danger\">\r\n          {formik.touched.pwd && formik.errors.pwd ? (\r\n            <div className=\"text-danger\">{formik.errors.pwd}</div>\r\n          ) : null}\r\n        </Form.Text>\r\n      </Form.Group>\r\n\r\n      {/* <button type=\"submit\">Submit</button> */}\r\n      <Form.Group controlId=\"createdBy\">\r\n        <Form.Label>Created by:</Form.Label>\r\n        <UserName id={formik.values.createdBy} />\r\n      </Form.Group>\r\n\r\n      {/* <br /> */}\r\n      <Form.Group controlId=\"created\">\r\n        <Form.Label className=\"id\">Created:</Form.Label>\r\n        <span>{formik.values.created.toLocaleDateString()}</span>\r\n      </Form.Group>\r\n\r\n      {!isEdit() &&\r\n        <div className=\"buttons\">\r\n          {props.canEdit &&\r\n            <Button\r\n              variant=\"secondary\"\r\n              size=\"sm\"\r\n              onClick={() => {\r\n                props.cancel();\r\n                // props.handleClose()\r\n              }}>\r\n              Cancel\r\n            </Button>}\r\n          {props.canEdit &&\r\n            <Button\r\n              variant=\"primary\"\r\n              size=\"sm\"\r\n              type=\"submit\"\r\n            >\r\n              Save\r\n            </Button>}\r\n        </div>\r\n      }\r\n    </Form>\r\n  );\r\n};\r\n\r\n\r\nexport const UserForm: React.FC<IFormProps> = (props: IFormProps) => {\r\n  const theme = useContext(ThemeContext);\r\n  const { darkMode, variant, bg } = theme.state;\r\n  return (\r\n    <Container className={`${darkMode ? \"dark\" : \"\"}`}>\r\n      <UsrForm {...props} />\r\n    </Container>\r\n  )\r\n}","// import * as React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { IAppState } from '../../store/Store';\r\nimport { IUser, IRole } from '../types'\r\n\r\nimport { Dispatch } from 'redux';  // ActionCreatorsMapObject, \r\n\r\nimport { UserActions,  \r\n\tgetUser, \r\n\taddUser, \r\n\teditUser,\r\n\tremoveUser,\r\n\tstoreUser,\r\n\tcancelUser,\r\n\tsetIsDetail\r\n} from '../actions'\r\n\r\nimport {UserForm}  from '../components/UserForm'\r\n\r\ninterface IProps {\r\n\tcanEdit: boolean\r\n}\r\n\r\n// Grab the users from the store and make them available on props\r\nconst mapStateToProps = (store: IAppState, ownProps: IProps ) => {\r\n\tconst {usersState, tagState, topState} = store;\r\n\tconst { roles, userEditing, roleOptions, formMode, roleIdEditing } = usersState; \r\n\treturn {\r\n\t\tauth: topState.top.auth,\r\n\t\troles,\r\n\t\troleOptions,\r\n\t\tuserEditing,\r\n\t\tformMode,\r\n\t\troleIdEditing,\r\n\t\tcanEdit: ownProps.canEdit\r\n\t};\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch<UserActions>) => {\r\n\treturn {\r\n\t\tonSelectUser: (userId: number) => dispatch<any>(getUser(userId)),\r\n\t\tadd: (userRoleId: number, text: string, canEdit?: boolean) => dispatch<any>(addUser(userRoleId, text, canEdit)),\r\n\t\tedit: (userRoleId: number, userId: number) => dispatch<any>(editUser(userRoleId, userId)),\r\n\t\tremove: (userRoleId: number, userId: number) => dispatch<any>(removeUser(userRoleId, userId)),\r\n\t\tsaveForm: (user: IUser, formMode: string) => dispatch<any>(storeUser(user, formMode)),\r\n\t\tcancel: () => dispatch<any>(cancelUser()),\r\n\t\t\r\n\t\tsetIsDetail: (isDetail: boolean) => {\r\n\t\t\tdispatch<any>(setIsDetail(isDetail))\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(UserForm);\r\n","import * as React from 'react';\r\n\r\nimport { useHover } from '../../common/useHover'\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faWindowClose, faEdit } from '@fortawesome/free-solid-svg-icons'\r\n\r\nimport { IUser } from '../types';\r\nimport { Button, ListGroup } from 'react-bootstrap';\r\nimport { ThemeContext } from '../../ThemeContext';\r\nimport { userReducer } from '../reducer';\r\n\r\n\r\ninterface IRowProps {\r\n\twho: IUser;\r\n\tuser: IUser;\r\n\tonSelectUser: (userId: number) => IUser;\r\n\tedit: (roleId: number, userId: number) => void;\r\n\tremove: (roleId: number, userId: number) => void;\r\n}\r\n\r\nconst UserRow: React.FC<IRowProps> = (props: IRowProps) => {\r\n\r\n\tconst [hoverRef, hoverProps] = useHover();\r\n\r\n\tconst { who, user, onSelectUser, edit, remove } = props;\r\n\tconst { roleId, userId, userName } = user;\r\n\r\n\tconst theme = React.useContext(ThemeContext);\r\n\tconst { darkMode, variant, bg } = theme.state;\r\n\r\n\treturn (\r\n\t\t<ListGroup.Item\r\n\t\t\tas=\"li\"\r\n\t\t\tclassName=\"py-0\"\r\n\t\t\tvariant={variant}\r\n\t\t>\r\n\t\t\t<div ref={hoverRef} className=\"d-flex justify-content-start align-items-center\">\r\n\t\t\t\t<Button\r\n\t\t\t\t\tstyle={{ fontSize: '13px' }}\r\n\t\t\t\t\tvariant='link'\r\n\t\t\t\t\tsize=\"sm\"\r\n\t\t\t\t\tclassName=\"py-0 px-1 text-decoration-none\"\r\n\t\t\t\t\tonClick={() => onSelectUser(userId)}>\r\n\t\t\t\t\t{userName} {userId}\r\n\t\t\t\t</Button>\r\n\t\t\t\t{hoverProps.isHovered &&\r\n\t\t\t\t\t<Button\r\n\t\t\t\t\t\tvariant={variant}\r\n\t\t\t\t\t\tsize=\"sm\"\r\n\t\t\t\t\t\tclassName=\"py-0 px-1\"\r\n\t\t\t\t\t\tstyle={{ backgroundColor: 'transparent', borderWidth: '0' }}\r\n\t\t\t\t\t\ttitle=\"Edit\"\r\n\t\t\t\t\t\tonClick={() => edit(roleId, userId)}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<FontAwesomeIcon icon={faEdit} color='lightblue' />\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t}\r\n\t\t\t\t{hoverProps.isHovered && who.roleId === 11 &&\r\n\t\t\t\t\t<Button\r\n\t\t\t\t\t\tvariant={variant}\r\n\t\t\t\t\t\tsize=\"sm\"\r\n\t\t\t\t\t\tclassName=\"py-0 px-1\"\r\n\t\t\t\t\t\tstyle={{ backgroundColor: 'transparent', borderWidth: '0' }}\r\n\t\t\t\t\t\ttitle=\"Remove\"\r\n\t\t\t\t\t\tonClick={() => remove(roleId, userId)}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<FontAwesomeIcon icon={faWindowClose} color='lightblue' />\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t}\r\n\t\t\t</div>\r\n\t\t</ListGroup.Item>\r\n\t)\r\n}\r\n\r\nexport default UserRow\r\n\r\n","import * as React from 'react';\r\n\r\nimport { useHover } from '../../common/useHover'\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faWindowClose, faEdit, faCaretRight, faCaretDown, faPlus, faAppleWhole } from '@fortawesome/free-solid-svg-icons'\r\nimport { Badge, Button, ListGroup } from 'react-bootstrap'\r\n\r\n\r\nimport { IRole, IUser } from '../types';\r\nimport { ThemeContext } from '../../ThemeContext';\r\n\r\n\r\ninterface IUserRowProps {\r\n\twho: IUser;\r\n\tuserRole: IRole;\r\n\ttoggleRole: (roleId: number) => void;\r\n\teditRole: (roleId: number) => void;\r\n\tremoveRole: (roleId: number) => void;\r\n\tadd: (roleId: number, text: string, canEdit?: boolean) => void;\r\n}\r\n\r\nconst RoleRow: React.FC<IUserRowProps> = (props: IUserRowProps) => {\r\n\r\n\tconst [hoverRef, hoverProps] = useHover();\r\n\tconst { who, userRole, toggleRole, editRole, removeRole, add } = props;\r\n\tconst { roleId, title, users, isExpanded, color } = userRole;\r\n\r\n\tconst theme = React.useContext(ThemeContext);\r\n\tconst { darkMode, variant, bg } = theme.state;\r\n\r\n\treturn (\r\n\t\t<div ref={hoverRef}>\r\n\t\t\t<button\r\n\t\t\t\tclassName=\"button-edit\"\r\n\t\t\t\ttitle=\"Expand\"\r\n\t\t\t\tonClick={() => toggleRole(roleId)}\r\n\t\t\t\tstyle={{ marginLeft: '5px' }}\r\n\t\t\t>\r\n\t\t\t\t<FontAwesomeIcon icon={isExpanded ? faCaretDown : faCaretRight} color={color} size='lg' />\r\n\t\t\t</button>\r\n\t\t\t<Button\r\n\t\t\t\tvariant='link'\r\n\t\t\t\tsize=\"sm\"\r\n\t\t\t\tclassName=\"py-0 mx-1 text-decoration-none\"\r\n\t\t\t>\r\n\t\t\t\t{title}\r\n\t\t\t</Button>\r\n\t\t\t<Button\r\n\t\t\t\tvariant={variant}\r\n\t\t\t\tsize=\"lg\"\r\n\t\t\t\tclassName=\"py-0 px-1\"\r\n\t\t\t\tstyle={{ backgroundColor: 'transparent', borderWidth: '0' }}\r\n\t\t\t\ttitle=\"Add a new User\"\r\n\t\t\t\tonClick={() => add(roleId, '')}\r\n\t\t\t\tdisabled={roleId === 11}\r\n\t\t\t>\r\n\t\t\t\t<FontAwesomeIcon icon={faPlus} size='xs' color='orange' />\r\n\t\t\t</Button>\r\n\t\t\t{hoverProps.isHovered && who.roleId === 11 &&\r\n\t\t\t\t<button className=\"button-edit\" title=\"Edit Section\" onClick={() => editRole(roleId)}>\r\n\t\t\t\t\t<FontAwesomeIcon icon={faEdit} color='lightblue' />\r\n\t\t\t\t</button>\r\n\t\t\t}\r\n\t\t\t{hoverProps.isHovered && users.length === 0 && who.roleId === 11 &&\r\n\t\t\t\t<button className=\"button-remove\" title=\"Remove Section\" onClick={() => removeRole(roleId)}>\r\n\t\t\t\t\t<FontAwesomeIcon icon={faWindowClose} color='lightblue' />\r\n\t\t\t\t</button>\r\n\t\t\t}\r\n\t\t\t<Badge bg=\"primary\" pill>\r\n\t\t\t\t{users.length}\r\n\t\t\t</Badge>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default RoleRow\r\n\r\n","import { Fragment, useContext } from 'react';\r\nimport { useRef } from 'react'\r\nimport { Col, Container, ListGroup, Row } from 'react-bootstrap';\r\nimport { faPlus } from '@fortawesome/free-solid-svg-icons'\r\n\r\nimport { IRole, IRolesProps } from '../types'\r\n\r\nimport { IUser } from '../types';\r\n\r\nimport UserForm from '../containers/UserForm'\r\nimport UserRow from './UserRow';\r\nimport RoleRow from './RoleRow';\r\nimport { useParams } from 'react-router-dom' // useRouteMatch\r\nimport { ThemeContext } from \"../../ThemeContext\";\r\n\r\nimport { COLORS } from '../../formik/theme';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nconst color = 'blue';\r\n\r\ntype SupportParams = {\r\n\ttekst: string;\r\n};\r\n\r\nconst UserPage: React.FC<IRolesProps> = (props: IRolesProps) => {\r\n\r\n\t//let { tekst } = useParams<SupportParams>();\r\n\tconst { who, roles, userEditing,\r\n\t\tformMode, roleIdEditing,\r\n\t\tonSelectUser, add, edit, remove, canEdit,\r\n\t\taddRole, toggleRole, editRole, removeRole, storeRole } = props;\r\n\r\n\tconst inputEl = useRef<HTMLInputElement>(null);\r\n\tsetTimeout(() => {\r\n\t\tif (inputEl.current !== null) {\r\n\t\t\tinputEl.current!.select();\r\n\t\t\tinputEl.current!.focus()\r\n\t\t}\r\n\t}, 100)\r\n\r\n\t// const expandRole = (roleId: number): void => {\r\n\t// \tconst div = document.querySelector<HTMLDivElement>(\"#divRole\" + roleId);\r\n\t// \tconsole.log(div)\r\n\t// \tdiv!.style.display = 'block';\r\n\t// }\r\n\tconst theme = useContext(ThemeContext);\r\n\tconst { darkMode, variant, bg } = theme.state;\r\n\r\n\tconst userRoles: IRole[] = roles ?? [];\r\n\tconsole.log({userRoles})\r\n\r\n\treturn (\r\n\t\t<Container fluid>\r\n\t\t\t<Row className={`${darkMode ? \"dark\" : \"light\"}`}>\r\n\t\t\t\t<Col md={7}>\r\n\t\t\t\t\t<div style={{ border: '0px solid silver' }}>\r\n\t\t\t\t\t\t<h5>Users by Role{' '}\r\n\t\t\t\t\t\t\t<button className=\"button-add-category button-edit\" title=\"Add a new Role\" onClick={() => addRole()}>\r\n\t\t\t\t\t\t\t\t<FontAwesomeIcon icon={faPlus} size='xs' color='lightblue' />\r\n\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t</h5>\r\n\t\t\t\t\t\t<ListGroup\r\n\t\t\t\t\t\t\tas=\"ul\"\r\n\t\t\t\t\t\t\tvariant={variant}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t{userRoles.map(role => {\r\n\t\t\t\t\t\t\t\tconst { roleId, title, isExpanded, users } = role;\r\n\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t<Fragment key={roleId}>\r\n\t\t\t\t\t\t\t\t\t\t<ListGroup.Item\r\n\t\t\t\t\t\t\t\t\t\t\tvariant={variant}\r\n\t\t\t\t\t\t\t\t\t\t\tclassName=\"py-0 px-1\"\r\n\t\t\t\t\t\t\t\t\t\t\tas=\"li\"\r\n\t\t\t\t\t\t\t\t\t\t\tkey={roleId + \"_1\"}\r\n\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className=\"d-flex justify-content-start align-items-center\" style={{ textAlign: 'start' }}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t{roleIdEditing === roleId &&\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<input ref={inputEl} name=\"groupTitle\" type=\"text\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonBlur={(e) => storeRole({ ...role, title: e.target.value })}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tdefaultValue={title}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t{roleIdEditing !== roleId && (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<RoleRow\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\twho={who}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tuserRole={role}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\ttoggleRole={toggleRole}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\teditRole={editRole}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tremoveRole={removeRole}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tadd={add}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</ListGroup.Item>\r\n\t\t\t\t\t\t\t\t\t\t{isExpanded && role.users.length > 0 &&\r\n\t\t\t\t\t\t\t\t\t\t\t<ListGroup.Item\r\n\t\t\t\t\t\t\t\t\t\t\t\tvariant={variant}\r\n\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"py-0 px-1\"\r\n\t\t\t\t\t\t\t\t\t\t\t\tas=\"li\"\r\n\t\t\t\t\t\t\t\t\t\t\t\tkey={roleId + \"_2\"}\r\n\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<ListGroup\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tas=\"ul\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tvariant={variant}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"inner-list py-0 ms-5\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t{users.map(user =>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<UserRow\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\twho={who}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tkey={user.userId}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tuser={user}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonSelectUser={onSelectUser}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tedit={edit}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tremove={remove}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t</ListGroup>\r\n\t\t\t\t\t\t\t\t\t\t\t</ListGroup.Item>\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t</Fragment>\r\n\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t</ListGroup>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</Col>\r\n\t\t\t\t<Col md={5}>\r\n\t\t\t\t\t<div className={`${darkMode ? \"dark\" : \"light\"}`}>\r\n\t\t\t\t\t\t{userRoles && userEditing &&\r\n\t\t\t\t\t\t\t<div style={{ border: '1px solid silver', borderRadius: '5px', padding: '5px 5px 15px 5px' }}>\r\n\t\t\t\t\t\t\t\t<h4 style={{ marginTop: 0, color: 'white' }}>User</h4>\r\n\t\t\t\t\t\t\t\t<UserForm canEdit={formMode === 'display' ? false : canEdit} />\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</Col>\r\n\t\t\t</Row>\r\n\t\t</Container>\r\n\t);\r\n}\r\n\r\nexport default UserPage\r\n\r\n","// import * as React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { IAppState } from '../../store/Store';\r\nimport { IUser, IRole } from '../types'\r\n\r\nimport { Dispatch } from 'redux';  // ActionCreatorsMapObject, \r\n\r\nimport { UserActions,  \r\n\tgetUser, \r\n\taddUser, \r\n\teditUser,\r\n\tremoveUser,\r\n\tstoreUser,\r\n\tcancelUser,\r\n\taddRole,\r\n\teditRole,\r\n\tremoveRole,\r\n\tstoreRole,\r\n\ttoggleRole\r\n} from '../actions'\r\n\r\nimport UsersPage from '../components/UsersPage'\r\n\r\ninterface IProps {\r\n\tcanEdit: boolean\r\n}\r\n\r\n// Grab the users from the store and make them available on props\r\nconst mapStateToProps = (store: IAppState, ownProps: IProps ) => {\r\n\tconst { usersState,  topState} = store;\r\n\tconst { roles, userEditing, formMode, roleIdEditing } = usersState; \r\n\treturn {\r\n\t\twho: topState.top.auth!.who,\r\n\t\troles,\r\n\t\tuserEditing,\r\n\t\tformMode,\r\n\t\troleIdEditing,\r\n\t\tcanEdit: ownProps.canEdit\r\n\t};\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch<UserActions>) => {\r\n\treturn {\r\n\t\t// user\r\n\t\tonSelectUser: (userId: number) => dispatch<any>(getUser(userId)),\r\n\t\tadd: (userRoleId: number, text: string, canEdit?: boolean) => dispatch<any>(addUser(userRoleId, text, canEdit)),\r\n\t\tedit: (userRoleId: number, userId: number) => dispatch<any>(editUser(userRoleId, userId)),\r\n\t\tremove: (userRoleId: number, userId: number) => dispatch<any>(removeUser(userRoleId, userId)),\r\n\t\t// groups\r\n\t\taddRole: () => dispatch<any>(addRole()),\r\n\t\ttoggleRole: (roleId: number) =>  dispatch<any>(toggleRole(roleId)),\r\n\t\teditRole: (roleId: number) =>  dispatch<any>(editRole(roleId)),\r\n\t\tremoveRole: (roleId: number) => dispatch<any>(removeRole(roleId)),\r\n\t\tstoreRole: (role: IRole) => dispatch<any>(storeRole(role))\r\n\t}\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(UsersPage);\r\n","const palx = require('palx');\r\nexport const BASE_COLOR = '#666ee8';\r\nexport const COLORS = palx(BASE_COLOR);","import React, { useState } from 'react';\r\nimport { Button, Container, Form } from \"react-bootstrap\";\r\n\r\nimport { useFormik } from 'formik';\r\nimport * as Yup from 'yup'\r\n\r\nimport { COLORS } from '../../formik/theme';\r\nimport { IFormProps } from '../types';\r\n//import { number } from 'yup/lib/locale';\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\n\r\nconst LogForm: React.FC<IFormProps> = (props: IFormProps) => {\r\n\r\n  let { formMode, authError } = props;\r\n\r\n  let navigate = useNavigate();\r\n  if (props.isAuthenticated) {\r\n    navigate('/questions');\r\n  }\r\n\r\n  const formik = useFormik({\r\n    enableReinitialize: true,\r\n    initialValues: {\r\n      userName: '',\r\n      pwd: ''\r\n    },\r\n    validationSchema: Yup.object({\r\n      userName: Yup\r\n        .string()\r\n        .max(32, 'Must be 32 characters or less')\r\n        .required('Required'),\r\n      pwd: Yup\r\n        .string()\r\n        .min(7)\r\n        .max(16)\r\n        //.matches(/^(?=.*[a-z])(?=.*[A-Z])(?=.*d)[a-zA-Zd]$/)\r\n        .required()\r\n    }),\r\n    onSubmit: values => {\r\n      // alert(JSON.stringify(values, null, 2));\r\n      props.saveForm(values, props.formMode, props.isRegister)\r\n    }\r\n  });\r\n\r\n  const isEdit = () => props.formMode === 'edit';\r\n\r\n  console.log('RENDERING LoginForm', formik.values)\r\n\r\n  return (\r\n    <Form onSubmit={formik.handleSubmit}>\r\n\r\n      {/* <label htmlFor=\"name\">User name</label> */}\r\n      <Form.Group controlId=\"userName\">\r\n        <Form.Label>Name</Form.Label>\r\n        <Form.Control\r\n          as=\"input\"\r\n          name=\"userName\"\r\n          onChange={formik.handleChange}\r\n          onBlur={formik.handleBlur}\r\n          // onBlur={(e: React.FormEvent<HTMLInputElement>): void => {\r\n          //   if (isEdit() && formik.initialValues.name !== formik.values.name)\r\n          //     formik.submitForm();\r\n          // }}\r\n          value={formik.values.userName}\r\n          placeholder=\"User name\"\r\n          maxLength={16}\r\n        />\r\n        {formik.touched.userName && formik.errors.userName ? (\r\n          <div>{formik.errors.userName}</div>\r\n        ) : null}\r\n      </Form.Group>\r\n\r\n      <Form.Group controlId=\"pwd\">\r\n        <Form.Label>Password</Form.Label>\r\n        <Form.Control\r\n          as=\"input\"\r\n          name=\"pwd\"\r\n          type=\"password\"\r\n          onChange={formik.handleChange}\r\n          onBlur={formik.handleBlur}\r\n          value={formik.values.pwd}\r\n          placeholder=\"password\"\r\n          // style={{ width: '40%' }}\r\n          maxLength={16}\r\n        />\r\n        {formik.touched.pwd && formik.errors.pwd ? (\r\n          <div>{formik.errors.pwd}</div>\r\n        ) : null}\r\n      </Form.Group>\r\n\r\n      {authError &&\r\n        <div>{authError}</div>\r\n      }\r\n\r\n      <br/>\r\n\r\n      <div className=\"buttons\">\r\n        <Button\r\n          variant=\"secondary\"\r\n          size=\"sm\"\r\n          onClick={() => {\r\n            props.cancel();\r\n            // props.handleClose()\r\n          }}>\r\n          Cancel\r\n        </Button>\r\n        <Button\r\n          variant=\"primary\"\r\n          size=\"sm\"\r\n          type=\"submit\"\r\n        >\r\n          Submit\r\n        </Button>\r\n      </div>\r\n\r\n    </Form>\r\n  );\r\n};\r\n\r\n\r\nconst color = 'blue';\r\n\r\nexport const LoginForm: React.FC<IFormProps> = (props: IFormProps) => {\r\n  return (\r\n    <div style={{ height: '100%', padding: '5%', display: 'flex', alignItems: 'center', justifyContent: 'center', flexDirection: 'column' }} >\r\n      <div>\r\n        {props.isRegister ? (\r\n          <span>Register</span>\r\n        ) : (\r\n          <span>Sign In</span>\r\n        )}\r\n      </div>\r\n      <br />\r\n      <div\r\n        style={{\r\n          height: '100%',\r\n          background: COLORS[color][5],\r\n          padding: '1rem 1rem',\r\n          width: '300px'\r\n        }}\r\n      >\r\n        <div\r\n          style={{\r\n            borderRadius: '4px',\r\n            boxShadow: '0 8px 16px rgba(0,0,0,.2)',\r\n            background: '#fff',\r\n            maxWidth: '90%',\r\n            margin: '0 auto',\r\n            padding: '1rem',\r\n            width: '250px'\r\n          }}\r\n        >\r\n          <LogForm {...props} />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}","// import * as React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { IAppState } from '../../store/Store';\r\n\r\nimport { Dispatch } from 'redux'; \r\n\r\nimport { register, authenticate, cancelLogin, TopActions } from '../actions'\r\n\r\nimport { LoginForm } from '../components/LoginForm';\r\nimport { ILogin, ITop } from '../types';\r\n\r\ninterface IProps {\r\n\tcanEdit: boolean,\r\n\tisRegister: boolean\r\n}\r\n\r\nconst mapStateToProps = (store: IAppState, ownProps: IProps) => {\r\n\tconst { topState } = store;\r\n\tconst { top } = topState;\r\n\treturn {\r\n\t\tisAuthenticated: top.isAuthenticated,\r\n\t\tuuid: top.uuid,\r\n\t\tauthError: top.authError,\r\n\t\tcanEdit: ownProps.canEdit,\r\n\t\tisRegister: ownProps.isRegister,\r\n\t\tformMode: 'edit'\r\n\t};\r\n};\r\n\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch<TopActions>) => {\r\n\treturn {\r\n\t\tsaveForm: (login: ILogin, formMode: string, isRegister: boolean) => \r\n\t\t\tdispatch<any>(isRegister ? \r\n\t\t\t\tregister(login)\t: authenticate(login)),\r\n\t\tcancel: () => dispatch<any>(cancelLogin())\r\n\t}\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(LoginForm);\r\n\r\n","import * as React from \"react\";\r\n\r\ninterface ILanding {\r\n}\r\n\r\nconst Landing: React.FC<ILanding> = (props: ILanding) => {\r\n  return (\r\n    <p>Landing page</p>\r\n   )\r\n}\r\n\r\nexport default Landing;\r\n","import { useContext } from \"react\";\r\n\r\nimport { ThemeContext } from \"./ThemeContext\";\r\nimport SwitchButton from \"./SwitchButton\";\r\n\r\nimport { connect } from \"react-redux\";\r\nimport { Dispatch } from 'redux';\r\n\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\nimport { IAppState } from \"./store/Store\";\r\nimport { IAuth } from \"./Top/types\";\r\n\r\nimport logo from './logo.svg'\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faQuestion, faHome, faPlus, faSurprise, faUser, faUserFriends, faSignOutAlt, faSignInAlt, faRegistered, faAnchor, faCog } from '@fortawesome/free-solid-svg-icons'\r\n\r\nimport Button from 'react-bootstrap/Button';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Nav from 'react-bootstrap/Nav';\r\nimport Navbar from 'react-bootstrap/Navbar';\r\nimport NavDropdown from 'react-bootstrap/NavDropdown';\r\nimport Offcanvas from 'react-bootstrap/Offcanvas';\r\nimport { toggleMode, TopActions } from \"./Top/actions\";\r\n\r\ninterface ISideBarProps {\r\n  isAuthenticated: boolean | null;\r\n  uuid: string | null;\r\n  auth?: IAuth,\r\n  signOut: () => void;\r\n  handleClose: () => void;\r\n  toggleMode: () => void;\r\n}\r\n\r\nfunction SideBar({ isAuthenticated, uuid, auth, signOut, handleClose, toggleMode }: ISideBarProps) {\r\n\r\n  const theme = useContext(ThemeContext);\r\n  const { darkMode, variant, bg } = theme.state;\r\n\r\n  let navigate = useNavigate();\r\n\r\n  const otkaciMe = () => {\r\n    signOut();\r\n    navigate('/landing');\r\n  }\r\n\r\n  // className=\"mb-3\" \r\n\r\n  return (\r\n    <Navbar expand={\"md\"} variant={variant} bg={bg} collapseOnSelect className=\"sticky-top\">\r\n      <Container fluid>\r\n        <Navbar.Brand href=\"#\" className=\"ps-3\">Support Knowledge</Navbar.Brand>\r\n        <Navbar.Toggle aria-controls={`offcanvasNavbar-expand`} />\r\n        <Navbar.Offcanvas\r\n          id={`offcanvasNavbar-expand`}\r\n          aria-labelledby={`offcanvasNavbarLabel-expand`}\r\n          placement=\"end\"\r\n          className={`text-bg-${bg}`}\r\n        >\r\n          {darkMode ? (\r\n            <Offcanvas.Header closeButton closeVariant=\"white\">\r\n              <Offcanvas.Title id={`offcanvasNavbarLabel-expand`}>Support</Offcanvas.Title>\r\n            </Offcanvas.Header>\r\n          ) : (\r\n            <Offcanvas.Header closeButton>\r\n              <Offcanvas.Title id={`offcanvasNavbarLabel-expand`}>Support</Offcanvas.Title>\r\n            </Offcanvas.Header>\r\n          )}\r\n\r\n          < Offcanvas.Body >\r\n            <Nav\r\n              className=\"justify-content-end flex-grow-1 pe-3 d-flex flex-nowrap\"\r\n              onSelect={(eventKey) => {\r\n                if ([\"LIGHTMODE\", \"DARKMODE\"].includes(eventKey!)) {\r\n                  if (document.body.classList.contains('dark')) {\r\n                    document.body.classList.remove('dark')\r\n                    document.body.classList.add('light')\r\n                  }\r\n                  else {\r\n                    document.body.classList.add('dark')\r\n                  }\r\n                  theme.dispatch({ type: eventKey })\r\n                  toggleMode();\r\n                }\r\n              }\r\n              }\r\n            >\r\n              {isAuthenticated &&\r\n                <Nav.Link href=\"#/supporter/promo\">\r\n                  <FontAwesomeIcon icon={faSurprise} color='lightblue' />{' '}Supporter\r\n                </Nav.Link>\r\n              }\r\n              {isAuthenticated &&\r\n                <Nav.Link href=\"#/questions\">\r\n                  <FontAwesomeIcon icon={faQuestion} color='lightblue' />{' '}Questions\r\n                </Nav.Link>\r\n              }\r\n              {isAuthenticated &&\r\n                <Nav.Link href=\"#/answers/pera\">\r\n                  <FontAwesomeIcon icon={faAnchor} color='lightblue' />{' '}Answers\r\n                </Nav.Link>\r\n              }\r\n              {isAuthenticated && auth && auth!.who.roleId === 11 &&\r\n                <Nav.Link href=\"#/users/2\">\r\n                  <FontAwesomeIcon icon={faUserFriends} color='lightblue' />{' '}Users\r\n                </Nav.Link>\r\n              }\r\n\r\n              {!isAuthenticated &&\r\n                <Nav.Link href=\"#/landing\">\r\n                  Landing\r\n                </Nav.Link>\r\n              }\r\n              {!isAuthenticated &&\r\n                <Nav.Link href=\"#/About\">\r\n                  About\r\n                </Nav.Link>\r\n              }\r\n\r\n              {/* <NavDropdown\r\n                title={<><FontAwesomeIcon icon={faCog} color='lightblue' />{' '}Settings</>}\r\n                id={`offcanvasNavbarDropdown-expand`}\r\n                menuVariant={variant}\r\n              >\r\n              </NavDropdown> */}\r\n\r\n              {!isAuthenticated &&\r\n                <Nav.Link href=\"#/Register\">\r\n                  Register\r\n                </Nav.Link>\r\n              }\r\n              {!isAuthenticated &&\r\n                <Nav.Link href=\"#/sign-in \">\r\n                  Sign In\r\n                </Nav.Link>\r\n              }\r\n\r\n              {isAuthenticated &&\r\n                // <Nav.Link href=\"#\" disabled>\r\n                //   <FontAwesomeIcon icon={faUser} />{' '}{auth!.who.userName}\r\n                // </Nav.Link>\r\n\r\n                <NavDropdown\r\n                  title={<><FontAwesomeIcon icon={faUser} />{' '}{auth!.who.userName}</>}\r\n                  id={`offcanvasNavbarDropdown-expand`}\r\n                  menuVariant={variant}\r\n                  align=\"end\"\r\n                >\r\n                <NavDropdown.Item eventKey=\"DARKMODE\">\r\n                  Dark mode\r\n                </NavDropdown.Item>\r\n                <NavDropdown.Item eventKey=\"LIGHTMODE\">\r\n                  Light mode\r\n                </NavDropdown.Item>\r\n                {/* <Form className=\"d-flex\">\r\n                  <Form.Control\r\n                    type=\"search\"\r\n                    placeholder=\"Search\"\r\n                    className=\"me-2\"\r\n                    aria-label=\"Search\"\r\n                  />\r\n                  <Button variant=\"outline-success\">Search</Button>\r\n                </Form> */}\r\n                   <NavDropdown.Divider />\r\n                  {isAuthenticated &&\r\n                    <NavDropdown.Item href=\"#\" onClick={otkaciMe}>Sign out</NavDropdown.Item>\r\n                  }\r\n                </NavDropdown>\r\n\r\n              }\r\n\r\n            </Nav>\r\n\r\n          </Offcanvas.Body>\r\n        </Navbar.Offcanvas>\r\n      </Container>\r\n    </Navbar >\r\n  );\r\n}\r\ninterface IOwnProps {\r\n  signOut: () => void;\r\n  handleClose: () => void;\r\n}\r\n\r\nconst mapStateToProps = (store: IAppState, ownProps: IOwnProps) => ({\r\n  isAuthenticated: store.topState.top.isAuthenticated,\r\n  uuid: store.topState.top.uuid,\r\n  auth: store.topState.top.auth,\r\n  signOut: ownProps.signOut,\r\n  handleClose: ownProps.handleClose\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch<TopActions>) => {\r\n  return {\r\n    toggleMode: () => dispatch<any>(toggleMode())\r\n  }\r\n};\r\n\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(SideBar);\r\n\r\n","\r\n\r\nimport React, { useCallback, useRef, useState, useContext, useEffect } from 'react';\r\n\r\nimport { HashRouter as Router, Route, Routes } from 'react-router-dom' // useRouteMatch\r\n\r\nimport { connect, Provider } from 'react-redux';\r\nimport { Store, Dispatch } from 'redux';\r\n\r\nimport { IAppState } from './store/Store';\r\nimport { ThemeContext } from \"./ThemeContext\";\r\n\r\nimport Support from './components/Support';\r\nimport AnswersPage from './Answers/containers/Page'\r\nimport containers from './Categories/containers/ContainerCategoriesPage'\r\n\r\nimport UsersPage from './Users/containers/UsersPage';\r\nimport { authenticate, unAuthenticate, TopActions, navbarToggle } from './Top/actions';\r\nimport LoginForm from './Top/containers/LoginForm';\r\nimport Landing from './components/Landing';\r\nimport { ILogin, IAuth } from './Top/types';\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faAngleDoubleLeft, faAngleDoubleRight, faRegistered } from '@fortawesome/free-solid-svg-icons';\r\nimport { Button, Col, Collapse, Container, Form, FormControl, Nav, Row } from 'react-bootstrap';\r\n\r\nimport SideBar from './SideBar';\r\n\r\ninterface IProps {\r\n\tnavbarOpen: boolean,\r\n\tisAuthenticated: boolean | null;\r\n\tuuid: string | null;\r\n\tauth?: IAuth,\r\n\ttoggleNavbar: () => void,\r\n\tcheckAuthentication: (login: ILogin) => void;\r\n\tsignOut: () => void;\r\n}\r\n\r\nconst App = ({ navbarOpen, isAuthenticated, uuid, auth, toggleNavbar, checkAuthentication, signOut }: IProps) => {\r\n\r\n\t//const [navbarOpen, setNavbarOpen] = useState(true);\r\n\tlet main: null | HTMLDivElement = null;\r\n\r\n\t//const [open, setOpen] = useState(navbarOpen);\r\n\tconst [mainMd, setMainMd] = useState(9);\r\n\tconst [mainLg, setMainLg] = useState(10);\r\n\r\n\tconst theme = useContext(ThemeContext);\r\n\tconst { darkMode, variant, bg } = theme.state;\r\n\r\n\tuseEffect(() => {\r\n\t\t// const login = {\r\n\t\t// \tuserName: 'Jack',\r\n\t\t// \tpwd: 'Daniels'\r\n\t\t// }\r\n\t\t// checkAuthentication(login);\r\n\t\tdocument.body.classList.add(bg)\r\n\t}, []);\r\n\r\n\tconst [open, setOpen] = useState(false);\r\n\tconst handleClose = () => {\r\n\t\tsetOpen(false);\r\n\t}\r\n\r\n\t// null is the third state false/true/null in reducer\r\n\tconst app = //isAuthenticated !== null ? (  \r\n\r\n\t\t<Router>\r\n\t\t\t<SideBar handleClose={handleClose} signOut={signOut} />\r\n\t\t\t<Container fluid>\r\n\t\t\t\t<Row className={`${darkMode ? \"dark\" : \"\"}`}>\r\n\t\t\t\t\t{/* <Col id=\"main\" md={mainMd} lg={mainLg} className=\"ms-sm-auto px-md-4\"> */}\r\n\t\t\t\t\t<Col id=\"main\" className=\"ms-sm-auto px-md-4\" variant={variant} bg={variant}>\r\n\t\t\t\t\t\t<div className=\"d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pt-3 pb-2 mb-3 border-bottom\">\r\n\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t<div className={`${darkMode ? \"dark\" : \"\"}`}>\r\n\t\t\t\t\t\t\t<Routes>\r\n\t\t\t\t\t\t\t\t<Route path=\"/\" element={<Landing />} />\r\n\t\t\t\t\t\t\t\t<Route path=\"/sign-in\" element={\r\n\t\t\t\t\t\t\t\t\t<LoginForm canEdit={true} isRegister={false} />\r\n\t\t\t\t\t\t\t\t} />\r\n\t\t\t\t\t\t\t\t<Route path=\"/register\" element={\r\n\t\t\t\t\t\t\t\t\t<LoginForm canEdit={true} isRegister={true} />\r\n\t\t\t\t\t\t\t\t} />\r\n\t\t\t\t\t\t\t\t<Route path=\"/supporter/:tekst\" element={<Support />} />\r\n\t\t\t\t\t\t\t\t<Route path=\"/questions\" element={<containers.categories canEdit={true} />} />\r\n\t\t\t\t\t\t\t\t<Route path=\"/answers/:slug\" element={<AnswersPage />} />\r\n\t\t\t\t\t\t\t\t<Route path=\"/users/:slug\" element={<UsersPage canEdit={true} />} />\r\n\t\t\t\t\t\t\t</Routes>\r\n\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t</Row>\r\n\r\n\t\t\t</Container>\r\n\r\n\t\t</Router>\r\n\t// )\r\n\t// : (\r\n\t// \tnull\r\n\t// );\r\n\r\n\treturn (\r\n\t\t<Container fluid className=\"App\">\r\n\t\t\t{app}\r\n\t\t</Container>\r\n\t);\r\n}\r\n\r\nconst mapStateToProps = (store: IAppState) => ({\r\n\tnavbarOpen: store.topState.top.navbarOpen,\r\n\tisAuthenticated: store.topState.top.isAuthenticated,\r\n\tauth: store.topState.top.auth,\r\n\tuuid: store.topState.top.uuid\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch<TopActions>) => {\r\n\treturn {\r\n\t\ttoggleNavbar: () => dispatch<any>(navbarToggle()),\r\n\t\tcheckAuthentication: async (login: ILogin) => await dispatch<any>(authenticate(login)),\r\n\t\tsignOut: () => dispatch<any>(unAuthenticate())\r\n\t}\r\n};\r\n\r\nexport default connect(\r\n\tmapStateToProps,\r\n\tmapDispatchToProps\r\n)(App);\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport * as ReactDOM from 'react-dom';\r\n\r\nimport { HashRouter as Router, Route, Link } from 'react-router-dom' // useRouteMatch\r\n\r\nimport { Provider } from 'react-redux';\r\n\r\nimport { Store } from 'redux';\r\n\r\nimport configureStore, { IAppState } from './store/Store';\r\nimport {\r\n\tloadCategories,\r\n\tremoveCategory, storeCategory, updateCategory,\r\n\tremoveQuestion, storeQuestion, updateQuestion\r\n} from './Categories/actions';\r\nimport { getAllAnswers } from './Answers/actions';\r\n\r\n//import './custom.scss'\r\nimport './index.css';\r\nimport './normalize.scss'\r\nimport './App.css';\r\n//import './dashboard.css';\r\n\r\n//import './formik/formikStyles.css';\r\nimport { getAllUsers } from './Users/actions';\r\nimport { authenticate } from './Top/actions'\r\nimport { getAllTags } from './roleTags/actions';\r\nimport { loadTop } from './Top/actions';\r\nimport { IUser } from './Users/types';\r\nimport App from './App';\r\n//import { coolColors } from './cool-colors';\r\nimport { IQuestion } from './Categories/types';\r\n\r\nimport { ThemeContext, ThemeProvider } from './ThemeContext';\r\nimport { ITop } from './Top/types';\r\n\r\nimport { useContext } from 'react'\r\ninterface IProps {\r\n\tstore: Store<IAppState>;\r\n}\r\n\r\n// Generate the store\r\n// localStorage.clear(); // !!!!!!!!!!!!\r\n\r\ninterface IEvt {\r\n\ttype: string;\r\n\tentity: IQuestion;\r\n}\r\n\r\nconst store = configureStore();\r\nstore.dispatch(loadCategories());\r\nstore.dispatch(getAllAnswers());\r\nstore.dispatch(getAllUsers())\r\nstore.dispatch<any>(loadTop())\r\n\t.then((top: ITop)=> {\r\n\t\tconsole.log({top})\r\n\t})\r\n\t.catch((err: { getMessage: () => any; }) => {\r\n\t\tconsole.error(err.getMessage());\r\n\t});\r\nstore.dispatch(getAllTags());\r\n\r\nconst sessionId = Math.floor((Math.random() * 10000) + 1);\r\nsessionStorage.setItem('sessionId', sessionId.toString())\r\n\r\nwindow.addEventListener(\"PassToBackground\", function (evt: any) {\r\n\t// alert('Dobio')\r\n\tconst { detail } = evt;\r\n\tconst sessionId = sessionStorage.getItem('sessionId');\r\n\tconsole.log('Session breeeeeee:', sessionId, ' detail:', detail)\r\n\tif (sessionId !== detail.sessionId) {\r\n\t\tswitch (detail.type) {\r\n\t\t\tcase \"STORE_CATEGORY\":\r\n\t\t\t\tdetail.entity.created = new Date(detail.entity.created);\r\n\t\t\t\tstore.dispatch(storeCategory(false, detail.entity));\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"UPDATE_CATEGORY\":\r\n\t\t\t\tdetail.entity.created = new Date(detail.entity.created);\r\n\t\t\t\tstore.dispatch(updateCategory(false, detail.entity));\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"REMOVE_CATEGORY\":\r\n\t\t\t\tstore.dispatch(removeCategory(false, detail.entity));\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"STORE_QUESTION\":\r\n\t\t\t\tdetail.entity.created = new Date(detail.entity.created);\r\n\t\t\t\tstore.dispatch(storeQuestion(false, detail.entity));\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"UPDATE_QUESTION\": {\r\n\t\t\t\tconst question = detail.entity;\r\n\t\t\t\tquestion.created = new Date(question.created);\r\n\t\t\t\tfor (let i = 0; i < question.answers.length; i++) {\r\n\t\t\t\t\tconst a = question.answers[i];\r\n\t\t\t\t\ta.assigned = new Date(a.assigned);\r\n\t\t\t\t}\r\n\t\t\t\tstore.dispatch(updateQuestion(false, question));\r\n\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"REMOVE_Question\": {\r\n\t\t\t\tconst { categoryId, questionId } = detail.entity\r\n\t\t\t\tstore.dispatch(removeQuestion(false, categoryId, questionId));\r\n\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n\r\n}, false);\r\n\r\n\r\nconst state = store.getState();\r\n\r\nReactDOM.render(\r\n\t<React.StrictMode>\r\n\t\t<Provider store={store} >\r\n\t\t\t<ThemeProvider darkMode={state.topState.top.darkMode }>\r\n\t\t\t\t<App />\r\n\t\t\t</ThemeProvider>\r\n\t\t</Provider>\r\n\t</React.StrictMode>,\r\n\tdocument.getElementById('root')\r\n);\r\n\r\n// Render the App\r\n// ReactDOM.render(<Root store={store} />, document.getElementById(\r\n//   'root'\r\n// ) as HTMLElement);\r\n\r\n// React.StrictMode\r\n\r\n"],"sourceRoot":""}