{"version":3,"sources":["Answers/actions.ts","Categories/actions.ts","Users/actions.ts","Categories/categoryReducer.ts","Categories/categoriesReducer.ts","Answers/reducer.ts","roleTags/actions.ts","Users/reducer.ts","Users/types.ts","roleTags/reducer.ts","Top/actions.ts","Top/reducer.ts","store/Store.tsx","ThemeContext.tsx","components/AutoSuggest.tsx","common/containers/UserName.tsx","common/components/OptionName.tsx","Categories/components/CategoryForm.tsx","Categories/containers/ContainerCategoryForm.tsx","common/Select.tsx","Categories/sourceOptions.ts","Categories/statusOptions.ts","components/AutoSuggestAnswer.tsx","common/useHover.tsx","Categories/components/QuestionAnswerRow.tsx","Answers/components/Form.tsx","Categories/components/QuestionAnswers.tsx","Categories/containers/ContainerQuestionAnswers.tsx","Categories/components/QuestionForm.tsx","Categories/containers/ContainerQuestionForm.tsx","Categories/components/QuestionRow.tsx","Categories/components/CategoryRow.tsx","Categories/components/CategoryList.tsx","Categories/containers/ContainerCategoryList.tsx","Categories/components/CategoriesPage.tsx","Categories/components/SuportPage.tsx","Categories/containers/ContainerCategoriesPage.tsx","components/Support.tsx","Answers/components/ListRow.tsx","Answers/components/List.tsx","Answers/components/Page.tsx","Answers/containers/Page.tsx","Users/components/UserForm.tsx","Users/containers/UserForm.tsx","Users/components/UserRow.tsx","Users/components/RoleRow.tsx","Users/components/UsersPage.tsx","Users/containers/UsersPage.tsx","Top/components/LoginForm.tsx","Top/containers/LoginForm.tsx","components/Landing.tsx","ExportImport.js","SideBar.tsx","components/About.tsx","App.tsx","index.tsx"],"names":["AnswerActionTypes","parseFromJson","data","map","a","parseDates","created","Date","SUPPORT_ANSWERS","QuestionActionTypes","getAllAnswers","dispatch","answers","window","sAnswers","localStorage","getItem","parsed","JSON","parse","type","GET_ALL_ANSWERS","err","console","error","addAnswer","getState","ADD_ANSWER","createdBy","topState","top","auth","who","userId","storeAnswer","answer","formMode","STORE_ANSWER","Promise","resolve","answerState","answerId","cancelAnswer","CANCEL_ANSWER","g","questions","q","categoryId","assigned","UserActionTypes","loadCategories","categories","loadedFromStorage","sCategories","SUPPORT_CATEGORIES","log","categoriesJson","forEach","category","sQuestions","json","words","text","split","setItem","stringify","categoryMap","Map","categoryState","set","LOAD_CATEGORIES","getQuestion","questionId","GET_QUESTION","addQuestion","canEdit","ADD_QUESTION","question","showCategoryForm","editQuestion","showQuestionForm","EDIT_QUESTION","assignQuestionAnswer","tekst","delay","ASSIGN_QUESTION_ANSWER","assignedBy","reject","setTimeout","closeQuestionForm","CLOSE_QUESTION_FORM","openQuestionForm","OPEN_QUESTION_FORM","addCategory","ADD_CATEGORY","initialCategory","storeCategory","STORE_CATEGORY","updateCategory","UPDATE_CATEGORY","categoryOptions","CATEGORY_OPTIONS","addAndAssignNewAnswer","then","initialCategoryState","storeToStorage","STORE_QUESTION","UPDATE_QUESTION","REMOVE_QUESTION","REMOVE_QUESTION_ANSWER","aTypesToStore","Object","keys","filter","includes","reduceCategory","action","get","newState","myReducer","find","state","CANCEL_QUESTION","qa","initialQuestion","source","status","title","isExpanded","initialCategoriesState","undefined","loading","categoryIdEditing","TOGGLE_CATEGORY","REMOVE_CATEGORY","length","Math","max","questionCopy","categoryIdCopy","aq","GET_CATEGORY","EDIT_CATEGORY","categoryCopy","c","CANCEL_CATEGORY","reduce","acc","push","value","label","unshift","CLEAR","initialAnswer","options","initialAnswerState","showAnswerForm","GET_ANSWER","EDIT_ANSWER","REMOVE_ANSWER","CLOSE_ANSWER_FORM","parseRole","users","u","TagActionTypes","getUser","GET_USER","findUser","name","usersState","roles","role","user","userName","addUser","roleId","ADD_USER","editUser","EDIT_USER","removeUser","REMOVE_USER","CREATE_OPTIONS","storeUser","STORE_USER","SUPPORT_USERS","initialUser","pwd","department","initialUserRole","color","initialUsersState","userEditing","allUsers","roleOptions","userOptions","roleIdEditing","ownerUserId","GET_ALL_USERS","concat","userIdMax","userRole","CANCEL_USER","userEdited","ADD_ROLE","TOGGLE_ROLE","EDIT_ROLE","group","STORE_ROLE","REMOVE_ROLE","storageTagsDemo","RoleId","storageTags","initialTagState","tags","TopActionTypes","SUPPORT_TOP","parseObj","visited","authenticated","authenticate","loginUser","AUTHENTICATE","AUTHENTICATE_WRONG_PWD","AUTHENTICATE_WRONG_USERNAME","initialTopState","isAuthenticated","uuid","darkMode","showModalJSON","LOAD_TOP","authError","REGISTER","REGISTER_USERNAME_EXISTS","SHOW_MODAL_JSON","show","TOGGLE_MODE","UNAUTHENTICATE","rootReducer","combineReducers","categoriesState","tagState","GET_ALL_TAGS","tag","GET_TAG","ThemeActionKind","initialState","variant","bg","ThemeContext","createContext","themeReducer","ThemeProvider","props","initState","useReducer","Provider","children","inputAutosuggest","createRef","QuestionAutosuggestMulti","Autosuggest","AutoSuggest","onSuggestionsClearRequested","setState","suggestions","anyWord","valueWordRegex","questionWords","valWordRegex","questionWord","test","getSuggestions","highlighted","focus","current","this","multiSection","onSuggestionsFetchRequested","bind","onSuggestionSelected","getSuggestionValue","renderSuggestion","renderSectionTitle","getSectionSuggestions","onSuggestionHighlighted","highlightFirstSuggestion","renderInputComponent","renderSuggestionsContainer","focusInputOnSuggestionClick","inputProps","placeholder","onChange","e","changeEvent","autoFocus","event","suggestion","onSelectQuestion","params","matches","AutosuggestHighlightMatch","query","parts","AutosuggestHighlightParse","part","index","className","highlight","section","ref","restInputProps","containerProps","newValue","method","escapedValue","trim","replace","word","RegExp","React","connect","store","ownProps","id","option","CategForm","formik","useFormik","enableReinitialize","initialValues","validationSchema","Yup","required","onSubmit","values","saveForm","handleClose","isEdit","Form","handleSubmit","Group","controlId","Label","Control","as","handleChange","onBlur","submitForm","style","width","rows","Text","touched","errors","UserName","toLocaleDateString","Button","size","onClick","cancel","useContext","Container","Select","disabled","selectedIndex","currentTarget","selectedOption","sourceOptions","statusOptions","AutoSuggestAnswer","setAnswerText","answersUnassigned","isMob","isMobile","navigator","userAgent","any","useHover","useState","isHovered","hoverProps","setValue","divRef","useRef","handleMouseOver","handleMouseOut","useEffect","node","addEventListener","removeEventListener","QuestionAnswerRow","hoverRef","questionAnswer","removeQuestionAnswer","fontSize","toLocaleTimeString","clipboard","writeText","stopPropagation","icon","faCopy","preventDefault","faWindowClose","AnsForm","AnswerForm","QuestionAnswers","questionAnswers","selectQuestionAnswer","copyQuestionAnswer","add","setTekst","setShow","handleShow","showAssign","setShowAssign","height","overflowY","Table","responsive","striped","bordered","hover","colSpan","border","Modal","onHide","animation","centered","contentClassName","Header","closeButton","Title","Body","val","joinQuestionAnswers","sort","b","QuestForm","moreThan","isDisabled","setFieldValue","ContainerQuestionAnswers","editForm","storeQuestion","updateQuestion","QuestionRow","edit","remove","ListGroup","Item","backgroundColor","borderWidth","faEdit","CategoryRow","toggleCategory","editCategory","removeCategory","onSelectCategory","faCaretDown","faCaretRight","Badge","pill","faPlus","CategoryList","inputEl","select","tagOptions","f","tagId","removeQuestion","getCategory","Page","useParams","fluid","Row","Col","md","ContainerCategoryList","borderRadius","padding","marginTop","ContainerCategoryForm","ContainerQuestionForm","SupportPage","showCategory","setShowCategory","open","lg","display","alignItems","textAlign","isCancel","mapStateToProps","mapDispatchToProps","CategoriesPage","supporter","Support","ListRow","usedAnswers","getCategoryQuestion","alert","List","getUsedAnswers","arr","editAnswer","removeAnswer","UsrForm","min","r","onSelectUser","userRoleId","UserRow","RoleRow","toggleRole","editRole","removeRole","marginLeft","UserPage","addRole","storeRole","userRoles","target","defaultValue","UsersPage","LogForm","navigate","useNavigate","isRegister","handleBlur","maxLength","login","VIEWERS","OWNER","CANCEL","Landing","LocalStorage","i","key","obj","o","s","clear","clearAnswers","clearQuestions","confirm","export","toISOString","filename","zip","JSZip","file","generateAsync","blob","document","createEvent","createElement","download","href","URL","createObjectURL","dataset","downloadurl","join","initMouseEvent","dispatchEvent","import","zipper","loadAsync","contents","files","async","content","k","Blob","signOut","toggleMode","setShowModalJSON","theme","setStrJSON","Navbar","expand","collapseOnSelect","Brand","Toggle","Offcanvas","placement","closeVariant","Nav","onSelect","eventKey","body","classList","contains","getElementById","innerHTML","Link","faSurprise","faQuestion","faAnchor","faUserFriends","NavDropdown","faUser","menuVariant","align","Divider","faDatabase","accept","Footer","marginBlockStart","marginBlockEnd","toggleNavbar","NAVBAR_TOGGLE","checkAuthentication","app","path","element","About","createStore","composeWithDevTools","applyMiddleware","thunk","sUserRoles","catch","getMessage","sTags","sessionId","floor","random","sessionStorage","toString","ReactDOM","StrictMode"],"mappings":"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","file":"static/js/main.41dd7d17.chunk.js","sourcesContent":["// Import redux types\r\nimport { ActionCreator, Dispatch } from 'redux';\r\nimport { ThunkAction } from 'redux-thunk';\r\n// Import Answer Typing\r\nimport { IAnswer, IAnswerState, IAnswerJson } from './types';\r\n\r\nimport { IAppState } from '../store/Store';\r\n\r\nimport data from \"./data.json\"\r\nconst parseFromJson = (): IAnswer[] => {\r\n\treturn data.map(a => parseDates(a))\r\n}\r\n\r\nconst parseFromLocalStorage = (arr: IAnswerJson[]) : IAnswer[] =>  {\r\n\treturn arr.map(a => parseDates(a));\r\n}\r\n\r\nconst parseDates = (a: IAnswerJson): IAnswer => ({\r\n\t...a, \r\n\tcreated: new Date(a.created)\r\n})\r\n\r\n// localStorage\r\nexport const SUPPORT_ANSWERS = 'SUPPORT_ANSWERS';\r\n \r\n// Create Action Constants\r\nexport enum AnswerActionTypes {\r\n  GET_ALL_ANSWERS = 'GET_ALL_ANSWERS',\r\n  GET_ANSWER = 'GET_ANSWER',\r\n  ADD_ANSWER = 'ADD_ANSWER',\r\n  EDIT_ANSWER = 'EDIT_ANSWER',\r\n  REMOVE_ANSWER = 'REMOVE_ANSWER',\r\n  STORE_ANSWER = 'STORE_ANSWER',\r\n  CANCEL_ANSWER = 'CANCEL_ANSWER',\r\n  CLOSE_ANSWER_FORM = 'CLOSE_ANSWER_FORM',\r\n  CLEAR = 'CLEAR'\r\n}\r\n\r\n// Interface for Get All Action Type\r\nexport interface IGetAll {\r\n\ttype: AnswerActionTypes.GET_ALL_ANSWERS;\r\n\tanswers: IAnswer[];\r\n }\r\n \r\nexport interface IGet {\r\n\ttype: AnswerActionTypes.GET_ANSWER;\r\n\tanswerId: number;\r\n}\r\n\r\nexport interface IAdd {\r\n\ttype: AnswerActionTypes.ADD_ANSWER;\r\n\tcreatedBy: number\r\n}\r\n\r\nexport interface IEdit {\r\n\ttype: AnswerActionTypes.EDIT_ANSWER;\r\n\tanswerId: number;\r\n}\r\n\r\nexport interface IRemove {\r\n\ttype: AnswerActionTypes.REMOVE_ANSWER;\r\n\tanswerId: number;\r\n}\r\n\r\nexport interface IStore {\r\n\ttype: AnswerActionTypes.STORE_ANSWER;\r\n\tanswer: IAnswer;\r\n\tassignToQuestion?: boolean\r\n}\r\n\r\nexport interface ICancel {\r\n\ttype: AnswerActionTypes.CANCEL_ANSWER;\r\n}\r\n\r\nexport interface ICloseAnswerForm {\r\n\ttype: AnswerActionTypes.CLOSE_ANSWER_FORM;\r\n}\r\n\r\ninterface IClear {\r\n\ttype: AnswerActionTypes.CLEAR;\r\n}\r\n\r\n// Combine the action types with a union (we assume there are more)\r\nexport type AnswerActions = IGetAll | IGet | IAdd | IEdit | IRemove | IStore | ICancel | ICloseAnswerForm | IClear;\r\n\r\nconst isWebStorageSupported = () => 'localStorage' in window\r\n\r\n// Get All Action <Promise<Return Type>, State Interface, Type of Param, Type of Action>\r\nexport const getAllAnswers: ActionCreator<\r\n\tThunkAction<Promise<any>, IAnswerState, null, IGetAll>\r\n> = () => {\r\n\treturn async (dispatch: Dispatch) => {\r\n\t\ttry {\r\n\t\t\t// const response = await axios.get('https://swapi.co/api/people/');\r\n\t\t\tlet answers: IAnswer[] = [];\r\n\t\t\tif (isWebStorageSupported()) {\r\n\t\t\t\tconst sAnswers = localStorage.getItem(SUPPORT_ANSWERS);\r\n\t\t\t\tif (sAnswers !== null) {\r\n\t\t\t\t\tconst parsed = JSON.parse(sAnswers);\r\n\t\t\t\t\tanswers = parseFromLocalStorage(parsed);\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tanswers = parseFromJson();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tanswers = parseFromJson();\r\n\t\t\t}\r\n\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: AnswerActionTypes.GET_ALL_ANSWERS,\r\n\t\t\t\tanswers\r\n\t\t\t});\r\n\t\t} catch (err) {\r\n\t\t\tconsole.error(err);\r\n\t\t}\r\n\t};\r\n};\r\n\r\n\r\nexport const addAnswer: ActionCreator<any> = () => {\r\n  return (dispatch: Dispatch, getState: () => IAppState) => {\r\n    try {\r\n      dispatch({\r\n        type: AnswerActionTypes.ADD_ANSWER,\r\n\t\tcreatedBy: getState().topState.top!.auth!.who!.userId,\t\r\n      });\r\n    } catch (err) {\r\n      console.error(err);\r\n    }\r\n  };\r\n};\r\n\r\nexport const getAnswer: ActionCreator<\r\n\tThunkAction<Promise<any>, IAnswerState, null, IGet>\r\n> = (answerId: number) => {\r\n\treturn async (dispatch: Dispatch) => {\r\n\t\ttry {\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: AnswerActionTypes.GET_ANSWER,\r\n\t\t\t\tanswerId\r\n\t\t\t});\r\n\t\t} catch (err) {\r\n\t\t\tconsole.error(err);\r\n\t\t}\r\n\t};\r\n};\r\n\r\nexport const editAnswer: ActionCreator<\r\n\tThunkAction<Promise<any>, IAnswerState, null, IEdit>\r\n> = (answerId: number) => {\r\n\treturn async (dispatch: Dispatch) => {\r\n\t\ttry {\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: AnswerActionTypes.EDIT_ANSWER,\r\n\t\t\t\tanswerId\r\n\t\t\t});\r\n\t\t} catch (err) {\r\n\t\t\tconsole.error(err);\r\n\t\t}\r\n\t};\r\n};\r\n\r\nexport const removeAnswer: ActionCreator<\r\n\tThunkAction<Promise<any>, IAnswerState, null, IGetAll>\r\n> = (answerId: number) => {\r\n\treturn async (dispatch: Dispatch) => {\r\n\t\ttry {\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: AnswerActionTypes.REMOVE_ANSWER,\r\n\t\t\t\tanswerId\r\n\t\t\t});\r\n\t\t} catch (err) {\r\n\t\t\tconsole.error(err);\r\n\t\t}\r\n\t};\r\n};\r\n\r\n\r\nexport const storeAnswer: ActionCreator<\r\n\tThunkAction<Promise<any>, IAppState, null, IStore>\r\n> = (answer: IAnswer, formMode: string) => {\r\n\treturn async (dispatch: Dispatch, getState: () => IAppState ): Promise<any> => {\r\n\t\ttry {\r\n\t\t\tif (formMode === 'add') {\r\n\t\t\t\tdispatch({\r\n\t\t\t\t\ttype: AnswerActionTypes.STORE_ANSWER,\r\n\t\t\t\t\tanswer\r\n\t\t\t\t});\r\n\t\t\t\treturn Promise.resolve(getState().answerState.answer!.answerId)\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tdispatch({\r\n\t\t\t\t\ttype: AnswerActionTypes.STORE_ANSWER,\r\n\t\t\t\t\tanswer\r\n\t\t\t\t});\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t}\r\n\t\tcatch (err) {\r\n\t\t\tconsole.error(err);\r\n\t\t}\r\n\t};\r\n};\r\n\r\nexport const cancelAnswer: ActionCreator<any> = () => {\r\n\treturn (dispatch: Dispatch) => {\r\n\t  try {\r\n\t\t dispatch({\r\n\t\t\ttype: AnswerActionTypes.CANCEL_ANSWER\r\n\t\t });\r\n\t  } catch (err) {\r\n\t\t console.error(err);\r\n\t  }\r\n\t};\r\n };\r\n\r\n export const closeAnswerForm: ActionCreator<any> = () => {\r\n\treturn (dispatch: Dispatch) => {\r\n\t\ttry {\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: AnswerActionTypes.CLOSE_ANSWER_FORM\r\n\t\t\t});\r\n\t\t} catch (err) {\r\n\t\t\tconsole.error(err);\r\n\t\t}\r\n\t};\r\n};\r\n\r\nexport const clearAnswers: ActionCreator<any> = () => {\r\n\treturn (dispatch: Dispatch) => {\r\n\t\ttry {\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: AnswerActionTypes.CLEAR\r\n\t\t\t});\r\n\t\t} catch (err) {\r\n\t\t\tconsole.error(err);\r\n\t\t}\r\n\t};\r\n};\r\n \r\n\r\n// const addAnswerToLocalStorage = (answer: IAnswer): Promise<any> => {\r\n// \treturn new Promise((resolve, reject) => {\r\n// \t\tsetTimeout(() => {\r\n// \t\t\tresolve({\r\n// \t\t\t\t'status': 200,\r\n// \t\t\t\t'content-type': 'application/json',\r\n// \t\t\t\t'data' : {\r\n// \t\t\t\t'results': answer\r\n// \t\t\t\t}\r\n// \t\t\t})\r\n// \t\t}, 50)\r\n// \t})\r\n// }\r\n\r\n","// Import redux types\r\nimport { ActionCreator, Dispatch } from 'redux';\r\nimport { ThunkAction } from 'redux-thunk';\r\n\r\n// Import Question Typing\r\nimport { IQuestion, ICategory, ICategoryJson, ICategoriesState, IQuestionJson, ICategoryState } from './types';\r\n\r\nimport { addAnswer, AnswerActionTypes, storeAnswer } from '../Answers/actions'\r\nimport { IAnswer } from '../Answers/types';\r\n\r\n///////////////////////////////////////////////////\r\n// localStorage\r\nimport { initialCategory, SUPPORT_CATEGORIES } from './categoriesReducer';\r\n\r\nimport data from \"./data.json\"\r\nimport { IAppState } from '../store/Store';\r\n\r\nconst parseFromJson = (): ICategory[] => {\r\n\treturn data.map(g => parseDates(g));\r\n}\r\n\r\nconst parseQuestionsFromLocalStorage = (questions: IQuestionJson[]): IQuestion[] => {\r\n\treturn questions.map(q => ({\r\n\t\t...q,\r\n\t\tcategoryId: q.categoryId!,\r\n\t\twords: q.text.split(' '),\r\n\t\tanswers: q.answers.map(a => ({ ...a, assigned: new Date(a.assigned) })),\r\n\t\tcreated: new Date(q.created)\r\n\t})\r\n\t)\r\n}\r\n\r\nconst parseFromLocalStorage = (arr: ICategoryJson[]): ICategory[] => {\r\n\treturn arr.map(g => parseDates(g));\r\n}\r\n\r\nconst parseDates = (g: ICategoryJson): ICategory => {\r\n\treturn {\r\n\t\t...g,\r\n\t\tquestions: g.questions.map(q => ({\r\n\t\t\t...q,\r\n\t\t\tcategoryId: g.categoryId,\r\n\t\t\tanswers: q.answers.map(a => ({ ...a, assigned: new Date(a.assigned) })),\r\n\t\t\tcreated: new Date(q.created)\r\n\t\t})),\r\n\t\tcreated: new Date(g.created)\r\n\t}\r\n}\r\n\r\n// Create Action Constants\r\nexport enum QuestionActionTypes {\r\n\tLOAD_CATEGORIES = 'LOAD_CATEGORIES',\r\n\tGET_QUESTION = 'GET_QUESTION',\r\n\tADD_QUESTION = 'ADD_QUESTION',\r\n\tEDIT_QUESTION = 'EDIT_QUESTION',\r\n\tREMOVE_QUESTION = 'REMOVE_QUESTION',\r\n\tSTORE_QUESTION = 'STORE_QUESTION',\r\n\tUPDATE_QUESTION = 'UPDATE_QUESTION',\r\n\tCANCEL_QUESTION = 'CANCEL_QUESTION',\r\n\tCLOSE_QUESTION_FORM = 'CLOSE_QUESTION_FORM',\r\n\tOPEN_QUESTION_FORM = 'OPEN_QUESTION_FORM',\r\n\r\n\t// groups\r\n\tGET_CATEGORY = 'GET_CATEGORY',\r\n\tADD_CATEGORY = 'ADD_CATEGORY',\r\n\tTOGGLE_CATEGORY = 'EXPAND_CATEGORY',\r\n\tEDIT_CATEGORY = 'EDIT_CATEGORY',\r\n\tREMOVE_CATEGORY = 'REMOVE_CATEGORY',\r\n\tSTORE_CATEGORY = 'STORE_CATEGORY',\r\n\tUPDATE_CATEGORY = 'UPDATE_CATEGORY',\r\n\tCANCEL_CATEGORY = 'CANCEL_CATEGORY',\r\n\tCATEGORY_OPTIONS = 'CATEGORY_OPTIONS',\r\n\t// question answers\r\n\tREMOVE_QUESTION_ANSWER = 'REMOVE_QUESTION_ANSWER',\r\n\tASSIGN_QUESTION_ANSWER = 'ASSIGN_QUESTION_ANSWER',\r\n\t// localSTorage\r\n\tSET_LAST_ANSWER_ID = 'SET_LAST_ANSWER_ID',\r\n\tCLEAR = 'CLEAR'\r\n}\r\n\r\n\r\n// Interface for Get All Action Type\r\nexport interface ILoad {\r\n\ttype: QuestionActionTypes.LOAD_CATEGORIES;\r\n\tcategories: ICategory[];\r\n\tcategoryMap: Map<number, ICategoryState>\r\n}\r\n\r\n\r\nexport interface IGet {\r\n\ttype: QuestionActionTypes.GET_QUESTION;\r\n\tcategoryId: number;\r\n\tquestionId: number;\r\n}\r\n\r\nexport interface IAdd {\r\n\ttype: QuestionActionTypes.ADD_QUESTION;\r\n\t// createdBy: number;\r\n\t// categoryId: number;\r\n\t// text: string;\r\n\tquestion: IQuestion\r\n}\r\n\r\nexport interface IEdit {\r\n\ttype: QuestionActionTypes.EDIT_QUESTION;\r\n\tcategoryId: number;\r\n\tquestionId: number;\r\n\tshowQuestionForm: boolean;\r\n}\r\n\r\nexport interface IRemove {\r\n\ttype: QuestionActionTypes.REMOVE_QUESTION;\r\n\tcategoryId: number;\r\n\tquestionId: number;\r\n}\r\n\r\n\r\n\r\nexport interface IStore {\r\n\ttype: QuestionActionTypes.STORE_QUESTION;\r\n\tquestion: IQuestion;\r\n}\r\n\r\nexport interface IUpdate {\r\n\ttype: QuestionActionTypes.UPDATE_QUESTION;\r\n\tquestion: IQuestion;\r\n}\r\n\r\nexport interface ICancel {\r\n\ttype: QuestionActionTypes.CANCEL_QUESTION;\r\n}\r\n\r\nexport interface ICloseQuestionForm {\r\n\ttype: QuestionActionTypes.CLOSE_QUESTION_FORM;\r\n}\r\n\r\nexport interface IOpenQuestionForm {\r\n\ttype: QuestionActionTypes.OPEN_QUESTION_FORM;\r\n}\r\n\r\n\r\n\r\n\r\n// group\r\n\r\nexport interface IGetCategory {\r\n\ttype: QuestionActionTypes.GET_CATEGORY;\r\n\tcategoryId: number,\r\n\tshowCategoryForm: boolean\r\n}\r\n\r\nexport interface IAddCategory {\r\n\ttype: QuestionActionTypes.ADD_CATEGORY;\r\n\tcategory: ICategory,\r\n\tshowCategoryForm: boolean\r\n}\r\n\r\nexport interface ICancelCategory {\r\n\ttype: QuestionActionTypes.CANCEL_CATEGORY;\r\n}\r\n\r\n\r\nexport interface IToggleCategory {\r\n\ttype: QuestionActionTypes.TOGGLE_CATEGORY;\r\n\tcategoryId: number\r\n}\r\n\r\nexport interface IEditCategory {\r\n\ttype: QuestionActionTypes.EDIT_CATEGORY;\r\n\tcategoryId: number,\r\n\tshowCategoryForm: boolean\r\n}\r\n\r\nexport interface IRemoveCategory {\r\n\ttype: QuestionActionTypes.REMOVE_CATEGORY;\r\n\tcategoryId: number\r\n}\r\n\r\nexport interface IStoreCategory {\r\n\ttype: QuestionActionTypes.STORE_CATEGORY;\r\n\tcategory: ICategory;\r\n}\r\n\r\nexport interface IUpdateCategory {\r\n\ttype: QuestionActionTypes.UPDATE_CATEGORY;\r\n\tcategory: ICategory;\r\n}\r\n\r\nexport interface ICancelCategory {\r\n\ttype: QuestionActionTypes.CANCEL_CATEGORY;\r\n}\r\n\r\n\r\n// question answers\r\nexport interface IRemoveQuestionAnswer {\r\n\ttype: QuestionActionTypes.REMOVE_QUESTION_ANSWER;\r\n\tcategoryId: number,\r\n\tquestionId: number,\r\n\tanswerId: number\r\n}\r\n\r\nexport interface IAssignQuestionAnswer {\r\n\ttype: QuestionActionTypes.ASSIGN_QUESTION_ANSWER;\r\n\tcategoryId: number,\r\n\tquestionId: number,\r\n\tanswerId: number,\r\n\tassignedBy: number,\r\n\ttekst?: string\r\n}\r\n\r\nexport interface IAddAndAssignNewAnswer {\r\n\ttype: AnswerActionTypes.STORE_ANSWER;\r\n\tcategoryId: number,\r\n\tquestionId: number,\r\n\tanswer: IAnswer;\r\n}\r\n\r\nexport interface IAddAndAssignNewAnswer {\r\n\ttype: AnswerActionTypes.STORE_ANSWER;\r\n\tcategoryId: number,\r\n\tquestionId: number,\r\n\tanswer: IAnswer;\r\n}\r\n\r\nexport interface IClear {\r\n\ttype: QuestionActionTypes.CLEAR;\r\n}\r\n\r\nexport interface ICategoryOptions {\r\n\ttype: QuestionActionTypes.CATEGORY_OPTIONS;\r\n}\r\n\r\n\r\n\r\n// Combine the action types with a union (we assume there are more)\r\nexport type QuestionActions = ILoad | IGet | IAdd | IEdit | IRemove | IStore | IUpdate | ICancel |\r\n\tIGetCategory | IAddCategory | IToggleCategory | IEditCategory | IRemoveCategory |\r\n\tIStoreCategory | IUpdateCategory | ICancelCategory | ICategoryOptions |\r\n\tIRemoveQuestionAnswer | IAssignQuestionAnswer |\r\n\tIAddAndAssignNewAnswer |\r\n\tICloseQuestionForm | IOpenQuestionForm | IClear;\r\n\r\nconst isWebStorageSupported = () => 'localStorage' in window\r\n\r\n\r\n// Get All Action <Promise<Return Type>, State Interface, Type of Param, Type of Action>\r\nexport const loadCategories: ActionCreator<\r\n\tThunkAction<Promise<any>, ICategoriesState, null, ILoad>\r\n> = () => {\r\n\treturn async (dispatch: Dispatch) => {\r\n\t\ttry {\r\n\t\t\tlet categories: ICategory[] = [];\r\n\t\t\tlet loadedFromStorage = false;\r\n\t\t\tif (isWebStorageSupported()) {\r\n\t\t\t\tconst sCategories = localStorage.getItem(SUPPORT_CATEGORIES);\r\n\t\t\t\tconsole.log(\"sCategories\", sCategories)\r\n\t\t\t\tif (sCategories !== null) {\r\n\t\t\t\t\t// load from storage\r\n\t\t\t\t\tconst categoriesJson = JSON.parse(sCategories);\r\n\t\t\t\t\tcategories = parseFromLocalStorage(categoriesJson);\r\n\t\t\t\t\tcategories.forEach(category => {\r\n\t\t\t\t\t\tconst sQuestions = localStorage.getItem(`CATEGORY_${category.categoryId}`);\r\n\t\t\t\t\t\tif (sQuestions) {\r\n\t\t\t\t\t\t\tconst json = JSON.parse(sQuestions);\r\n\t\t\t\t\t\t\tcategory.questions = parseQuestionsFromLocalStorage(json);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t})\r\n\t\t\t\t\tloadedFromStorage = true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tconsole.log({ categories })\r\n\r\n\t\t\tif (!loadedFromStorage) {\r\n\t\t\t\t// load from data\r\n\t\t\t\tcategories = parseFromJson();\r\n\t\t\t\tfor (let category of categories) {\r\n\t\t\t\t\tcategory.questions.forEach(q => q.categoryId = category.categoryId);\r\n\t\t\t\t\tlocalStorage.setItem(`CATEGORY_${category.categoryId}`, JSON.stringify(category.questions));\r\n\t\t\t\t\tcategory.questions.forEach(q => q.words = q.text.split(' '));\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tconst categoryMap = new Map<number, ICategoryState>();\r\n\t\t\tfor (let category of categories) {\r\n\t\t\t\tconst categoryState: ICategoryState = {\r\n\t\t\t\t\tquestions: [...category.questions]\r\n\t\t\t\t}\r\n\t\t\t\tcategoryMap.set(category.categoryId, categoryState);\r\n\t\t\t\tcategory.questions = [];\r\n\t\t\t}\r\n\r\n\t\t\tif (!loadedFromStorage) {\r\n\t\t\t\tlocalStorage.setItem(SUPPORT_CATEGORIES, JSON.stringify(categories));\r\n\t\t\t}\r\n\r\n\t\t\tdispatch<any>({\r\n\t\t\t\ttype: QuestionActionTypes.LOAD_CATEGORIES,\r\n\t\t\t\tcategories,\r\n\t\t\t\tcategoryMap\r\n\t\t\t})\r\n\t\t}\r\n\t\tcatch (err) {\r\n\t\t\tconsole.error(err);\r\n\t\t}\r\n\t};\r\n};\r\n\r\n\r\n// Get Question <Promise<Return Type>, State Interface, Type of Param, Type of Action> \r\nexport const getQuestion: ActionCreator<\r\n\tThunkAction<Promise<any>, ICategoriesState, string, IGet>\r\n> = (categoryId: number, questionId: number) => {\r\n\treturn async (dispatch: Dispatch) => {\r\n\t\ttry {\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: QuestionActionTypes.GET_QUESTION,\r\n\t\t\t\tcategoryId,\r\n\t\t\t\tquestionId\r\n\t\t\t});\r\n\t\t} catch (err) {\r\n\t\t\tconsole.error(err);\r\n\t\t}\r\n\t};\r\n};\r\n\r\ninterface IMsg {\r\n\tttype: string,\r\n\tdata: object\r\n}\r\n\r\n\r\n\r\nexport const addQuestion: ActionCreator<\r\n\tThunkAction<Promise<any>, IAppState, null, IAdd>\r\n> = (categoryId: number, text: string, canEdit?: boolean) => {\r\n\treturn async (dispatch: Dispatch, getState: () => IAppState) => {\r\n\t\ttry {\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: QuestionActionTypes.ADD_QUESTION,\r\n\t\t\t\tquestion: {\r\n\t\t\t\t\tcategoryId,\r\n\t\t\t\t\tcreatedBy: getState().topState.top!.auth!.who!.userId,\r\n\t\t\t\t\ttext,\r\n\t\t\t\t\twords: text.split(' ')\r\n\t\t\t\t},\r\n\t\t\t\tshowCategoryForm: false\r\n\t\t\t});\r\n\t\t}\r\n\t\tcatch (err) {\r\n\t\t\tconsole.error(err);\r\n\t\t}\r\n\t};\r\n};\r\n\r\nexport const editQuestion: ActionCreator<\r\n\tThunkAction<Promise<any>, ICategoriesState, null, IEdit>\r\n> = (categoryId: number, questionId: number, showQuestionForm: boolean) => {\r\n\treturn async (dispatch: Dispatch) => {\r\n\t\ttry {\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: QuestionActionTypes.EDIT_QUESTION,\r\n\t\t\t\tcategoryId,\r\n\t\t\t\tquestionId,\r\n\t\t\t\tshowCategoryForm: false,\r\n\t\t\t\tshowQuestionForm\r\n\t\t\t});\r\n\t\t} catch (err) {\r\n\t\t\tconsole.error(err);\r\n\t\t}\r\n\t};\r\n};\r\n\r\nexport const removeQuestion: ActionCreator<\r\n\tThunkAction<Promise<any>, ICategoriesState, null, IRemove>\r\n> = (categoryId: number, questionId: number) => {\r\n\treturn async (dispatch: Dispatch) => {\r\n\t\ttry {\r\n\t\t\tawait delay()\r\n\t\t\t// warning: store answer, after upodate, to local storage\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: QuestionActionTypes.REMOVE_QUESTION,\r\n\t\t\t\tcategoryId,\r\n\t\t\t\tquestionId\r\n\t\t\t});\r\n\t\t} catch (err) {\r\n\t\t\tconsole.error(err);\r\n\t\t}\r\n\t};\r\n};\r\n\r\nexport const selectQuestionAnswer: ActionCreator<\r\n\tThunkAction<Promise<any>, ICategoriesState, null, IRemoveQuestionAnswer>\r\n> = (categoryId: number, questionId: number, answerId: number) => {\r\n\treturn async (dispatch: Dispatch) => {\r\n\t\ttry {\r\n\t\t\tawait delay()\r\n\t\t\t// warning: store answer, after upodate, to local storage\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: QuestionActionTypes.REMOVE_QUESTION_ANSWER,\r\n\t\t\t\tcategoryId: categoryId,\r\n\t\t\t\tquestionId: questionId,\r\n\t\t\t\tanswerId: answerId,\r\n\t\t\t});\r\n\t\t\t//dispatch<any>(getQuestion(questionId))\t// refresh state of question\r\n\t\t}\r\n\t\tcatch (err) {\r\n\t\t\tconsole.error(err);\r\n\t\t}\r\n\t};\r\n};\r\n\r\nexport const copyQuestionAnswer: ActionCreator<\r\n\tThunkAction<Promise<any>, ICategoriesState, null, IRemoveQuestionAnswer>\r\n> = (categoryId: number, questionId: number, answerId: number) => {\r\n\treturn async (dispatch: Dispatch) => {\r\n\t\ttry {\r\n\t\t\tawait delay()\r\n\t\t\t// warning: store answer, after upodate, to local storage\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: QuestionActionTypes.REMOVE_QUESTION_ANSWER,\r\n\t\t\t\tcategoryId: categoryId,\r\n\t\t\t\tquestionId: questionId,\r\n\t\t\t\tanswerId: answerId,\r\n\t\t\t});\r\n\t\t\t//dispatch<any>(getQuestion(questionId))\t// refresh state of question\r\n\t\t}\r\n\t\tcatch (err) {\r\n\t\t\tconsole.error(err);\r\n\t\t}\r\n\t};\r\n};\r\n\r\nexport const removeQuestionAnswer: ActionCreator<\r\n\tThunkAction<Promise<any>, ICategoriesState, null, IRemoveQuestionAnswer>\r\n> = (categoryId: number, questionId: number, answerId: number) => {\r\n\treturn async (dispatch: Dispatch) => {\r\n\t\ttry {\r\n\t\t\tawait delay()\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: QuestionActionTypes.REMOVE_QUESTION_ANSWER,\r\n\t\t\t\tcategoryId: categoryId,\r\n\t\t\t\tquestionId: questionId,\r\n\t\t\t\tanswerId: answerId,\r\n\t\t\t});\r\n\t\t\t// dispatch<any>(getQuestion(questionId))\t// refresh state of question\r\n\t\t}\r\n\t\tcatch (err) {\r\n\t\t\tconsole.error(err);\r\n\t\t}\r\n\t};\r\n};\r\n\r\n\r\nexport const assignQuestionAnswer: ActionCreator<\r\n\tThunkAction<Promise<any>, IAppState, null, IRemoveQuestionAnswer>\r\n> = (categoryId: number, questionId: number, answerId: number, tekst?: string) => {\r\n\treturn async (dispatch: Dispatch, getState: () => IAppState) => {\r\n\t\ttry {\r\n\t\t\tawait delay();\r\n\t\t\t// warning: store answer, after upodate, to local storage\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: QuestionActionTypes.ASSIGN_QUESTION_ANSWER,\r\n\t\t\t\tcategoryId,\r\n\t\t\t\tquestionId,\r\n\t\t\t\tanswerId,\r\n\t\t\t\tassignedBy: getState().topState.top!.auth!.who!.userId\r\n\t\t\t});\r\n\t\t\t//dispatch<any>(getQuestion(questionId))\t// refresh state of question\r\n\t\t}\r\n\t\tcatch (err) {\r\n\t\t\tconsole.error(err);\r\n\t\t}\r\n\t};\r\n};\r\n\r\n\r\n/*\r\nconst syncWithOthers = (type: string, entity: any) => {\r\n\t\r\n\tconst btnSync = document.getElementById('btnSync');\r\n\tlocalStorage.setItem('syncAction', JSON.stringify({\r\n\t\t\ttype,\r\n\t\t\tentity,\r\n\t\t\tsessionId: sessionStorage.getItem('sessionId')\r\n\t\t})\r\n\t);\r\n\tbtnSync!.click();\r\n};\r\n*/\r\n\r\n\r\nexport const updateQuestion: ActionCreator<\r\n\tThunkAction<Promise<any>, IAppState, null, IUpdate>\r\n> = (question: IQuestion) => {\r\n\treturn async (dispatch: Dispatch, getState: () => IAppState) => {\r\n\t\ttry {\r\n\t\t\tawait delay();\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: QuestionActionTypes.UPDATE_QUESTION,\r\n\t\t\t\tquestion\r\n\t\t\t});\r\n\t\t}\r\n\t\tcatch (err) {\r\n\t\t\tconsole.error(err);\r\n\t\t}\r\n\t};\r\n};\r\n\r\n\r\nexport const storeQuestion: ActionCreator<\r\n\tThunkAction<Promise<any>, IAppState, null, IStore>\r\n> = (question: IQuestion) => {\r\n\treturn async (dispatch: Dispatch, getState: () => IAppState) => {\r\n\t\tconst { categoryId } = question;\r\n\t\ttry {\r\n\t\t\t//await delay();\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: QuestionActionTypes.STORE_QUESTION,\r\n\t\t\t\tquestion\r\n\t\t\t});\r\n\t\t}\r\n\t\tcatch (err) {\r\n\t\t\tconsole.error(err);\r\n\t\t}\r\n\t};\r\n};\r\n\r\nconst delay = (): Promise<any> => {\r\n\treturn new Promise((resolve, reject) => {\r\n\t\tsetTimeout(() => {\r\n\t\t\tresolve({\r\n\t\t\t\t'status': 200,\r\n\t\t\t\t'content-type': 'application/json',\r\n\t\t\t\t'data': {\r\n\t\t\t\t\t'results': 1\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t}, 50)\r\n\t})\r\n}\r\n\r\nexport const cancelQuestion: ActionCreator<any> = () => {\r\n\treturn (dispatch: Dispatch) => {\r\n\t\ttry {\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: QuestionActionTypes.CANCEL_QUESTION\r\n\t\t\t});\r\n\t\t} catch (err) {\r\n\t\t\tconsole.error(err);\r\n\t\t}\r\n\t};\r\n};\r\n\r\nexport const closeQuestionForm: ActionCreator<any> = () => {\r\n\treturn (dispatch: Dispatch) => {\r\n\t\ttry {\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: QuestionActionTypes.CLOSE_QUESTION_FORM\r\n\t\t\t});\r\n\t\t} catch (err) {\r\n\t\t\tconsole.error(err);\r\n\t\t}\r\n\t};\r\n};\r\n\r\n\r\n\r\n\r\nexport const openQuestionForm: ActionCreator<any> = () => {\r\n\treturn (dispatch: Dispatch) => {\r\n\t\ttry {\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: QuestionActionTypes.OPEN_QUESTION_FORM\r\n\t\t\t});\r\n\t\t} catch (err) {\r\n\t\t\tconsole.error(err);\r\n\t\t}\r\n\t};\r\n};\r\n\r\n\r\nexport const getCategory: ActionCreator<\r\n\tThunkAction<Promise<any>, ICategoriesState, string, IGet>\r\n> = (categoryId: number, showCategoryForm: boolean) => {\r\n\treturn async (dispatch: Dispatch) => {\r\n\t\ttry {\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: QuestionActionTypes.GET_CATEGORY,\r\n\t\t\t\tcategoryId,\r\n\t\t\t\tshowCategoryForm\r\n\t\t\t});\r\n\t\t} catch (err) {\r\n\t\t\tconsole.error(err);\r\n\t\t}\r\n\t};\r\n};\r\n\r\n\r\nexport const addCategory: ActionCreator<\r\n\tThunkAction<Promise<any>, IAppState, null, IAddCategory>\r\n> = () => {\r\n\treturn async (dispatch: Dispatch, getState: () => IAppState) => {\r\n\t\ttry {\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: QuestionActionTypes.ADD_CATEGORY,\r\n\t\t\t\tcategory: {\r\n\t\t\t\t\t...initialCategory,\r\n\t\t\t\t\tcreatedBy: getState().topState.top!.auth!.who!.userId\r\n\t\t\t\t},\r\n\t\t\t\tshowCategoryForm: true\r\n\t\t\t});\r\n\t\t} catch (err) {\r\n\t\t\tconsole.error(err);\r\n\t\t}\r\n\t};\r\n};\r\n\r\nexport const toggleCategory: ActionCreator<\r\n\tThunkAction<Promise<any>, ICategoriesState, null, IEditCategory>\r\n> = (categoryId: number) => {\r\n\treturn async (dispatch: Dispatch) => {\r\n\t\ttry {\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: QuestionActionTypes.TOGGLE_CATEGORY,\r\n\t\t\t\tcategoryId\r\n\t\t\t});\r\n\t\t} catch (err) {\r\n\t\t\tconsole.error(err);\r\n\t\t}\r\n\t};\r\n};\r\n\r\n\r\nexport const editCategory: ActionCreator<\r\n\tThunkAction<Promise<any>, ICategoriesState, null, IEditCategory>\r\n> = (categoryId: number) => {\r\n\treturn async (dispatch: Dispatch) => {\r\n\t\ttry {\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: QuestionActionTypes.EDIT_CATEGORY,\r\n\t\t\t\tcategoryId,\r\n\t\t\t\tshowCategoryForm: true\r\n\t\t\t});\r\n\t\t} catch (err) {\r\n\t\t\tconsole.error(err);\r\n\t\t}\r\n\t};\r\n}\r\n\r\nexport const removeCategory: ActionCreator<\r\n\tThunkAction<Promise<any>, ICategoriesState, null, IRemoveCategory>\r\n> = (categoryId: number) => {\r\n\treturn async (dispatch: Dispatch) => {\r\n\t\ttry {\r\n\t\t\tawait delay()\r\n\t\t\t// warning: store answer, after update, to local storage\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: QuestionActionTypes.REMOVE_CATEGORY,\r\n\t\t\t\tcategoryId\r\n\t\t\t});\r\n\t\t\treturn Promise.resolve(0)\r\n\t\t} catch (err) {\r\n\t\t\tconsole.error(err);\r\n\t\t}\r\n\t};\r\n};\r\n\r\nexport const storeCategory: ActionCreator<\r\n\tThunkAction<Promise<any>, IAppState, null, IStoreCategory>\r\n> = (category: ICategory) => {\r\n\treturn async (dispatch: Dispatch, getState: () => IAppState) => {\r\n\t\ttry {\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: QuestionActionTypes.STORE_CATEGORY,\r\n\t\t\t\tcategory\r\n\t\t\t});\r\n\t\t\treturn Promise.resolve(category.categoryId)\r\n\t\t}\r\n\t\tcatch (err) {\r\n\t\t\tconsole.error(err);\r\n\t\t}\r\n\t};\r\n};\r\n\r\n\r\nexport const updateCategory: ActionCreator<\r\n\tThunkAction<Promise<any>, ICategoriesState, null, IUpdateCategory>\r\n> = (category: ICategory) => {\r\n\treturn async (dispatch: Dispatch) => {\r\n\t\ttry {\r\n\t\t\t// await updateCategoryFromLocalStorage(group);\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: QuestionActionTypes.UPDATE_CATEGORY,\r\n\t\t\t\tcategory\r\n\t\t\t});\r\n\t\t\treturn Promise.resolve(category.categoryId)\r\n\t\t}\r\n\t\tcatch (err) {\r\n\t\t\tconsole.error(err);\r\n\t\t}\r\n\t};\r\n};\r\n\r\nexport const cancelCategory: ActionCreator<any> = () => {\r\n\treturn (dispatch: Dispatch) => {\r\n\t\ttry {\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: QuestionActionTypes.CANCEL_CATEGORY\r\n\t\t\t});\r\n\t\t}\r\n\t\tcatch (err) {\r\n\t\t\tconsole.error(err);\r\n\t\t}\r\n\t};\r\n};\r\n\r\nexport const categoryOptions: ActionCreator<any> = () => {\r\n\treturn (dispatch: Dispatch) => {\r\n\t\ttry {\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: QuestionActionTypes.CATEGORY_OPTIONS\r\n\t\t\t});\r\n\t\t}\r\n\t\tcatch (err) {\r\n\t\t\tconsole.error(err);\r\n\t\t}\r\n\t};\r\n};\r\n\r\n\r\nexport const addAndAssignNewAnswer: ActionCreator<\r\n\tThunkAction<Promise<any>, IAppState, null, IStore>\r\n> = (categoryId: number, questionId: number, answer: IAnswer, formMode: string) => {\r\n\treturn async (dispatch: Dispatch, getState: () => IAppState) => {\r\n\t\ttry {\r\n\t\t\tanswer.createdBy = getState().topState.top!.auth!.who!.userId;\r\n\t\t\tdispatch<any>(addAnswer());\r\n\t\t\tdispatch<any>(storeAnswer(answer, formMode))\r\n\t\t\t\t.then((answerId: number) => {\r\n\t\t\t\t\tdispatch<any>(assignQuestionAnswer(categoryId, questionId, answerId))\r\n\t\t\t\t});\r\n\t\t}\r\n\t\tcatch (err) {\r\n\t\t\tconsole.error(err);\r\n\t\t}\r\n\t};\r\n};\r\n\r\nexport const clearQuestions: ActionCreator<any> = () => {\r\n\treturn (dispatch: Dispatch) => {\r\n\t\ttry {\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: QuestionActionTypes.CLEAR\r\n\t\t\t});\r\n\t\t} catch (err) {\r\n\t\t\tconsole.error(err);\r\n\t\t}\r\n\t};\r\n};","// Import redux types\r\nimport { ActionCreator, Dispatch } from 'redux';\r\nimport { ThunkAction } from 'redux-thunk';\r\n\r\n// Import User Typing\r\nimport { IUser, IRole, IRoleJson, IUsersState } from './types';\r\n\r\n///////////////////////////////////////////////////\r\n// localStorage\r\nimport { SUPPORT_USERS } from './reducer';\r\n\r\nimport data from \"./data.json\"\r\nimport { IAppState } from '../store/Store';\r\n\r\nconst parseFromJson = (): IRole[] => {\r\n\treturn data.map(g => {\r\n\t\treturn parseRole(g)\r\n\t})\r\n}\r\n\r\nconst parseFromLocalStorage = (arr: IRoleJson[]): IRole[] => {\r\n\treturn arr.map(g => parseRole(g));\r\n}\r\n\r\nconst parseRole = (g: IRoleJson): IRole => ({\r\n\t...g,\r\n\tusers: g.users.map(u => ({ ...u, created: new Date(u.created) })),\r\n\tcreated: new Date(g.created)\r\n})\r\n\r\n\r\n// Create Action Constants\r\nexport enum UserActionTypes {\r\n\tLOAD_USER_GROUPS = 'LOAD_USER_GROUPS',\r\n\tCREATE_OPTIONS = 'CREATE_OPTIONS',\r\n\tGET_ALL_USERS = 'GET_ALL_USERS',\r\n\tGET_USER = 'GET_USER',\r\n\tADD_USER = 'ADD_USER',\r\n\tEDIT_USER = 'EDIT_USER',\r\n\tREMOVE_USER = 'REMOVE_USER',\r\n\tSTORE_USER = 'STORE_USER',\r\n\tCANCEL_USER = 'CANCEL_USER',\r\n\t// groups\r\n\tADD_ROLE = 'ADD_ROLE',\r\n\tTOGGLE_ROLE = 'EXPAND_ROLE',\r\n\tEDIT_ROLE = 'EDIT_ROLE',\r\n\tREMOVE_ROLE = 'REMOVE_ROLE',\r\n\tSTORE_ROLE = 'STORE_ROLE',\r\n\t// localSTorage\r\n\tSET_IS_DETAIL = 'SET_IS_DETAIL',\r\n}\r\n\r\n\r\n// Interface for Get All Action Type\r\nexport interface IGetAll {\r\n\ttype: UserActionTypes.GET_ALL_USERS;\r\n\troles: IRole[];\r\n}\r\n\r\nexport interface ICreateOptions {\r\n\ttype: UserActionTypes.CREATE_OPTIONS;\r\n}\r\n\r\nexport interface IGet {\r\n\ttype: UserActionTypes.GET_USER;\r\n\tuserId: number;\r\n}\r\n\r\nexport interface IAdd {\r\n\ttype: UserActionTypes.ADD_USER;\r\n\tcreatedBy: number,\r\n\troleId: number,\r\n\ttext: string\r\n\t//userId: number,\r\n}\r\n\r\nexport interface IEdit {\r\n\ttype: UserActionTypes.EDIT_USER;\r\n\troleId: number,\r\n\tuserId: number\r\n}\r\n\r\nexport interface IRemove {\r\n\ttype: UserActionTypes.REMOVE_USER;\r\n\troleId: number,\r\n\tuserId: number,\r\n}\r\n\r\nexport interface IStore {\r\n\ttype: UserActionTypes.STORE_USER;\r\n\tuser: IUser;\r\n\tformMode: string;\r\n}\r\n\r\nexport interface ICancel {\r\n\ttype: UserActionTypes.CANCEL_USER;\r\n}\r\n\r\n// group\r\nexport interface IAddRole {\r\n\ttype: UserActionTypes.ADD_ROLE;\r\n\t//roleId: number\r\n}\r\n\r\nexport interface IToggleRole {\r\n\ttype: UserActionTypes.TOGGLE_ROLE;\r\n\troleId: number\r\n}\r\n\r\nexport interface IEditRole {\r\n\ttype: UserActionTypes.EDIT_ROLE;\r\n\troleId: number\r\n}\r\n\r\nexport interface IRemoveRole {\r\n\ttype: UserActionTypes.REMOVE_ROLE;\r\n\troleId: number\r\n}\r\n\r\nexport interface IStoreRole {\r\n\ttype: UserActionTypes.STORE_ROLE;\r\n\tgroup: IRole;\r\n}\r\n\r\n\r\n// Combine the action types with a union (we assume there are more)\r\nexport type UserActions = IGetAll | IGet | IAdd | IEdit | IRemove | IStore | ICancel |\r\n\tIAddRole | IToggleRole | IEditRole | IRemoveRole | IStoreRole |\r\n\tICreateOptions;\r\n\r\nconst isWebStorageSupported = () => 'localStorage' in window\r\n\r\n\r\nexport const getAllUsers: ActionCreator<\r\n\tThunkAction<Promise<any>, IUsersState, null, IGetAll>\r\n> = () => {\r\n\treturn async (dispatch: Dispatch) => {\r\n\t\ttry {\r\n\t\t\t// const response = await axios.get('https://swapi.co/api/people/');\r\n\t\t\tlet roles: IRole[] = [];\r\n\t\t\tif (isWebStorageSupported()) {\r\n\t\t\t\tconst sUserRoles = localStorage.getItem(SUPPORT_USERS);\r\n\t\t\t\tif (sUserRoles !== null) {\r\n\t\t\t\t\t//const Users: IRole[] = JSON.parse(sUsers);\r\n\t\t\t\t\t//Users.map(g => storageUsers.push(g))\r\n\t\t\t\t\tconst parsed = JSON.parse(sUserRoles);\r\n\t\t\t\t\troles = parseFromLocalStorage(parsed);\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\troles = parseFromJson()\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\troles = parseFromJson()\r\n\t\t\t}\r\n\r\n\t\t\t//const response = await getUsersFromLocalStorage(); \r\n\t\t\tdispatch({\r\n\t\t\t\ttype: UserActionTypes.GET_ALL_USERS,\r\n\t\t\t\troles  //response.data.results,\r\n\t\t\t});\r\n\t\t\tdispatch({type: UserActionTypes.CREATE_OPTIONS})\r\n\t\t}\r\n\t\tcatch (err) {\r\n\t\t\tconsole.error(err);\r\n\t\t}\r\n\t};\r\n};\r\n\r\n\r\n\r\n// Get User <Promise<Return Type>, State Interface, Type of Param, Type of Action> \r\nexport const getUser: ActionCreator<\r\n\tThunkAction<Promise<any>, IUsersState, string, IGet>\r\n> = (userId: number) => {\r\n\treturn async (dispatch: Dispatch) => {\r\n\t\ttry {\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: UserActionTypes.GET_USER,\r\n\t\t\t\tuserId\r\n\t\t\t});\r\n\t\t} catch (err) {\r\n\t\t\tconsole.error(err);\r\n\t\t}\r\n\t};\r\n};\r\n\r\nexport const findUser: ActionCreator<\r\n\tThunkAction<Promise<any>, IAppState, string, IGet>\r\n> = (name: string) => {\r\n\treturn async (dispatch: Dispatch, getState: () => IAppState) => {\r\n\t\ttry {\r\n\t\t\tconst {usersState} = getState();\r\n\t\t\tlet user;\r\n\t\t\tfor (let role of usersState.roles) {\r\n\t\t\t\tuser = role.users.find(user => user.userName === name);\r\n\t\t\t\tif (user)\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\treturn user;\r\n\t\t}\r\n\t\tcatch (err) {\r\n\t\t\tconsole.error(err);\r\n\t\t}\r\n\t};\r\n};\r\n\r\n\r\n\r\nexport const addUser: ActionCreator<\r\n\tThunkAction<Promise<any>, IAppState, null, IAdd>\r\n> = (roleId: number, text: string, canEdit?: boolean) => {\r\n\treturn async (dispatch: Dispatch, getState: () => IAppState) => {\r\n\t\ttry {\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: UserActionTypes.ADD_USER,\r\n\t\t\t\tcreatedBy: getState().topState.top!.auth!.who!.userId,\r\n\t\t\t\troleId,\r\n\t\t\t\ttext\r\n\t\t\t});\r\n\t\t}\r\n\t\tcatch (err) {\r\n\t\t\tconsole.error(err);\r\n\t\t}\r\n\t};\r\n};\r\n\r\nexport const editUser: ActionCreator<\r\n\tThunkAction<Promise<any>, IUsersState, null, IEdit>\r\n> = (roleId: number, userId: number) => {\r\n\treturn async (dispatch: Dispatch) => {\r\n\t\ttry {\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: UserActionTypes.EDIT_USER,\r\n\t\t\t\troleId,\r\n\t\t\t\tuserId\r\n\t\t\t});\r\n\t\t} catch (err) {\r\n\t\t\tconsole.error(err);\r\n\t\t}\r\n\t};\r\n};\r\n\r\nexport const removeUser: ActionCreator<\r\n\tThunkAction<Promise<any>, IUsersState, null, IRemove>\r\n> = (roleId: number, userId: number) => {\r\n\treturn async (dispatch: Dispatch) => {\r\n\t\ttry {\r\n\t\t\tawait delay()\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: UserActionTypes.REMOVE_USER,\r\n\t\t\t\troleId,\r\n\t\t\t\tuserId\r\n\t\t\t});\r\n\t\t\tdispatch({type: UserActionTypes.CREATE_OPTIONS})\r\n\t\t}\r\n\t\tcatch (err) {\r\n\t\t\tconsole.error(err);\r\n\t\t}\r\n\t};\r\n};\r\n\r\n\r\nexport const storeUser: ActionCreator<\r\n\tThunkAction<Promise<any>, IAppState, null, IStore>\r\n> = (user: IUser, formMode: string) => {\r\n\treturn async (dispatch: Dispatch, getState: () => IAppState) => {\r\n\t\ttry {\r\n\t\t\tif (formMode === 'add') {\r\n\t\t\t\tawait delay(); \r\n\r\n\t\t\t\t// if userId == -1 nadji max\r\n\t\t\t\t// return dispatch<any>(addUser(xxx))\r\n\t\t\t\t// \t.then((categoryId: number) => {\r\n\t\t\t\t// \t\treturn categoryId;\r\n\t\t\t\t// \t});\r\n\r\n\t\t\t\tawait dispatch({\r\n\t\t\t\t\ttype: UserActionTypes.STORE_USER,\r\n\t\t\t\t\tuser,\r\n\t\t\t\t\tformMode\r\n\t\t\t\t});\r\n\t\t\t\treturn user;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tawait delay();\r\n\t\t\t\tdispatch({\r\n\t\t\t\t\ttype: UserActionTypes.STORE_USER,\r\n\t\t\t\t\tuser,\r\n\t\t\t\t\tformMode\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\tdispatch({type: UserActionTypes.CREATE_OPTIONS})\r\n\t\t} \r\n\t\tcatch (err) {\r\n\t\t\tconsole.error(err);\r\n\t\t}\r\n\t};\r\n};\r\n\r\nconst delay = (): Promise<any> => {\r\n\treturn new Promise((resolve, reject) => {\r\n\t\tsetTimeout(() => {\r\n\t\t\tresolve({\r\n\t\t\t\t'status': 200,\r\n\t\t\t\t'content-type': 'application/json',\r\n\t\t\t\t'data': {\r\n\t\t\t\t\t'results': 1\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t}, 50)\r\n\t})\r\n}\r\n\r\nexport const cancelUser: ActionCreator<any> = () => {\r\n\treturn (dispatch: Dispatch) => {\r\n\t\ttry {\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: UserActionTypes.CANCEL_USER\r\n\t\t\t});\r\n\t\t} catch (err) {\r\n\t\t\tconsole.error(err);\r\n\t\t}\r\n\t};\r\n};\r\n\r\n/*\r\n * User Roles\r\n */\r\nexport const addRole: ActionCreator<\r\n\tThunkAction<Promise<any>, IUsersState, null, IAddRole>\r\n> = () => {\r\n\treturn async (dispatch: Dispatch) => {\r\n\t\ttry {\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: UserActionTypes.ADD_ROLE\r\n\t\t\t});\r\n\t\t} catch (err) {\r\n\t\t\tconsole.error(err);\r\n\t\t}\r\n\t};\r\n};\r\n\r\nexport const toggleRole: ActionCreator<\r\n\tThunkAction<Promise<any>, IUsersState, null, IEditRole>\r\n> = (roleId: number) => {\r\n\treturn async (dispatch: Dispatch) => {\r\n\t\ttry {\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: UserActionTypes.TOGGLE_ROLE,\r\n\t\t\t\troleId\r\n\t\t\t});\r\n\t\t} catch (err) {\r\n\t\t\tconsole.error(err);\r\n\t\t}\r\n\t};\r\n};\r\n\r\n\r\nexport const editRole: ActionCreator<\r\n\tThunkAction<Promise<any>, IUsersState, null, IEditRole>\r\n> = (roleId: number) => {\r\n\treturn async (dispatch: Dispatch) => {\r\n\t\ttry {\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: UserActionTypes.EDIT_ROLE,\r\n\t\t\t\troleId\r\n\t\t\t});\r\n\t\t} catch (err) {\r\n\t\t\tconsole.error(err);\r\n\t\t}\r\n\t};\r\n};\r\n\r\nexport const removeRole: ActionCreator<\r\n\tThunkAction<Promise<any>, IUsersState, null, IRemoveRole>\r\n> = (roleId: number) => {\r\n\treturn async (dispatch: Dispatch) => {\r\n\t\ttry {\r\n\t\t\tawait delay()\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: UserActionTypes.REMOVE_ROLE,\r\n\t\t\t\troleId: roleId\r\n\t\t\t});\r\n\t\t} catch (err) {\r\n\t\t\tconsole.error(err);\r\n\t\t}\r\n\t};\r\n};\r\n\r\nexport const storeRole: ActionCreator<\r\n\tThunkAction<Promise<any>, IUsersState, null, IStoreRole>\r\n> = (group: IRole) => {\r\n\treturn async (dispatch: Dispatch) => {\r\n\t\ttry {\r\n\t\t\t// await updateRoleFromLocalStorage(group);\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: UserActionTypes.STORE_ROLE,\r\n\t\t\t\tgroup\r\n\t\t\t});\r\n\t\t} catch (err) {\r\n\t\t\tconsole.error(err);\r\n\t\t}\r\n\t};\r\n};\r\n\r\n","// Import Reducer type\r\nimport { Reducer } from 'redux';\r\n\r\nimport {\r\n\tQuestionActions,\r\n\tQuestionActionTypes\r\n} from './actions';\r\n\r\nimport { IQuestion, ICategoryState, initialQuestion } from './types'\r\n\r\nexport const CATEGORY = 'CATEGORY';\r\n\r\n// Define the initial state\r\nexport const initialCategoryState: ICategoryState = {\r\n\tquestions: []\r\n};\r\n\r\nconst storeToStorage: string[] = [\r\n\tQuestionActionTypes.ADD_QUESTION,\r\n\tQuestionActionTypes.STORE_QUESTION,\r\n\tQuestionActionTypes.UPDATE_QUESTION,\r\n\tQuestionActionTypes.REMOVE_QUESTION,\r\n\tQuestionActionTypes.REMOVE_QUESTION_ANSWER,\r\n\tQuestionActionTypes.ASSIGN_QUESTION_ANSWER\r\n]\r\n\r\nconst aTypesToStore = Object.keys(QuestionActionTypes)\r\n\t.filter(a => storeToStorage.includes(a));\r\n\r\nexport const reduceCategory = (\r\n\tcategoryMap: Map<number, ICategoryState>,\r\n\taction: QuestionActions,\r\n\tcategoryId: number,\r\n\tquestionId?: number\r\n): {categoryMap: Map<number, ICategoryState>, question: IQuestion|undefined} => {\r\n\tconst categoryState = categoryMap.get(categoryId)!;\r\n\tconst newState: ICategoryState = myReducer(categoryState, action);\r\n\r\n\tif (aTypesToStore.includes(action.type)) {\r\n\t\tnewState.questions.forEach(q => q.words = []);\r\n\t\tlocalStorage.setItem(`CATEGORY_${categoryId}`, JSON.stringify(newState.questions));\r\n\t\tnewState.questions.forEach(q => q.words = q.text.split(' '));\r\n\t}\r\n\tcategoryMap.set(categoryId, newState);\r\n\tconst question = newState.questions.find(q => q.questionId === questionId);\r\n\treturn { categoryMap, question }\r\n}\r\n\r\nconst myReducer: Reducer<ICategoryState, QuestionActions> = (\r\n\tstate = initialCategoryState,\r\n\taction\r\n) => {\r\n\tswitch (action.type) {\r\n\r\n\t\tcase QuestionActionTypes.GET_QUESTION: {\r\n\t\t\tconst question = state.questions.find(q => q.questionId === action.questionId);\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tquestion\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tcase QuestionActionTypes.ADD_QUESTION: {\r\n\t\t\tconst { questions } = state;\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tquestions: [...questions, {...action.question}]\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tcase QuestionActionTypes.EDIT_QUESTION: {\r\n\t\t\tconst question = state.questions\r\n\t\t\t\t.find(question => question.questionId === action.questionId);\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tformMode: 'edit',\r\n\t\t\t\tquestion\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tcase QuestionActionTypes.STORE_QUESTION: {\r\n\t\t\tconst { question } = action;\r\n\t\t\tquestion.words = question.text.split(' ');\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tquestions: [...state.questions, {...question}]\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tcase QuestionActionTypes.UPDATE_QUESTION: {\r\n\t\t\tconst { question } = action;\r\n\t\t\tquestion.words = question.text.split(' ');\r\n\t\t\tconst { questionId } = question;\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tquestions: state.questions\r\n\t\t\t\t\t.map(q => q.questionId !== questionId\r\n\t\t\t\t\t\t? q\r\n\t\t\t\t\t\t: { ...question }\r\n\t\t\t\t\t)\r\n\t\t\t};\t\t\t\r\n\t\t}\r\n\r\n\t\tcase QuestionActionTypes.CANCEL_QUESTION: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tformMode: 'display'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tcase QuestionActionTypes.REMOVE_QUESTION: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tquestions: state.questions.filter(q => q.questionId !== action.questionId)\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\t// Question answers\r\n\t\tcase QuestionActionTypes.REMOVE_QUESTION_ANSWER: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tquestions: state.questions.map(q => q.questionId !== action.questionId\r\n\t\t\t\t\t? { ...q, answers: [...q.answers] }\r\n\t\t\t\t\t: { ...q, answers: q.answers.filter(qa => qa.answerId !== action.answerId) }\r\n\t\t\t\t)\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tcase QuestionActionTypes.ASSIGN_QUESTION_ANSWER: {\r\n\t\t\tconst { questionId, answerId, assignedBy } = action;\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tquestions: state.questions.map(q => q.questionId !== questionId\r\n\t\t\t\t\t? { ...q, answers: [...q.answers] }\r\n\t\t\t\t\t: { ...q, answers: [...q.answers, { answerId, assignedBy, assigned: new Date() }] }\r\n\t\t\t\t)\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n};\r\n\r\n","// Import Reducer type\r\nimport { Reducer } from 'redux';\r\n\r\nimport {\r\n\tQuestionActions,\r\n\tQuestionActionTypes\r\n} from './actions';\r\n\r\nimport { IQuestion, ICategory, ICategoriesState, ICategoryState } from './types'\r\nimport { reduceCategory } from './categoryReducer'\r\n\r\nexport const SUPPORT_CATEGORIES = 'SUPPORT_CATEGORIES';\r\n\r\nexport const initialQuestion: IQuestion = {\r\n\tcategoryId: 0,\r\n\tquestionId: 0,\r\n\ttext: '',\r\n\twords: [],\r\n\tsource: 0,\r\n\tstatus: 0,\r\n\tanswers: [],\r\n\tcreatedBy: 0,\r\n\tcreated: new Date()\r\n};\r\n\r\nexport const initialCategory: ICategory = {\r\n\tcategoryId: 0,\r\n\ttitle: '',\r\n\tquestions: [],\r\n\tisExpanded: false,\r\n\tcreatedBy: 0,\r\n\tcreated: new Date()\r\n};\r\n\r\n\r\n// Define the initial state\r\nexport const initialCategoriesState: ICategoriesState = {\r\n\tcategories: [],\r\n\tcategory: undefined,\r\n\tcategoryMap: new Map<number, ICategoryState>(),\r\n\tquestion: {...initialQuestion}, // we still have QuestionForm in modal, although hidden\r\n\tshowCategoryForm: false,\r\n\tshowQuestionForm: false,\r\n\tcategoryOptions: [],\r\n\tloading: false,\r\n\tformMode: 'display',\r\n\tcategoryIdEditing: -1\r\n};\r\n\r\nconst storeToStorage: string[] = [\r\n\tQuestionActionTypes.ADD_QUESTION,\r\n\tQuestionActionTypes.TOGGLE_CATEGORY,\r\n\tQuestionActionTypes.STORE_CATEGORY,\r\n\tQuestionActionTypes.UPDATE_CATEGORY,\r\n\tQuestionActionTypes.REMOVE_CATEGORY\r\n]\r\n\r\nconst aTypesToStore = Object.keys(QuestionActionTypes)\r\n\t.filter(a => storeToStorage.includes(a));\r\n\r\nexport const categoriesReducer: Reducer<ICategoriesState, QuestionActions> = (state, action) => {\r\n\tconst newState = myReducer(state, action);\r\n\tif (aTypesToStore.includes(action.type)) {\r\n\t\tlocalStorage.setItem(SUPPORT_CATEGORIES, JSON.stringify(newState.categories));\r\n\t}\r\n\treturn newState;\r\n}\r\n\r\n\r\nconst myReducer: Reducer<ICategoriesState, QuestionActions> = (\r\n\tstate = initialCategoriesState,\r\n\taction\r\n) => {\r\n\tswitch (action.type) {\r\n\r\n\t\tcase QuestionActionTypes.LOAD_CATEGORIES: {\r\n\t\t\tconst { categories, categoryMap } = action;\r\n\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tcategories,\r\n\t\t\t\tcategoryMap\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tcase QuestionActionTypes.GET_QUESTION: {\r\n\t\t\tconst { categoryId, questionId } = action;\r\n\t\t\tconst { questions } = state.categoryMap.get(categoryId)!;\r\n\t\t\tconst question = questions.find(q => q.questionId === questionId);\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tquestion\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\t\r\n\t\tcase QuestionActionTypes.ADD_QUESTION: {\r\n\t\t\tconst { categoryId } = action.question;\r\n\t\t\tconst question = {\r\n\t\t\t\t...initialQuestion,\r\n\t\t\t\t...action.question\r\n\t\t\t}\r\n\t\t\tif (categoryId === 0) {\r\n\t\t\t\tquestion.questionId = 0;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tconst { questions } = state.categoryMap.get(categoryId)!;\r\n\t\t\t\tquestion.questionId = questions.length === 0 ? 1 : Math.max(...questions.map(q => q.questionId)) + 1;\r\n\t\t\t}\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tformMode: 'add',\r\n\t\t\t\tquestion,\r\n\t\t\t\tquestionCopy: { ...question },\r\n\t\t\t\tshowCategoryForm: false\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tcase QuestionActionTypes.EDIT_QUESTION: {\r\n\t\t\tconst { categoryId, questionId, showQuestionForm } = action;\r\n\t\t\tconst { questions } = state.categoryMap.get(categoryId)!;\r\n\t\t\tconst question = questions.find(q => q.questionId === questionId)!;\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tformMode: 'edit',\r\n\t\t\t\tquestion,\r\n\t\t\t\tquestionCopy: { ...question },\r\n\t\t\t\tshowCategoryForm: false,\r\n\t\t\t\tshowQuestionForm\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tcase QuestionActionTypes.UPDATE_QUESTION: {\r\n\t\t\tlet { questionCopy } = state;\r\n\t\t\tconst { categoryId, questionId  } = action.question; // comes from other user update\r\n\t\t\tconst categoryIdCopy = questionCopy!.categoryId;\r\n\t\t\tif (action.question.categoryId === categoryIdCopy) {\r\n\t\t\t\t// category hasn't been changed\r\n\t\t\t\tconst { categoryMap, question } = reduceCategory(state.categoryMap, action, categoryId, questionId);\r\n\t\t\t\treturn {\r\n\t\t\t\t\t...state,\r\n\t\t\t\t\tcategoryMap,\r\n\t\t\t\t\tformMode: 'edit',\r\n\t\t\t\t\tquestion\r\n\t\t\t\t};\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\t// assing question to another group\r\n\t\t\t\t// 1) remove question from old category\r\n\t\t\t\tlet { categoryMap } = reduceCategory(state.categoryMap, {\r\n\t\t\t\t\t...action,\r\n\t\t\t\t\ttype: QuestionActionTypes.REMOVE_QUESTION,\r\n\t\t\t\t\tcategoryId: categoryIdCopy,\r\n\t\t\t\t\tquestionId\r\n\t\t\t\t}, categoryIdCopy);\r\n\t\t\t\t// 2) add question  to new category\r\n\t\t\t\tconst { questions } = state.categoryMap.get(categoryId)!;\r\n\t\t\t\taction.question.questionId = questions.length === 0 ? 1 : Math.max(...questions.map(q => q.questionId)) + 1;\r\n\t\t\t\tcategoryMap = reduceCategory(categoryMap, {\r\n\t\t\t\t\t...action,\r\n\t\t\t\t\ttype: QuestionActionTypes.STORE_QUESTION\r\n\t\t\t\t}, categoryId).categoryMap;\r\n\t\t\t\t//\r\n\t\t\t\treturn {\r\n\t\t\t\t\t...state,\r\n\t\t\t\t\tcategoryMap,\r\n\t\t\t\t\tformMode: 'edit'\r\n\t\t\t\t};\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tcase QuestionActionTypes.STORE_QUESTION: {\r\n\t\t\tconst { question: aq } = action;\r\n\t\t\tconst { questions } = state.categoryMap.get(aq.categoryId)!;\r\n\t\t\taq.questionId = questions.length === 0 ? 1 : Math.max(...questions.map(q => q.questionId)) + 1;\r\n\t\t\tconst { categoryMap, question } = reduceCategory(state.categoryMap, action, aq.categoryId, aq.questionId);\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tformMode: 'edit',\r\n\t\t\t\tquestion,\r\n\t\t\t\tquestionCopy: { ...question! },\r\n\t\t\t\tcategoryMap\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tcase QuestionActionTypes.CANCEL_QUESTION: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tformMode: 'display',\r\n\t\t\t\tquestion: undefined,\r\n\t\t\t\tshowQuestionForm: false\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tcase QuestionActionTypes.REMOVE_QUESTION: {\r\n\t\t\tconst { categoryId } = action;\r\n\t\t\tconst { categoryMap } = reduceCategory(state.categoryMap, action, categoryId);\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tcategoryMap,\r\n\t\t\t\tformMode: 'display',\r\n\t\t\t\tquestion: undefined\r\n\t\t\t};\r\n\t\t}\r\n\r\n\r\n\t\t// Question answers\r\n\t\tcase QuestionActionTypes.REMOVE_QUESTION_ANSWER: {\r\n\t\t\tconst { categoryId, questionId } = action;\r\n\t\t\tconst { categoryMap, question } = reduceCategory(state.categoryMap, action, categoryId, questionId);\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tcategoryMap,\r\n\t\t\t\tquestion\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tcase QuestionActionTypes.ASSIGN_QUESTION_ANSWER: {\r\n\t\t\tconst { categoryId, questionId, answerId, assignedBy } = action;\r\n\t\t\tif (state.formMode === 'add') { \r\n\t\t\t\treturn {\r\n\t\t\t\t\t...state,\r\n\t\t\t\t\tquestion: {\r\n\t\t\t\t\t\t...state.question!,\r\n\t\t\t\t\t\tanswers: [...state.question!.answers, { answerId, assignedBy, assigned: new Date() }]\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tconst { categoryMap, question } = reduceCategory(state.categoryMap, action, categoryId, questionId)\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tcategoryMap,\r\n\t\t\t\tquestion\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tcase QuestionActionTypes.CLOSE_QUESTION_FORM: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tshowQuestionForm: false\r\n\t\t\t}\r\n\t\t}\r\n\t\tcase QuestionActionTypes.OPEN_QUESTION_FORM: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tshowQuestionForm: true\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t///////////////////////////////////////////////////////////////////////////////////\r\n\t\t// Categories\r\n\t\tcase QuestionActionTypes.GET_CATEGORY: {\r\n\t\t\tconst { categoryId, showCategoryForm } = action;\r\n\t\t\tconst category = state.categories.find(g => g.categoryId === categoryId);\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tcategory,\r\n\t\t\t\tquestion: undefined,\r\n\t\t\t\tshowCategoryForm,\r\n\t\t\t\tshowQuestionForm: false\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tcase QuestionActionTypes.ADD_CATEGORY: {\r\n\t\t\t// const group =  state.categories.find(g => g.categoryId === action.categoryId);\r\n\t\t\tconst { categoryMap } = state;\r\n\t\t\tconst { category, showCategoryForm } = action;\r\n\t\t\tconst categoryId = state.categories.length === 0 ? 11 : Math.max(...state.categories.map(g => g.categoryId)) + 1;\r\n\t\t\tcategory.categoryId = categoryId\r\n\t\t\tconst categoryState: ICategoryState = {\r\n\t\t\t\tquestions: []\r\n\t\t\t}\r\n\t\t\tcategoryMap.set(categoryId, categoryState)\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tformMode: 'add',\r\n\t\t\t\tcategoryIdEditing: categoryId,\r\n\t\t\t\tcategory,\r\n\t\t\t\tquestion: undefined,\r\n\t\t\t\tshowCategoryForm,\r\n\t\t\t\tshowQuestionForm: false\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tcase QuestionActionTypes.TOGGLE_CATEGORY: {\r\n\t\t\t// const group = state.categories.find(g => g.categoryId === action.categoryId);\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tcategories: state.categories.map(g => g.categoryId !== action.categoryId\r\n\t\t\t\t\t? g\r\n\t\t\t\t\t: { ...g, isExpanded: !g.isExpanded }\r\n\t\t\t\t)\r\n\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tcase QuestionActionTypes.EDIT_CATEGORY: {\r\n\t\t\tconst { categories } = state;\r\n\t\t\tconst { categoryId, showCategoryForm } = action;\r\n\t\t\tconst category = categories.find(g => g.categoryId === categoryId)!\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tcategory,\r\n\t\t\t\tformMode: 'edit',\r\n\t\t\t\tcategoryCopy: { ...category },\r\n\t\t\t\tcategoryIdEditing: category.categoryId,\r\n\t\t\t\tshowCategoryForm,\r\n\t\t\t\tshowQuestionForm: false\r\n\t\t\t\t//,category for now lets keep inline editing\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tcase QuestionActionTypes.STORE_CATEGORY: {\r\n\t\t\t// const group = state.categories.find(g => g.categoryId === action.question.categoryId);\r\n\t\t\tconst { category } = action;\r\n\t\t\tconst { categoryMap } = state;\r\n\t\t\tconst categoryState: ICategoryState = {\r\n\t\t\t\tquestions: [] //...category.questions]\r\n\t\t\t}\r\n\t\t\tcategoryMap.set(category.categoryId, categoryState)\r\n\t\t\tcategory.questions = [];\r\n\t\t\tconst categories = [...state.categories, category]\r\n\t\t\t\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tformMode: 'edit',\r\n\t\t\t\tcategoryIdEditing: -1,\r\n\t\t\t\tcategories,\r\n\t\t\t\tcategoryMap\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tcase QuestionActionTypes.UPDATE_CATEGORY: {\r\n\t\t\t// const group = state.categories.find(g => g.categoryId === action.question.categoryId);\r\n\t\t\tconst { category } = action;\r\n\t\t\tconst { categoryId, title } = category;\r\n\t\t\tlet { categoryCopy } = state;\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tcategoryIdEditing: -1,\r\n\t\t\t\tcategories: state.categories.map(c => c.categoryId !== categoryId\r\n\t\t\t\t\t? c\r\n\t\t\t\t\t: { ...c, title }\r\n\t\t\t\t)\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tcase QuestionActionTypes.CANCEL_CATEGORY: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tformMode: 'display',\r\n\t\t\t\tcategory: undefined\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tcase QuestionActionTypes.REMOVE_CATEGORY: {\r\n\t\t\tconst categories =  state.categories.reduce((acc: ICategory[], g) => {\r\n\t\t\t\tif (g.categoryId !== action.categoryId)\r\n\t\t\t\t\tacc.push({ ...g, questions: [...g.questions] })\r\n\t\t\t\treturn acc\r\n\t\t\t}, [])\r\n\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tcategories\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tcase QuestionActionTypes.CATEGORY_OPTIONS: {\r\n\t\t\tconst categoryOptions = state.categories.map(g => ({ value: g.categoryId, label: g.title }))\r\n\t\t\tcategoryOptions.unshift({ value: 0, label: 'Unknown' })\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tcategoryOptions\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tcase QuestionActionTypes.CLEAR: {\r\n\t\t\treturn {\r\n\t\t\t\t...initialCategoriesState\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n};\r\n\r\n","// Import Reducer type\r\nimport { Reducer } from 'redux';\r\nimport {\r\n\tAnswerActions,\r\n\tAnswerActionTypes,\r\n\tSUPPORT_ANSWERS\r\n} from './actions';\r\n\r\nimport { IAnswer, IAnswerState } from './types'\r\n\r\nexport const initialAnswer: IAnswer = {\r\n\tanswerId: 0,\r\n\ttext: '',\r\n\twords: [],\r\n\toptions: [],\r\n\tcreatedBy: 0,\r\n\tcreated: new Date()\r\n};\r\n\r\nconst initialAnswerState: IAnswerState = {\r\n\tanswers: [],\r\n\tanswer: undefined,\r\n\tloading: false,\r\n\tformMode: 'display',\r\n\tshowAnswerForm: false\r\n};\r\n\r\nconst aTypesToStore = Object.keys(AnswerActionTypes).filter(a => a !== AnswerActionTypes.GET_ALL_ANSWERS);\r\n\r\nexport const answerReducer: Reducer<IAnswerState, AnswerActions> = (state, action) => {\r\n\tconst newState = myReducer(state, action);\r\n\tif (aTypesToStore.includes(action.type)) {\r\n\t\tlocalStorage.setItem(SUPPORT_ANSWERS, JSON.stringify(newState.answers));\r\n\t}\r\n\treturn newState;\r\n}\r\n\r\nconst myReducer: Reducer<IAnswerState, AnswerActions> = (\r\n\tstate = initialAnswerState,\r\n\taction\r\n) => {\r\n\tswitch (action.type) {\r\n\r\n\t\tcase AnswerActionTypes.GET_ALL_ANSWERS: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tanswers: action.answers.map(answer => { return { \r\n\t\t\t\t\t...answer,\r\n\t\t\t\t\twords: answer.text.split(' ') \r\n\t\t\t\t} }),\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tcase AnswerActionTypes.GET_ANSWER: {\r\n\t\t\tconst answer = state.answers.find(a => a.answerId === action.answerId);\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tanswer,\r\n\t\t\t\tshowAnswerForm: true\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tcase AnswerActionTypes.ADD_ANSWER: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tformMode: 'add',\r\n\t\t\t\tanswer: {\r\n\t\t\t\t\t...initialAnswer,\r\n\t\t\t\t\tcreatedBy: action.createdBy,\r\n\t\t\t\t\tanswerId: state.answers.length === 0 \r\n\t\t\t\t\t\t? 111\r\n\t\t\t\t\t\t: Math.max(...state.answers.map(a => a.answerId)) + 1\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tcase AnswerActionTypes.EDIT_ANSWER: {\r\n\t\t\tconst answer = state.answers.find(a => a.answerId === action.answerId);\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tformMode: 'edit',\r\n\t\t\t\tanswer: { ...answer!, words: answer!.text.split(' ') },\r\n\t\t\t\tshowAnswerForm: true\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tcase AnswerActionTypes.STORE_ANSWER: {\r\n\t\t\tconst { answer } = action;\r\n\t\t\tlet { answerId } = answer!;\r\n\t\t\tlet answers = [];\r\n\t\t\tif (state.formMode === 'add') {\r\n\t\t\t\tif (answerId === -1) {\r\n\t\t\t\t\tanswer.answerId = state.answers.length === 0\r\n\t\t\t\t\t\t? 111\r\n\t\t\t\t\t\t: Math.max(...state.answers.map(a => a.answerId)) + 1;\r\n\t\t\t\t}\r\n\t\t\t\tanswers = [...state.answers, { ...answer, words: answer.text.split(' ') }]\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tanswers = state.answers.map(a => a.answerId === answerId\r\n\t\t\t\t\t? { ...answer, words: answer.text.split(' ') }\r\n\t\t\t\t\t: a)\r\n\t\t\t}\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tformMode: 'edit',\r\n\t\t\t\tanswers,\r\n\t\t\t\tanswer\r\n\t\t\t};\r\n\t\t}\t\r\n\r\n\t\tcase AnswerActionTypes.CANCEL_ANSWER: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tformMode: 'display'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tcase AnswerActionTypes.REMOVE_ANSWER: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tformMode: 'display',\r\n\t\t\t\tanswers: state.answers.filter(a => a.answerId !== action.answerId)\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tcase AnswerActionTypes.CLOSE_ANSWER_FORM: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tformMode: 'display',\r\n\t\t\t\tshowAnswerForm: false\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tcase AnswerActionTypes.CLEAR: {\r\n\t\t\treturn {\r\n\t\t\t\t...initialAnswerState\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\t// case AnswerActionTypes.STORE_ANSWERS_TO_LOCAL_STORAGE: {\r\n\t\t// \tlocalStorage.setItem(SUPPORT_ANSWERS, JSON.stringify(state.answers));\r\n\t\t// \treturn state;\r\n\t\t// }   \t\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n};","// Import redux types\r\nimport { ActionCreator, Dispatch } from 'redux';\r\nimport { ThunkAction } from 'redux-thunk';\r\n// Import Tag Typing\r\nimport { ITag, ITagState } from './types';\r\nimport data from \"./data.json\"\r\nconst storageTagsDemo: ITag[] = data;\r\n\r\n// Create Action Constants\r\nexport enum TagActionTypes {\r\n\tGET_ALL_TAGS = 'GET_ALL_TAGS',\r\n  \tGET_TAG = 'GET_TAG'\r\n}\r\n\r\n// Interface for Get All Action Type\r\nexport interface IGetAll {\r\n\ttype: TagActionTypes.GET_ALL_TAGS;\r\n\ttags: ITag[];\r\n }\r\n \r\nexport interface IGet {\r\n\ttype: TagActionTypes.GET_TAG;\r\n\ttag: ITag;\r\n}\r\n\r\n// localStorage\r\nexport const SUPPORT_TAGS = 'SUPPORT_TAGS' \r\nconst storageTags: ITag[] = [\r\n]\r\n\r\n\r\n// Combine the action types with a union (we assume there are more)\r\nexport type TagActions = IGetAll | IGet;\r\n\r\nconst isWebStorageSupported = () => 'localStorage' in window\r\n\r\n// Get All Action <Promise<Return Type>, State Interface, Type of Param, Type of Action>\r\nexport const getAllTags: ActionCreator<\r\n  ThunkAction<Promise<any>, ITagState, null, IGetAll>\r\n> = () => {\r\n  return async (dispatch: Dispatch) => {\r\n    try {\r\n\t\t// const response = await axios.get('https://swapi.co/api/people/');\r\n\t\tif (isWebStorageSupported()) {\r\n\t\t\tconst sTags = localStorage.getItem(SUPPORT_TAGS);\r\n\t\t\tif (sTags !== null) {\r\n\t\t\t\tconst Tags: ITag[] = JSON.parse(sTags);\r\n\t\t\t\tTags.map(g => storageTags.push(g))\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tstorageTagsDemo.map(g => storageTags.push(g))\t\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {\r\n\t\t\tstorageTagsDemo.map(g => storageTags.push(g))\r\n\t\t}\r\n\r\n\t\t//const response = await getTagsFromLocalStorage(); \r\n      dispatch({\r\n        type: TagActionTypes.GET_ALL_TAGS,\r\n        tags: storageTags //response.data.results,\r\n      });\r\n    } catch (err) {\r\n      console.error(err);\r\n    }\r\n  };\r\n};\r\n\r\n\r\n\r\n\r\n","// Import Reducer type\r\nimport { Reducer } from 'redux';\r\n\r\nimport {\r\n\tUserActions,\r\n\tUserActionTypes\r\n} from './actions';\r\n\r\nimport { IUser, IRole, IUsersState } from './types'\r\n\r\nexport const SUPPORT_USERS = 'SUPPORT_USERS';\r\n\r\nexport const initialUser: IUser = {\r\n\troleId: 0,\r\n\tuserId: 0,\r\n\tuserName: '',\r\n\tpwd: '',\r\n\tdepartment: 'neki',\r\n\tcreatedBy: 0,\r\n\tcreated: new Date(),\r\n};\r\n\r\nexport const initialUserRole: IRole = {\r\n\troleId: 0,\r\n\ttitle: '',\r\n\tcolor: 'lightgreen',\r\n\tusers: [],\r\n\tisExpanded: false,\r\n\tcreatedBy: 0,\r\n\tcreated: new Date()\r\n};\r\n\r\n\r\n// Define the initial state\r\nexport const initialUsersState: IUsersState = {\r\n\troles: [],\r\n\tuserEditing: undefined,\r\n\tallUsers: [],\r\n\troleOptions: [],\r\n\tuserOptions: [],\r\n\tloading: false,\r\n\tformMode: 'display',\r\n\troleIdEditing: -1,\r\n\townerUserId: 101\r\n};\r\n\r\n\r\n/*\r\nconst getUser = (\r\n\t\t\troles: IRole[], \r\n\t\t\troleId: number, \r\n\t\t\tuserId: number) : IUser|undefined => {\r\n\tconst group = roles.find(g => g.roleId === roleId)\r\n\tif (!group)\r\n\t\treturn undefined;\r\n\r\n\tconst user = group\r\n\t\t\t\t\t\t\t.users\r\n\t\t\t\t\t\t\t.find(q => q.userId === userId);\r\n\treturn user;\r\n}\r\n*/\r\n\r\n\r\nconst aTypesToStore = Object.keys(UserActionTypes)\r\n\t.filter(a => a !== UserActionTypes.GET_ALL_USERS);\r\n\r\nexport const userReducer: Reducer<IUsersState, UserActions> = (state, action) => {\r\n\tconst newState = myReducer(state, action);\r\n\tif (aTypesToStore.includes(action.type)) {\r\n\t\tlocalStorage.setItem(SUPPORT_USERS, JSON.stringify(newState.roles));\r\n\t}\r\n\treturn newState;\r\n}\r\n\r\nconst myReducer: Reducer<IUsersState, UserActions> = (\r\n\tstate = initialUsersState,\r\n\taction\r\n) => {\r\n\tswitch (action.type) {\r\n\r\n\t\tcase UserActionTypes.GET_ALL_USERS: {\r\n\t\t\tconst { roles } = action;\r\n\t\t\tconsole.log('roles', roles)\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\troles\r\n\t\t\t};\r\n\t\t}\r\n\t\t//roleOptions: roles.map(g => ({ label: g.title, value: g.roleId })),\r\n\t\t//userOptions: allUsers.map(user => ({ label: user.name, value: user.userId }))\r\n\r\n\t\tcase UserActionTypes.CREATE_OPTIONS: {\r\n\t\t\tconst {roles} = state;\r\n\t\t\tlet allUsers: IUser[] = [];\r\n\t\t\troles.forEach(g => {\r\n\t\t\t\t//console.log('g', g)\r\n\t\t\t\tallUsers = allUsers.concat(g.users)\r\n\t\t\t});\r\n\t\t\tconsole.log('allUsers', allUsers)\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tallUsers,\r\n\t\t\t\troleOptions: roles.map(g => ({ label: g.title, value: g.roleId })),\r\n\t\t\t\tuserOptions: allUsers.map(user => ({ label: user.userName, value: user.userId }))\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tcase UserActionTypes.GET_USER: {\r\n\t\t\tlet user = undefined;\r\n\t\t\tfor (let role of state.roles) {\r\n\t\t\t\tuser = role.users\r\n\t\t\t\t\t.find(user => user.userId === action.userId);\r\n\t\t\t\tif (user)\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tuserEditing: user\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tcase UserActionTypes.ADD_USER: {\r\n\t\t\tlet userIdMax = 0;\r\n\t\t\tfor (let role of state.roles) {\r\n\t\t\t\tfor (let user of role.users) \r\n\t\t\t\t\tif (user.userId > userIdMax)\r\n\t\t\t\t\t\tuserIdMax = user.userId\r\n\t\t\t}\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tformMode: 'add',\r\n\t\t\t\tuserEditing: { \r\n\t\t\t\t\t...initialUser, \r\n\t\t\t\t\tcreatedBy: action.createdBy,\r\n\t\t\t\t\troleId: action.roleId, \r\n\t\t\t\t\tuserId: userIdMax + 1,\r\n\t\t\t\t\ttext: action.text\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tcase UserActionTypes.EDIT_USER: {\r\n\t\t\tconst userRole = state.roles.find(g => g.roleId === action.roleId);\r\n\t\t\tconst user = userRole!.users\r\n\t\t\t\t.find(user => user.userId === action.userId);\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tformMode: 'edit',\r\n\t\t\t\tuserEditing: user\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tcase UserActionTypes.STORE_USER: {\r\n\t\t\tconst { user, formMode } = action;\r\n\t\t\tif (formMode === 'add') { // state.formMode\r\n\t\t\t\tconsole.log(' UserActionTypes.STORE_USER user', user)\r\n\t\t\t\tif (user.roleId === 0 && !state.roles.map(g => g.roleId).includes(0)) {\r\n\t\t\t\t\tconsole.log('unisao')\r\n\t\t\t\t\t// do something\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\t...state,\r\n\t\t\t\t\t\tformMode: 'edit',\r\n\t\t\t\t\t\troles: [\r\n\t\t\t\t\t\t\t...state.roles,\r\n\t\t\t\t\t\t\t{ \r\n\t\t\t\t\t\t\t\t...initialUserRole, \r\n\t\t\t\t\t\t\t\troleId: 0,\r\n\t\t\t\t\t\t\t\ttitle: 'Unknown',\r\n\t\t\t\t\t\t\t\tusers: [user]\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t]\r\n\t\t\t\t\t};\r\n\t\t\t\t}\r\n\t\t\t\treturn {\r\n\t\t\t\t\t...state,\r\n\t\t\t\t\tformMode: 'edit',\r\n\t\t\t\t\troles: state.roles.map(g => g.roleId !== user.roleId ?\r\n\t\t\t\t\t\t{ ...g, users: [...g.users] }\r\n\t\t\t\t\t\t:\r\n\t\t\t\t\t\t{ ...g, users: [...g.users, { ...user }] }\r\n\t\t\t\t\t)\r\n\t\t\t\t};\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tconst { roles } = state;\r\n\t\t\t\tconst {user} = action;\r\n\t\t\t\t//const userId: number = user.roleId;\r\n\t\t\t\tconst g = roles.find(g => g.roleId === user.roleId);\r\n\t\t\t\tconst q = g!.users.find(q => q.userId === user.userId);\r\n\t\t\t\tif (q) { // change user\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\t...state,\r\n\t\t\t\t\t\tformMode: 'edit',\r\n\t\t\t\t\t\troles: roles.map(g => g.roleId !== user.roleId\r\n\t\t\t\t\t\t\t? { ...g, users: [...g.users]\t}\r\n\t\t\t\t\t\t\t: {\r\n\t\t\t\t\t\t\t\t...g, \r\n\t\t\t\t\t\t\t\tusers: g.users\r\n\t\t\t\t\t\t\t\t\t.map(q => q.userId !== user.userId ?\r\n\t\t\t\t\t\t\t\t\t\tq : { ...user }\r\n\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t};\r\n\t\t\t\t}\r\n\t\t\t\telse { // assing user to another group\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\t...state,\r\n\t\t\t\t\t\tformMode: 'edit',\r\n\t\t\t\t\t\troles: roles.map(g => g.roleId !== user.roleId\r\n\t\t\t\t\t\t\t? { ...g, users: [...g.users.filter(q=> q.userId !== user.userId)]\t}\r\n\t\t\t\t\t\t\t: {\t...g, users: [...g.users, { ...user } ]\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t};\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tcase UserActionTypes.CANCEL_USER: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tformMode: 'display',\r\n\t\t\t\tuserEdited: undefined\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tcase UserActionTypes.REMOVE_USER: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tformMode: 'display',\r\n\t\t\t\tuserEdited: undefined,\r\n\t\t\t\troles: state.roles.map(g => g.roleId !== action.roleId ?\r\n\t\t\t\t\t{ ...g, users: [...g.users] }\r\n\t\t\t\t\t:\r\n\t\t\t\t\t{ ...g, users: g.users.filter(q => q.userId !== action.userId) }\r\n\t\t\t\t)\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\t///////////////////////////////////////////////////////////////////////////////////\r\n\t\t// groups\r\n\r\n\t\tcase UserActionTypes.ADD_ROLE: {\r\n\t\t\tlet roleId = Math.max(...state.roles.map(g => g.roleId)) + 1\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\troleIdEditing: roleId,\r\n\t\t\t\troles: [...state.roles, { ...initialUserRole, title: \"New Section\", roleId: roleId }]\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tcase UserActionTypes.TOGGLE_ROLE: {\r\n\t\t\tconsole.log(action)\r\n\t\t\t//const group = state.roles.find(g => g.roleId === action.roleId);\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\troles: state.roles.map(g => g.roleId !== action.roleId\r\n\t\t\t\t\t? g\r\n\t\t\t\t\t: { ...g, isExpanded: !g.isExpanded }\r\n\t\t\t\t)\r\n\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tcase UserActionTypes.EDIT_ROLE: {\r\n\t\t\tconst group = state.roles.find(g => g.roleId === action.roleId)\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\troleIdEditing: group!.roleId\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tcase UserActionTypes.STORE_ROLE: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\troleIdEditing: -1,\r\n\t\t\t\troles: state.roles.map(g => g.roleId !== action.group.roleId ?\r\n\t\t\t\t\tg\r\n\t\t\t\t\t:\r\n\t\t\t\t\t{ ...g, title: action.group.title }\r\n\t\t\t\t)\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tcase UserActionTypes.REMOVE_ROLE: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\troles: state.roles.reduce((acc: IRole[], g) => {\r\n\t\t\t\t\tif (g.roleId !== action.roleId)\r\n\t\t\t\t\t\tacc.push({ ...g, users: [...g.users] })\r\n\t\t\t\t\treturn acc\r\n\t\t\t\t}, [])\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n};\r\n\r\n","// Define the User State\r\nimport { IOption } from '../common/types';\r\nimport { IAuth } from '../Top/types';\r\n\r\nexport interface IUser {\r\n\troleId: number,\r\n\tuserId: number,\r\n\tuserName: string;\r\n\tpwd: string,\r\n\tdepartment: string,\r\n\t\tcreatedBy: number,\r\n\t\tcreated: Date\r\n}\r\n\r\nexport interface IUserJson extends Omit<IUser, 'created'> {\r\n\tcreated: string\r\n}\r\n\r\nexport interface IRole {\r\n\troleId: number,\r\n\ttitle: string,\r\n\tcolor: string,\r\n\tusers: IUser[],\r\n\tisExpanded?: boolean,\r\n\tcreatedBy: number,\r\n\tcreated: Date\r\n}\r\n\r\n// Define the User State\r\nexport interface IUsersState {\r\n\treadonly roles: IRole[];\r\n\treadonly userEditing: IUser | undefined;\r\n\tallUsers: IUser[],\r\n\troleOptions: IOption<number>[];\r\n\tuserOptions: IOption<number>[];\r\n\tloading: boolean,\r\n\tformMode: string;\r\n\troleIdEditing: number;\r\n\townerUserId: number;\r\n}\r\n\r\n\r\nexport interface IRoleJson extends Omit<IRole, 'created' | 'users'> {\r\n\tusers: IUserJson[],\r\n\tcreated: string\r\n}\r\n\r\nexport interface IRolesProps {\r\n\twho: IUser, \r\n\troles: IRole[];\r\n\tuserEditing: IUser | undefined;\r\n\tformMode: string,\r\n\troleIdEditing: number,\r\n\tcanEdit: boolean,\r\n\tonSelectUser: (userId: number) => IUser;\r\n\tadd: (roleId: number, text: string, canEdit?: boolean) => void;\r\n\tedit: (roleId: number, userId: number) => void;\r\n\tremove: (roleId: number, userId: number) => void;\r\n\t// roles\r\n\taddRole: () => void;\r\n\ttoggleRole: (roleId: number) => void;\r\n\teditRole: (roleId: number) => void;\r\n\tremoveRole: (removeId: number) => void;\r\n\tstoreRole: (role: IRole) => void;\r\n}\r\n\r\nexport interface IFormProps {\r\n\tauth?: IAuth;\r\n\tuserEditing: IUser | undefined;\r\n\tformMode: string;\r\n\tcanEdit: boolean,\r\n\tcancel: () => void;\r\n\tsaveForm: (user: IUser, formMode: string) => void;\r\n\troleOptions: IOption<number>[];\r\n  }\r\n \r\n  export enum RoleId {\r\n\tOWNER = 11,\r\n\tADMINS = 22,\r\n\tEDITORS = 33,\r\n\tVIEWERS = 44\r\n}\r\n ","// Import Reducer type\r\nimport { Reducer } from 'redux';\r\nimport {\r\n  TagActions,\r\n  TagActionTypes\r\n} from './actions';\r\n\r\nimport { ITagState } from './types'\r\n\r\n// const initialTag: ITag = {\r\n// \ttagId: 0,\r\n// \tname: ''\r\n// };\r\n\r\nconst initialTagState: ITagState = {\r\n\ttags: [],\r\n\tloading: false,\r\n\tformMode: 'display'\r\n};\r\n\r\n\r\nexport const tagReducer: Reducer<ITagState, TagActions> = (\r\n  state = initialTagState,\r\n  action\r\n) => {\r\n  switch (action.type) {\r\n\r\n   case TagActionTypes.GET_ALL_TAGS: {\r\n\t\treturn {\r\n        ...state,\r\n        tags: action.tags.map(tag => ({...tag}) ),\r\n      };\r\n\t} \r\n\r\n \tcase TagActionTypes.GET_TAG: {\r\n      return {\r\n\t\t  ...state,\r\n        tag: action.tag\r\n      };\r\n\t}    \r\n\r\n\tdefault:\r\n   \t\treturn state;\r\n  }\r\n};"," // Import redux types\r\nimport { ActionCreator, Dispatch } from 'redux';\r\nimport { ThunkAction } from 'redux-thunk';\r\n// Import Top Typing\r\nimport { ILogin, ITop, ITopJson } from './types';\r\n\r\nimport { IAppState } from '../store/Store';\r\nimport { IUser, RoleId } from '../Users/types';\r\nimport { findUser, storeUser, UserActionTypes } from '../Users/actions';\r\n\r\n// localStorage\r\nexport const SUPPORT_TOP = 'SUPPORT_TOP';\r\n\r\n// Create Action Constants\r\nexport enum TopActionTypes {\r\n\tLOAD_TOP = \"LOAD_TOP\",\r\n\tNAVBAR_TOGGLE = 'NAVBAR_TOGGLE',\r\n\tREGISTER = 'REGISTER',\r\n\tREGISTER_USERNAME_EXISTS = 'REGISTER_USERNAME_EXISTS',\r\n\tAUTHENTICATE = 'AUTHENTICATE',\r\n\tUNAUTHENTICATE = 'UNAUTHENTICATE',\r\n\tAUTHENTICATE_WRONG_USERNAME = 'AUTHENTICATE_WRONG_USERNAME',\r\n\tAUTHENTICATE_WRONG_PWD = 'AUTHENTICATE_WRONG_PWD',\r\n\tCANCEL = 'CANCEL',\r\n\tTOGGLE_MODE = 'TOGGLE_MODE',\r\n\tSHOW_MODAL_JSON = 'SHOW_MODAL_JSON'\r\n}\r\n\r\n\r\nexport interface INavbarToggle {\r\n\ttype: TopActionTypes.NAVBAR_TOGGLE;\r\n}\r\n\r\nexport interface ILoadTop {\r\n\ttype: TopActionTypes.LOAD_TOP;\r\n\ttop: ITop\r\n}\r\n\r\nexport interface IRegister {\r\n\ttype: TopActionTypes.REGISTER;\r\n\tuser: IUser;\r\n}\r\n\r\nexport interface IRegisterUsernameExists {\r\n\ttype: TopActionTypes.REGISTER_USERNAME_EXISTS;\r\n}\r\n\r\nexport interface IAuthenticate {\r\n\ttype: TopActionTypes.AUTHENTICATE;\r\n\tuser: IUser;\r\n}\r\n\r\nexport interface IAuthenticateWrongUsername {\r\n\ttype: TopActionTypes.AUTHENTICATE_WRONG_USERNAME;\r\n}\r\n\r\nexport interface IAuthenticateWrongPwd {\r\n\ttype: TopActionTypes.AUTHENTICATE_WRONG_PWD;\r\n}\r\n\r\nexport interface IUnAuthenticate {\r\n\ttype: TopActionTypes.UNAUTHENTICATE;\r\n}\r\n\r\nexport interface ICancel {\r\n\ttype: TopActionTypes.CANCEL;\r\n}\r\n\r\nexport interface IToggleMode {\r\n\ttype: TopActionTypes.TOGGLE_MODE;\r\n}\r\n\r\nexport interface IShowModalJSON {\r\n\ttype: TopActionTypes.SHOW_MODAL_JSON;\r\n\tshow: boolean\r\n}\r\n\r\n\r\n// Combine the action types with a union (we assume there are more)\r\nexport type TopActions = ILoadTop |\r\n\tINavbarToggle |\r\n\tIRegister |\r\n\tIRegisterUsernameExists |\r\n\tIAuthenticate |\r\n\tIAuthenticateWrongUsername |\r\n\tIAuthenticateWrongPwd |\r\n\tIUnAuthenticate |\r\n\tICancel |\r\n\tIToggleMode |\r\n\tIShowModalJSON;\r\n\r\nconst isWebStorageSupported = () => 'localStorage' in window\r\n\r\nconst parseFromLocalStorage = (json: ITopJson): ITop => {\r\n\treturn parseObj(json);\r\n}\r\n\r\nconst parseObj = (json: ITopJson): ITop => {\r\n\tconst { auth } = json;\r\n\tif (!auth) {\r\n\t\treturn {\r\n\t\t\t...json,\r\n\t\t\tauth: undefined\r\n\t\t}\r\n\t}\r\n\r\n\tconst { who, visited, authenticated } = auth;\r\n\treturn {\r\n\t\t...json,\r\n\t\tauth: !auth ? undefined : {\r\n\t\t\t...auth,\r\n\t\t\twho: {\r\n\t\t\t\t...who,\r\n\t\t\t\tcreated: new Date(who.created!)\r\n\t\t\t},\r\n\t\t\tvisited: new Date(visited),\r\n\t\t\tauthenticated: new Date(authenticated)\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport const loadTop: ActionCreator<\r\n\tThunkAction<Promise<any>, IAppState, null, ILoadTop>\r\n> = () => {\r\n\treturn async (dispatch: Dispatch) => {\r\n\t\ttry {\r\n\t\t\tlet top = undefined;\r\n\r\n\t\t\tif (isWebStorageSupported()) {\r\n\t\t\t\tconst s = localStorage.getItem(SUPPORT_TOP);\r\n\t\t\t\tif (s !== null) {\r\n\t\t\t\t\t//const Users: IUserRole[] = JSON.parse(sUsers);\r\n\t\t\t\t\t//Users.map(g => storageUsers.push(g))\r\n\t\t\t\t\tconst parsed = JSON.parse(s);\r\n\t\t\t\t\tconsole.log('parsed', parsed)\r\n\t\t\t\t\ttop = parseFromLocalStorage(parsed);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (top) {\r\n\t\t\t\tdispatch({\r\n\t\t\t\t\ttype: TopActionTypes.LOAD_TOP,\r\n\t\t\t\t\ttop\r\n\t\t\t\t});\r\n\t\t\t\tif (top.auth && top.auth.who) { // check if date is older then a few months\r\n\t\t\t\t\tdispatch<any>(authenticate(top.auth!.who))\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn top;\r\n\t\t}\r\n\t\tcatch (err) {\r\n\t\t\tconsole.error(err);\r\n\t\t}\r\n\t};\r\n}\r\n\r\n\r\nexport const register: ActionCreator<\r\n\tThunkAction<Promise<any>, IAppState, null, IAuthenticate>\r\n> = (loginUser: ILogin) => {\r\n\treturn async (dispatch: Dispatch, getState: () => IAppState) => {\r\n\t\ttry {\r\n\t\t\tconst { usersState } = getState();\r\n\t\t\tconst { allUsers } = usersState;\r\n\t\t\tdispatch<any>(findUser(loginUser.userName))\r\n\t\t\t\t.then((user: IUser) => {\r\n\t\t\t\t\tif (user) {\r\n\t\t\t\t\t\tdispatch({\r\n\t\t\t\t\t\t\ttype: TopActionTypes.REGISTER_USERNAME_EXISTS\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tlet roleId = RoleId.VIEWERS;\r\n\t\t\t\t\t\tlet userId = 0;\r\n\t\t\t\t\t\tif (allUsers.length === 0) {\r\n\t\t\t\t\t\t\troleId = RoleId.OWNER;\r\n\t\t\t\t\t\t\tuserId = usersState.ownerUserId; // owner userId would be 101\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\tuserId = Math.max(...allUsers.map(u => u.userId)) + 1;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tconst user: IUser = {\r\n\t\t\t\t\t\t\troleId,\r\n\t\t\t\t\t\t\tuserId, \r\n\t\t\t\t\t\t\tuserName: loginUser.userName,\r\n\t\t\t\t\t\t\tpwd: loginUser.pwd,\r\n\t\t\t\t\t\t\tdepartment: \"dept1\",\r\n\t\t\t\t\t\t\tcreatedBy: userId, // registered user is treated as creator\r\n\t\t\t\t\t\t\tcreated: new Date()\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tdispatch<any>(storeUser(user, 'add'))\r\n\t\t\t\t\t\t\t.then((user: IUser) => {\r\n\t\t\t\t\t\t\t\tdispatch({\r\n\t\t\t\t\t\t\t\t\ttype: TopActionTypes.REGISTER,\r\n\t\t\t\t\t\t\t\t\tuser\r\n\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\tdispatch<any>(authenticate(loginUser));\r\n\t\t\t\t\t\t\t\tdispatch({type: UserActionTypes.CREATE_OPTIONS})\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t}\r\n\t\tcatch (err) {\r\n\t\t\tconsole.error(err);\r\n\t\t}\r\n\t};\r\n}\r\n\r\nexport const authenticate: ActionCreator<\r\n\tThunkAction<Promise<any>, IAppState, null, IAuthenticate>\r\n> = (loginUser: ILogin) => {\r\n\treturn async (dispatch: Dispatch, getState: () => IAppState) => {\r\n\t\ttry {\r\n\t\t\tdispatch<any>(await findUser(loginUser.userName))\r\n\t\t\t\t.then((user: IUser) => {\r\n\t\t\t\t\tif (user) {\r\n\t\t\t\t\t\tif (user.pwd === loginUser.pwd) {\r\n\t\t\t\t\t\t\tdispatch({\r\n\t\t\t\t\t\t\t\ttype: TopActionTypes.AUTHENTICATE,\r\n\t\t\t\t\t\t\t\tuser\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\tdispatch({\r\n\t\t\t\t\t\t\t\ttype: TopActionTypes.AUTHENTICATE_WRONG_PWD\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tdispatch({\r\n\t\t\t\t\t\t\ttype: TopActionTypes.AUTHENTICATE_WRONG_USERNAME\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t}\r\n\t\tcatch (err) {\r\n\t\t\tconsole.error(err);\r\n\t\t}\r\n\t};\r\n}\r\n\r\nexport const unAuthenticate: ActionCreator<\r\n\tThunkAction<Promise<any>, IAppState, null, IAuthenticate>\r\n> = () => {\r\n\treturn async (dispatch: Dispatch) => {\r\n\t\ttry {\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: TopActionTypes.UNAUTHENTICATE\r\n\t\t\t});\r\n\t\t}\r\n\t\tcatch (err) {\r\n\t\t\tconsole.error(err);\r\n\t\t}\r\n\t};\r\n}\r\n\r\nexport const cancelLogin: ActionCreator<any> = () => {\r\n\treturn (dispatch: Dispatch) => {\r\n\t\ttry {\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: TopActionTypes.CANCEL\r\n\t\t\t});\r\n\t\t} catch (err) {\r\n\t\t\tconsole.error(err);\r\n\t\t}\r\n\t};\r\n};\r\n\r\n\r\nexport const toggleMode: ActionCreator<any> = () => {\r\n\treturn (dispatch: Dispatch) => {\r\n\t\ttry {\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: TopActionTypes.TOGGLE_MODE\r\n\t\t\t});\r\n\t\t} catch (err) {\r\n\t\t\tconsole.error(err);\r\n\t\t}\r\n\t};\r\n};\r\n\r\n\r\nexport const navbarToggle: ActionCreator<any> = () => {\r\n\treturn (dispatch: Dispatch) => {\r\n\t\ttry {\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: TopActionTypes.NAVBAR_TOGGLE\r\n\t\t\t});\r\n\t\t}\r\n\t\tcatch (err) {\r\n\t\t\tconsole.error(err);\r\n\t\t}\r\n\t};\r\n};\r\n\r\nexport const setShowModalJSON: ActionCreator<any> = (show: boolean) => {\r\n\treturn (dispatch: Dispatch) => {\r\n\t\ttry {\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: TopActionTypes.SHOW_MODAL_JSON,\r\n\t\t\t\tshow\r\n\t\t\t});\r\n\t\t}\r\n\t\tcatch (err) {\r\n\t\t\tconsole.error(err);\r\n\t\t}\r\n\t};\r\n};\r\n\r\n/*\r\nexport function checkAuthentication() {\r\n\treturn async (dispatch: Dispatch) => {\r\n\t  const auth = await window.localStorage.getItem(\"authenticated\");\r\n\t  const formattedAuth = typeof auth === \"string\" ?\r\n\t\tJSON.parse(auth) :\r\n\t\tnull;\r\n  \r\n\t  formattedAuth ? dispatch(authenticate()) : dispatch(unauthenticate());\r\n\t};\r\n  }\r\n*/","// Import Reducer type\r\nimport { Reducer } from 'redux';\r\nimport {\r\n\tSUPPORT_TOP, TopActions, TopActionTypes\r\n} from './actions';\r\nimport { ITop, ITopState } from './types';\r\n\r\nconst initialTop: ITop = {\r\n\tisAuthenticated: null,\r\n\tuuid: null,\r\n\tdarkMode: true,\r\n\tshowModalJSON: false\r\n};\r\n\r\nconst initialTopState: ITopState = {\r\n\ttop: initialTop\r\n};\r\n\r\nconst aTypesToStore = Object.keys(TopActionTypes).filter(a => a !== TopActionTypes.LOAD_TOP);\r\n\r\nexport const topReducer: Reducer<ITopState, TopActions> = (state, action) => {\r\n\tconst newState = myReducer(state, action);\r\n\tif (aTypesToStore.includes(action.type)) {\r\n\t\tlocalStorage.setItem(SUPPORT_TOP, JSON.stringify(newState.top));\r\n\t}\r\n\treturn newState;\r\n}\r\n\r\nconst myReducer: Reducer<ITopState, TopActions> = (\r\n\tstate = initialTopState,\r\n\taction\r\n) => {\r\n\tswitch (action.type) {\r\n\r\n\t\tcase TopActionTypes.LOAD_TOP: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\ttop: { \r\n\t\t\t\t\t...action.top, \r\n\t\t\t\t\tauthError: ''\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tcase TopActionTypes.REGISTER: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\ttop: {\r\n\t\t\t\t\tisAuthenticated: true,\r\n\t\t\t\t\tuuid: \"placeholder-uuid\",\r\n\t\t\t\t\tauth: {\r\n\t\t\t\t\t\twho: action.user,\r\n\t\t\t\t\t\tauthenticated: new Date(),\r\n\t\t\t\t\t\tvisited: new Date()\r\n\t\t\t\t\t},\r\n\t\t\t\t\tdarkMode: false,\r\n\t\t\t\t\tshowModalJSON: false\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tcase TopActionTypes.REGISTER_USERNAME_EXISTS: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\ttop: {\r\n\t\t\t\t\t...state.top,\r\n\t\t\t\t\tauthError: \"Username already exists, please chose another!\"\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t}\t\t\r\n\r\n\t\t// case TopActionTypes.NAVBAR_TOGGLE: {\r\n\t\t// \treturn {\r\n\t\t// \t\t...state,\r\n\t\t// \t\ttop: {\r\n\t\t// \t\t\t...state.top\r\n\t\t// \t\t}\r\n\t\t// \t};\r\n\t\t// }\t\r\n\r\n\t\tcase TopActionTypes.SHOW_MODAL_JSON: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\ttop: {\r\n\t\t\t\t\t...state.top,\r\n\t\t\t\t\tshowModalJSON: action.show\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t}\t\r\n\t\t\r\n\t\tcase TopActionTypes.TOGGLE_MODE: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\ttop: {\r\n\t\t\t\t\t...state.top,\r\n\t\t\t\t\tdarkMode: !state.top.darkMode\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t}\t\r\n\r\n\t\tcase TopActionTypes.AUTHENTICATE: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\ttop: {\r\n\t\t\t\t\t...state.top,\r\n\t\t\t\t\tisAuthenticated: true,\r\n\t\t\t\t\tuuid: \"placeholder-uuid\",\r\n\t\t\t\t\tauth: {\r\n\t\t\t\t\t\twho: action.user,\r\n\t\t\t\t\t\tauthenticated: new Date(),\r\n\t\t\t\t\t\tvisited: new Date()\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tcase TopActionTypes.UNAUTHENTICATE: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\ttop: {\r\n\t\t\t\t\t...state.top,\r\n\t\t\t\t\tisAuthenticated: false,\r\n\t\t\t\t\tauth: undefined\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tcase TopActionTypes.AUTHENTICATE_WRONG_USERNAME: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\ttop: {\r\n\t\t\t\t\t...state.top,\r\n\t\t\t\t\tauthError: \"User doesn't exist!\"\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tcase TopActionTypes.AUTHENTICATE_WRONG_PWD: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\ttop: {\r\n\t\t\t\t\t...state.top,\r\n\t\t\t\t\tauthError: \"Password doesn't match!\"\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t}\r\n\r\n\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n};","import { applyMiddleware, combineReducers, createStore, Store } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\n\r\nimport { categoriesReducer } from '../Categories/categoriesReducer';\r\nimport { answerReducer } from '../Answers/reducer';\r\n\r\nimport { IAnswerState } from '../Answers/types';\r\nimport { ICategoriesState } from '../Categories/types';\r\nimport { IUsersState } from '../Users/types';\r\nimport { userReducer } from '../Users/reducer';\r\nimport { ITagState } from '../roleTags/types';\r\nimport { tagReducer } from '../roleTags/reducer';\r\nimport { ITopState } from '../Top/types';\r\nimport { topReducer } from '../Top/reducer';\r\n\r\nexport interface IAppState {\r\n  categoriesState: ICategoriesState;\r\n  answerState: IAnswerState;\r\n  usersState: IUsersState;\r\n  tagState: ITagState;\r\n  topState: ITopState;\r\n}\r\n\r\n// Create the root reducer\r\nconst rootReducer = combineReducers<IAppState>({\r\n  categoriesState: categoriesReducer,\r\n  answerState: answerReducer,\r\n  usersState: userReducer,\r\n  tagState: tagReducer,\r\n  topState: topReducer\r\n});\r\n\r\n\r\n// Create a configure store function of type `IAppState`\r\nexport default function configureStore(): Store<IAppState, any> {\r\n  const store = createStore(rootReducer, undefined, composeWithDevTools(\r\n    applyMiddleware(thunk)\r\n  ));\r\n  return store;\r\n}","import { connect, Provider } from 'react-redux';\r\nimport { createContext, useReducer } from \"react\";\r\nimport { IAppState } from './store/Store';\r\n\r\nexport interface IThemeState {\r\n  darkMode: boolean,\r\n  variant?: string,\r\n  bg: string\r\n}\r\n\r\nenum ThemeActionKind {\r\n  LIGHTMODE = 'LIGHTMODE',\r\n  DARKMODE = 'DARKMODE',\r\n}\r\n\r\n// An interface for our actions\r\ninterface IThemeAction {\r\n  type: ThemeActionKind;\r\n}\r\n\r\nconst initialState = {\r\n  darkMode: false,\r\n  variant: 'light',\r\n  bg: 'light'\r\n};\r\n\r\nexport const ThemeContext = createContext<{ state: IThemeState; dispatch: React.Dispatch<any> }>({\r\n  state: initialState,\r\n  dispatch: () => null\r\n});\r\n\r\n\r\nconst themeReducer = (state: IThemeState, action: IThemeAction) => {\r\n  switch (action.type) {\r\n    case \"LIGHTMODE\":\r\n      return { ...state, darkMode: false, variant: 'light', bg: 'light' };\r\n    case \"DARKMODE\":\r\n      return { ...state, darkMode: true, variant: 'dark', bg: 'dark' };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport function ThemeProvider(props: { children: React.ReactNode, darkMode: boolean })\r\n{\r\n  const initState = {\r\n    ...initialState, \r\n    darkMode: props.darkMode,\r\n    variant: props.darkMode? 'dark' : 'light',\r\n    bg: props.darkMode? 'dark' : 'light'\r\n  }\r\n\r\n  const [state, dispatch] = useReducer(themeReducer, initState);\r\n  return <ThemeContext.Provider value={{ state, dispatch }}>\r\n    {props.children}\r\n  </ThemeContext.Provider>;\r\n}\r\n\r\n","import * as React from 'react';\r\nimport { createRef } from 'react'\r\n\r\nimport Autosuggest from 'react-autosuggest';\r\nimport AutosuggestHighlightMatch from \"autosuggest-highlight/match\";\r\nimport AutosuggestHighlightParse from \"autosuggest-highlight/parse\";\r\n\r\nimport { IQuestion, ICategory, ICategoryState } from '../Categories/types'\r\nimport './AutoSuggest.css'\r\n\r\n// https://developer.mozilla.org/en/docs/Web/JavaScript/Guide/Regular_Expression\r\n// s#Using_Special_Characters\r\nfunction escapeRegexCharacters(str: string): string {\r\n\treturn str.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&');\r\n}\r\n\r\n\r\nlet inputAutosuggest = createRef<HTMLInputElement>();\r\n\r\nconst QuestionAutosuggestMulti = Autosuggest as { new(): Autosuggest<IQuestion, ICategory> };\r\n\r\nexport class AutoSuggest extends React.Component<{\r\n\tcategories: ICategory[],\r\n\tcategoryMap: Map<number, ICategoryState>,\r\n\ttekst: string | undefined,\r\n\tonSelectQuestion: (categoryId: number, questionId: number) => void\r\n}, any\r\n> {\r\n\t// region Fields\r\n\r\n\tstate: any;\r\n\t//inputAutosuggest: React.RefObject<HTMLInputElement>;\r\n\t// endregion region Constructor\r\n\tconstructor(props: any) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tvalue: props.tekst || '',\r\n\t\t\tsuggestions: this.getSuggestions(''),\r\n\t\t\thighlighted: ''\r\n\t\t};\r\n\t\t//this.inputAutosuggest = createRef<HTMLInputElement>();\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\r\n\t\tsetTimeout(() => {\r\n\t\t\t//inputAutosuggest!.current!.focus();\r\n\t\t\tsetTimeout(() => {\r\n\t\t\t\twindow.focus()\r\n\t\t\t\tinputAutosuggest!.current!.focus();\r\n\t\t\t}, 500)\r\n\r\n\t\t}, 100)\r\n\r\n\t\t// console.log('componentDidMount', document)\r\n\t\t// console.log(document?.getElementById('inputAutoSuggest'))\r\n\t\t//document?.getElementById('inputAutoSuggest')?.focus(); \r\n\t}\r\n\r\n\t// endregion region Rendering methods\r\n\trender(): JSX.Element {\r\n\t\tconst { value, suggestions } = this.state;\r\n\r\n\t\treturn <QuestionAutosuggestMulti\r\n\t\t\tonSuggestionsClearRequested={this.onSuggestionsClearRequested}  // (sl) added\r\n\t\t\tmultiSection={true}\r\n\t\t\tsuggestions={suggestions}\r\n\t\t\tonSuggestionsFetchRequested={this.onSuggestionsFetchRequested.bind(this)}\r\n\t\t\tonSuggestionSelected={this.onSuggestionSelected.bind(this)}\r\n\t\t\tgetSuggestionValue={this.getSuggestionValue}\r\n\t\t\trenderSuggestion={this.renderSuggestion}\r\n\t\t\trenderSectionTitle={this.renderSectionTitle}\r\n\t\t\tgetSectionSuggestions={this.getSectionSuggestions}\r\n\t\t\t// onSuggestionHighlighted={this.onSuggestionHighlighted} (sl)\r\n\t\t\tonSuggestionHighlighted={this.onSuggestionHighlighted.bind(this)}\r\n\t\t\thighlightFirstSuggestion={false}\r\n\t\t\trenderInputComponent={this.renderInputComponent}\r\n\t\t\trenderSuggestionsContainer={this.renderSuggestionsContainer}\r\n\t\t\tfocusInputOnSuggestionClick={false}\r\n\t\t\tinputProps={{\r\n\t\t\t\tplaceholder: `Type 'promocode'`,\r\n\t\t\t\tvalue,\r\n\t\t\t\tonChange: (e, changeEvent) => this.onChange(e, changeEvent),\r\n\t\t\t\tautoFocus: true\r\n\t\t\t}}\r\n\t\t/>;\r\n\t}\r\n\r\n\tprotected onSuggestionsClearRequested = () => {\r\n\t\tthis.setState({\r\n\t\t\tsuggestions: []\r\n\t\t});\r\n\t};\r\n\r\n\r\n\r\n\tprotected onSuggestionSelected(event: React.FormEvent<any>, data: Autosuggest.SuggestionSelectedEventData<IQuestion>): void {\r\n\t\tconst question: IQuestion = data.suggestion;\r\n\t\t// alert(`Selected question is ${question.questionId} (${question.text}).`);\r\n\t\tthis.props.onSelectQuestion(question.categoryId, question.questionId);\r\n\t}\r\n\r\n\t/*\r\n\tprotected renderSuggestion(suggestion: Question, params: Autosuggest.RenderSuggestionParams): JSX.Element {\r\n\t\t const className = params.isHighlighted ? \"highlighted\" : undefined;\r\n\t\t return <span className={className}>{suggestion.name}</span>;\r\n\t}\r\n\t*/\r\n\r\n\tprotected renderSuggestion(suggestion: IQuestion, params: Autosuggest.RenderSuggestionParams): JSX.Element {\r\n\t\t// const className = params.isHighlighted ? \"highlighted\" : undefined;\r\n\t\t//return <span className={className}>{suggestion.name}</span>;\r\n\t\tconst matches = AutosuggestHighlightMatch(suggestion.text, params.query);\r\n\t\tconst parts = AutosuggestHighlightParse(suggestion.text, matches);\r\n\r\n\t\treturn (\r\n\t\t\t<span>\r\n\t\t\t\t{parts.map((part, index) => {\r\n\t\t\t\t\tconst className = part.highlight ? 'react-autosuggest__suggestion-match' : undefined;\r\n\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\t<span className={className} key={index}>\r\n\t\t\t\t\t\t\t{part.text}\r\n\t\t\t\t\t\t</span>\r\n\t\t\t\t\t);\r\n\t\t\t\t})}\r\n\t\t\t</span>\r\n\t\t);\r\n\t}\r\n\r\n\tprotected renderSectionTitle(section: ICategory): JSX.Element {\r\n\t\treturn <strong>{section.title}</strong>;\r\n\t}\r\n\r\n\t// protected renderInputComponent(inputProps: Autosuggest.InputProps<IQuestion>): JSX.Element {\r\n\t// \t const { onChange, onBlur, ...restInputProps } = inputProps;\r\n\t// \t return (\r\n\t// \t\t  <div>\r\n\t// \t\t\t\t<input {...restInputProps} />\r\n\t// \t\t  </div>\r\n\t// \t );\r\n\t// }\r\n\r\n\tprotected renderInputComponent(inputProps: Autosuggest.RenderInputComponentProps): JSX.Element {\r\n\t\tconst { ref, ...restInputProps } = inputProps;\r\n\t\t// if (ref !== undefined)\r\n\t\t// \tthis.inputAutosuggest = ref as React.RefObject<HTMLInputElement>;\r\n\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t<input {...restInputProps} ref={inputAutosuggest} />\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n\r\n\r\n\tprotected renderSuggestionsContainer({ containerProps, children, query }: Autosuggest.RenderSuggestionsContainerParams): JSX.Element {\r\n\t\treturn (\r\n\t\t\t<div {...containerProps}>\r\n\t\t\t\t<span>{children}</span>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n\t// endregion region Event handlers\r\n\r\n\tprotected onChange(event: /*React.ChangeEvent<HTMLInputElement>*/ React.FormEvent<any>, { newValue, method }: Autosuggest.ChangeEvent): void {\r\n\t\tthis.setState({ value: newValue });\r\n\t}\r\n\r\n\tprotected onSuggestionsFetchRequested({ value }: any): void {\r\n\t\tthis.setState({\r\n\t\t\tsuggestions: this.getSuggestions(value)\r\n\t\t});\r\n\t}\r\n\r\n\tprivate anyWord = (valueWordRegex: RegExp[], questionWords: string[]): boolean => {\r\n\t\tfor (let valWordRegex of valueWordRegex)\r\n\t\t\tfor (let questionWord of questionWords)\r\n\t\t\t\tif (valWordRegex.test(questionWord))\r\n\t\t\t\t\treturn true;\r\n\t\treturn false;\r\n\t}\r\n\t// endregion region Helper methods\r\n\tprotected getSuggestions(value: string): ICategory[] {\r\n\t\tconst escapedValue = escapeRegexCharacters(value.trim());\r\n\r\n\t\tif (escapedValue === '') {\r\n\t\t\treturn [];\r\n\t\t}\r\n\r\n\t\tconst valueWords = escapedValue.split(' ');\r\n\t\tconst valueWordRegex = valueWords.map(word => new RegExp(word, 'i'))\r\n\t\t// const regex = new RegExp('^' + escapedValue, 'i');\r\n\t\t// const regex = new RegExp(escapedValue, 'i');\r\n\r\n\t\t// return AutoSuggest.questions\t \r\n\t\t//  return this.props.categories\r\n\t\t// \t\t.map(section => {\r\n\t\t// \t\t\treturn {\r\n\t\t// \t\t\t\t\ttitle: section.title,\r\n\t\t// \t\t\t\t\tquestions: section\r\n\t\t// \t\t\t\t\t\t.questions\r\n\t\t// \t\t\t\t\t\t.filter(question => regex.test(question.text))\r\n\t\t// \t\t\t};\r\n\t\t// \t\t})\r\n\t\t// \t\t.filter(section => section.questions.length > 0);\r\n\t\tconst { categories, categoryMap } = this.props;\r\n\t\treturn categories\r\n\t\t\t.map(group => {\r\n\t\t\t\tconsole.log('categoryId:', group.categoryId);\r\n\t\t\t\tconsole.log('questions:', categoryMap.get(group.categoryId)!.questions)\r\n\t\t\t\treturn {\r\n\t\t\t\t\t...group,\r\n\t\t\t\t\tquestions: //.group.questions\r\n\t\t\t\t\tcategoryMap.get(group.categoryId)!.questions\r\n\t\t\t\t\t\t\t.filter(question => this.anyWord(valueWordRegex, question.words!))\r\n\t\t\t\t};\r\n\t\t\t})\r\n\t\t\t.filter(section => section.questions.length > 0);\r\n\t}\r\n\r\n\tprotected getSuggestionValue(suggestion: IQuestion) {\r\n\t\treturn suggestion.text;\r\n\t}\r\n\r\n\tprotected getSectionSuggestions(section: ICategory) {\r\n\t\treturn section.questions;\r\n\t}\r\n\r\n\tprotected onSuggestionHighlighted(params: Autosuggest.SuggestionHighlightedParams): void {\r\n\t\tthis.setState({\r\n\t\t\thighlighted: params.suggestion\r\n\t\t});\r\n\t}\r\n\t// endregion\r\n}\r\n\r\n","import { connect } from 'react-redux';\r\nimport { IAppState } from '../../store/Store';\r\nimport {OptionName}  from '../components/OptionName'\r\n\r\ninterface IOwnProps {\r\n\tid: number\r\n}\r\n\r\nconst mapStateToProps = (store: IAppState, ownProps: IOwnProps ) => {\r\n\treturn {\r\n\t\toptions: store.usersState.userOptions,\r\n\t\tid: ownProps.id\r\n\t};\r\n};\r\n\r\n\r\nexport default connect(mapStateToProps)(OptionName);\r\n","import { IOption, OptionValue } from \"../types\";\r\n\r\ntype Props<T extends OptionValue> = {\r\n    options: IOption<T>[];\r\n    id: T;\r\n};\r\n\r\nexport interface IProps {\r\n\toptions: IOption<number>[];\r\n  id: number;\r\n}\r\n\r\nexport function OptionName<T extends OptionValue>(props: Props<T>) {\r\n    const { id } = props;\r\n    const option: IOption<T>|undefined = props.options.find(option => option.value === id);\r\n    return (\r\n        <span>\r\n            {option\r\n                ? option!.label\r\n                : \"Unknown\"\r\n            }\r\n        </span>\r\n    );\r\n}","import React, { useContext } from 'react';\r\nimport { useFormik } from 'formik';\r\nimport * as Yup from 'yup'\r\nimport { ICategoryFormProps } from '../types';\r\n\r\nimport { ThemeContext } from \"../../ThemeContext\";\r\nimport { Button, Container, Form } from \"react-bootstrap\";\r\nimport UserName from '../../common/containers/UserName';\r\nimport { initialCategory } from '../categoriesReducer';\r\n//import { number } from 'yup/lib/locale';\r\n\r\nconst CategForm: React.FC<ICategoryFormProps> = (props: ICategoryFormProps) => {\r\n\r\n  let category = props.category;\r\n  if (!category)\r\n    category = {...initialCategory} // we have form in Modal, although hidden\r\n\r\n  const { categoryId, title, questions, isExpanded, createdBy, created } = category;\r\n\r\n  const formik = useFormik({\r\n    enableReinitialize: true,\r\n    initialValues: {\r\n      categoryId,\r\n      title,\r\n      questions,\r\n      isExpanded,\r\n      createdBy,\r\n      created\r\n    },\r\n    validationSchema: Yup.object({\r\n      title: Yup.string()\r\n        .max(150, 'Must be 150 characters or less')\r\n        .required('Required')\r\n    }),\r\n    onSubmit: values => {\r\n      // alert(JSON.stringify(values, null, 2));\r\n      props.saveForm(values, props.formMode)\r\n      props.handleClose(false);\r\n    }\r\n  });\r\n\r\n  const isEdit = () => props.formMode === 'edit';\r\n\r\n  console.log('RENDERING category', formik.values)\r\n  return (\r\n    <Form onSubmit={formik.handleSubmit}>\r\n\r\n      {isEdit() &&\r\n        <Form.Group controlId=\"categoryId\">\r\n          <Form.Label>Id: </Form.Label>\r\n          <span> {formik.values.categoryId}</span>\r\n        </Form.Group>\r\n      }\r\n\r\n      <Form.Group controlId=\"title\">\r\n        <Form.Label>Title</Form.Label>\r\n        <Form.Control\r\n          as=\"textarea\"\r\n          name=\"title\"\r\n          onChange={formik.handleChange}\r\n          //onBlur={formik.handleBlur}\r\n          onBlur={(e: React.FocusEvent<HTMLTextAreaElement>): void => {\r\n            if (isEdit() && formik.initialValues.title !== formik.values.title)\r\n              formik.submitForm();\r\n          }}\r\n          value={formik.values.title}\r\n          style={{ width: '100%' }}\r\n          rows={2}\r\n          placeholder={'New Category'}\r\n        />\r\n        <Form.Text className=\"text-danger\">\r\n          {formik.touched.title && formik.errors.title ? (\r\n            <div className=\"text-danger\">{formik.errors.title}</div>\r\n          ) : null}\r\n        </Form.Text>\r\n      </Form.Group>\r\n\r\n      <br />\r\n\r\n      <Form.Group controlId=\"createdBy\">\r\n        <Form.Label>Created by:</Form.Label>\r\n        <UserName id={formik.values.createdBy} />\r\n      </Form.Group>\r\n      {/* <br /> */}\r\n      <Form.Group controlId=\"created\">\r\n        <Form.Label className=\"id\">Created:</Form.Label>\r\n        <span>{formik.values.created.toLocaleDateString()}</span>\r\n      </Form.Group>\r\n      <br />\r\n      {!isEdit() &&\r\n        <div className=\"buttons\">\r\n          {props.canEdit &&\r\n            <Button\r\n              variant=\"secondary\"\r\n              size=\"sm\"\r\n              onClick={() => {\r\n                props.cancel();\r\n                props.handleClose(true)\r\n              }}>\r\n              Cancel\r\n            </Button>}\r\n          {props.canEdit &&\r\n            <Button\r\n              variant=\"primary\"\r\n              size=\"sm\"\r\n              type=\"submit\"\r\n            >\r\n              Save\r\n            </Button>}\r\n        </div>\r\n      }\r\n    </Form>\r\n\r\n\r\n  );\r\n};\r\n\r\nexport const CategoryForm: React.FC<ICategoryFormProps> = (props: ICategoryFormProps) => {\r\n\r\n  const theme = useContext(ThemeContext);\r\n  const { darkMode, variant, bg } = theme.state;\r\n\r\n  return (\r\n    <Container className={`${darkMode ? \"dark\" : \"\"}`}>\r\n      <CategForm {...props} />\r\n    </Container>\r\n  )\r\n}","import { connect } from 'react-redux';\r\n\r\nimport { IAppState } from '../../store/Store';\r\nimport { ICategory } from '../types'\r\n\r\nimport { Dispatch } from 'redux';  // ActionCreatorsMapObject, \r\n\r\nimport {\r\n\tstoreCategory,\r\n\tupdateCategory,\r\n\tcancelCategory,\r\n\tQuestionActions,\r\n\tcategoryOptions\r\n} from '../actions'\r\n\r\nimport { CategoryForm } from '../components/CategoryForm';\r\n\r\ninterface IProps {\r\n\tcanEdit: boolean,\r\n\thandleClose: (isCancel: boolean) => void\r\n}\r\n\r\n// Grab the categories from the store and make them available on props\r\nconst mapStateToProps = (store: IAppState, ownProps: IProps ) => {\r\n\tconst {categoriesState } = store;\r\n\tconst { category, formMode } = categoriesState; \r\n\treturn {\r\n\t\tcategory,\r\n\t\tformMode,\r\n\t\tcanEdit: ownProps.canEdit,\r\n\t\thandleClose: ownProps.handleClose\r\n\t};\r\n};\r\n\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch<QuestionActions>) => {\r\n\treturn {\r\n\t\tsaveForm: (category: ICategory, formMode: string) => {\r\n\t\t\tif (formMode==='add')\r\n\t\t\t\tdispatch<any>(storeCategory(category)).then(()=> dispatch(categoryOptions()))\r\n\t\t\telse\r\n\t\t\t\tdispatch<any>(updateCategory(category)).then(()=> dispatch(categoryOptions()))\r\n\t\t},\r\n\t\tcancel: () => dispatch<any>(cancelCategory())\r\n\t}\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CategoryForm);\r\n","import React from \"react\";\r\nimport Form from 'react-bootstrap/Form';\r\nimport { IOption, OptionValue } from \"./types\";\r\n\r\ntype Props<T extends OptionValue> = {\r\n    options: IOption<T>[];\r\n    value: T;\r\n    onChange: (e: React.FormEvent<HTMLSelectElement>, value: T) => void;\r\n    id: string,\r\n    name: string,\r\n    disabled?: boolean\r\n};\r\n\r\nexport function Select<T extends OptionValue>(props: Props<T>) {\r\n    const disabled = props.disabled ? true : false;\r\n    function handleOnChange(e: React.FormEvent<HTMLSelectElement>) {\r\n        const { selectedIndex } = e.currentTarget;\r\n        const selectedOption: IOption<T> = props.options[selectedIndex];\r\n        props.onChange(e, selectedOption.value);\r\n    }\r\n\r\n    return (\r\n        <Form.Select\r\n            id={props.id}\r\n            value={props.value}\r\n            onChange={handleOnChange}\r\n            disabled={disabled}\r\n            size=\"sm\"\r\n        >\r\n            {props.options.map(option => (\r\n                <option key={option.value} value={option.value}>\r\n                    {option.label}\r\n                </option>\r\n            ))}\r\n        </Form.Select>\r\n    );\r\n}","export const sourceOptions = [\r\n    { label: \"Unknown\", value: 0 },\r\n    { label: \"Gmail\", value: 1 },\r\n    { label: \"Outlook\", value: 2 },\r\n    { label: \"Phone\", value: 3 },\r\n    { label: \"Chat\", value: 4 },\r\n    { label: \"Slack\", value: 5 }\r\n]","export const statusOptions = [\r\n    { label: \"Unknown\", value: 0 },\r\n    { label: \"In progress\", value: 1 },\r\n    { label: \"Can't reproduce\", value: 2 },\r\n    { label: \"Blocked\", value: 3 },\r\n    { label: \"Complete\", value: 4 }\r\n]","import * as React from 'react';\r\n\r\nimport Autosuggest from 'react-autosuggest';\r\nimport AutosuggestHighlightMatch from \"autosuggest-highlight/match\";\r\nimport AutosuggestHighlightParse from \"autosuggest-highlight/parse\";\r\n\r\nimport { IAnswer }  from '../Answers/types'\r\nimport './AutoSuggest.css'\r\nimport { IQuestion } from '../Categories/types';\r\n\r\n// https://developer.mozilla.org/en/docs/Web/JavaScript/Guide/Regular_Expression\r\n// s#Using_Special_Characters\r\nfunction escapeRegexCharacters(str: string): string {\r\n\treturn str.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&');\r\n}\r\n\r\nconst QuestionAutosuggestMulti = Autosuggest as { new (): Autosuggest<IAnswer> };\r\n\r\ninterface IProps {\r\n\tanswersUnassigned: IAnswer[], \r\n\tquestion: IQuestion,\r\n\tassignQuestionAnswer: (categoryId: number, questionId: number, answerId: number) => void\r\n\tsetAnswerText?: (val: string) => void\r\n}\r\n\r\nexport class AutoSuggestAnswer extends React.Component<IProps, any> {\r\n\r\n\tstate: any;\r\n\r\n\tconstructor(props: any) {\r\n\t\t super(props);\r\n\r\n\t\t this.state = {\r\n\t\t\t  value: '',\r\n\t\t\t  suggestions: this.getSuggestions(''),\r\n\t\t\t  highlighted: ''\r\n\t\t };\r\n\t}\r\n\t// endregion region Rendering methods\r\n\trender(): JSX.Element {\r\n\t\t const {value, suggestions} = this.state;\r\n\r\n\t\t return <QuestionAutosuggestMulti\r\n\t\t \t  onSuggestionsClearRequested={this.onSuggestionsClearRequested}  // (sl) added\r\n\t\t\t  multiSection={false}\r\n\t\t\t  suggestions={suggestions}\r\n\t\t\t  onSuggestionsFetchRequested={this.onSuggestionsFetchRequested.bind(this)}\r\n\t\t\t  onSuggestionSelected={this.onSuggestionSelected.bind(this)}\r\n\t\t\t  getSuggestionValue={this.getSuggestionValue}\r\n\t\t\t  renderSuggestion={this.renderSuggestion}\r\n\t\t\t  // onSuggestionHighlighted={this.onSuggestionHighlighted} (sl)\r\n\t\t\t  onSuggestionHighlighted={this.onSuggestionHighlighted.bind(this)}  \r\n\t\t\t  highlightFirstSuggestion={true}\r\n\t\t\t  // renderInputComponent={this.renderInputComponent}\r\n\t\t\t  renderSuggestionsContainer={this.renderSuggestionsContainer}\r\n\t\t\t  inputProps={{\r\n\t\t\t\t\tplaceholder: `Search answers...`,\r\n\t\t\t\t\tvalue,\r\n\t\t\t\t\tonChange: (e, changeEvent) => this.onChange(e, changeEvent),\r\n\t\t\t  }}/>;\r\n\t}\r\n\r\n\tprotected onSuggestionsClearRequested = () => {\r\n\t\tthis.setState({\r\n\t\t  suggestions: []\r\n\t\t});\r\n\t };\r\n  \r\n  \r\n\r\n\tprotected onSuggestionSelected(event: React.FormEvent<any>, data: Autosuggest.SuggestionSelectedEventData<IAnswer>): void {\r\n\t\t const answer: IAnswer = data.suggestion;\r\n\t\t // alert(`Selected question is ${question.answerId} (${question.text}).`);\r\n\t\t this.props.assignQuestionAnswer(\r\n\t\t\t this.props.question.categoryId,\r\n\t\t\t this.props.question.questionId, \r\n\t\t\t answer.answerId);\r\n\t\tthis.setState({\r\n\t\t\tvalue: ''\r\n\t\t})\r\n\t}\r\n\r\n\t/*\r\n\tprotected renderSuggestion(suggestion: Question, params: Autosuggest.RenderSuggestionParams): JSX.Element {\r\n\t\t const className = params.isHighlighted ? \"highlighted\" : undefined;\r\n\t\t return <span className={className}>{suggestion.name}</span>;\r\n\t}\r\n\t*/\r\n\r\n\tprotected renderSuggestion(suggestion: IAnswer, params: Autosuggest.RenderSuggestionParams): JSX.Element {\r\n\t\t// const className = params.isHighlighted ? \"highlighted\" : undefined;\r\n\t\t//return <span className={className}>{suggestion.name}</span>;\r\n\t\tconst matches = AutosuggestHighlightMatch(suggestion.text, params.query);\r\n\t\tconst parts = AutosuggestHighlightParse(suggestion.text, matches);\r\n\t \r\n\t\treturn (\r\n\t\t  <span>\r\n\t\t\t {parts.map((part, index) => {\r\n\t\t\t\tconst className = part.highlight ? 'react-autosuggest__suggestion-match' : undefined;\r\n\t \r\n\t\t\t\treturn (\r\n\t\t\t\t  <span className={className} key={index}>\r\n\t\t\t\t\t {part.text}\r\n\t\t\t\t  </span>\r\n\t\t\t\t);\r\n\t\t\t })}\r\n\t\t  </span>\r\n\t\t);\r\n\t}\r\n\r\n\t// protected renderInputComponent(inputProps: Autosuggest.InputProps<IAnswer>): JSX.Element {\r\n\t// \t const { onChange, onBlur, ...restInputProps } = inputProps;\r\n\t// \t return (\r\n\t// \t\t  <div>\r\n\t// \t\t\t\t<input {...restInputProps} />\r\n\t// \t\t  </div>\r\n\t// \t );\r\n\t// }\r\n\r\n\tprotected renderSuggestionsContainer({containerProps, children, query}: Autosuggest.RenderSuggestionsContainerParams): JSX.Element {\r\n\t\t return (\r\n\t\t\t  <div {...containerProps}>\r\n\t\t\t\t\t<span>{children}</span>\r\n\t\t\t  </div>\r\n\t\t );\r\n\t}\r\n\t// endregion region Event handlers\r\n\tprotected onChange(event: React.FormEvent<any>, {newValue, method}: Autosuggest.ChangeEvent): void {\r\n\t\tif (this.props.setAnswerText) {\r\n\t\t\tthis.props.setAnswerText(newValue);\r\n\t\t}\r\n\t\tthis.setState({value: newValue});\r\n\t}\r\n\r\n\tprotected onSuggestionsFetchRequested({value}: any): void {\r\n\t\t this.setState({\r\n\t\t\t  suggestions: this.getSuggestions(value)\r\n\t\t });\r\n\t}\r\n\r\n\tprivate anyWord = (valueWordRegex: RegExp[], questionWords: string[]) : boolean => {\r\n\t\tfor (let valWordRegex of valueWordRegex)\r\n\t\t\tfor (let questionWord of questionWords)\r\n\t\t\t\tif (valWordRegex.test(questionWord))\r\n\t\t\t\t\treturn true;\r\n\t\treturn false;\r\n\t} \r\n\t// endregion region Helper methods\r\n\tprotected getSuggestions(value: string): IAnswer[] {\r\n\t\tconst escapedValue = escapeRegexCharacters(value.trim());\r\n\r\n\t\tif (escapedValue === '') {\r\n\t\t\treturn [];\r\n\t\t}\r\n\r\n\t\tconst valueWords = escapedValue.split(' ');\r\n\t\tconst valueWordRegex = valueWords.map(word => new RegExp(word, 'i') )\r\n\t\t// const regex = new RegExp('^' + escapedValue, 'i');\r\n\t\t// const regex = new RegExp(escapedValue, 'i');\r\n\r\n\t\treturn this.props.answersUnassigned.filter(answer => this.anyWord(valueWordRegex, answer.words!))\r\n\t}\r\n\r\n\tprotected getSuggestionValue(suggestion: IAnswer) {\r\n\t\t return suggestion.text;\r\n\t}\r\n\r\n\r\n\tprotected onSuggestionHighlighted(params: Autosuggest.SuggestionHighlightedParams): void {\r\n\t\t this.setState({\r\n\t\t\t  highlighted: params.suggestion\r\n\t\t });\r\n\t}\r\n\t// endregion\r\n}\r\n\r\n","import { useRef, useState, useEffect } from 'react';\r\n\r\nimport isMobile from 'ismobilejs';\r\nconst isMob = isMobile(navigator.userAgent).any;\r\n\r\ninterface IHoverProps {\r\n\tisHovered: boolean;\r\n}\r\n\r\n// Hook\r\nexport function useHover(): [React.RefObject<HTMLDivElement>, IHoverProps] {\r\n\tconst [hoverProps, setValue] = useState({ isHovered: isMob ? true : false });\r\n\r\n\tconst divRef = useRef<HTMLDivElement>(null);\r\n\r\n\tconst handleMouseOver = () => setValue({ isHovered: true });\r\n\tconst handleMouseOut = () => setValue({ isHovered: false });\r\n\r\n\tuseEffect(\r\n\t\t() => {\r\n\t\t\tconst node = divRef.current;\r\n\t\t\tif (node) {\r\n\r\n\t\t\t\tif (!isMob) {\r\n\t\t\t\t\tnode.addEventListener('mouseenter', () => handleMouseOver());\r\n\t\t\t\t\tnode.addEventListener('mouseleave', () => handleMouseOut());\r\n\r\n\t\t\t\t\treturn () => {\r\n\t\t\t\t\t\tnode.removeEventListener('mouseenter', () => handleMouseOver());\r\n\t\t\t\t\t\tnode.removeEventListener('mouseleave', () => handleMouseOut());\r\n\t\t\t\t\t};\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}, [divRef.current] // Recall only if ref changes\r\n\t);\r\n\r\n\treturn [divRef, hoverProps];\r\n}\r\n\r\n","import * as React from 'react';\r\n\r\nimport { useHover } from '../../common/useHover'\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faWindowClose, faCopy } from '@fortawesome/free-solid-svg-icons'\r\n\r\nimport { IQuestion, IQuestionAnswer } from '../types';\r\nimport { Button } from 'react-bootstrap';\r\n\r\n\r\ninterface IQuestionAnswerRowProps {\r\n\tquestion: IQuestion;\r\n\tquestionAnswer: IQuestionAnswer;\r\n\tselectQuestionAnswer: (categoryId: number, questionId: number, answerId: number) => void;\r\n\tcopyQuestionAnswer: (categoryId: number, questionId: number, answerId: number) => void;\r\n\tremoveQuestionAnswer: (categoryId: number, questionId: number, answerId: number) => void;\r\n}\r\n\r\nconst QuestionAnswerRow: React.FC<IQuestionAnswerRowProps> = (props: IQuestionAnswerRowProps) => {\r\n\r\n\tconst [hoverRef, hoverProps] = useHover();\r\n\r\n\tconst { question, questionAnswer, removeQuestionAnswer } = props;\r\n\tconst { categoryId, questionId } = question;\r\n\tconst { answerId, text, assigned } = questionAnswer;\r\n\r\n\treturn (\r\n\t\t<div ref={hoverRef}  className=\"d-flex justify-content-start align-items-center\">\r\n\t\t\t<Button\r\n\t\t\t\tstyle={{ fontSize: '13px' }}\r\n\t\t\t\tvariant='link'\r\n\t\t\t\tsize=\"sm\"\r\n\t\t\t\tclassName=\"answer py-0 px-1 text-decoration-none\"\r\n\t\t\t\ttitle={`AnswerId:${answerId}\\nAssigned: ${assigned.toLocaleDateString()} ${assigned.toLocaleTimeString()}`}\r\n\t\t\t\tonClick={() => {\r\n\t\t\t\t\t// selectQuestionAnswer(categoryId, questionId, answerId)}\r\n\t\t\t\t\t// alert('No action for the time being')\r\n\t\t\t\t}}\r\n\t\t\t>\r\n\t\t\t\t{text}\r\n\t\t\t</Button>\r\n\t\t\t{hoverProps.isHovered &&\r\n\t\t\t\t<button className=\"button-edit\" title=\"Copy Answer to Cliboard\"\r\n\t\t\t\t\tonClick={(e) => {\r\n\t\t\t\t\t\t//const input = document.querySelector<HTMLInputElement>('#' + id);\r\n\t\t\t\t\t\tif (navigator.clipboard) {\r\n\t\t\t\t\t\t\tnavigator.clipboard.writeText(`${questionAnswer.text}`) // input!.value)\r\n\t\t\t\t\t\t\t\t.then(() => {\r\n\t\t\t\t\t\t\t\t\tconsole.log('Copied to clipboard successfully.');\r\n\t\t\t\t\t\t\t\t}, (err) => {\r\n\t\t\t\t\t\t\t\t\tconsole.log('Failed to copy the text to clipboard.', err);\r\n\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\te.stopPropagation();\r\n\t\t\t\t\t\t// copyQuestionAnswer(categoryId, questionId, answerId);\r\n\t\t\t\t\t}\r\n\t\t\t\t\t}>\r\n\t\t\t\t\t<FontAwesomeIcon icon={faCopy} color='lightblue' />\r\n\t\t\t\t</button>\r\n\t\t\t}\r\n\t\t\t{hoverProps.isHovered &&\r\n\t\t\t\t<button \r\n\t\t\t\t\tclassName=\"button-remove\"\r\n\t\t\t\t\ttitle=\"Remove\"\r\n\t\t\t\t\tonClick={(e) => {\r\n\t\t\t\t\t\t\tremoveQuestionAnswer(categoryId, questionId, answerId);\r\n\t\t\t\t\t\t\te.preventDefault();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t>\r\n\t\t\t\t\t<FontAwesomeIcon icon={faWindowClose} color='lightblue' />\r\n\t\t\t\t</button>\r\n\t\t\t}\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default QuestionAnswerRow\r\n\r\n","import React, { useContext } from 'react';\r\nimport { Button, Container, Form } from \"react-bootstrap\";\r\nimport { useFormik } from 'formik';\r\nimport * as Yup from 'yup'\r\nimport { IAnswer } from '../types';\r\nimport UserName from '../../common/containers/UserName'\r\nimport { ThemeContext } from '../../ThemeContext';\r\nimport { initialAnswer } from '../../Answers/reducer'\r\n\r\ninterface IProps {\r\n\tanswer: IAnswer;\r\n\tformMode: string;\r\n\toptions?: string[];\r\n\tcancel: () => void;\r\n\tsaveForm: (answer: IAnswer, formMode: string) => void;\r\n}\r\n\r\nconst AnsForm: React.FC<IProps> = (props: IProps) => {\r\n\r\n\tlet { answer } = props;\r\n\tif (!answer) // it is still view in modal, although hidden\r\n    \tanswer = { ...initialAnswer };\r\n\r\n\tconst formik = useFormik({\r\n\t\tenableReinitialize: true,\r\n\t\tinitialValues: {\r\n\t\t\tanswerId: answer.answerId,\r\n\t\t\ttext: answer.text,\r\n\t\t\tcreatedBy: answer.createdBy,\r\n\t\t\tcreated: answer.created\r\n\t\t},\r\n\t\tvalidationSchema: Yup.object({\r\n\t\t\ttext: Yup.string()\r\n\t\t\t\t.max(150, 'Must be 150 characters or less')\r\n\t\t\t\t.required('Required'),\r\n\t\t}),\r\n\t\tonSubmit: (values) => {\r\n\t\t\t// alert(JSON.stringify(values, null, 2));\r\n\t\t\tprops.saveForm(values, props.formMode)\r\n\t\t},\r\n\t});\r\n\r\n\tconst isEdit = () => props.formMode === 'edit';\r\n\tconsole.log('RENDERING', formik.values)\r\n\r\n\treturn (\r\n\t\t<Form onSubmit={formik.handleSubmit}>\r\n\t\t\t{isEdit() &&\r\n\t\t\t\t<Form.Group controlId=\"answerId\">\r\n\t\t\t\t\t<Form.Label>Id: </Form.Label>\r\n\t\t\t\t\t<span> {formik.values.answerId}</span>\r\n\t\t\t\t</Form.Group>\r\n\t\t\t}\r\n\r\n\t\t\t<Form.Group controlId=\"text\">\r\n\t\t\t\t<Form.Label>Answer</Form.Label>\r\n\t\t\t\t<Form.Control\r\n\t\t\t\t\tas=\"textarea\"\r\n\t\t\t\t\tname=\"text\"\r\n\t\t\t\t\tonChange={formik.handleChange}\r\n\t\t\t\t\t//onBlur={formik.handleBlur}\r\n\t\t\t\t\tonBlur={(e: React.FocusEvent<HTMLTextAreaElement>): void => {\r\n\t\t\t\t\t\tif (isEdit() && formik.initialValues.text !== formik.values.text)\r\n\t\t\t\t\t\t\tformik.submitForm();\r\n\t\t\t\t\t}}\r\n\t\t\t\t\tvalue={formik.values.text}\r\n\t\t\t\t\tstyle={{ width: '100%' }}\r\n\t\t\t\t\trows={2}\r\n\t\t\t\t/>\r\n\t\t\t\t<Form.Text className=\"text-danger\">\r\n\t\t\t\t\t{formik.touched.text && formik.errors.text ? (\r\n\t\t\t\t\t\t<div className=\"text-danger\">{formik.errors.text}</div>\r\n\t\t\t\t\t) : null}\r\n\t\t\t\t</Form.Text>\r\n\t\t\t</Form.Group>\r\n\r\n\t\t\t<Form.Group controlId=\"createdBy\">\r\n\t\t\t\t<Form.Label>Created by:</Form.Label>\r\n\t\t\t\t<UserName id={formik.values.createdBy} />\r\n\t\t\t</Form.Group>\r\n\t\t\t{/* <br /> */}\r\n\t\t\t<Form.Group controlId=\"created\">\r\n\t\t\t\t<Form.Label className=\"id\">Created:</Form.Label>\r\n\t\t\t\t<span>{formik.values.created.toLocaleDateString()}</span>\r\n\t\t\t</Form.Group>\r\n\r\n\t\t\t{!isEdit() &&\r\n\t\t\t\t<div className=\"buttons\">\r\n\t\t\t\t\t<Button\r\n\t\t\t\t\t\tvariant=\"secondary\"\r\n\t\t\t\t\t\tsize=\"sm\"\r\n\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\tprops.cancel();\r\n\t\t\t\t\t\t\t//props.handleClose()\r\n\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\tCancel\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t\t<Button\r\n\t\t\t\t\t\tvariant=\"primary\"\r\n\t\t\t\t\t\tsize=\"sm\"\r\n\t\t\t\t\t\ttype=\"submit\"\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\tSave\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t</div>\r\n\t\t\t}\r\n\t\t</Form>\r\n\t);\r\n};\r\n\r\nexport const AnswerForm: React.FC<IProps> = (props: IProps) => {\r\n\tconst theme = useContext(ThemeContext);\r\n\tconst { darkMode, variant, bg } = theme.state;\r\n\r\n\treturn (\r\n\t\t<Container className={`${darkMode ? \"dark\" : \"\"}`}>\r\n\t\t\t<AnsForm {...props} />\r\n\t\t</Container>\r\n\t)\r\n}","import * as React from 'react';\r\n\r\nimport { IQuestion, IQuestionAnswer } from '../types';\r\nimport { IAnswer } from '../../Answers/types';\r\nimport { AutoSuggestAnswer } from '../../components/AutoSuggestAnswer';\r\nimport QuestionAnswerRow from './QuestionAnswerRow';\r\nimport { ThemeContext } from '../../ThemeContext';\r\nimport { useContext, useState } from 'react';\r\nimport { Button, Table } from 'react-bootstrap';\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport { AnswerForm } from '../../Answers/components/Form';\r\n\r\ninterface IProps {\r\n\tquestion: IQuestion,\r\n\tquestionAnswers: IQuestionAnswer[],\r\n\tanswers?: IAnswer[],\r\n\tanswer?: IAnswer,\r\n\tcanEdit: boolean,\r\n\tformMode: string,\r\n\tselectQuestionAnswer: (categoryId: number, questionId: number, answerId: number) => void,\r\n\tcopyQuestionAnswer: (categoryId: number, questionId: number, answerId: number) => void,\r\n\tremoveQuestionAnswer: (categoryId: number, questionId: number, answerId: number) => void,\r\n\tassignQuestionAnswer: (categoryId: number, questionId: number, answerId: number, tekst?: string) => void,\r\n\tsetAnswerText?: (val: string) => void;\r\n\tadd: (categoryId: number, questionId: number) => void,\r\n\tsaveForm: (categoryId: number, questionId: number, answer: IAnswer) => void,\r\n\tcancel: () => void\r\n}\r\n\r\nconst QuestionAnswers: React.FC<IProps> = (props: IProps) => {\r\n\tconst {\r\n\t\tquestion,\r\n\t\tquestionAnswers,\r\n\t\tanswers,\r\n\t\tanswer,\r\n\t\tcanEdit,\r\n\t\tformMode,\r\n\t\tselectQuestionAnswer, copyQuestionAnswer, removeQuestionAnswer,\r\n\t\tassignQuestionAnswer, add, saveForm, cancel\r\n\t} = props;\r\n\r\n\tconst answersUnassigned = answers!.filter(a => !question.answers.map(a => a.answerId).includes(a.answerId))\r\n\r\n\tconst [tekst, setTekst] = React.useState('');\r\n\tconst setAnswerText = (val: string) => {\r\n\t\tsetTekst(val);\r\n\t}\r\n\r\n\tconst assignQA = (categoryId: number, questionId: number, answerId: number) => {\r\n\t\tassignQuestionAnswer(\r\n\t\t\tcategoryId,\r\n\t\t\tquestionId,\r\n\t\t\tanswerId\r\n\t\t);\r\n\t\tsetShowAssign(false);\r\n\t}\r\n\r\n\r\n\tconst addAnswer = () => {\r\n\t\tadd(question.categoryId, question.questionId);\r\n\t\thandleShow();\r\n\t}\r\n\r\n\tconst saveAnswerForm = (answer: IAnswer, formMode: string) => {\r\n\t\tsaveForm(question.categoryId, question.questionId, answer);\r\n\t\thandleClose();\r\n\t};\r\n\r\n\tconst cancelAnswer = () => {\r\n\t\tcancel();\r\n\t\thandleClose();\r\n\t}\r\n\r\n\tconst theme = useContext(ThemeContext);\r\n\tconst { darkMode, variant, bg } = theme.state;\r\n\r\n\tconst [show, setShow] = useState(false);\r\n\tconst handleClose = () => setShow(false);\r\n\tconst handleShow = () => setShow(true);\r\n\r\n\tconst [showAssign, setShowAssign] = useState(false);\r\n\r\n\treturn (\r\n\t\t<div className=\"name-container\">\r\n\t\t\t{/* { questionAnswers.length === 0 && \r\n\t\t\t\t<div>\r\n\t\t\t\t\tNo answers yet\r\n\t\t\t\t</div>\r\n\t\t\t} */}\r\n\t\t\t{questionAnswers.length > -1 &&\r\n\t\t\t\t<div style={{ height: '100px', overflowY: 'auto' }}>\r\n\t\t\t\t\t<Table variant={variant} responsive striped bordered hover size=\"sm\" className=\"mb-0\">\r\n\t\t\t\t\t\t<thead>\r\n\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t<th colSpan={2} className=\"py-0 px-5\" style={{ color: 'lightblue' }}>{questionAnswers.length === 0 ? 'No answers yet' : 'Answers'}</th>\r\n\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t</thead>\r\n\t\t\t\t\t\t<tbody>\r\n\t\t\t\t\t\t\t{questionAnswers.map(qa =>\r\n\t\t\t\t\t\t\t\t<tr key={qa.answerId}>\r\n\t\t\t\t\t\t\t\t\t<td\r\n\t\t\t\t\t\t\t\t\t\ttitle={`AnswerId:${qa.answerId}\\nAssigned: ${qa.assigned.toLocaleDateString()} ${qa.assigned.toLocaleTimeString()}`}\r\n\t\t\t\t\t\t\t\t\t\tclassName=\"py-0 px-0\"\r\n\t\t\t\t\t\t\t\t\t\tcolSpan={2}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t<QuestionAnswerRow\r\n\t\t\t\t\t\t\t\t\t\t\tkey={qa.answerId}\r\n\t\t\t\t\t\t\t\t\t\t\tquestion={question}\r\n\t\t\t\t\t\t\t\t\t\t\tquestionAnswer={qa}\r\n\t\t\t\t\t\t\t\t\t\t\tselectQuestionAnswer={selectQuestionAnswer}\r\n\t\t\t\t\t\t\t\t\t\t\tcopyQuestionAnswer={copyQuestionAnswer}\r\n\t\t\t\t\t\t\t\t\t\t\tremoveQuestionAnswer={removeQuestionAnswer}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t\t{/* <td title={`AnswerId:${qa.answerId}\\nAssigned: ${qa.assigned.toLocaleDateString()} ${qa.assigned.toLocaleTimeString()}`}>\r\n\t\t\t\t\t\t\t\t\t{qa.text}\r\n\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t{ canEdit && formMode !== 'display' &&\r\n\t\t\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t\t\t\t<button className=\"button-remove\" title=\"Remove Answer\" \r\n\t\t\t\t\t\t\t\t\t\t\tonClick={(e) => { \r\n\t\t\t\t\t\t\t\t\t\t\t\te.stopPropagation();\r\n\t\t\t\t\t\t\t\t\t\t\t\te.preventDefault();\r\n\t\t\t\t\t\t\t\t\t\t\t\tremoveQuestionAnswer!(question.categoryId, question.questionId, qa.answerId)\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\t\t\t<FontAwesomeIcon icon={faWindowClose}  color='lightblue' />\r\n\t\t\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t} */}\r\n\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t)}\r\n\r\n\t\t\t\t\t\t</tbody>\r\n\t\t\t\t\t</Table>\r\n\t\t\t\t</div>\r\n\t\t\t}\r\n\t\t\t{canEdit && formMode !== 'display' &&\r\n\t\t\t\t<div className=\"d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center py-1\">\r\n\t\t\t\t\t{answers && answers.length > 0 && \r\n\t\t\t\t\t<Button size=\"sm\" className=\"button-edit py-0\" title=\"Assign a new Answer\" \r\n\t\t\t\t\t\tstyle={{border:'1px solid silver', fontSize: '12px'}}\r\n\t\t\t\t\t\tvariant={variant}\r\n\t\t\t\t\t\tonClick={\r\n\t\t\t\t\t\t\t(e) => {\r\n\t\t\t\t\t\t\t\tsetShowAssign(true);\r\n\t\t\t\t\t\t\t\te.preventDefault()\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}>\r\n\t\t\t\t\t\tAssign answer\r\n\t\t\t\t\t</Button>}\r\n\t\t\t\t\t<Button size=\"sm\" className=\"button-edit py-0\" title=\"Add a new Answer\" style={{border:'1px solid silver', fontSize: '12px'}}\r\n\t\t\t\t\t\tvariant={variant}\r\n\t\t\t\t\t\tonClick={\r\n\t\t\t\t\t\t\t(e) => {\r\n\t\t\t\t\t\t\t\taddAnswer();\r\n\t\t\t\t\t\t\t\te.preventDefault()\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}>\r\n\t\t\t\t\t\tCreate a new answer{/* <FontAwesomeIcon icon={faPlus} color='lightblue' /> */}\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t</div>\r\n\t\t\t}\r\n\t\t\t<Modal show={show} onHide={handleClose} animation={true} centered size=\"lg\"\r\n\t\t\t\tclassName={`${darkMode ? \"dark\" : \"\"}`}\r\n\t\t\t\tcontentClassName={`${darkMode ? \"dark\" : \"\"}`}>\r\n\t\t\t\t<Modal.Header closeButton>\r\n\t\t\t\t\t<Modal.Title>Create and assign a new answer</Modal.Title>\r\n\t\t\t\t</Modal.Header>\r\n\t\t\t\t<Modal.Body style={{ height: '40vh', width: '50vw' }} >\r\n\t\t\t\t\t<AnswerForm\r\n\t\t\t\t\t\tanswer={answer!}\r\n\t\t\t\t\t\tformMode='add'\r\n\t\t\t\t\t\tcancel={cancelAnswer}\r\n\t\t\t\t\t\tsaveForm={saveAnswerForm} />\r\n\t\t\t\t</Modal.Body>\r\n\t\t\t</Modal>\r\n\t\t\t<Modal show={showAssign} onHide={() => setShowAssign(false)} animation={true} size=\"lg\" centered\r\n\t\t\t\tclassName={`${darkMode ? \"dark\" : \"\"}`}\r\n\t\t\t\tcontentClassName={`${darkMode ? \"dark\" : \"\"}`}>\r\n\t\t\t\t<Modal.Header closeButton>\r\n\t\t\t\t\t<Modal.Title>Assign the answer</Modal.Title>\r\n\t\t\t\t</Modal.Header>\r\n\t\t\t\t<Modal.Body style={{ height: '40vh', width: '50vw' }} className=\"question-answers\">\r\n\t\t\t\t\t<AutoSuggestAnswer\r\n\t\t\t\t\t\tquestion={question}\r\n\t\t\t\t\t\tanswersUnassigned={answersUnassigned!}\r\n\t\t\t\t\t\tassignQuestionAnswer={assignQA}\r\n\t\t\t\t\t\tsetAnswerText={setAnswerText}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</Modal.Body>\r\n\t\t\t</Modal>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default QuestionAnswers\r\n\r\n","import { connect } from 'react-redux';\r\n\r\nimport { IAppState } from '../../store/Store';\r\nimport { IQuestion, IQuestionAnswer } from '../types'\r\nimport { IAnswer } from '../../Answers/types'\r\n\r\nimport { Dispatch } from 'redux';\r\n\r\nimport {\r\n\tQuestionActions,\r\n\tremoveQuestionAnswer,\r\n\tassignQuestionAnswer,\r\n\taddAndAssignNewAnswer,\r\n\tselectQuestionAnswer,\r\n\tcopyQuestionAnswer\r\n} from '../actions'\r\n\r\nimport { addAnswer, cancelAnswer, storeAnswer } from '../../Answers/actions';\r\nimport QuestionAnswers from '../components/QuestionAnswers';\r\n\r\nconst joinQuestionAnswers = (question: IQuestion | undefined, answers: IAnswer[]): IQuestionAnswer[] => {\r\n\tif (question === undefined || question.answers.length === 0 || answers === undefined)\r\n\t\treturn [];\r\n\tconsole.log(\"question.answers\", question.answers)\r\n\tconst questionAnswers = question.answers.map(qa => ({\r\n\t\t...qa, text: answers.find(a => a.answerId === qa.answerId)!.text\r\n\t})\r\n\t);\r\n\treturn questionAnswers.sort((a, b) => a.assigned > b.assigned ? 1 : -1);\r\n}\r\n\r\ninterface IProps {\r\n\tcanEdit: boolean\r\n}\r\n\r\n// Grab the categories from the store and make them available on props\r\nconst mapStateToProps = (store: IAppState, ownProps: IProps) => { // \r\n\tconst { categoriesState, answerState } = store;\r\n\tconst { question, categoryOptions, formMode } = categoriesState;\r\n\tconst { answers, answer } = answerState;\r\n\treturn {\r\n\t\tcategoryOptions,\r\n\t\tquestion: question!,\r\n\t\tquestionAnswers: joinQuestionAnswers(question, answers),\r\n\t\tanswers,\r\n\t\tanswer,\r\n\t\tformMode,\r\n\t\tcanEdit: ownProps.canEdit\r\n\t};\r\n};\r\n\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch<QuestionActions>) => {\r\n\treturn {\r\n\t\tadd: (categoryId: number, questionId: number) => dispatch<any>(addAnswer()),\r\n\t\tsaveForm: (categoryId: number, questionId: number, answer: IAnswer) => {\r\n\t\t\tdispatch<any>(storeAnswer(answer, 'add'));\r\n\t\t\tdispatch<any>(assignQuestionAnswer(categoryId, questionId, answer.answerId))\r\n\t\t},\r\n\t\tcancel: () => dispatch<any>(cancelAnswer()),\r\n\r\n\t\tselectQuestionAnswer: (categoryId: number, questionId: number, answerId: number) =>\r\n\t\t\tdispatch<any>(selectQuestionAnswer(categoryId, questionId, answerId)),\r\n\t\tcopyQuestionAnswer: (categoryId: number, questionId: number, answerId: number) =>\r\n\t\t\tdispatch<any>(copyQuestionAnswer(categoryId, questionId, answerId)),\r\n\t\tremoveQuestionAnswer: (categoryId: number, questionId: number, answerId: number) =>\r\n\t\t\tdispatch<any>(removeQuestionAnswer(categoryId, questionId, answerId)),\r\n\r\n\t\tassignQuestionAnswer: (categoryId: number, questionId: number, answerId: number) =>\r\n\t\t\tdispatch<any>(assignQuestionAnswer(categoryId, questionId, answerId)),\r\n\r\n\t\taddAndAssignNewAnswer: (categoryId: number, questionId: number, answer: IAnswer, formMode: string) => {\r\n\t\t\tdispatch<any>(addAndAssignNewAnswer(categoryId, questionId, answer, formMode))\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(QuestionAnswers);\r\n\r\n","import React, { useContext, useState } from 'react';\r\nimport { useFormik } from 'formik';\r\nimport * as Yup from 'yup'\r\nimport { IQuestionFormProps } from '../types';\r\n\r\nimport { Select } from '../../common/Select';\r\nimport UserName from '../../common/containers/UserName';\r\n//import { number } from 'yup/lib/locale';\r\nimport { ThemeContext } from \"../../ThemeContext\";\r\nimport { Button, Container, Form } from \"react-bootstrap\";\r\n\r\nimport { sourceOptions } from '../sourceOptions'\r\nimport { statusOptions } from '../statusOptions'\r\nimport ContainerQuestionAnswers from '../containers/ContainerQuestionAnswers';\r\n\r\nconst QuestForm: React.FC<IQuestionFormProps> = (props: IQuestionFormProps) => {\r\n\r\n  let { question } = props;\r\n  const { categoryId, questionId, text, source, status, answers, createdBy, created } = question;\r\n\r\n  console.log('props.categoryOptions', props.categoryOptions)\r\n\r\n  const formik = useFormik({\r\n    enableReinitialize: true,\r\n    initialValues: { \r\n      categoryId,\r\n      questionId,\r\n      text,\r\n      source,\r\n      status,\r\n      answers,\r\n      createdBy,\r\n      created\r\n    },\r\n    validationSchema: Yup.object({\r\n      text: Yup.string()\r\n        .max(150, 'Must be 150 characters or less')\r\n        .required('Required'),\r\n      categoryId: Yup.number()\r\n        .moreThan(0, 'Select Category')\r\n        .required('Required'),\r\n    }),\r\n    onSubmit: (values) => {\r\n      // alert(JSON.stringify(values, null, 2));\r\n      props.saveForm(values, props.formMode);\r\n      if (props.formMode === 'add')\r\n        props.handleClose();\r\n    }\r\n  });\r\n  \r\n  const isEdit = props.formMode === 'edit';\r\n  const isDisabled = props.formMode === 'display';\r\n\r\n  return (\r\n    <Form onSubmit={formik.handleSubmit}>\r\n      {isEdit &&\r\n        <Form.Group controlId=\"questionId\">\r\n          <Form.Label>Id:</Form.Label>\r\n          <span className=\"mx-1\"> {formik.values.questionId}</span>\r\n        </Form.Group>\r\n      }\r\n\r\n      <Form.Group controlId=\"categoryId\">\r\n        <Form.Label>Category</Form.Label>\r\n        <Select\r\n          id=\"categoryId\"\r\n          name=\"categoryId\"\r\n          options={props.categoryOptions}\r\n          //onChange={formik.handleChange}\r\n          onChange={(e, value) => {\r\n              formik.setFieldValue('categoryId', value)\r\n                .then(() => { if (isEdit) formik.submitForm()})\r\n          }}\r\n          value={formik.values.categoryId}\r\n          disabled={isDisabled}\r\n        />\r\n        <Form.Text className=\"text-danger\">  {/* formik.submitCount > 0 && */}\r\n          {formik.touched.categoryId && formik.errors.categoryId ? (\r\n            <div className=\"text-danger\">{formik.errors.categoryId}</div>\r\n          ) : null}\r\n        </Form.Text>\r\n      </Form.Group>\r\n\r\n      <Form.Group controlId=\"text\">\r\n        <Form.Label>Text</Form.Label>\r\n        <Form.Control\r\n          size=\"sm\"\r\n          as=\"textarea\"\r\n          name=\"text\"\r\n          onChange={formik.handleChange}\r\n          //onBlur={formik.handleBlur}\r\n          onBlur={(e: React.FocusEvent<HTMLTextAreaElement>): void => {\r\n            if (isEdit && formik.touched.text) //  //.initialValues.text !== formik.values.text))\r\n              formik.submitForm();\r\n          }}\r\n          value={formik.values.text}\r\n          style={{ width: '100%' }}\r\n          className=\"py-0\"\r\n          rows={2}\r\n          disabled={isDisabled}\r\n        />\r\n        <Form.Text className=\"text-danger\">\r\n          {formik.touched.text && formik.errors.text ? (\r\n            <div className=\"text-danger\">{formik.errors.text}</div>\r\n          ) : null}\r\n        </Form.Text>\r\n      </Form.Group>\r\n\r\n      <Form.Group controlId=\"source\">\r\n        <Form.Label>Source</Form.Label>\r\n        <Select\r\n          id=\"source\"\r\n          name=\"source\"\r\n          options={sourceOptions}\r\n          onChange={(e, value) => {\r\n            formik.setFieldValue('source', value)\r\n            .then(() => { if (isEdit) formik.submitForm()})\r\n          }}\r\n          value={formik.values.source}\r\n          disabled={isDisabled}\r\n        />\r\n        <Form.Text className=\"text-danger\">\r\n          {formik.touched.source && formik.errors.source ? (\r\n            <div className=\"text-danger\">{formik.errors.source}</div>\r\n          ) : null}\r\n        </Form.Text>\r\n      </Form.Group>\r\n\r\n      <br />\r\n      <ContainerQuestionAnswers canEdit={props.canEdit} />\r\n      <br />\r\n\r\n      <Form.Group controlId=\"status\">\r\n        <Form.Label>Status</Form.Label>\r\n        <Select\r\n          id=\"status\"\r\n          name=\"status\"\r\n          options={statusOptions}\r\n          //onChange={formik.handleChange}\r\n          onChange={(e, value) => {\r\n            formik.setFieldValue('status', value)\r\n            .then(() => { if (isEdit) formik.submitForm()})\r\n          }}\r\n          value={formik.values.status}\r\n          disabled={isDisabled}\r\n        />\r\n        <Form.Text className=\"text-danger\">\r\n          {formik.touched.status && formik.errors.status ? (\r\n            <div className=\"text-danger\">{formik.errors.status}</div>\r\n          ) : null}\r\n        </Form.Text>\r\n      </Form.Group>\r\n\r\n      <br />\r\n      <Form.Group controlId=\"createdBy\">\r\n        <Form.Label>Created by:</Form.Label>\r\n        {' '}<UserName id={formik.values.createdBy} />\r\n      </Form.Group>\r\n\r\n      <Form.Group controlId=\"created\">\r\n        <Form.Label className=\"id\">Created:</Form.Label>\r\n        <span>{' '}{formik.values.created.toLocaleDateString()}</span>\r\n      </Form.Group>\r\n\r\n      {!isDisabled && !isEdit &&\r\n        <div className=\"buttons\">\r\n          {props.canEdit &&\r\n            <Button\r\n              variant=\"secondary\"\r\n              size=\"sm\"\r\n              onClick={() => {\r\n                props.cancel();\r\n                props.handleClose()\r\n              }}>\r\n              Cancel\r\n            </Button>}\r\n          {props.canEdit &&\r\n            <Button\r\n              variant=\"primary\"\r\n              size=\"sm\"\r\n              type='button'\r\n              onClick={() => {\r\n                formik.submitForm()\r\n              }\r\n            }\r\n            >\r\n              Save\r\n            </Button>}\r\n        </div>\r\n      }\r\n\r\n      {isDisabled && props.canEdit &&\r\n        <div className=\"buttons\">\r\n          <Button\r\n            variant=\"secondary\"\r\n            size=\"sm\"\r\n            onClick={() => {\r\n              props.editForm(formik.values, props.formMode);\r\n            }}>\r\n            Edit\r\n          </Button>\r\n        </div>\r\n      }\r\n    </Form>\r\n  );\r\n};\r\n\r\n\r\nexport const QuestionForm: React.FC<IQuestionFormProps> = (props: IQuestionFormProps) => {\r\n\r\n  const theme = useContext(ThemeContext);\r\n  const { darkMode, variant, bg } = theme.state;\r\n\r\n  return (\r\n    <Container className={`mb-1 ${darkMode ? \"dark\" : \"\"}`}>\r\n      <QuestForm {...props} />\r\n    </Container>\r\n  )\r\n}","import { connect } from 'react-redux';\r\n\r\nimport { IAppState } from '../../store/Store';\r\nimport { IQuestion } from '../types'\r\n\r\nimport { Dispatch } from 'redux';\r\n\r\nimport { QuestionActions,  \r\n\tupdateQuestion,\r\n\tcancelQuestion,\r\n\teditQuestion,\r\n\tstoreQuestion\r\n} from '../actions'\r\n\r\nimport { QuestionForm } from '../components/QuestionForm';\r\n\r\ninterface IProps {\r\n\tcanEdit: boolean,\r\n\thandleClose: () => void\r\n}\r\n\r\n// Grab the categories from the store and make them available on props\r\nconst mapStateToProps = (store: IAppState, ownProps: IProps ) => {\r\n\tconst {categoriesState, answerState } = store;\r\n\tconst { question, categoryOptions, formMode } = categoriesState; \r\n\tconst { answers } = answerState;\r\n\treturn {\r\n\t\tcategoryOptions,\r\n\t\tquestion: question!,\r\n\t\tanswers,\r\n\t\tformMode,\r\n\t\tcanEdit: ownProps.canEdit,\r\n\t\thandleClose: ownProps.handleClose\r\n\t};\r\n};\r\n\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch<QuestionActions>) => {\r\n\treturn {\r\n\t\teditForm: (question: IQuestion, formMode: string) => \r\n\t\t\tdispatch<any>(editQuestion(question.categoryId, question.questionId, true)),\r\n\t\tsaveForm: (question: IQuestion, formMode: string) => \r\n\t\tdispatch<any>(formMode==='add'\r\n\t\t\t? storeQuestion(question)\r\n\t\t\t: updateQuestion(question)\r\n\t\t),\r\n\t\tcancel: () => dispatch<any>(cancelQuestion())\r\n\t}\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(QuestionForm);\r\n\r\n","import { useContext } from 'react';\r\n\r\nimport { useHover } from '../../common/useHover'\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faWindowClose, faEdit } from '@fortawesome/free-solid-svg-icons'\r\nimport { Button, ListGroup } from 'react-bootstrap'\r\n\r\nimport { IQuestion } from '../types';\r\nimport { ThemeContext } from '../../ThemeContext';\r\n\r\n\r\ninterface IQuestionRowProps {\r\n\tquestion: IQuestion;\r\n\tonSelectQuestion: (categoryId: number, questionId: number) => void;\r\n\tedit: (categoryId: number, questionId: number, showQuestionForm: boolean) => void;\r\n\tremove: (categoryId: number, questionId: number) => void;\r\n}\r\n\r\nconst QuestionRow: React.FC<IQuestionRowProps> = (props: IQuestionRowProps) => {\r\n\r\n\tconst [hoverRef, hoverProps] = useHover();\r\n\r\n\tconst { question, onSelectQuestion, edit, remove } = props;\r\n\tconst { categoryId, questionId } = question;\r\n\r\n\tconst theme = useContext(ThemeContext);\r\n\tconst { darkMode, variant, bg } = theme.state;\r\n\r\n\treturn (\r\n\t\t<ListGroup.Item className=\"py-0\" variant={variant}>\r\n\t\t\t<div ref={hoverRef} className=\"d-flex justify-content-start align-items-center\">\r\n\t\t\t\t<Button\r\n\t\t\t\t\tstyle={{ fontSize: '13px' }}\r\n\t\t\t\t\tvariant='link'\r\n\t\t\t\t\tsize=\"sm\"\r\n\t\t\t\t\tclassName=\"py-0 px-1 text-decoration-none\"\r\n\t\t\t\t\tonClick={() => onSelectQuestion(categoryId, questionId)}>\r\n\t\t\t\t\t{question.text}\r\n\t\t\t\t</Button>\r\n\t\t\t\t{hoverProps.isHovered &&\r\n\t\t\t\t\t<Button\r\n\t\t\t\t\t\tvariant={variant}\r\n\t\t\t\t\t\tsize=\"sm\"\r\n\t\t\t\t\t\tclassName=\"py-0 px-1\"\r\n\t\t\t\t\t\tstyle={{ backgroundColor: 'transparent', borderWidth: '0' }}\r\n\t\t\t\t\t\ttitle=\"Edit\"\r\n\t\t\t\t\t\tonClick={() => edit(categoryId, questionId, true)}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<FontAwesomeIcon icon={faEdit} color={darkMode?'lightblue':'lightblue'} />\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t}\r\n\t\t\t\t{hoverProps.isHovered &&\r\n\t\t\t\t\t<Button\r\n\t\t\t\t\t\tvariant={variant}\r\n\t\t\t\t\t\tsize=\"sm\"\r\n\t\t\t\t\t\tclassName=\"py-0 px-1\"\r\n\t\t\t\t\t\tstyle={{ backgroundColor: 'transparent', borderWidth: '0' }}\r\n\t\t\t\t\t\ttitle=\"Remove\"\r\n\t\t\t\t\t\tonClick={() => remove(categoryId, questionId)}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<FontAwesomeIcon icon={faWindowClose} color={darkMode?'lightblue':'lightblue'} />\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t}\r\n\t\t\t</div>\r\n\t\t</ListGroup.Item>\r\n\t)\r\n}\r\n\r\nexport default QuestionRow\r\n\r\n","import { useContext } from 'react'\r\nimport { useHover } from '../../common/useHover'\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faWindowClose, faEdit, faCaretRight, faCaretDown, faPlus } from '@fortawesome/free-solid-svg-icons'\r\nimport { ThemeContext } from \"../../ThemeContext\";\r\nimport { Badge, Button, ListGroup } from 'react-bootstrap'\r\n\r\nimport { ICategory, IQuestion } from '../types';\r\nimport QuestionRow from './QuestionRow';\r\n\r\n\r\ninterface ICategoryRowProps {\r\n\tcategory: ICategory;\r\n\tquestions: IQuestion[];\r\n\ttoggleCategory: (categoryId: number) => void;\r\n\teditCategory: (categoryId: number) => void;\r\n\tremoveCategory: (categoryId: number) => void;\r\n\tonSelectCategory: (categoryId: number) => void;\r\n\tonSelectQuestion: (categoryId: number, questionId: number) => void;\r\n\tadd: (categoryId: number, text: string, canEdit?: boolean) => void;\r\n\tedit: (categoryId: number, questionId: number, showQuestionForm: boolean) => void;\r\n\tremove: (categoryId: number, questionId: number) => void;\r\n}\r\n\r\nconst CategoryRow: React.FC<ICategoryRowProps> = (props: ICategoryRowProps) => {\r\n\r\n\tconst [hoverRef, hoverProps] = useHover();\r\n\tconst { category, questions, toggleCategory, editCategory, removeCategory, onSelectCategory,\r\n\t\tonSelectQuestion, add, edit, remove } = props;\r\n\tconst { categoryId, title, isExpanded } = category;\r\n\r\n\tconst theme = useContext(ThemeContext);\r\n\tconst { darkMode, variant, bg } = theme.state;\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<ListGroup.Item\r\n\t\t\t\tvariant={variant}\r\n\t\t\t\tclassName=\"py-0 px-1\"\r\n\t\t\t\tas=\"li\"\r\n\t\t\t>\r\n\t\t\t\t<div ref={hoverRef} className=\"d-flex justify-content-start align-items-center\">\r\n\t\t\t\t\t<Button\r\n\t\t\t\t\t\tvariant='link'\r\n\t\t\t\t\t\tsize=\"sm\"\r\n\t\t\t\t\t\tclassName=\"py-0 px-1\"\r\n\t\t\t\t\t\tstyle={{ backgroundColor: 'transparent', borderWidth: '0' }}\r\n\t\t\t\t\t\tonClick={() => toggleCategory(categoryId)}\r\n\t\t\t\t\t\ttitle=\"Expand\"\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<FontAwesomeIcon icon={isExpanded ? faCaretDown : faCaretRight} color='orange' size='lg' />\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t\t<Button\r\n\t\t\t\t\t\tvariant='link'\r\n\t\t\t\t\t\tsize=\"sm\"\r\n\t\t\t\t\t\tclassName=\"py-0 mx-1 text-decoration-none\"\r\n\t\t\t\t\t\tonClick={() => onSelectCategory(categoryId)}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t{title}\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t\t<Badge bg=\"primary\" pill>\r\n\t\t\t\t\t\t{questions.length}\r\n\t\t\t\t\t</Badge>\r\n\t\t\t\t\t<Button\r\n\t\t\t\t\t\tvariant={variant}\r\n\t\t\t\t\t\tsize=\"lg\"\r\n\t\t\t\t\t\tclassName=\"py-0 px-1\"\r\n\t\t\t\t\t\tstyle={{ backgroundColor: 'transparent', borderWidth: '0' }}\r\n\t\t\t\t\t\ttitle=\"Add a new Question\"\r\n\t\t\t\t\t\tonClick={() => add(category.categoryId, '', true)}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<FontAwesomeIcon icon={faPlus} size='xs' color='orange' />\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t\t{hoverProps.isHovered &&\r\n\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\tvariant={variant}\r\n\t\t\t\t\t\t\tsize=\"sm\"\r\n\t\t\t\t\t\t\tclassName=\"py-0 px-1\"\r\n\t\t\t\t\t\t\tstyle={{ backgroundColor: 'transparent', borderWidth: '0' }}\r\n\t\t\t\t\t\t\ttitle=\"Edit Category\"\r\n\t\t\t\t\t\t\tonClick={() => editCategory(categoryId)}>\r\n\t\t\t\t\t\t\t<FontAwesomeIcon icon={faEdit} color='lightblue' />\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t}\r\n\t\t\t\t\t{hoverProps.isHovered && questions.length === 0 &&\r\n\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\tsize=\"sm\"\r\n\t\t\t\t\t\t\tclassName=\"py-0 px-1\"\r\n\t\t\t\t\t\t\tstyle={{ backgroundColor: 'transparent', borderWidth: '0' }}\r\n\t\t\t\t\t\t\ttitle=\"Remove Category\"\r\n\t\t\t\t\t\t\tonClick={() => removeCategory(categoryId)}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<FontAwesomeIcon icon={faWindowClose} color='lightblue' />\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t}\r\n\t\t\t\t</div>\r\n\t\t\t</ListGroup.Item>\r\n\r\n\t\t\t{isExpanded &&\r\n\t\t\t\t<ListGroup.Item className=\"py-0\" variant={variant}>\r\n\t\t\t\t\t<ListGroup as=\"ul\" variant={variant} className=\"inner-list\">\r\n\t\t\t\t\t\t{questions.map(question =>\r\n\t\t\t\t\t\t\t<QuestionRow\r\n\t\t\t\t\t\t\t\tkey={question.questionId}\r\n\t\t\t\t\t\t\t\tquestion={question}\r\n\t\t\t\t\t\t\t\tonSelectQuestion={onSelectQuestion}\r\n\t\t\t\t\t\t\t\tedit={edit}\r\n\t\t\t\t\t\t\t\tremove={remove}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t</ListGroup>\r\n\t\t\t\t</ListGroup.Item>\r\n\t\t\t}\r\n\t\t</>\r\n\t)\r\n}\r\n\r\nexport default CategoryRow\r\n\r\n","import { useRef, useContext } from 'react'\r\nimport { faPlus } from '@fortawesome/free-solid-svg-icons'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nimport { ThemeContext } from \"../../ThemeContext\";\r\n\r\nimport { ICategoryListProps } from '../types'\r\n\r\nimport CategoryRow from './CategoryRow';\r\n\r\nimport { ListGroup } from 'react-bootstrap';\r\n\r\nconst CategoryList: React.FC<ICategoryListProps> = (props: ICategoryListProps) => {\r\n\r\n\tconst theme = useContext(ThemeContext);\r\n\tconst { darkMode, variant, bg } = theme.state;\r\n\r\n\tconst { categories, categoryMap,\r\n\t\tonSelectCategory, onSelectQuestion, add, edit, remove, \r\n\t\taddCategory, toggleCategory, editCategory, removeCategory } = props;\r\n\r\n\r\n\tconst inputEl = useRef<HTMLInputElement>(null);\r\n\tsetTimeout(() => {\r\n\t\tif (inputEl.current !== null) {\r\n\t\t\tinputEl.current!.select();\r\n\t\t\tinputEl.current!.focus()\r\n\t\t}\r\n\t}, 100)\r\n\r\n\t// const expandCategory = (categoryId: number): void => {\r\n\t// \tconst div = document.querySelector<HTMLDivElement>(\"#divCategory\" + categoryId);\r\n\t// \tconsole.log(div)\r\n\t// \tdiv!.style.display = 'block';\r\n\t// }\r\n\r\n\tconsole.log('RENDERUJEM Categories ----------->>>>>>>>>>')\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<h5>Categories{' '}\r\n\t\t\t\t<button className=\"button-add-category button-edit\" title=\"Add a new Category\" onClick={() => addCategory()}>\r\n\t\t\t\t\t<FontAwesomeIcon icon={faPlus} size='xs' color='lightblue' />\r\n\t\t\t\t</button>\r\n\t\t\t</h5>\r\n\r\n\t\t\t<ListGroup as=\"ul\" variant={variant}>\r\n\t\t\t\t{categories.map(category => {\r\n\t\t\t\t\tconst { categoryId, title, isExpanded } = category;\r\n\t\t\t\t\tconst categoryState = categoryMap.get(categoryId);\r\n\t\t\t\t\tconst { questions } = categoryState!;\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\t// {categoryIdEditing === categoryId &&\r\n\t\t\t\t\t\t// \t<input ref={inputEl} name=\"groupTitle\" type=\"text\"\r\n\t\t\t\t\t\t// \t\tonBlur={(e) => updateCategory({ ...category, title: e.target.value })}\r\n\t\t\t\t\t\t// \t\tdefaultValue={title}\r\n\t\t\t\t\t\t// \t/>\r\n\t\t\t\t\t\t// }\r\n\t\t\t\t\t\t// {categoryIdEditing !== categoryId && (\r\n\t\t\t\t\t\t<CategoryRow\r\n\t\t\t\t\t\t\tkey={category.categoryId}\r\n\t\t\t\t\t\t\tcategory={category}\r\n\t\t\t\t\t\t\tquestions={questions}\r\n\t\t\t\t\t\t\tonSelectCategory={onSelectCategory}\r\n\t\t\t\t\t\t\ttoggleCategory={toggleCategory}\r\n\t\t\t\t\t\t\teditCategory={editCategory}\r\n\t\t\t\t\t\t\tremoveCategory={removeCategory}\r\n\t\t\t\t\t\t\tonSelectQuestion={onSelectQuestion}\r\n\t\t\t\t\t\t\tadd={add}\r\n\t\t\t\t\t\t\tedit={edit}\r\n\t\t\t\t\t\t\tremove={remove}\r\n\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t// )}\r\n\r\n\t\t\t\t\t);\r\n\t\t\t\t})\r\n\t\t\t\t}\r\n\t\t\t</ListGroup>\r\n\t\t</>\r\n\t)\r\n}\r\n\r\nexport default CategoryList","import { connect } from 'react-redux';\r\n\r\nimport { IAppState } from '../../store/Store';\r\nimport { ICategory } from '../types'\r\nimport { IAnswer } from '../../Answers/types'\r\n\r\nimport { Dispatch } from 'redux';\r\n\r\nimport { QuestionActions,  \r\n\tgetQuestion, \r\n\taddQuestion, \r\n\teditQuestion,\r\n\tremoveQuestion,\r\n\tcloseQuestionForm,\r\n\topenQuestionForm,\r\n\taddCategory,\r\n\teditCategory,\r\n\tremoveCategory,\r\n\tstoreCategory,\r\n\tupdateCategory,\r\n\taddAndAssignNewAnswer,\r\n\ttoggleCategory,\r\n\tgetCategory,\r\n\tcategoryOptions\r\n} from '../actions'\r\n\r\nimport CategoryList from '../components/CategoryList'\r\n\r\ninterface IProps {\r\n\tcanEdit: boolean\r\n}\r\n\r\n// Grab the categories from the store and make them available on props\r\nconst mapStateToProps = (store: IAppState, ownProps: IProps ) => {\r\n\tconst {categoriesState, tagState, topState} = store;\r\n\t\r\n\tconst { \r\n\t\tcategories,\r\n\t\tcategoryMap,\r\n\t\tshowCategoryForm,\r\n\t\tcategory,\r\n\t\tshowQuestionForm,\r\n\t\tquestion,\r\n\t\tcategoryOptions,\r\n\t\tformMode,\r\n\t\tcategoryIdEditing\r\n\t} = categoriesState;\r\n\r\n\treturn {\r\n\t\tcategories,\r\n\t\tcategoryMap,\r\n\t\tcategoryOptions,\r\n\t\tshowCategoryForm,\r\n\t\tcategory,\r\n\t\tshowQuestionForm,\r\n\t\tquestion,\r\n\t\tformMode,\r\n\t\tcategoryIdEditing,\r\n\t\tcanEdit: ownProps.canEdit,\r\n\t\ttagOptions: tagState.tags.map(f => ({ label: f.name, value: f.tagId, color: f.color })),\r\n\t\tauth: topState.top.auth\r\n\t};\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch<QuestionActions>) => {\r\n\treturn {\r\n\t\tonSelectQuestion: (categoryId: number, questionId: number) => {\r\n\t\t\tdispatch<any>(getQuestion(categoryId, questionId));\r\n\t\t\tdispatch<any>(openQuestionForm());\r\n\t\t},\r\n\t\tadd: (categoryId: number, text: string, canEdit?: boolean) => {\r\n\t\t\tdispatch<any>(addQuestion(categoryId, text, canEdit))\r\n\t\t\tdispatch<any>(openQuestionForm());\r\n\t\t},\r\n\t\t//edit: (categoryId: number, questionId: number) => dispatch<any>(editQuestion(categoryId, questionId)),\r\n\t\tedit: (categoryId: number, questionId: number, showQuestionForm: boolean) => dispatch<any>(editQuestion(categoryId, questionId, showQuestionForm)),\r\n\t\tremove: (categoryId: number, questionId: number) => dispatch<any>(removeQuestion(categoryId, questionId)),\r\n\t\tcloseQuestionForm: () => dispatch<any>(closeQuestionForm()),\r\n\t\topenQuestionForm: () => dispatch<any>(openQuestionForm()),\r\n\r\n\t\t// question answer\r\n\t\taddAndAssignNewAnswer: (categoryId: number, questionId: number, answer: IAnswer, formMode: string) => {\r\n\t\t\tdispatch<any>(addAndAssignNewAnswer(categoryId, questionId, answer, formMode))\r\n\t\t},\r\n\t\t// groups\r\n\t\tonSelectCategory: (categoryId: number) => dispatch<any>(getCategory(categoryId, true)),\r\n\t\taddCategory: () => dispatch<any>(addCategory()),\r\n\t\ttoggleCategory: (categoryId: number) =>  dispatch<any>(toggleCategory(categoryId)),\r\n\t\teditCategory: (categoryId: number) =>  dispatch<any>(editCategory(categoryId)),\r\n\t\tremoveCategory: (categoryId: number) => dispatch<any>(removeCategory(categoryId)).then(() => dispatch(categoryOptions())),\r\n\t\tstoreCategory: (group: ICategory) => dispatch<any>(storeCategory(group)).then(() => dispatch(categoryOptions())),\r\n\t\tupdateCategory: (group: ICategory) => dispatch<any>(updateCategory(group)).then(() => dispatch(categoryOptions()))\r\n\t}\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CategoryList)\r\n","import * as React from 'react';\r\nimport { useRef, useContext, useEffect } from 'react'\r\n\r\nimport { ICategoriesProps } from '../types'\r\n\r\nimport { AutoSuggest } from '../../components/AutoSuggest';\r\nimport ContainerCategoryForm from '../containers/ContainerCategoryForm';\r\nimport ContainerQuestionForm from '../containers/ContainerQuestionForm';\r\nimport { useParams } from 'react-router-dom' // useRouteMatch\r\nimport { ThemeContext } from \"../../ThemeContext\";\r\n\r\nimport { Col, Container, Row } from 'react-bootstrap';\r\nimport ContainerCategoryList from '../containers/ContainerCategoryList';\r\n\r\ntype SupportParams = {\r\n\ttekst: string;\r\n};\r\n\r\nconst Page: React.FC<ICategoriesProps> = (props: ICategoriesProps) => {\r\n\r\n\tlet { tekst } = useParams<SupportParams>();\r\n\r\n\tconst {\r\n\t\tcategories,\r\n\t\tcategoryMap,\r\n\t\tshowCategoryForm,\r\n\t\tcategory,\r\n\t\tshowQuestionForm,\r\n\t\tquestion,\r\n\t\tformMode,\r\n\t\tcanEdit,\r\n\t\tonSelectQuestion } = props;\r\n\r\n\t// const open = categories && (category || question)\r\n\r\n\tconst inputEl = useRef<HTMLInputElement>(null);\r\n\tsetTimeout(() => {\r\n\t\tif (inputEl.current !== null) {\r\n\t\t\tinputEl.current!.select();\r\n\t\t\tinputEl.current!.focus()\r\n\t\t}\r\n\t}, 100)\r\n\r\n\tconsole.log('RENDERUJEM Categories ----------->>>>>>>>>>')\r\n\r\n\tconst theme = useContext(ThemeContext);\r\n\tconst { darkMode, variant, bg } = theme.state;\r\n\r\n\treturn (\r\n\t\t<Container fluid>\r\n\t\t\t<Row className={`${darkMode ? \"dark\" : \"light\"}`}>\r\n\t\t\t\t<Col md={7}>\r\n\t\t\t\t\t<div style={{ border: '0px solid silver' }}>\r\n\t\t\t\t\t\t<AutoSuggest\r\n\t\t\t\t\t\t\tcategories={categories}\r\n\t\t\t\t\t\t\tcategoryMap={categoryMap}\r\n\t\t\t\t\t\t\ttekst={tekst}\r\n\t\t\t\t\t\t\tonSelectQuestion={(categoryId: number, questionId: number) => onSelectQuestion(categoryId, questionId, canEdit)}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<hr />\r\n\t\t\t\t\t\t{/* <h3>Categories</h3> */}\r\n\t\t\t\t\t\t{categories &&\r\n\t\t\t\t\t\t\t<ContainerCategoryList {...props} />\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</Col>\r\n\t\t\t\t<Col md={5}>\r\n\t\t\t\t\t<div\r\n\t\t\t\t\t\tclassName={`${darkMode ? \"dark\" : \"light\"}`}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t{showCategoryForm && category &&\r\n\t\t\t\t\t\t\t<div style={{ border: '1px solid silver', borderRadius: '5px', padding: '5px 5px 15px 5px' }}>\r\n\t\t\t\t\t\t\t\t<h4 style={{ marginTop: 0 }}>Category</h4>\r\n\t\t\t\t\t\t\t\t<ContainerCategoryForm canEdit={formMode === 'display' ? false : canEdit} handleClose={()=>{}} />\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t{showQuestionForm &&\r\n\t\t\t\t\t\t\t<div style={{ border: '1px solid silver', borderRadius: '5px', padding: '5px 5px 15px 5px'}}> \r\n\t\t\t\t\t\t\t\t<h4 style={{ marginTop: 0 }}>Question</h4>\r\n\t\t\t\t\t\t\t\t<ContainerQuestionForm canEdit={formMode === 'display' ? false : canEdit} handleClose={() => { }} />\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</Col>\r\n\t\t\t\t{/* </Collapse> */}\r\n\t\t\t</Row>\r\n\t\t</Container>\r\n\t);\r\n}\r\n\r\nexport default Page;","import React, { useState, useContext } from 'react';\r\nimport { useParams } from 'react-router-dom' // useRouteMatch\r\n\r\nimport { ICategoriesProps } from '../types';\r\n\r\nimport { AutoSuggest } from '../../components/AutoSuggest';\r\nimport ContainerQuestionForm from '../containers/ContainerQuestionForm'\r\nimport { ThemeContext } from \"../../ThemeContext\";\r\n\r\nimport { faPlus } from '@fortawesome/free-solid-svg-icons'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport { Col, Container, Row } from 'react-bootstrap';\r\nimport ContainerCategoryForm from '../containers/ContainerCategoryForm';\r\n\r\ntype SupportParams = {\r\n\ttekst: string;\r\n};\r\n\r\nconst SupportPage: React.FC<ICategoriesProps> = (props: ICategoriesProps) => {\r\n\tlet { tekst } = useParams<SupportParams>();\r\n\tconst { categories, categoryMap, category, question, showQuestionForm, onSelectQuestion, add, canEdit, formMode, addCategory } = props;\r\n\r\n\tconst [show, setShow] = useState(false);\r\n\tconst handleClose = () => setShow(false);\r\n\t\r\n\tconst [showCategory, setShowCategory] = useState(false);\r\n\tconst handleCloseCategory = (isCancel: boolean) => {\r\n\t\tif (category && category.categoryId !== 0) {\r\n\t\t\tsetShowCategory(false);\r\n\t\t\tif (!isCancel) {\r\n\t\t\t\tadd(category.categoryId, tekst ?? '', true); \r\n\t\t\t\tsetShow(true);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tconst open = categories && (category || question)\r\n\r\n\tconst theme = useContext(ThemeContext);\r\n\tconst { darkMode, variant, bg } = theme.state;\r\n\r\n\treturn (\r\n\t\t<Container fluid>\r\n\t\t\t<Row className={`${darkMode ? \"dark\" : \"\"}`}>\r\n\t\t\t\t<Col md={open ? 6 : 12} lg={open ? 6 : 12}>\r\n\t\t\t\t\t<div style={{ display: 'flex', alignItems: 'center' }}>\r\n\t\t\t\t\t\t<AutoSuggest\r\n\t\t\t\t\t\t\tcategories={categories}\r\n\t\t\t\t\t\t\tcategoryMap={categoryMap}\r\n\t\t\t\t\t\t\ttekst={tekst}\r\n\t\t\t\t\t\t\tonSelectQuestion={(categoryId: number, questionId: number) => onSelectQuestion(categoryId, questionId, canEdit)}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\tvariant={variant}\r\n\t\t\t\t\t\t\tclassName=\"button-edit\"\r\n\t\t\t\t\t\t\ttitle=\"Create a new Question\"\r\n\t\t\t\t\t\t\tonClick={() => { \r\n\t\t\t\t\t\t\t\tif (categories.length === 0) {\r\n\t\t\t\t\t\t\t\t\taddCategory(); \r\n\t\t\t\t\t\t\t\t\tsetShowCategory(true);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\t\tadd(0, tekst ?? '', true); \r\n\t\t\t\t\t\t\t\t\tsetShow(true); \r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<FontAwesomeIcon icon={faPlus} size=\"lg\" />\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</Col>\r\n\t\t\t</Row>\r\n\t\t\t<Row>\r\n\t\t\t\t<Col md={open ? 6 : 12} lg={open ? 6 : 12}>\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t{categories && question && showQuestionForm &&\r\n\t\t\t\t\t\t\t<div style={{ border: '1px solid silver', borderRadius: '5px', padding: '5px 5px 15px 5px' }}>\r\n\t\t\t\t\t\t\t\t<h4 style={{ textAlign: 'center' }}>Question</h4>\r\n\t\t\t\t\t\t\t\t<ContainerQuestionForm canEdit={canEdit} handleClose={() => { }} />\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</Col>\r\n\t\t\t</Row>\r\n\t\t\t<Modal show={showCategory} animation={true} size=\"sm\" centered\r\n\t\t\t\tclassName={`${darkMode ? \"dark\" : \"\"}`}\r\n\t\t\t\tcontentClassName={`${darkMode ? \"dark\" : \"\"}`}>\r\n\t\t\t\t<Modal.Header closeButton>\r\n\t\t\t\t\t<Modal.Title>First create Category</Modal.Title>\r\n\t\t\t\t</Modal.Header>\r\n\t\t\t\t<Modal.Body>\r\n\t\t\t\t\t<ContainerCategoryForm canEdit={formMode === 'display' ? false : canEdit} handleClose={handleCloseCategory} />\r\n\t\t\t\t</Modal.Body>\r\n\t\t\t\t{/* <Modal.Footer>\r\n\t\t\t\t\t<Button variant=\"secondary\" onClick={handleClose}>\r\n\t\t\t\t\t\tClose\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t\t<Button variant=\"primary\" onClick={handleClose}>\r\n\t\t\t\t\t\tSave Changes\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t</Modal.Footer> */}\r\n\t\t\t</Modal>\r\n\t\t\t<Modal show={show} onHide={handleClose} animation={true} size=\"sm\" centered\r\n\t\t\t\tclassName={`${darkMode ? \"dark\" : \"\"}`}\r\n\t\t\t\tcontentClassName={`${darkMode ? \"dark\" : \"\"}`}>\r\n\t\t\t\t<Modal.Header closeButton>\r\n\t\t\t\t\t<Modal.Title>Store question</Modal.Title>\r\n\t\t\t\t</Modal.Header>\r\n\t\t\t\t<Modal.Body>\r\n\t\t\t\t\t<ContainerQuestionForm canEdit={canEdit} handleClose={handleClose} />\r\n\t\t\t\t</Modal.Body>\r\n\t\t\t\t{/* <Modal.Footer>\r\n\t\t\t\t\t<Button variant=\"secondary\" onClick={handleClose}>\r\n\t\t\t\t\t\tClose\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t\t<Button variant=\"primary\" onClick={handleClose}>\r\n\t\t\t\t\t\tSave Changes\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t</Modal.Footer> */}\r\n\t\t\t</Modal>\r\n\t\t</Container>\r\n\r\n\t);\r\n}\r\n\r\nexport default SupportPage\r\n\r\n","import { connect } from 'react-redux';\r\n\r\nimport { IAppState } from '../../store/Store';\r\n\r\nimport { Dispatch } from 'redux';  // ActionCreatorsMapObject, \r\n\r\nimport { QuestionActions,  \r\n\tgetQuestion, \r\n\taddQuestion, \r\n\tcloseQuestionForm,\r\n\topenQuestionForm,\r\n\teditQuestion,\r\n\taddCategory,\r\n} from '../actions'\r\n\r\nimport CategoriesPage from '../components/CategoriesPage'\r\nimport SupportPage from '../components/SuportPage'\r\n\r\ninterface IProps {\r\n\tcanEdit: boolean\r\n}\r\n\r\n// Grab the categories from the store and make them available on props\r\nconst mapStateToProps = (store: IAppState, ownProps: IProps ) => {\r\n\tconst {categoriesState, tagState, topState} = store;\r\n\t\r\n\tconst { \r\n\t\tcategories,\r\n\t\tcategoryMap,\r\n\t\tshowCategoryForm,\r\n\t\tcategory,\r\n\t\tshowQuestionForm,\r\n\t\tquestion,\r\n\t\tcategoryOptions,\r\n\t\tformMode,\r\n\t\tcategoryIdEditing,\r\n\t} = categoriesState;\r\n\r\n\treturn {\r\n\t\tcategories,\r\n\t\tcategoryMap,\r\n\t\tcategoryOptions,\r\n\t\tshowCategoryForm,\r\n\t\tcategory,\r\n\t\tshowQuestionForm,\r\n\t\tquestion,\r\n\t\tformMode,\r\n\t\tcategoryIdEditing,\r\n\t\tcanEdit: ownProps.canEdit,\r\n\t\ttagOptions: tagState.tags.map(f => ({ label: f.name, value: f.tagId, color: f.color })),\r\n\t\tauth: topState.top.auth\r\n\t};\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch<QuestionActions>) => {\r\n\treturn {\r\n\t\tonSelectQuestion: (categoryId: number, questionId: number, canEdit: boolean) => {\r\n\t\t\tdispatch<any>(canEdit?editQuestion(categoryId, questionId):getQuestion(categoryId, questionId));\r\n\t\t\tdispatch<any>(openQuestionForm());\r\n\t\t},\r\n\t\tadd: (categoryId: number, text: string, canEdit?: boolean) => dispatch<any>(addQuestion(categoryId, text, canEdit)),\r\n\t\taddCategory: () => dispatch<any>(addCategory()),\r\n\t\tcloseQuestionForm: () => dispatch<any>(closeQuestionForm())\r\n\t}\r\n}\r\n\r\n\r\nexport default {\r\n\tcategories: connect(mapStateToProps, mapDispatchToProps)(CategoriesPage),\r\n\tsupporter: connect(mapStateToProps, mapDispatchToProps)(SupportPage)\r\n};","import * as React from 'react';\r\n\r\nimport containers from '../Categories/containers/ContainerCategoriesPage'\r\n\r\n// type TParams = { id: string };\r\n\r\n// function Product({ match }: RouteComponentProps<TParams>) {\r\n//   return <h2>This is a page for product with ID: {match.params.id} </h2>;\r\n// }\r\n\r\ninterface IMyProps {\r\n  canEdit: boolean;\r\n}\r\n\r\nconst Support: React.FC<IMyProps> = (props: IMyProps) => { \r\n  return (\r\n      <containers.supporter canEdit={props.canEdit} handleClose={()=>{}} />\r\n  );\r\n};\r\n\r\nexport default Support;","import * as React from 'react';\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faWindowClose, faEdit } from '@fortawesome/free-solid-svg-icons'\r\n\r\nimport { IAnswer } from '../types';\r\nimport { IQuestionAnswer } from '../../Categories/types';\r\n\r\ninterface IProps {\r\n\tanswer: IAnswer,\r\n\tusedAnswers: IQuestionAnswer[],\r\n\tgetCategoryQuestion: (categoryId: number, questionId: number) => string,\r\n\tedit: (answerId: number) => void;\r\n\tremove: (answerId: number) => void;\r\n}\r\n\r\nexport const ListRow: React.FC<IProps> = (props: IProps) => {\r\n\tconst { answer, usedAnswers, getCategoryQuestion, edit, remove } = props;\r\n\treturn (\r\n\t\t<tr key={answer.answerId} >\r\n\t\t\t<td>\r\n\t\t\t\t{answer.answerId}\r\n\t\t\t</td>\r\n\t\t\t<td>\r\n\t\t\t\t{answer.text}\r\n\t\t\t</td>\r\n\t\t\t<td>\r\n\t\t\t\t<button\r\n\t\t\t\t\tclassName=\"button-edit\"\r\n\t\t\t\t\ttitle=\"Add a new Answer\"\r\n\t\t\t\t\tonClick={() => edit(answer.answerId)}>\r\n\t\t\t\t\t<FontAwesomeIcon icon={faEdit} color='lightblue' />\r\n\t\t\t\t</button>\r\n\t\t\t</td>\r\n\t\t\t<td>\r\n\t\t\t\t<button\r\n\t\t\t\t\tclassName=\"button-remove\"\r\n\t\t\t\t\ttitle=\"Remove Answer\"\r\n\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\tconst qa = usedAnswers.find(a => a.answerId === answer.answerId);\r\n\t\t\t\t\t\tif (qa)\r\n\t\t\t\t\t\t\talert(`Answer is assigned to the question: \\n\"${getCategoryQuestion(qa.categoryId!, qa.questionId!)}\". \\nFirst unassign answer from question!`)\r\n\t\t\t\t\t\telse\r\n\t\t\t\t\t\t\tremove(answer.answerId)\r\n\t\t\t\t\t}\r\n\t\t\t\t\t}>\r\n\t\t\t\t\t<FontAwesomeIcon icon={faWindowClose} color='lightblue' />\r\n\t\t\t\t</button>\r\n\t\t\t</td>\r\n\t\t</tr>\r\n\t);\r\n}\r\n\r\n","import * as React from 'react';\r\nimport { useContext } from 'react';\r\nimport { Table } from 'react-bootstrap';\r\nimport { IQuestionAnswer } from '../../Categories/types';\r\nimport { ThemeContext } from '../../ThemeContext';\r\n\r\nimport { IAnswer } from '../types';\r\nimport { ListRow } from './ListRow';\r\n\r\ninterface IProps {\r\n\tanswers: IAnswer[],\r\n\tusedAnswers: IQuestionAnswer[],\r\n\tgetCategoryQuestion: (categoryId: number, questionId: number) => string,\r\n\tedit: (answerId: number) => void;\r\n\tremove: (answerId: number) => void;\r\n}\r\n\r\nconst List: React.FC<IProps> = (props: IProps) => {\r\n\tconst { answers, usedAnswers, getCategoryQuestion, edit, remove } = props;\r\n\r\n\tconst theme = useContext(ThemeContext);\r\n\tconst { darkMode, variant, bg } = theme.state;\r\n\r\n\treturn (\r\n\t\t<Table variant={variant} responsive striped bordered hover size=\"sm\">\r\n\t\t\t<thead>\r\n\t\t\t\t<tr>\r\n\t\t\t\t\t<th>Id</th>\r\n\t\t\t\t\t<th>Answer</th>\r\n\t\t\t\t\t<th></th>\r\n\t\t\t\t\t<th></th>\r\n\t\t\t\t</tr>\r\n\t\t\t</thead>\r\n\t\t\t<tbody>\r\n\t\t\t\t{ answers.map(answer => \r\n\t\t\t\t\t<ListRow\r\n\t\t\t\t\t\tkey={answer.answerId}\r\n\t\t\t\t\t\tanswer={answer}\r\n\t\t\t\t\t\tusedAnswers={usedAnswers}\r\n\t\t\t\t\t\tgetCategoryQuestion={getCategoryQuestion}\r\n\t\t\t\t\t\tedit={edit}\r\n\t\t\t\t\t\tremove={remove}\r\n\t\t\t\t\t/>\r\n\t\t\t\t)}\r\n\t\t\t</tbody>\r\n\t\t</Table>\r\n\t);\r\n  }\r\n\r\nexport default List\r\n\r\n","import { useContext } from 'react';\r\nimport { useParams } from 'react-router-dom' // useRouteMatch\r\nimport { ThemeContext } from \"../../ThemeContext\";\r\n\r\nimport { IAnswer } from '../types';\r\nimport { AnswerForm } from './Form'\r\nimport List from './List';\r\nimport { IQuestionAnswer } from '../../Categories/types';\r\nimport { Button, Col, Container, Row } from 'react-bootstrap';\r\n\r\ninterface IProps {\r\n\tanswers: IAnswer[],\r\n\tanswer: IAnswer,\r\n\tusedAnswers: IQuestionAnswer[],\r\n\tgetCategoryQuestion: (categoryId: number, questionId: number) => string,\r\n\tformMode: string,\r\n\tadd: () => void;\r\n\tedit: (answerId: number) => void;\r\n\tremove: (answerId: number) => void;\r\n\tcancel: () => void;\r\n\tsaveForm: (answer: IAnswer, formMode: string) => void;\r\n}\r\n\r\ntype MyParams = {\r\n\tslug: string;\r\n};\r\n\r\nconst Page: React.FC<IProps> = (props: IProps) => {\r\n\t// let { slug } = useParams<MyParams>();\r\n\r\n\tconst theme = useContext(ThemeContext);\r\n\tconst { darkMode, variant, bg } = theme.state;\r\n\r\n\t// slug = ''\r\n\tconst { answers, answer, usedAnswers, getCategoryQuestion, formMode, add, edit, remove, cancel, saveForm } = props;\r\n\treturn (\r\n\t\t<Container fluid>\r\n\t\t\t<Row className={`${darkMode ? \"dark\" : \"light\"}`}>\r\n\t\t\t\t<Col md={7}>\r\n\t\t\t\t\t<div className={`${darkMode ? \"dark\" : \"\"}`}>\r\n\t\t\t\t\t\t<Button variant=\"primary\" onClick={() => add()} className=\"mb-1\">Add new</Button>\r\n\t\t\t\t\t\t{answers.length === 0 ? (\r\n\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t{'No answers at all  '}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t: (\r\n\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t<List\r\n\t\t\t\t\t\t\t\t\t\tanswers={answers}\r\n\t\t\t\t\t\t\t\t\t\tusedAnswers={usedAnswers}\r\n\t\t\t\t\t\t\t\t\t\tgetCategoryQuestion={getCategoryQuestion}\r\n\t\t\t\t\t\t\t\t\t\tedit={edit}\r\n\t\t\t\t\t\t\t\t\t\tremove={remove} />\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</Col>\r\n\t\t\t\t<Col md={5}>\r\n\t\t\t\t\t<div className={`${darkMode ? \"dark\" : \"light\"}`}>\r\n\t\t\t\t\t\t{answer &&\r\n\t\t\t\t\t\t\t<div style={{ border: '1px solid silver', borderRadius: '5px', padding: '5px 5px 15px 5px' }}>\r\n\t\t\t\t\t\t\t\t<h4>\r\n\t\t\t\t\t\t\t\t\t{formMode === 'add' ? 'New Answer' : 'Answer'}\r\n\t\t\t\t\t\t\t\t</h4>\r\n\t\t\t\t\t\t\t\t<AnswerForm\r\n\t\t\t\t\t\t\t\t\tanswer={answer}\r\n\t\t\t\t\t\t\t\t\tformMode={formMode}\r\n\t\t\t\t\t\t\t\t\tcancel={cancel}\r\n\t\t\t\t\t\t\t\t\tsaveForm={(answer: IAnswer) => saveForm(answer, formMode)}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t</Col>\r\n\t\t\t</Row>\r\n\t\t</Container>\r\n\t);\r\n}\r\n\r\nexport default Page\r\n\r\n","import { connect } from 'react-redux';\r\nimport { Dispatch } from 'redux';\r\n\r\nimport { IAppState } from '../../store/Store';\r\n\r\nimport { AnswerActions,  addAnswer, editAnswer, removeAnswer, storeAnswer, cancelAnswer } from '../actions' // , IAddAnswer\r\n\r\nimport { IAnswer } from '../types'\r\n\r\nimport Page from '../components/Page'\r\nimport { IQuestionAnswer, ICategoriesState } from '../../Categories/types';\r\n\r\nconst getUsedAnswers = (categoriesState: ICategoriesState) : IQuestionAnswer[]=> {\r\n\tconst { categories, categoryMap } = categoriesState;\r\n\tlet questionAnswers: IQuestionAnswer[] = [];\r\n\tfor (let category of categories) {\r\n\t\tconst categoryState = categoryMap.get(category.categoryId)!;\r\n\t\tfor (let question of categoryState.questions) {\r\n\t\t\tconst arr = question.answers.map(a => ({\r\n\t\t\t\t...a,\r\n\t\t\t\tcategoryId: category.categoryId,\r\n\t\t\t\tquestionId: question.questionId\r\n\t\t\t}))\r\n\t\t\tquestionAnswers = questionAnswers.concat(arr)\r\n\t\t}\r\n\t}\r\n\treturn questionAnswers;\r\n}\r\n\r\nconst getCategoryQuestion = (categoriesState: ICategoriesState, categoryId: number, questionId: number) : string => {\r\n\tconst { categories, categoryMap } = categoriesState;\r\n\tconst category = categories.find( g => g.categoryId === categoryId);\r\n\tconst categoryState = categoryMap.get(category!.categoryId)!;\r\n\tconst question = categoryState.questions.find(q => q.questionId === questionId);\r\n\treturn `${category!.title}/${question!.text}`;\r\n\r\n}\r\n\r\nconst mapStateToProps = (store: IAppState) => {\r\n  return {\r\n\tanswers: store.answerState.answers,\r\n\tanswer: store.answerState.answer!,\r\n\tformMode: store.answerState.formMode,\r\n\tusedAnswers: getUsedAnswers(store.categoriesState),\r\n\tgetCategoryQuestion: (categoryId: number, questionId: number): string => getCategoryQuestion(store.categoriesState, categoryId, questionId),\r\n\twho: store.topState.top.auth!.who\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch<AnswerActions>) => {\r\n\treturn {\r\n\t\t//setFormMode: (formMode: string) => dispatch<any>(setFormMode(formMode)),\r\n\t\tadd: () => dispatch<any>(addAnswer()),\r\n\t\tedit: (answerId: number) => dispatch<any>(editAnswer(answerId)),\r\n\t\tremove: (answerId: number) => dispatch<any>(removeAnswer(answerId)),\r\n\t\tsaveForm: (answer: IAnswer, formMode: string) => dispatch<any>(storeAnswer(answer, formMode)),\r\n\t\tcancel: () => dispatch<any>(cancelAnswer()),\r\n\t}\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Page);","import React, { useContext } from 'react';\r\nimport { useFormik } from 'formik';\r\nimport * as Yup from 'yup'\r\n\r\nimport { Select } from '../../common/Select';\r\nimport { IFormProps } from '../types'\r\nimport UserName from '../../common/containers/UserName';\r\n\r\nimport { Button, Container, Form } from \"react-bootstrap\";\r\nimport { ThemeContext } from '../../ThemeContext';\r\n\r\nconst UsrForm: React.FC<IFormProps> = (props: IFormProps) => {\r\n  const { userEditing, auth } = props;\r\n  const { who } = auth!;\r\n  const { roleId, userId, userName, pwd, department, createdBy, created } = userEditing!;\r\n  const formik = useFormik({\r\n    enableReinitialize: true,\r\n    initialValues: {\r\n      roleId,\r\n      userId,\r\n      userName,\r\n      pwd,\r\n      department,\r\n      createdBy,\r\n      created\r\n    },\r\n    validationSchema: Yup.object({\r\n      roleId: Yup.string()\r\n        .required('Required'),\r\n      //.notOneOf(['11']),\r\n      userName: Yup.string()\r\n        .max(64, 'Must be 64 characters or less')\r\n        .required('Required'),\r\n      pwd: Yup\r\n        .string()\r\n        .min(7)\r\n        .max(16)\r\n        .required()\r\n    }),\r\n    onSubmit: values => {\r\n      alert(JSON.stringify(values, null, 2));\r\n      if (who.roleId !== 11)\r\n        alert(\"Only Owner can maintain Users\")\r\n      else\r\n        props.saveForm(values, props.formMode)\r\n    }\r\n  });\r\n\r\n  const isEdit = () => props.formMode === 'edit';\r\n\r\n  console.log('RENDERING user', formik.values)\r\n\r\n  return (\r\n    <Form onSubmit={formik.handleSubmit}>\r\n\r\n      <Form.Group controlId=\"userId\">\r\n        <Form.Label>UserId:</Form.Label><span id=\"userId\">{' '}{formik.values.userId}</span>\r\n      </Form.Group>\r\n\r\n      <Form.Group controlId=\"roleId\">\r\n        <Form.Label>Role</Form.Label>\r\n        <Select\r\n          id=\"roleId\"\r\n          name=\"roleId\"\r\n          options={roleId === 11 ? props.roleOptions : props.roleOptions.filter(r => r.value !== 11)}\r\n          //onChange={formik.handleChange}\r\n          onChange={(e, value) => {\r\n            formik.setFieldValue(\"roleId\", value);\r\n            if (isEdit()) formik.submitForm();\r\n          }}\r\n          value={formik.values.roleId}\r\n          disabled={roleId === 11}\r\n        />\r\n      </Form.Group>\r\n\r\n      <Form.Group controlId=\"userName\">\r\n        <Form.Label>Name</Form.Label>\r\n        <Form.Control\r\n          as=\"input\"\r\n          name=\"userName\"\r\n          onChange={formik.handleChange}\r\n          //onBlur={formik.handleBlur}\r\n          onBlur={(e: React.FocusEvent<HTMLTextAreaElement>): void => {\r\n            if (isEdit() && formik.initialValues.userName !== formik.values.userName)\r\n              formik.submitForm();\r\n          }}\r\n          value={formik.values.userName}\r\n          style={{ width: '100%' }}\r\n        />\r\n        <Form.Text className=\"text-danger\">\r\n          {formik.touched.userName && formik.errors.userName ? (\r\n            <div className=\"text-danger\">{formik.errors.userName}</div>\r\n          ) : null}\r\n        </Form.Text>\r\n      </Form.Group>\r\n\r\n      <Form.Group className=\"mb-3\" controlId=\"pwd\">\r\n        <Form.Label>Password</Form.Label>\r\n        <Form.Control\r\n          type=\"password\"\r\n          placeholder=\"Password\"\r\n          name=\"pwd\"\r\n          value={formik.values.pwd}\r\n          onChange={formik.handleChange}\r\n          onBlur={(e: React.FocusEvent<HTMLTextAreaElement>): void => {\r\n            if (isEdit() && formik.initialValues.pwd !== formik.values.pwd)\r\n              formik.submitForm();\r\n          }}\r\n        />\r\n        <Form.Text className=\"text-danger\">\r\n          {formik.touched.pwd && formik.errors.pwd ? (\r\n            <div className=\"text-danger\">{formik.errors.pwd}</div>\r\n          ) : null}\r\n        </Form.Text>\r\n      </Form.Group>\r\n\r\n      {/* <button type=\"submit\">Submit</button> */}\r\n      <Form.Group controlId=\"createdBy\">\r\n        <Form.Label>Created by:</Form.Label>\r\n        <UserName id={formik.values.createdBy} />\r\n      </Form.Group>\r\n\r\n      {/* <br /> */}\r\n      <Form.Group controlId=\"created\">\r\n        <Form.Label className=\"id\">Created:</Form.Label>\r\n        <span>{formik.values.created.toLocaleDateString()}</span>\r\n      </Form.Group>\r\n\r\n      {!isEdit() &&\r\n        <div className=\"buttons\">\r\n          {props.canEdit &&\r\n            <Button\r\n              variant=\"secondary\"\r\n              size=\"sm\"\r\n              onClick={() => {\r\n                props.cancel();\r\n                // props.handleClose()\r\n              }}>\r\n              Cancel\r\n            </Button>}\r\n          {props.canEdit &&\r\n            <Button\r\n              variant=\"primary\"\r\n              size=\"sm\"\r\n              type=\"submit\"\r\n            >\r\n              Save\r\n            </Button>}\r\n        </div>\r\n      }\r\n    </Form>\r\n  );\r\n};\r\n\r\n\r\nexport const UserForm: React.FC<IFormProps> = (props: IFormProps) => {\r\n  const theme = useContext(ThemeContext);\r\n  const { darkMode, variant, bg } = theme.state;\r\n  return (\r\n    <Container className={`${darkMode ? \"dark\" : \"\"}`}>\r\n      <UsrForm {...props} />\r\n    </Container>\r\n  )\r\n}","// import * as React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { IAppState } from '../../store/Store';\r\nimport { IUser } from '../types'\r\n\r\nimport { Dispatch } from 'redux';  // ActionCreatorsMapObject, \r\n\r\nimport { UserActions,  \r\n\tgetUser, \r\n\taddUser, \r\n\teditUser,\r\n\tremoveUser,\r\n\tstoreUser,\r\n\tcancelUser\r\n} from '../actions'\r\n\r\nimport {UserForm}  from '../components/UserForm'\r\n\r\ninterface IProps {\r\n\tcanEdit: boolean\r\n}\r\n\r\n// Grab the users from the store and make them available on props\r\nconst mapStateToProps = (store: IAppState, ownProps: IProps ) => {\r\n\tconst {usersState, topState} = store;\r\n\tconst { roles, userEditing, roleOptions, formMode, roleIdEditing } = usersState; \r\n\treturn {\r\n\t\tauth: topState.top.auth,\r\n\t\troles,\r\n\t\troleOptions,\r\n\t\tuserEditing,\r\n\t\tformMode,\r\n\t\troleIdEditing,\r\n\t\tcanEdit: ownProps.canEdit\r\n\t};\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch<UserActions>) => {\r\n\treturn {\r\n\t\tonSelectUser: (userId: number) => dispatch<any>(getUser(userId)),\r\n\t\tadd: (userRoleId: number, text: string, canEdit?: boolean) => dispatch<any>(addUser(userRoleId, text, canEdit)),\r\n\t\tedit: (userRoleId: number, userId: number) => dispatch<any>(editUser(userRoleId, userId)),\r\n\t\tremove: (userRoleId: number, userId: number) => dispatch<any>(removeUser(userRoleId, userId)),\r\n\t\tsaveForm: (user: IUser, formMode: string) => dispatch<any>(storeUser(user, formMode)),\r\n\t\tcancel: () => dispatch<any>(cancelUser()),\t\r\n\t}\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(UserForm);\r\n","import * as React from 'react';\r\n\r\nimport { useHover } from '../../common/useHover'\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faWindowClose, faEdit } from '@fortawesome/free-solid-svg-icons'\r\n\r\nimport { IUser } from '../types';\r\nimport { Button, ListGroup } from 'react-bootstrap';\r\nimport { ThemeContext } from '../../ThemeContext';\r\n\r\ninterface IRowProps {\r\n\twho: IUser;\r\n\tuser: IUser;\r\n\tonSelectUser: (userId: number) => IUser;\r\n\tedit: (roleId: number, userId: number) => void;\r\n\tremove: (roleId: number, userId: number) => void;\r\n}\r\n\r\nconst UserRow: React.FC<IRowProps> = (props: IRowProps) => {\r\n\r\n\tconst [hoverRef, hoverProps] = useHover();\r\n\r\n\tconst { who, user, onSelectUser, edit, remove } = props;\r\n\tconst { roleId, userId, userName } = user;\r\n\r\n\tconst theme = React.useContext(ThemeContext);\r\n\tconst { darkMode, variant, bg } = theme.state;\r\n\r\n\treturn (\r\n\t\t<ListGroup.Item\r\n\t\t\tas=\"li\"\r\n\t\t\tclassName=\"py-0\"\r\n\t\t\tvariant={variant}\r\n\t\t>\r\n\t\t\t<div ref={hoverRef} className=\"d-flex justify-content-start align-items-center\">\r\n\t\t\t\t<Button\r\n\t\t\t\t\tstyle={{ fontSize: '13px' }}\r\n\t\t\t\t\tvariant='link'\r\n\t\t\t\t\tsize=\"sm\"\r\n\t\t\t\t\tclassName=\"py-0 px-1 text-decoration-none\"\r\n\t\t\t\t\tonClick={() => onSelectUser(userId)}>\r\n\t\t\t\t\t{userName} {userId}\r\n\t\t\t\t</Button>\r\n\t\t\t\t{hoverProps.isHovered &&\r\n\t\t\t\t\t<Button\r\n\t\t\t\t\t\tvariant={variant}\r\n\t\t\t\t\t\tsize=\"sm\"\r\n\t\t\t\t\t\tclassName=\"py-0 px-1\"\r\n\t\t\t\t\t\tstyle={{ backgroundColor: 'transparent', borderWidth: '0' }}\r\n\t\t\t\t\t\ttitle=\"Edit\"\r\n\t\t\t\t\t\tonClick={() => edit(roleId, userId)}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<FontAwesomeIcon icon={faEdit} color='lightblue' />\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t}\r\n\t\t\t\t{hoverProps.isHovered && who.roleId === 11 &&\r\n\t\t\t\t\t<Button\r\n\t\t\t\t\t\tvariant={variant}\r\n\t\t\t\t\t\tsize=\"sm\"\r\n\t\t\t\t\t\tclassName=\"py-0 px-1\"\r\n\t\t\t\t\t\tstyle={{ backgroundColor: 'transparent', borderWidth: '0' }}\r\n\t\t\t\t\t\ttitle=\"Remove\"\r\n\t\t\t\t\t\tonClick={() => remove(roleId, userId)}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<FontAwesomeIcon icon={faWindowClose} color='lightblue' />\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t}\r\n\t\t\t</div>\r\n\t\t</ListGroup.Item>\r\n\t)\r\n}\r\n\r\nexport default UserRow\r\n\r\n","import * as React from 'react';\r\n\r\nimport { useHover } from '../../common/useHover'\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faWindowClose, faEdit, faCaretRight, faCaretDown, faPlus } from '@fortawesome/free-solid-svg-icons'\r\nimport { Badge, Button } from 'react-bootstrap'\r\n\r\nimport { IRole, IUser } from '../types';\r\nimport { ThemeContext } from '../../ThemeContext';\r\n\r\ninterface IUserRowProps {\r\n\twho: IUser;\r\n\tuserRole: IRole;\r\n\ttoggleRole: (roleId: number) => void;\r\n\teditRole: (roleId: number) => void;\r\n\tremoveRole: (roleId: number) => void;\r\n\tadd: (roleId: number, text: string, canEdit?: boolean) => void;\r\n}\r\n\r\nconst RoleRow: React.FC<IUserRowProps> = (props: IUserRowProps) => {\r\n\r\n\tconst [hoverRef, hoverProps] = useHover();\r\n\tconst { who, userRole, toggleRole, editRole, removeRole, add } = props;\r\n\tconst { roleId, title, users, isExpanded, color } = userRole;\r\n\r\n\tconst theme = React.useContext(ThemeContext);\r\n\tconst { darkMode, variant, bg } = theme.state;\r\n\r\n\treturn (\r\n\t\t<div ref={hoverRef}>\r\n\t\t\t<button\r\n\t\t\t\tclassName=\"button-edit\"\r\n\t\t\t\ttitle=\"Expand\"\r\n\t\t\t\tonClick={() => toggleRole(roleId)}\r\n\t\t\t\tstyle={{ marginLeft: '5px' }}\r\n\t\t\t>\r\n\t\t\t\t<FontAwesomeIcon icon={isExpanded ? faCaretDown : faCaretRight} color={color} size='lg' />\r\n\t\t\t</button>\r\n\t\t\t<Button\r\n\t\t\t\tvariant='link'\r\n\t\t\t\tsize=\"sm\"\r\n\t\t\t\tclassName=\"py-0 mx-1 text-decoration-none\"\r\n\t\t\t>\r\n\t\t\t\t{title}\r\n\t\t\t</Button>\r\n\t\t\t<Button\r\n\t\t\t\tvariant={variant}\r\n\t\t\t\tsize=\"lg\"\r\n\t\t\t\tclassName=\"py-0 px-1\"\r\n\t\t\t\tstyle={{ backgroundColor: 'transparent', borderWidth: '0' }}\r\n\t\t\t\ttitle=\"Add a new User\"\r\n\t\t\t\tonClick={() => add(roleId, '')}\r\n\t\t\t\tdisabled={roleId === 11}\r\n\t\t\t>\r\n\t\t\t\t<FontAwesomeIcon icon={faPlus} size='xs' color='orange' />\r\n\t\t\t</Button>\r\n\t\t\t{hoverProps.isHovered && who.roleId === 11 &&\r\n\t\t\t\t<button className=\"button-edit\" title=\"Edit Section\" onClick={() => editRole(roleId)}>\r\n\t\t\t\t\t<FontAwesomeIcon icon={faEdit} color='lightblue' />\r\n\t\t\t\t</button>\r\n\t\t\t}\r\n\t\t\t{hoverProps.isHovered && users.length === 0 && who.roleId === 11 &&\r\n\t\t\t\t<button className=\"button-remove\" title=\"Remove Section\" onClick={() => removeRole(roleId)}>\r\n\t\t\t\t\t<FontAwesomeIcon icon={faWindowClose} color='lightblue' />\r\n\t\t\t\t</button>\r\n\t\t\t}\r\n\t\t\t<Badge bg=\"primary\" pill>\r\n\t\t\t\t{users.length}\r\n\t\t\t</Badge>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default RoleRow\r\n\r\n","import { Fragment, useContext } from 'react';\r\nimport { useRef } from 'react'\r\nimport { Col, Container, ListGroup, Row } from 'react-bootstrap';\r\nimport { faPlus } from '@fortawesome/free-solid-svg-icons'\r\n\r\nimport { IRole, IRolesProps } from '../types'\r\n\r\nimport UserForm from '../containers/UserForm'\r\nimport UserRow from './UserRow';\r\nimport RoleRow from './RoleRow';\r\nimport { ThemeContext } from \"../../ThemeContext\";\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\n// type SupportParams = {\r\n// \ttekst: string;\r\n// };\r\n\r\nconst UserPage: React.FC<IRolesProps> = (props: IRolesProps) => {\r\n\r\n\t//let { tekst } = useParams<SupportParams>();\r\n\tconst { who, roles, userEditing,\r\n\t\tformMode, roleIdEditing,\r\n\t\tonSelectUser, add, edit, remove, canEdit,\r\n\t\taddRole, toggleRole, editRole, removeRole, storeRole } = props;\r\n\r\n\tconst inputEl = useRef<HTMLInputElement>(null);\r\n\tsetTimeout(() => {\r\n\t\tif (inputEl.current !== null) {\r\n\t\t\tinputEl.current!.select();\r\n\t\t\tinputEl.current!.focus()\r\n\t\t}\r\n\t}, 100)\r\n\r\n\t// const expandRole = (roleId: number): void => {\r\n\t// \tconst div = document.querySelector<HTMLDivElement>(\"#divRole\" + roleId);\r\n\t// \tconsole.log(div)\r\n\t// \tdiv!.style.display = 'block';\r\n\t// }\r\n\tconst theme = useContext(ThemeContext);\r\n\tconst { darkMode, variant, bg } = theme.state;\r\n\r\n\tconst userRoles: IRole[] = roles ?? [];\r\n\tconsole.log({userRoles})\r\n\r\n\treturn (\r\n\t\t<Container fluid>\r\n\t\t\t<Row className={`${darkMode ? \"dark\" : \"light\"}`}>\r\n\t\t\t\t<Col md={7}>\r\n\t\t\t\t\t<div style={{ border: '0px solid silver' }}>\r\n\t\t\t\t\t\t<h5>Users by Role{' '}\r\n\t\t\t\t\t\t\t<button className=\"button-add-category button-edit\" title=\"Add a new Role\" onClick={() => addRole()}>\r\n\t\t\t\t\t\t\t\t<FontAwesomeIcon icon={faPlus} size='xs' color='lightblue' />\r\n\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t</h5>\r\n\t\t\t\t\t\t<ListGroup\r\n\t\t\t\t\t\t\tas=\"ul\"\r\n\t\t\t\t\t\t\tvariant={variant}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t{userRoles.map(role => {\r\n\t\t\t\t\t\t\t\tconst { roleId, title, isExpanded, users } = role;\r\n\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t<Fragment key={roleId}>\r\n\t\t\t\t\t\t\t\t\t\t<ListGroup.Item\r\n\t\t\t\t\t\t\t\t\t\t\tvariant={variant}\r\n\t\t\t\t\t\t\t\t\t\t\tclassName=\"py-0 px-1\"\r\n\t\t\t\t\t\t\t\t\t\t\tas=\"li\"\r\n\t\t\t\t\t\t\t\t\t\t\tkey={roleId + \"_1\"}\r\n\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className=\"d-flex justify-content-start align-items-center\" style={{ textAlign: 'start' }}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t{roleIdEditing === roleId &&\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<input ref={inputEl} name=\"groupTitle\" type=\"text\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonBlur={(e) => storeRole({ ...role, title: e.target.value })}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tdefaultValue={title}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t{roleIdEditing !== roleId && (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<RoleRow\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\twho={who}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tuserRole={role}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\ttoggleRole={toggleRole}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\teditRole={editRole}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tremoveRole={removeRole}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tadd={add}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</ListGroup.Item>\r\n\t\t\t\t\t\t\t\t\t\t{isExpanded && role.users.length > 0 &&\r\n\t\t\t\t\t\t\t\t\t\t\t<ListGroup.Item\r\n\t\t\t\t\t\t\t\t\t\t\t\tvariant={variant}\r\n\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"py-0 px-1\"\r\n\t\t\t\t\t\t\t\t\t\t\t\tas=\"li\"\r\n\t\t\t\t\t\t\t\t\t\t\t\tkey={roleId + \"_2\"}\r\n\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<ListGroup\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tas=\"ul\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tvariant={variant}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"inner-list py-0 ms-5\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t{users.map(user =>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<UserRow\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\twho={who}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tkey={user.userId}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tuser={user}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonSelectUser={onSelectUser}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tedit={edit}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tremove={remove}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t</ListGroup>\r\n\t\t\t\t\t\t\t\t\t\t\t</ListGroup.Item>\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t</Fragment>\r\n\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t</ListGroup>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</Col>\r\n\t\t\t\t<Col md={5}>\r\n\t\t\t\t\t<div className={`${darkMode ? \"dark\" : \"light\"}`}>\r\n\t\t\t\t\t\t{userRoles && userEditing &&\r\n\t\t\t\t\t\t\t<div style={{ border: '1px solid silver', borderRadius: '5px', padding: '5px 5px 15px 5px' }}>\r\n\t\t\t\t\t\t\t\t<h4 style={{ marginTop: 0, color: 'white' }}>User</h4>\r\n\t\t\t\t\t\t\t\t<UserForm canEdit={formMode === 'display' ? false : canEdit} />\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</Col>\r\n\t\t\t</Row>\r\n\t\t</Container>\r\n\t);\r\n}\r\n\r\nexport default UserPage\r\n\r\n","import { connect } from 'react-redux';\r\n\r\nimport { IAppState } from '../../store/Store';\r\nimport { IRole } from '../types'\r\n\r\nimport { Dispatch } from 'redux';  // ActionCreatorsMapObject, \r\n\r\nimport { UserActions,  \r\n\tgetUser, \r\n\taddUser, \r\n\teditUser,\r\n\tremoveUser,\r\n\taddRole,\r\n\teditRole,\r\n\tremoveRole,\r\n\tstoreRole,\r\n\ttoggleRole\r\n} from '../actions'\r\n\r\nimport UsersPage from '../components/UsersPage'\r\n\r\ninterface IProps {\r\n\tcanEdit: boolean\r\n}\r\n\r\n// Grab the users from the store and make them available on props\r\nconst mapStateToProps = (store: IAppState, ownProps: IProps ) => {\r\n\tconst { usersState,  topState} = store;\r\n\tconst { roles, userEditing, formMode, roleIdEditing } = usersState; \r\n\treturn {\r\n\t\twho: topState.top.auth!.who,\r\n\t\troles,\r\n\t\tuserEditing,\r\n\t\tformMode,\r\n\t\troleIdEditing,\r\n\t\tcanEdit: ownProps.canEdit\r\n\t};\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch<UserActions>) => {\r\n\treturn {\r\n\t\t// user\r\n\t\tonSelectUser: (userId: number) => dispatch<any>(getUser(userId)),\r\n\t\tadd: (userRoleId: number, text: string, canEdit?: boolean) => dispatch<any>(addUser(userRoleId, text, canEdit)),\r\n\t\tedit: (userRoleId: number, userId: number) => dispatch<any>(editUser(userRoleId, userId)),\r\n\t\tremove: (userRoleId: number, userId: number) => dispatch<any>(removeUser(userRoleId, userId)),\r\n\t\t// groups\r\n\t\taddRole: () => dispatch<any>(addRole()),\r\n\t\ttoggleRole: (roleId: number) =>  dispatch<any>(toggleRole(roleId)),\r\n\t\teditRole: (roleId: number) =>  dispatch<any>(editRole(roleId)),\r\n\t\tremoveRole: (roleId: number) => dispatch<any>(removeRole(roleId)),\r\n\t\tstoreRole: (role: IRole) => dispatch<any>(storeRole(role))\r\n\t}\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(UsersPage);\r\n","import React, { useContext } from 'react';\r\nimport { Button, Col, Container, Form, Row } from \"react-bootstrap\";\r\n\r\nimport { useFormik } from 'formik';\r\nimport * as Yup from 'yup'\r\n\r\nimport { ThemeContext } from '../../ThemeContext';\r\n\r\nimport { IFormProps } from '../types';\r\n//import { number } from 'yup/lib/locale';\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\n\r\nconst LogForm: React.FC<IFormProps> = (props: IFormProps) => {\r\n\r\n  let { authError } = props;\r\n\r\n  let navigate = useNavigate();\r\n  if (props.isAuthenticated) {\r\n    navigate('/questions');\r\n  }\r\n\r\n  const formik = useFormik({\r\n    enableReinitialize: true,\r\n    initialValues: {\r\n      userName: '',\r\n      pwd: ''\r\n    },\r\n    validationSchema: Yup.object({\r\n      userName: Yup\r\n        .string()\r\n        .max(32, 'Must be 32 characters or less')\r\n        .required('Required'),\r\n      pwd: Yup\r\n        .string()\r\n        .min(7)\r\n        .max(16)\r\n        //.matches(/^(?=.*[a-z])(?=.*[A-Z])(?=.*d)[a-zA-Zd]$/)\r\n        .required()\r\n    }),\r\n    onSubmit: values => {\r\n      // alert(JSON.stringify(values, null, 2));\r\n      props.saveForm(values, props.formMode, props.isRegister)\r\n    }\r\n  });\r\n\r\n  const isEdit = () => props.formMode === 'edit';\r\n\r\n  console.log('RENDERING LoginForm', formik.values)\r\n\r\n  return (\r\n    <Form onSubmit={formik.handleSubmit}>\r\n\r\n      {/* <label htmlFor=\"name\">User name</label> */}\r\n      <Form.Group controlId=\"userName\">\r\n        <Form.Label>Name</Form.Label>\r\n        <Form.Control\r\n          as=\"input\"\r\n          name=\"userName\"\r\n          onChange={formik.handleChange}\r\n          onBlur={formik.handleBlur}\r\n          // onBlur={(e: React.FormEvent<HTMLInputElement>): void => {\r\n          //   if (isEdit() && formik.initialValues.name !== formik.values.name)\r\n          //     formik.submitForm();\r\n          // }}\r\n          value={formik.values.userName}\r\n          placeholder=\"User name\"\r\n          maxLength={16}\r\n        />\r\n        <Form.Text className=\"text-danger\">\r\n          {formik.touched.userName && formik.errors.userName ? (\r\n            <div className=\"text-danger\">{formik.errors.userName}</div>\r\n          ) : null}\r\n        </Form.Text>\r\n      </Form.Group>\r\n      <br/>\r\n\r\n      <Form.Group controlId=\"pwd\">\r\n        <Form.Label>Password</Form.Label>\r\n        <Form.Control\r\n          as=\"input\"\r\n          name=\"pwd\"\r\n          type=\"password\"\r\n          onChange={formik.handleChange}\r\n          onBlur={formik.handleBlur}\r\n          value={formik.values.pwd}\r\n          placeholder=\"password\"\r\n          // style={{ width: '40%' }}\r\n          maxLength={16}\r\n        />\r\n        <Form.Text className=\"text-danger\">\r\n          {formik.touched.pwd && formik.errors.pwd ? (\r\n            <div className=\"text-danger\">{formik.errors.pwd}</div>\r\n          ) : null}\r\n        </Form.Text>\r\n      </Form.Group>\r\n\r\n      {authError &&\r\n        <div>{authError}</div>\r\n      }\r\n\r\n      <br />\r\n\r\n      <div className=\"buttons\">\r\n        <Button\r\n          variant=\"secondary\"\r\n          size=\"sm\"\r\n          onClick={() => {\r\n            props.cancel();\r\n            navigate('/landing');\r\n            // props.handleClose()\r\n          }}>\r\n          Cancel\r\n        </Button>\r\n        <Button\r\n          variant=\"primary\"\r\n          size=\"sm\"\r\n          type=\"submit\"\r\n        >\r\n          Submit\r\n        </Button>\r\n      </div>\r\n\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport const LoginForm: React.FC<IFormProps> = (props: IFormProps) => {\r\n  const theme = useContext(ThemeContext);\r\n  const { darkMode, variant, bg } = theme.state;\r\n  return (\r\n    <Container className={`${darkMode ? \"dark\" : \"\"}`} >\r\n      <Row className=\"py-2\">\r\n        <Col md=\"4\" className=\"mx-auto\">\r\n          <h4 style={{textAlign: 'center'}}>\r\n            {props.isRegister ? (\r\n              'Register'\r\n            ) : (\r\n              'Sign In'\r\n            )}\r\n          </h4>\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        <Col md=\"6\" className=\"mx-auto\">\r\n          <LogForm {...props} />\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  )\r\n}","// import * as React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { IAppState } from '../../store/Store';\r\n\r\nimport { Dispatch } from 'redux'; \r\n\r\nimport { register, authenticate, cancelLogin, TopActions } from '../actions'\r\n\r\nimport { LoginForm } from '../components/LoginForm';\r\nimport { ILogin } from '../types';\r\n\r\ninterface IProps {\r\n\tcanEdit: boolean,\r\n\tisRegister: boolean\r\n}\r\n\r\nconst mapStateToProps = (store: IAppState, ownProps: IProps) => {\r\n\tconst { topState } = store;\r\n\tconst { top } = topState;\r\n\treturn {\r\n\t\tisAuthenticated: top.isAuthenticated,\r\n\t\tuuid: top.uuid,\r\n\t\tauthError: top.authError,\r\n\t\tcanEdit: ownProps.canEdit,\r\n\t\tisRegister: ownProps.isRegister,\r\n\t\tformMode: 'edit'\r\n\t};\r\n};\r\n\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch<TopActions>) => {\r\n\treturn {\r\n\t\tsaveForm: (login: ILogin, formMode: string, isRegister: boolean) => \r\n\t\t\tdispatch<any>(isRegister ? \r\n\t\t\t\tregister(login)\t: authenticate(login)),\r\n\t\tcancel: () => dispatch<any>(cancelLogin())\r\n\t}\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(LoginForm);\r\n\r\n","import * as React from \"react\";\r\n\r\ninterface ILanding {\r\n}\r\n\r\nconst Landing: React.FC<ILanding> = (props: ILanding) => {\r\n  return (\r\n    <div>\r\n      Landing Page\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Landing;\r\n","import JSZip from 'jszip';\r\n\r\nexport const LocalStorage = {\r\n\r\n  display: async () => {\r\n\r\n    for (let i = 0; i < localStorage.length; i++) {\r\n      const key = localStorage.key(i);\r\n      console.log(\"============\");\r\n      console.log(key);\r\n      console.log(\"\\n============\");\r\n      console.log(key ? await localStorage.getItem(key) : \"null\");\r\n\r\n      if (key === \"SUPPORT_TOP\") {\r\n        console.log(JSON.stringify(JSON.parse(localStorage.getItem(key), null, 2)))\r\n      }\r\n      else {\r\n        if (key && localStorage.getItem(key)) {\r\n          const obj = JSON.parse(localStorage.getItem(key))\r\n          // eslint-disable-next-line no-loop-func\r\n          Object.values(obj).forEach(o => console.log(JSON.stringify(o)))\r\n        }\r\n      }\r\n    }\r\n\r\n    let s = \"\";\r\n    for (let i = 0; i < localStorage.length; i++) {\r\n      const key = localStorage.key(i);\r\n      s += '<h7>' + (key ?? \"null\") + '</h7>';\r\n\r\n      if (key === \"SUPPORT_TOP\") {\r\n        s += '<ul>';\r\n        s += JSON.stringify(JSON.parse(localStorage.getItem(key)), null, 2)\r\n        s += '</ul>';\r\n      }\r\n      else {\r\n        if (key && localStorage.getItem(key)) {\r\n          const obj = JSON.parse(localStorage.getItem(key))\r\n          s += '<ul>';\r\n          // eslint-disable-next-line no-loop-func\r\n          Object.values(obj).forEach(o => s += '<li>' + JSON.stringify(o) + '</li>')\r\n          s += '</ul>';\r\n        }\r\n      }\r\n\r\n    }\r\n    return Promise.resolve(s);\r\n  },\r\n\r\n  clear: (clearAnswers, clearQuestions) => {\r\n    if (window.confirm('Are you sure?') === true) {\r\n      const top = localStorage.getItem('SUPPORT_TOP')\r\n      const users = localStorage.getItem('SUPPORT_USERS')\r\n\r\n      LocalStorage.export();\r\n      localStorage.clear();\r\n\r\n      clearAnswers();\r\n      clearQuestions();\r\n\r\n      if (top)\r\n        localStorage.setItem('SUPPORT_TOP', top)\r\n\r\n      if (users)\r\n        localStorage.setItem('SUPPORT_USERS', users)\r\n\r\n      // after LocalStorage.clear(),\r\n      // we don't load demo data.json in loadCategories()\r\n      localStorage.setItem('SUPPORT_CATEGORIES', \"\")\r\n      localStorage.setItem('SUPPORT_ANSWERS', \"\")\r\n    }\r\n  },\r\n\r\n  export: () => {\r\n    let data = JSON.stringify(localStorage)\r\n    const zip = true\r\n\r\n    if (!data) {\r\n      console.error('Console.save: No data')\r\n    }\r\n\r\n    console.log(new Date().toISOString())\r\n    const f = new Date().toISOString().replace(/T/, ' ').replace(/\\..+/, '');\r\n    const filename = `SupportKnowlegde_${f}.${(zip ? 'zip' : 'json')}`\r\n\r\n    // if (typeof data === \"object\") {\r\n    //   data = JSON.stringify(data, undefined, 4)\r\n    // }\r\n\r\n    if (zip) {\r\n      const zip = new JSZip();\r\n      zip.file(\"KnowledgeSupport.json\", data);\r\n      zip.generateAsync({ type: \"blob\" })\r\n        .then(function (blob) {\r\n          const e = document.createEvent('MouseEvents')\r\n          const a = document.createElement('a')\r\n          a.download = filename;\r\n          a.href = window.URL.createObjectURL(blob)\r\n          a.dataset.downloadurl = ['text/json', a.download, a.href].join(':')\r\n          e.initMouseEvent('click', true, false, window, 0, 0, 0, 0, 0, false, false, false, false, 0, null)\r\n          a.dispatchEvent(e)\r\n        });\r\n    }\r\n    else {\r\n      var blob = new Blob([data], { type: 'text/json' }),\r\n        e = document.createEvent('MouseEvents'),\r\n        a = document.createElement('a')\r\n\r\n      a.download = filename\r\n      a.href = window.URL.createObjectURL(blob)\r\n      a.dataset.downloadurl = ['text/json', a.download, a.href].join(':')\r\n      e.initMouseEvent('click', true, false, window, 0, 0, 0, 0, 0, false, false, false, false, 0, null)\r\n      a.dispatchEvent(e)\r\n    }\r\n  },\r\n\r\n  import: async (file, getAllAnswers, loadCategories) => {\r\n    const zipper = new JSZip();\r\n    zipper.loadAsync(file).then(function (contents) {\r\n      Object.keys(contents.files).forEach(function (filename) {\r\n        zipper.file(filename).async('string').then(function (content) {\r\n          console.log(filename, \"CONTENT:\", content);\r\n\r\n          const data = JSON.parse(content);\r\n          Object.keys(data).forEach(function (k) {\r\n            if (![\"SUPPORT_USERS\", \"SUPPORT_TOP\"].includes(k)) {\r\n              localStorage.setItem(k, data[k]);\r\n            }\r\n          });\r\n\r\n          getAllAnswers();\r\n          loadCategories();\r\n\r\n          return new Blob([content], { type: 'text/json' })\r\n        });\r\n      });\r\n    });\r\n    return new Blob([\"Imported\"], { type: 'text/json' })\r\n  }\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import { useContext, useState } from \"react\";\r\n\r\nimport { ThemeContext } from \"./ThemeContext\";\r\n\r\nimport { connect } from \"react-redux\";\r\nimport { Dispatch } from 'redux';\r\n\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nimport { IAppState } from \"./store/Store\";\r\nimport { IAuth } from \"./Top/types\";\r\n\r\nimport { LocalStorage } from \"./ExportImport\"\r\n\r\n// import logo from './logo.svg'\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faQuestion, faSurprise, faUser, faUserFriends, faAnchor, faDatabase } from '@fortawesome/free-solid-svg-icons'\r\n\r\nimport Container from 'react-bootstrap/Container';\r\nimport Nav from 'react-bootstrap/Nav';\r\nimport Navbar from 'react-bootstrap/Navbar';\r\nimport NavDropdown from 'react-bootstrap/NavDropdown';\r\nimport Offcanvas from 'react-bootstrap/Offcanvas';\r\nimport { setShowModalJSON, toggleMode, TopActions } from \"./Top/actions\";\r\nimport { categoryOptions, closeQuestionForm } from \"./Categories/actions\";\r\n\r\nimport { clearAnswers } from \"./Answers/actions\";\r\nimport { clearQuestions } from \"./Categories/actions\";\r\nimport { getAllAnswers } from './Answers/actions';\r\nimport { loadCategories } from './Categories/actions';\r\n\r\nimport { Modal } from \"react-bootstrap\";\r\n\r\ninterface ISideBarProps {\r\n  isAuthenticated: boolean | null;\r\n  showModalJSON: boolean;\r\n  auth?: IAuth,\r\n  signOut: () => void;\r\n  toggleMode: () => void;\r\n  closeQuestionForm: () => void;\r\n  clearAnswers: () => void;\r\n  clearQuestions: () => void;\r\n  getAllAnswers: () => void;\r\n  loadCategories: () => void;\r\n  setShowModalJSON: (show: boolean) => void;\r\n}\r\n\r\nfunction SideBar(props: ISideBarProps) {\r\n  const {\r\n    isAuthenticated,\r\n    showModalJSON,\r\n    auth,\r\n    signOut,\r\n    toggleMode,\r\n    closeQuestionForm,\r\n    clearAnswers,\r\n    clearQuestions,\r\n    getAllAnswers,\r\n    loadCategories,\r\n    setShowModalJSON\r\n  } = props;\r\n\r\n  const theme = useContext(ThemeContext);\r\n  const { darkMode, variant, bg } = theme.state;\r\n\r\n  let navigate = useNavigate();\r\n\r\n  const otkaciMe = () => {\r\n    signOut();\r\n    navigate('/landing');\r\n  }\r\n\r\n  const [show, setShow] = useState(false);\r\n  const [strJSON, setStrJSON] = useState(\"\");\r\n\r\n  return (\r\n    <Navbar expand={\"md\"} variant={variant} bg={bg} collapseOnSelect className=\"sticky-top\">\r\n      <Container fluid>\r\n        <Navbar.Brand href=\"#\" className=\"ps-3\">Support Knowledge</Navbar.Brand>\r\n        <Navbar.Toggle aria-controls={`offcanvasNavbar-expand`} />\r\n        <Navbar.Offcanvas\r\n          id={`offcanvasNavbar-expand`}\r\n          aria-labelledby={`offcanvasNavbarLabel-expand`}\r\n          placement=\"end\"\r\n          className={`text-bg-${bg}`}\r\n        >\r\n          {darkMode ? (\r\n            <Offcanvas.Header closeButton closeVariant=\"white\">\r\n              <Offcanvas.Title id={`offcanvasNavbarLabel-expand`}>Support</Offcanvas.Title>\r\n            </Offcanvas.Header>\r\n          ) : (\r\n            <Offcanvas.Header closeButton>\r\n              <Offcanvas.Title id={`offcanvasNavbarLabel-expand`}>Support</Offcanvas.Title>\r\n            </Offcanvas.Header>\r\n          )}\r\n\r\n          < Offcanvas.Body >\r\n            <Nav\r\n              className=\"justify-content-end flex-grow-1 pe-3 d-flex flex-nowrap\"\r\n              onSelect={eventKey => {\r\n                switch (eventKey) {\r\n                  case \"LIGHTMODE\":\r\n                  case \"DARKMODE\":\r\n                    if (document.body.classList.contains('dark')) {\r\n                      document.body.classList.remove('dark')\r\n                      document.body.classList.add('light')\r\n                    }\r\n                    else {\r\n                      document.body.classList.add('dark')\r\n                    }\r\n                    theme.dispatch({ type: eventKey })\r\n                    toggleMode();\r\n                    break;\r\n\r\n                  case \"STORAGE_DISPLAY\":\r\n                    LocalStorage.display()\r\n                      .then(s => { \r\n                        //setStrJSON(s) \r\n                        document.getElementById('bodi')!.innerHTML = s;\r\n                      });\r\n                    setShowModalJSON(true);\r\n                    break;\r\n                  case \"STORAGE_CLEAR\":\r\n                    LocalStorage.clear(clearAnswers, clearQuestions)\r\n                    break;\r\n                  case \"STORAGE_EXPORT\":\r\n                    LocalStorage.export()\r\n                    break;\r\n                  case \"STORAGE_IMPORT\":\r\n                    setShow(true)\r\n                    break;\r\n                }\r\n              }\r\n              }\r\n            >\r\n              {isAuthenticated &&\r\n                <Nav.Link href=\"#/supporter/promo\" onClick={() => {\r\n                  closeQuestionForm();\r\n                }}>\r\n                  <FontAwesomeIcon icon={faSurprise} color='lightblue' />{' '}Supporter\r\n                </Nav.Link>\r\n              }\r\n              {isAuthenticated &&\r\n                <Nav.Link href=\"#/questions\">\r\n                  <FontAwesomeIcon icon={faQuestion} color='lightblue' />{' '}Questions\r\n                </Nav.Link>\r\n              }\r\n              {isAuthenticated &&\r\n                <Nav.Link href=\"#/answers/pera\">\r\n                  <FontAwesomeIcon icon={faAnchor} color='lightblue' />{' '}Answers\r\n                </Nav.Link>\r\n              }\r\n              {isAuthenticated && auth && auth!.who.roleId === 11 &&\r\n                <Nav.Link href=\"#/users/2\">\r\n                  <FontAwesomeIcon icon={faUserFriends} color='lightblue' />{' '}Users\r\n                </Nav.Link>\r\n              }\r\n\r\n              {!isAuthenticated &&\r\n                <Nav.Link href=\"#/landing\">\r\n                  Landing\r\n                </Nav.Link>\r\n              }\r\n              {!isAuthenticated &&\r\n                <Nav.Link href=\"#/About\">\r\n                  About\r\n                </Nav.Link>\r\n              }\r\n\r\n              {/* <NavDropdown\r\n                title={<><FontAwesomeIcon icon={faCog} color='lightblue' />{' '}Settings</>}\r\n                id={`offcanvasNavbarDropdown-expand`}\r\n                menuVariant={variant}\r\n              >\r\n              </NavDropdown> */}\r\n\r\n              {!isAuthenticated &&\r\n                <Nav.Link href=\"#/Register\">\r\n                  Register\r\n                </Nav.Link>\r\n              }\r\n              {!isAuthenticated &&\r\n                <Nav.Link href=\"#/sign-in \">\r\n                  Sign In\r\n                </Nav.Link>\r\n              }\r\n\r\n              {isAuthenticated &&\r\n                // <Nav.Link href=\"#\" disabled>\r\n                //   <FontAwesomeIcon icon={faUser} />{' '}{auth!.who.userName}\r\n                // </Nav.Link>\r\n\r\n                <NavDropdown\r\n                  title={<><FontAwesomeIcon icon={faUser} />{' '}{auth!.who.userName}</>}\r\n                  id={`offcanvasNavbarDropdown-expand`}\r\n                  menuVariant={variant}\r\n                  align=\"end\"\r\n                >\r\n                  <NavDropdown.Item eventKey=\"DARKMODE\">\r\n                    Dark mode\r\n                  </NavDropdown.Item>\r\n                  <NavDropdown.Item eventKey=\"LIGHTMODE\">\r\n                    Light mode\r\n                  </NavDropdown.Item>\r\n                  {/* <Form className=\"d-flex\">\r\n                  <Form.Control\r\n                    type=\"search\"\r\n                    placeholder=\"Search\"\r\n                    className=\"me-2\"\r\n                    aria-label=\"Search\"\r\n                  />\r\n                  <Button variant=\"outline-success\">Search</Button>\r\n                </Form> */}\r\n\r\n                  <NavDropdown.Divider />\r\n                  <NavDropdown\r\n                    title={<span style={{ padding: \"0px 5px\", fontSize: '0.9rem' }}><FontAwesomeIcon icon={faDatabase} />{' '}Local Storage</span>}\r\n                    id={`offcanvasNavbarDropdown-expand2`}\r\n                    menuVariant={variant}\r\n                    align=\"end\"\r\n                  >\r\n                    <NavDropdown.Item href=\"#\" eventKey=\"STORAGE_DISPLAY\">\r\n                      Display\r\n                    </NavDropdown.Item>\r\n                    <NavDropdown.Divider />\r\n                    <NavDropdown.Item href=\"#\" eventKey=\"STORAGE_CLEAR\">\r\n                      Clear\r\n                    </NavDropdown.Item>\r\n                    <NavDropdown.Divider />\r\n                    <NavDropdown.Item href=\"#\" eventKey=\"STORAGE_EXPORT\">\r\n                      Export to zip file\r\n                    </NavDropdown.Item>\r\n                    <NavDropdown.Divider />\r\n                    <NavDropdown.Item href=\"#\" eventKey=\"STORAGE_IMPORT\">\r\n                      Import from zip file\r\n                    </NavDropdown.Item>\r\n                  </NavDropdown>\r\n                  <NavDropdown.Divider />\r\n\r\n                  <NavDropdown.Item href=\"#/About\">\r\n                    About\r\n                  </NavDropdown.Item>\r\n\r\n                  <NavDropdown.Item href=\"#\" onClick={otkaciMe}>\r\n                    Sign out\r\n                  </NavDropdown.Item>\r\n                </NavDropdown>\r\n              }\r\n            </Nav>\r\n          </Offcanvas.Body>\r\n        </Navbar.Offcanvas>\r\n\r\n        <Modal show={show} onHide={() => setShow(false)} animation={true} size=\"lg\" centered\r\n          className={`${darkMode ? \"dark\" : \"\"}`}\r\n          contentClassName={`${darkMode ? \"dark\" : \"\"}`}>\r\n          <Modal.Header closeButton>\r\n            <Modal.Title>Select file to import</Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n            <input type=\"file\" accept=\"application/zip\" onChange={(e) => {\r\n              //e.target.files![0].text().then(t => console.log(t)) \r\n              LocalStorage.import(e.target.files![0], getAllAnswers, loadCategories)\r\n              setShow(false)\r\n            }} />\r\n          </Modal.Body>\r\n          <Modal.Footer>\r\n            Only Categories, Questions and Answers will be imported.\r\n            <br />\r\n            Registered user will stay unchanged.\r\n          </Modal.Footer>\r\n        </Modal>\r\n\r\n        <Modal show={showModalJSON}\r\n          onHide={() => { setShowModalJSON(false); setStrJSON('') }} animation={true} size=\"lg\" centered\r\n          className={`${darkMode ? \"dark\" : \"\"}`}\r\n          contentClassName={`${darkMode ? \"dark\" : \"\"}`}>\r\n          <Modal.Header closeButton>\r\n            <Modal.Title>LOCAL STORAGE</Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body  id='bodi'>\r\n            {/* <pre style={{ whiteSpace: \"pre-line\" }}> */}\r\n             \r\n            {/* </pre> */}\r\n          </Modal.Body>\r\n          <Modal.Footer>\r\n          </Modal.Footer>\r\n        </Modal>\r\n\r\n      </Container>\r\n    </Navbar>\r\n  );\r\n}\r\n\r\ninterface IOwnProps {\r\n  signOut: () => void;\r\n}\r\n\r\nconst mapStateToProps = (store: IAppState, ownProps: IOwnProps) => ({\r\n  isAuthenticated: store.topState.top.isAuthenticated,\r\n  auth: store.topState.top.auth,\r\n  showModalJSON: store.topState.top.showModalJSON,\r\n  signOut: ownProps.signOut\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch<TopActions>) => {\r\n  return {\r\n    toggleMode: () => dispatch<any>(toggleMode()),\r\n    closeQuestionForm: () => dispatch<any>(closeQuestionForm()),\r\n    clearAnswers: () => dispatch<any>(clearAnswers()),\r\n    clearQuestions: () => dispatch<any>(clearQuestions()),\r\n    getAllAnswers: () => dispatch<any>(getAllAnswers()),\r\n    loadCategories: () => dispatch<any>(loadCategories()).then(() => dispatch(categoryOptions())),\r\n    setShowModalJSON: (show: boolean) => dispatch<any>(setShowModalJSON(show))\r\n  }\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(SideBar);\r\n","import * as React from \"react\";\r\n\r\ninterface ILanding {\r\n}\r\n\r\nconst Landing: React.FC<ILanding> = (props: ILanding) => {\r\n  return (\r\n    <>\r\n      <h2 style={{ textAlign: 'center', marginBlockStart: '0.66rem', marginBlockEnd: '0.1rem' }}>Questions &amp; Answers</h2>\r\n      <div className=\"d-flex flex-column justify-content-start align-items-center pt-0 mx-auto border-bottom abouts\">\r\n        <p className=\"mx-auto\">\r\n          Make your knowledge base for sharing information.\r\n        </p>\r\n        <p className=\"mx-auto\">\r\n          When you record your experiences and insights, other members of your team can share info.\r\n        </p>\r\n\r\n        <p className=\"mx-auto\">\r\n          Your questions and answers are stored to localStorage, which means they are protected od unwanted disclosure.\r\n        </p>\r\n\r\n        <p className=\"mx-auto\">\r\n          You can easily export Questions/Answers to the 'zip' file, and send by email to the memebers of your team.\r\n          <br /><br />They can import that 'zip' file into the Web App at their platforms\r\n        </p>\r\n\r\n        <p className=\"mx-auto\">\r\n          Most of the software companies need some kind of software like this.\r\n          As the developer, many times I had to open source code, giving the answer on the questions that we have already answered.\r\n          Instead of complex and expensive Issue trackers, with relations between the issues and so on, which are difficult to learn, you can use this product just after instalation of Support chrome extension.\r\n        </p>\r\n\r\n        <h4 style={{ textAlign: 'center', marginBlockStart: '0.66rem', marginBlockEnd: '0.1rem' }}>The Flow</h4>\r\n        <p className=\"mx-auto\">\r\n          <ul>\r\n            <li>User sends you the email with the Question</li>\r\n            <li>You open the mail (Chrome or Edge) and click on the Support icon that was created by Support chrome extension </li>\r\n            <li>Extension opens the Support Web App, using email subject as the filter in Question auto-complete</li>\r\n            <li>You copy the selected answer in reply of the mail</li>\r\n          </ul>\r\n        </p>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Landing;\r\n","import React, { useState, useContext, useEffect } from 'react';\r\n\r\nimport { HashRouter as Router, Route, Routes } from 'react-router-dom' // useRouteMatch\r\n\r\nimport { connect } from 'react-redux';\r\nimport { Dispatch } from 'redux';\r\n\r\nimport { IAppState } from './store/Store';\r\nimport { ThemeContext } from \"./ThemeContext\";\r\n\r\nimport Support from './components/Support';\r\nimport AnswersPage from './Answers/containers/Page'\r\nimport containers from './Categories/containers/ContainerCategoriesPage'\r\n\r\nimport UsersPage from './Users/containers/UsersPage';\r\nimport { authenticate, unAuthenticate, TopActions, navbarToggle } from './Top/actions';\r\nimport LoginForm from './Top/containers/LoginForm';\r\nimport Landing from './components/Landing';\r\nimport { ILogin, IAuth } from './Top/types';\r\n\r\nimport { Container, Row, Col } from 'react-bootstrap';\r\n\r\nimport SideBar from './SideBar';\r\nimport About from './components/About';\r\n\r\ninterface IProps {\r\n\tisAuthenticated: boolean | null;\r\n\tuuid: string | null;\r\n\tauth?: IAuth,\r\n\ttoggleNavbar: () => void,\r\n\tcheckAuthentication: (login: ILogin) => void;\r\n\tsignOut: () => void;\r\n}\r\n\r\nconst App = ({ isAuthenticated, uuid, auth, toggleNavbar, checkAuthentication, signOut }: IProps) => {\r\n\r\n\t// let main: null | HTMLDivElement = null;\r\n\r\n\t// const [mainMd, setMainMd] = useState(9);\r\n\t// const [mainLg, setMainLg] = useState(10);\r\n\r\n\tconst theme = useContext(ThemeContext);\r\n\tconst { darkMode, variant, bg } = theme.state;\r\n\r\n\tuseEffect(() => {\r\n\t\tdocument.body.classList.add(bg)\r\n\t}, []);\r\n\r\n\r\n\tconst canEdit = isAuthenticated === true && auth!.who.roleId < 44;\r\n\r\n\t// null is the third state false/true/null in reducer\r\n\tconst app = \r\n\t\t<Router>\r\n\t\t\t<SideBar signOut={signOut} />\r\n\t\t\t<Container fluid>\r\n\t\t\t\t<Row className={`${darkMode ? \"dark\" : \"\"}`}>\r\n\t\t\t\t\t{/* <Col id=\"main\" md={mainMd} lg={mainLg} className=\"ms-sm-auto px-md-4\"> */}\r\n\t\t\t\t\t<Col id=\"main\" className=\"ms-sm-auto px-md-4\" variant={variant} bg={variant}>\r\n\t\t\t\t\t\t<div className=\"d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pt-3 pb-2 mb-3 border-bottom\">\r\n\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t<div className={`${darkMode ? \"dark\" : \"\"}`}>\r\n\t\t\t\t\t\t\t<Routes>\r\n\t\t\t\t\t\t\t\t<Route path=\"/\" element={<Landing />} />\r\n\t\t\t\t\t\t\t\t<Route path=\"/sign-in\" element={\r\n\t\t\t\t\t\t\t\t\t<LoginForm canEdit={true} isRegister={false} />\r\n\t\t\t\t\t\t\t\t} />\r\n\t\t\t\t\t\t\t\t<Route path=\"/register\" element={\r\n\t\t\t\t\t\t\t\t\t<LoginForm canEdit={true} isRegister={true} />\r\n\t\t\t\t\t\t\t\t} />\r\n\t\t\t\t\t\t\t\t<Route path=\"/supporter/:tekst\" element={<Support canEdit={canEdit} />} />\r\n\t\t\t\t\t\t\t\t<Route path=\"/questions\" element={<containers.categories canEdit={canEdit} handleClose={()=>{}} />} />\r\n\t\t\t\t\t\t\t\t<Route path=\"/answers/:slug\" element={<AnswersPage />} />\r\n\t\t\t\t\t\t\t\t<Route path=\"/users/:slug\" element={<UsersPage canEdit={true} />} />\r\n\t\t\t\t\t\t\t\t<Route path=\"/about\" element={<About />} />\r\n\t\t\t\t\t\t\t\t<Route path=\"/landing\" element={<Landing />} />\r\n\t\t\t\t\t\t\t</Routes>\r\n\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t</Row>\r\n\t\t\t</Container>\r\n\t\t</Router>\r\n\t// )\r\n\t// : (\r\n\t// \tnull\r\n\t// );\r\n\r\n\treturn (\r\n\t\t<Container fluid className=\"App\">\r\n\t\t\t{app}\r\n\t\t</Container>\r\n\t);\r\n}\r\n\r\nconst mapStateToProps = (store: IAppState) => ({\r\n\tisAuthenticated: store.topState.top.isAuthenticated,\r\n\tauth: store.topState.top.auth,\r\n\tuuid: store.topState.top.uuid\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch<TopActions>) => {\r\n\treturn {\r\n\t\ttoggleNavbar: () => dispatch<any>(navbarToggle()),\r\n\t\tcheckAuthentication: async (login: ILogin) => await dispatch<any>(authenticate(login)),\r\n\t\tsignOut: () => dispatch<any>(unAuthenticate())\r\n\t}\r\n};\r\n\r\nexport default connect(\r\n\tmapStateToProps,\r\n\tmapDispatchToProps\r\n)(App);\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport * as ReactDOM from 'react-dom';\r\n\r\nimport { Provider } from 'react-redux';\r\n\r\nimport configureStore from './store/Store';\r\nimport { categoryOptions, loadCategories } from './Categories/actions';\r\nimport { getAllAnswers } from './Answers/actions';\r\n\r\nimport './index.css';\r\nimport './normalize.scss'\r\nimport './App.css';\r\n\r\nimport { getAllUsers } from './Users/actions';\r\nimport { getAllTags } from './roleTags/actions';\r\nimport { loadTop } from './Top/actions';\r\nimport App from './App';\r\n\r\nimport { ThemeProvider } from './ThemeContext';\r\nimport { ITop } from './Top/types';\r\n\r\n// Uncomment to clean up the localStorage\r\n// localStorage.clear(); // !!!!!!!!!!!!\r\n\r\nconst store = configureStore();\r\nstore.dispatch<any>(loadCategories())\r\n\t.then(() => store.dispatch(categoryOptions()));\r\nstore.dispatch(getAllAnswers());\r\nstore.dispatch(getAllUsers())\r\nstore.dispatch<any>(loadTop())\r\n\t.then((top: ITop)=> {\r\n\t\tconsole.log({top})\r\n\t})\r\n\t.catch((err: { getMessage: () => any; }) => {\r\n\t\tconsole.error(err.getMessage());\r\n\t});\r\nstore.dispatch(getAllTags());\r\n\r\nconst sessionId = Math.floor((Math.random() * 10000) + 1);\r\nsessionStorage.setItem('sessionId', sessionId.toString())\r\n\r\nconst state = store.getState();\r\n\r\nReactDOM.render(\r\n\t<React.StrictMode>\r\n\t\t<Provider store={store} >\r\n\t\t\t<ThemeProvider darkMode={state.topState.top.darkMode }>\r\n\t\t\t\t<App />\r\n\t\t\t</ThemeProvider>\r\n\t\t</Provider>\r\n\t</React.StrictMode>,\r\n\tdocument.getElementById('root')\r\n);\r\n"],"sourceRoot":""}