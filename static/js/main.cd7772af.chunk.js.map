{"version":3,"sources":["Answers/actions.ts","Categories/actions.ts","Users/actions.ts","Categories/types.ts","Categories/categoryReducer.ts","Categories/categoriesReducer.ts","Answers/reducer.ts","roleTags/actions.ts","Users/reducer.ts","Users/types.ts","roleTags/reducer.ts","Top/actions.ts","Top/reducer.ts","store/Store.tsx","ThemeContext.tsx","components/AutoSuggest.tsx","common/containers/UserName.tsx","common/components/OptionName.tsx","Categories/components/CategoryForm.tsx","Categories/containers/ContainerCategoryForm.tsx","common/Select.tsx","Categories/sourceOptions.ts","Categories/statusOptions.ts","components/AutoSuggestAnswer.tsx","common/useHover.tsx","Categories/components/QuestionAnswerRow.tsx","Answers/components/Form.tsx","Categories/components/QuestionAnswers.tsx","Categories/containers/ContainerQuestionAnswers.tsx","Categories/components/QuestionForm.tsx","Categories/containers/ContainerQuestionForm.tsx","Categories/components/QuestionRow.tsx","Categories/components/CategoryRow.tsx","Categories/components/CategoryList.tsx","Categories/containers/ContainerCategoryList.tsx","Categories/components/CategoriesPage.tsx","Categories/components/SuportPage.tsx","Categories/containers/ContainerCategoriesPage.tsx","components/Support.tsx","Answers/components/ListRow.tsx","Answers/components/List.tsx","Answers/components/Page.tsx","Answers/containers/Page.tsx","Users/components/UserForm.tsx","Users/containers/UserForm.tsx","Users/components/UserRow.tsx","Users/components/RoleRow.tsx","Users/components/UsersPage.tsx","Users/containers/UsersPage.tsx","Top/components/LoginForm.tsx","Top/containers/LoginForm.tsx","components/Landing.tsx","ExportImport.js","SideBar.tsx","components/About.tsx","App.tsx","index.tsx"],"names":["AnswerActionTypes","parseFromJson","data","map","a","parseDates","created","Date","SUPPORT_ANSWERS","QuestionActionTypes","getAllAnswers","dispatch","answers","window","sAnswers","localStorage","getItem","parsed","JSON","parse","type","GET_ALL_ANSWERS","err","console","error","addAnswer","getState","ADD_ANSWER","createdBy","topState","top","auth","who","userId","storeAnswer","answer","formMode","STORE_ANSWER","Promise","resolve","answerState","answerId","cancelAnswer","CANCEL_ANSWER","g","questions","q","categoryId","assigned","UserActionTypes","loadCategories","categories","loadedFromStorage","sCategories","SUPPORT_CATEGORIES","log","categoriesJson","forEach","category","sQuestions","json","words","text","split","setItem","stringify","categoryQuestions","Map","categoryState","set","LOAD_CATEGORIES","getQuestion","questionId","GET_QUESTION","addQuestion","canEdit","ADD_QUESTION","showCategoryForm","editQuestion","showQuestionForm","EDIT_QUESTION","assignQuestionAnswer","tekst","delay","ASSIGN_QUESTION_ANSWER","assignedBy","addCategoryUnknown","state","categoriesState","find","c","newCategory","initialCategory","title","storeCategory","then","reject","setTimeout","closeQuestionForm","CLOSE_QUESTION_FORM","openQuestionForm","OPEN_QUESTION_FORM","STORE_CATEGORY","updateCategory","UPDATE_CATEGORY","addAndAssignNewAnswer","initialQuestion","source","status","initialCategoryState","storeToStorage","STORE_QUESTION","UPDATE_QUESTION","REMOVE_QUESTION","REMOVE_QUESTION_ANSWER","aTypesToStore","Object","keys","filter","includes","reduceQuestions","action","get","newState","myReducer","question","questionIdMax","CANCEL_QUESTION","qa","isExpanded","initialCategoriesState","undefined","categoryOptions","loading","categoryIdEditing","ADD_CATEGORY","TOGGLE_CATEGORY","REMOVE_CATEGORY","getQuestions","value","label","unshift","Math","max","questionCopy","categoryIdWas","categoryIdCopy","GET_CATEGORY","length","EDIT_CATEGORY","categoryCopy","CANCEL_CATEGORY","reduce","acc","push","CLEAR","initialAnswer","options","initialAnswerState","showAnswerForm","GET_ANSWER","EDIT_ANSWER","REMOVE_ANSWER","CLOSE_ANSWER_FORM","parseRole","users","u","TagActionTypes","getUser","GET_USER","findUser","name","usersState","roles","role","user","userName","addUser","roleId","ADD_USER","editUser","EDIT_USER","removeUser","REMOVE_USER","CREATE_OPTIONS","storeUser","STORE_USER","SUPPORT_USERS","initialUser","pwd","department","initialUserRole","color","initialUsersState","userEditing","allUsers","roleOptions","userOptions","roleIdEditing","ownerUserId","GET_ALL_USERS","concat","userIdMax","userRole","CANCEL_USER","userEdited","ADD_ROLE","TOGGLE_ROLE","EDIT_ROLE","group","STORE_ROLE","REMOVE_ROLE","storageTagsDemo","RoleId","storageTags","initialTagState","tags","TopActionTypes","SUPPORT_TOP","parseObj","visited","authenticated","authenticate","loginUser","AUTHENTICATE","AUTHENTICATE_WRONG_PWD","AUTHENTICATE_WRONG_USERNAME","initialTopState","isAuthenticated","uuid","darkMode","showModalJSON","LOAD_TOP","authError","REGISTER","REGISTER_USERNAME_EXISTS","SHOW_MODAL_JSON","show","TOGGLE_MODE","UNAUTHENTICATE","rootReducer","combineReducers","tagState","GET_ALL_TAGS","tag","GET_TAG","ThemeActionKind","initialState","variant","bg","ThemeContext","createContext","themeReducer","ThemeProvider","props","initState","useReducer","Provider","children","inputAutosuggest","createRef","QuestionAutosuggestMulti","Autosuggest","AutoSuggest","onSuggestionsClearRequested","setState","suggestions","anyWord","valueWordRegex","questionWords","valWordRegex","questionWord","test","getSuggestions","highlighted","focus","current","this","multiSection","onSuggestionsFetchRequested","bind","onSuggestionSelected","getSuggestionValue","renderSuggestion","renderSectionTitle","getSectionSuggestions","onSuggestionHighlighted","highlightFirstSuggestion","renderInputComponent","renderSuggestionsContainer","focusInputOnSuggestionClick","inputProps","placeholder","onChange","e","changeEvent","autoFocus","event","suggestion","onSelectQuestion","params","matches","AutosuggestHighlightMatch","query","parts","AutosuggestHighlightParse","part","index","className","highlight","section","ref","restInputProps","containerProps","newValue","method","escapedValue","trim","replace","word","RegExp","React","connect","store","ownProps","id","option","CategForm","formik","useFormik","enableReinitialize","initialValues","validationSchema","Yup","required","onSubmit","values","saveForm","isEdit","Form","handleSubmit","Group","controlId","Label","Control","as","handleChange","onBlur","submitForm","style","width","rows","Text","touched","errors","UserName","toLocaleDateString","Button","size","onClick","cancel","useContext","Container","Select","disabled","selectedIndex","currentTarget","selectedOption","sourceOptions","statusOptions","AutoSuggestAnswer","setAnswerText","answersUnassigned","isMob","isMobile","navigator","userAgent","any","useHover","useState","isHovered","hoverProps","setValue","divRef","useRef","handleMouseOver","handleMouseOut","useEffect","node","addEventListener","removeEventListener","QuestionAnswerRow","hoverRef","questionAnswer","removeQuestionAnswer","fontSize","toLocaleTimeString","clipboard","writeText","stopPropagation","icon","faCopy","preventDefault","faWindowClose","AnsForm","AnswerForm","QuestionAnswers","questionAnswers","selectQuestionAnswer","copyQuestionAnswer","add","setTekst","setShow","handleClose","handleShow","showAssign","setShowAssign","height","overflowY","Table","responsive","striped","bordered","hover","colSpan","border","Modal","onHide","animation","centered","contentClassName","Header","closeButton","Title","Body","val","joinQuestionAnswers","sort","b","QuestForm","moreThan","isDisabled","setFieldValue","ContainerQuestionAnswers","editForm","storeQuestion","updateQuestion","QuestionRow","edit","remove","ListGroup","Item","backgroundColor","borderWidth","faEdit","CategoryRow","toggleCategory","editCategory","removeCategory","onSelectCategory","faCaretDown","faCaretRight","Badge","pill","faPlus","CategoryList","addCategory","inputEl","select","tagOptions","f","tagId","removeQuestion","getCategory","Page","useParams","fluid","Row","Col","md","ContainerCategoryList","borderRadius","padding","marginTop","ContainerCategoryForm","ContainerQuestionForm","SupportPage","open","lg","display","alignItems","textAlign","mapStateToProps","mapDispatchToProps","CategoriesPage","supporter","Support","ListRow","usedAnswers","getCategoryQuestion","alert","List","getUsedAnswers","arr","editAnswer","removeAnswer","UsrForm","min","r","onSelectUser","userRoleId","UserRow","RoleRow","toggleRole","editRole","removeRole","marginLeft","UserPage","addRole","storeRole","userRoles","target","defaultValue","UsersPage","LogForm","navigate","useNavigate","isRegister","handleBlur","maxLength","login","VIEWERS","OWNER","CANCEL","Landing","LocalStorage","s","i","key","clear","clearAnswers","clearQuestions","confirm","export","toISOString","filename","zip","JSZip","file","generateAsync","blob","document","createEvent","createElement","download","href","URL","createObjectURL","dataset","downloadurl","join","initMouseEvent","dispatchEvent","import","zipper","loadAsync","contents","files","async","content","k","Blob","signOut","toggleMode","setShowModalJSON","theme","strJSON","setStrJSON","Navbar","expand","collapseOnSelect","Brand","Toggle","Offcanvas","placement","closeVariant","Nav","onSelect","eventKey","body","classList","contains","Link","faSurprise","faQuestion","faAnchor","faUserFriends","NavDropdown","faUser","menuVariant","align","Divider","faDatabase","accept","Footer","whiteSpace","marginBlockStart","marginBlockEnd","toggleNavbar","NAVBAR_TOGGLE","checkAuthentication","app","path","element","About","createStore","applyMiddleware","thunk","sUserRoles","catch","getMessage","sTags","sessionId","floor","random","sessionStorage","toString","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.cd7772af.chunk.js","sourcesContent":["// Import redux types\r\nimport { ActionCreator, Dispatch } from 'redux';\r\nimport { ThunkAction } from 'redux-thunk';\r\n// Import Answer Typing\r\nimport { IAnswer, IAnswerState, IAnswerJson } from './types';\r\n\r\nimport { IAppState } from '../store/Store';\r\n\r\nimport data from \"./data.json\"\r\nconst parseFromJson = (): IAnswer[] => {\r\n\treturn data.map(a => parseDates(a))\r\n}\r\n\r\nconst parseFromLocalStorage = (arr: IAnswerJson[]) : IAnswer[] =>  {\r\n\treturn arr.map(a => parseDates(a));\r\n}\r\n\r\nconst parseDates = (a: IAnswerJson): IAnswer => ({\r\n\t...a, \r\n\tcreated: new Date(a.created)\r\n})\r\n\r\n// localStorage\r\nexport const SUPPORT_ANSWERS = 'SUPPORT_ANSWERS';\r\n \r\n// Create Action Constants\r\nexport enum AnswerActionTypes {\r\n  GET_ALL_ANSWERS = 'GET_ALL_ANSWERS',\r\n  GET_ANSWER = 'GET_ANSWER',\r\n  ADD_ANSWER = 'ADD_ANSWER',\r\n  EDIT_ANSWER = 'EDIT_ANSWER',\r\n  REMOVE_ANSWER = 'REMOVE_ANSWER',\r\n  STORE_ANSWER = 'STORE_ANSWER',\r\n  CANCEL_ANSWER = 'CANCEL_ANSWER',\r\n  CLOSE_ANSWER_FORM = 'CLOSE_ANSWER_FORM',\r\n  CLEAR = 'CLEAR'\r\n}\r\n\r\n// Interface for Get All Action Type\r\nexport interface IGetAll {\r\n\ttype: AnswerActionTypes.GET_ALL_ANSWERS;\r\n\tanswers: IAnswer[];\r\n }\r\n \r\nexport interface IGet {\r\n\ttype: AnswerActionTypes.GET_ANSWER;\r\n\tanswerId: number;\r\n}\r\n\r\nexport interface IAdd {\r\n\ttype: AnswerActionTypes.ADD_ANSWER;\r\n\tcreatedBy: number\r\n}\r\n\r\nexport interface IEdit {\r\n\ttype: AnswerActionTypes.EDIT_ANSWER;\r\n\tanswerId: number;\r\n}\r\n\r\nexport interface IRemove {\r\n\ttype: AnswerActionTypes.REMOVE_ANSWER;\r\n\tanswerId: number;\r\n}\r\n\r\nexport interface IStore {\r\n\ttype: AnswerActionTypes.STORE_ANSWER;\r\n\tanswer: IAnswer;\r\n\tassignToQuestion?: boolean\r\n}\r\n\r\nexport interface ICancel {\r\n\ttype: AnswerActionTypes.CANCEL_ANSWER;\r\n}\r\n\r\nexport interface ICloseAnswerForm {\r\n\ttype: AnswerActionTypes.CLOSE_ANSWER_FORM;\r\n}\r\n\r\ninterface IClear {\r\n\ttype: AnswerActionTypes.CLEAR;\r\n}\r\n\r\n// Combine the action types with a union (we assume there are more)\r\nexport type AnswerActions = IGetAll | IGet | IAdd | IEdit | IRemove | IStore | ICancel | ICloseAnswerForm | IClear;\r\n\r\nconst isWebStorageSupported = () => 'localStorage' in window\r\n\r\n// Get All Action <Promise<Return Type>, State Interface, Type of Param, Type of Action>\r\nexport const getAllAnswers: ActionCreator<\r\n\tThunkAction<Promise<any>, IAnswerState, null, IGetAll>\r\n> = () => {\r\n\treturn async (dispatch: Dispatch) => {\r\n\t\ttry {\r\n\t\t\t// const response = await axios.get('https://swapi.co/api/people/');\r\n\t\t\tlet answers: IAnswer[] = [];\r\n\t\t\tif (isWebStorageSupported()) {\r\n\t\t\t\tconst sAnswers = localStorage.getItem(SUPPORT_ANSWERS);\r\n\t\t\t\tif (sAnswers !== null) {\r\n\t\t\t\t\tconst parsed = JSON.parse(sAnswers);\r\n\t\t\t\t\tanswers = parseFromLocalStorage(parsed);\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tanswers = parseFromJson();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tanswers = parseFromJson();\r\n\t\t\t}\r\n\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: AnswerActionTypes.GET_ALL_ANSWERS,\r\n\t\t\t\tanswers\r\n\t\t\t});\r\n\t\t} catch (err) {\r\n\t\t\tconsole.error(err);\r\n\t\t}\r\n\t};\r\n};\r\n\r\n\r\nexport const addAnswer: ActionCreator<any> = () => {\r\n  return (dispatch: Dispatch, getState: () => IAppState) => {\r\n    try {\r\n      dispatch({\r\n        type: AnswerActionTypes.ADD_ANSWER,\r\n\t\tcreatedBy: getState().topState.top!.auth!.who!.userId,\t\r\n      });\r\n    } catch (err) {\r\n      console.error(err);\r\n    }\r\n  };\r\n};\r\n\r\nexport const getAnswer: ActionCreator<\r\n\tThunkAction<Promise<any>, IAnswerState, null, IGet>\r\n> = (answerId: number) => {\r\n\treturn async (dispatch: Dispatch) => {\r\n\t\ttry {\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: AnswerActionTypes.GET_ANSWER,\r\n\t\t\t\tanswerId\r\n\t\t\t});\r\n\t\t} catch (err) {\r\n\t\t\tconsole.error(err);\r\n\t\t}\r\n\t};\r\n};\r\n\r\nexport const editAnswer: ActionCreator<\r\n\tThunkAction<Promise<any>, IAnswerState, null, IEdit>\r\n> = (answerId: number) => {\r\n\treturn async (dispatch: Dispatch) => {\r\n\t\ttry {\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: AnswerActionTypes.EDIT_ANSWER,\r\n\t\t\t\tanswerId\r\n\t\t\t});\r\n\t\t} catch (err) {\r\n\t\t\tconsole.error(err);\r\n\t\t}\r\n\t};\r\n};\r\n\r\nexport const removeAnswer: ActionCreator<\r\n\tThunkAction<Promise<any>, IAnswerState, null, IGetAll>\r\n> = (answerId: number) => {\r\n\treturn async (dispatch: Dispatch) => {\r\n\t\ttry {\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: AnswerActionTypes.REMOVE_ANSWER,\r\n\t\t\t\tanswerId\r\n\t\t\t});\r\n\t\t} catch (err) {\r\n\t\t\tconsole.error(err);\r\n\t\t}\r\n\t};\r\n};\r\n\r\n\r\nexport const storeAnswer: ActionCreator<\r\n\tThunkAction<Promise<any>, IAppState, null, IStore>\r\n> = (answer: IAnswer, formMode: string) => {\r\n\treturn async (dispatch: Dispatch, getState: () => IAppState ): Promise<any> => {\r\n\t\ttry {\r\n\t\t\tif (formMode === 'add') {\r\n\t\t\t\tdispatch({\r\n\t\t\t\t\ttype: AnswerActionTypes.STORE_ANSWER,\r\n\t\t\t\t\tanswer\r\n\t\t\t\t});\r\n\t\t\t\treturn Promise.resolve(getState().answerState.answer!.answerId)\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tdispatch({\r\n\t\t\t\t\ttype: AnswerActionTypes.STORE_ANSWER,\r\n\t\t\t\t\tanswer\r\n\t\t\t\t});\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t}\r\n\t\tcatch (err) {\r\n\t\t\tconsole.error(err);\r\n\t\t}\r\n\t};\r\n};\r\n\r\nexport const cancelAnswer: ActionCreator<any> = () => {\r\n\treturn (dispatch: Dispatch) => {\r\n\t  try {\r\n\t\t dispatch({\r\n\t\t\ttype: AnswerActionTypes.CANCEL_ANSWER\r\n\t\t });\r\n\t  } catch (err) {\r\n\t\t console.error(err);\r\n\t  }\r\n\t};\r\n };\r\n\r\n export const closeAnswerForm: ActionCreator<any> = () => {\r\n\treturn (dispatch: Dispatch) => {\r\n\t\ttry {\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: AnswerActionTypes.CLOSE_ANSWER_FORM\r\n\t\t\t});\r\n\t\t} catch (err) {\r\n\t\t\tconsole.error(err);\r\n\t\t}\r\n\t};\r\n};\r\n\r\nexport const clearAnswers: ActionCreator<any> = () => {\r\n\treturn (dispatch: Dispatch) => {\r\n\t\ttry {\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: AnswerActionTypes.CLEAR\r\n\t\t\t});\r\n\t\t} catch (err) {\r\n\t\t\tconsole.error(err);\r\n\t\t}\r\n\t};\r\n};\r\n \r\n\r\n// const addAnswerToLocalStorage = (answer: IAnswer): Promise<any> => {\r\n// \treturn new Promise((resolve, reject) => {\r\n// \t\tsetTimeout(() => {\r\n// \t\t\tresolve({\r\n// \t\t\t\t'status': 200,\r\n// \t\t\t\t'content-type': 'application/json',\r\n// \t\t\t\t'data' : {\r\n// \t\t\t\t'results': answer\r\n// \t\t\t\t}\r\n// \t\t\t})\r\n// \t\t}, 50)\r\n// \t})\r\n// }\r\n\r\n","// Import redux types\r\nimport { ActionCreator, Dispatch } from 'redux';\r\nimport { ThunkAction } from 'redux-thunk';\r\n\r\n// Import Question Typing\r\nimport { IQuestion, ICategory, ICategoryJson, ICategoriesState, IQuestionJson, ICategoryState } from './types';\r\n\r\nimport { addAnswer, AnswerActionTypes, storeAnswer } from '../Answers/actions'\r\nimport { IAnswer } from '../Answers/types';\r\n\r\n///////////////////////////////////////////////////\r\n// localStorage\r\nimport { initialCategory, SUPPORT_CATEGORIES } from './categoriesReducer';\r\n\r\nimport data from \"./data.json\"\r\nimport { IAppState } from '../store/Store';\r\n\r\nconst parseFromJson = (): ICategory[] => {\r\n\treturn data.map(g => parseDates(g));\r\n}\r\n\r\nconst parseQuestionsFromLocalStorage = (questions: IQuestionJson[]): IQuestion[] => {\r\n\treturn questions.map(q => ({\r\n\t\t\t...q,\r\n\t\t\tcategoryId: q.categoryId!,\r\n\t\t\twords: q.text.split(' '),\r\n\t\t\tanswers: q.answers.map(a => ({ ...a, assigned: new Date(a.assigned) })),\r\n\t\t\tcreated: new Date(q.created)\r\n\t\t})\r\n\t)\r\n}\r\n\r\nconst parseFromLocalStorage = (arr: ICategoryJson[]): ICategory[] => {\r\n\treturn arr.map(g => parseDates(g));\r\n}\r\n\r\nconst parseDates = (g: ICategoryJson): ICategory => {\r\n\treturn {\r\n\t\t...g,\r\n\t\tquestions: g.questions.map(q => ({\r\n\t\t\t...q,\r\n\t\t\tcategoryId: g.categoryId,\r\n\t\t\tanswers: q.answers.map(a => ({ ...a, assigned: new Date(a.assigned) })),\r\n\t\t\tcreated: new Date(q.created)\r\n\t\t})),\r\n\t\tcreated: new Date(g.created)\r\n\t}\r\n}\r\n\r\n// Create Action Constants\r\nexport enum QuestionActionTypes {\r\n\tLOAD_CATEGORIES = 'LOAD_CATEGORIES',\r\n\tGET_QUESTION = 'GET_QUESTION',\r\n\tADD_QUESTION = 'ADD_QUESTION',\r\n\tEDIT_QUESTION = 'EDIT_QUESTION',\r\n\tREMOVE_QUESTION = 'REMOVE_QUESTION',\r\n\tSTORE_QUESTION = 'STORE_QUESTION',\r\n\tUPDATE_QUESTION = 'UPDATE_QUESTION',\r\n\tCANCEL_QUESTION = 'CANCEL_QUESTION',\r\n\tCLOSE_QUESTION_FORM = 'CLOSE_QUESTION_FORM',\r\n\tOPEN_QUESTION_FORM = 'OPEN_QUESTION_FORM',\r\n\r\n\t// groups\r\n\tGET_CATEGORY = 'GET_CATEGORY',\r\n\tADD_CATEGORY = 'ADD_CATEGORY',\r\n\tTOGGLE_CATEGORY = 'EXPAND_CATEGORY',\r\n\tEDIT_CATEGORY = 'EDIT_CATEGORY',\r\n\tREMOVE_CATEGORY = 'REMOVE_CATEGORY',\r\n\tSTORE_CATEGORY = 'STORE_CATEGORY',\r\n\tUPDATE_CATEGORY = 'UPDATE_CATEGORY',\r\n\tCANCEL_CATEGORY = 'CANCEL_CATEGORY',\r\n\t// question answers\r\n\tREMOVE_QUESTION_ANSWER = 'REMOVE_QUESTION_ANSWER',\r\n\tASSIGN_QUESTION_ANSWER = 'ASSIGN_QUESTION_ANSWER',\r\n\t// localSTorage\r\n\tSET_LAST_ANSWER_ID = 'SET_LAST_ANSWER_ID',\r\n\tCLEAR = 'CLEAR'\r\n}\r\n\r\n\r\n// Interface for Get All Action Type\r\nexport interface ILoad {\r\n\ttype: QuestionActionTypes.LOAD_CATEGORIES;\r\n\tcategories: ICategory[];\r\n\tcategoryQuestions: Map<number, ICategoryState>\r\n}\r\n\r\n\r\nexport interface IGet {\r\n\ttype: QuestionActionTypes.GET_QUESTION;\r\n\tcategoryId: number;\r\n\tquestionId: number;\r\n}\r\n\r\nexport interface IAdd {\r\n\ttype: QuestionActionTypes.ADD_QUESTION;\r\n\tcreatedBy: number;\r\n\tcategoryId: number;\r\n\ttext: string;\r\n}\r\n\r\nexport interface IEdit {\r\n\ttype: QuestionActionTypes.EDIT_QUESTION;\r\n\tcategoryId: number;\r\n\tquestionId: number;\r\n\tshowQuestionForm: boolean;\r\n}\r\n\r\nexport interface IRemove {\r\n\ttype: QuestionActionTypes.REMOVE_QUESTION;\r\n\tcategoryId: number;\r\n\tquestionId: number;\r\n}\r\n\r\n\r\n\r\nexport interface IStore {\r\n\ttype: QuestionActionTypes.STORE_QUESTION;\r\n\tquestion: IQuestion;\r\n}\r\n\r\nexport interface IUpdate {\r\n\ttype: QuestionActionTypes.UPDATE_QUESTION;\r\n\tquestion: IQuestion;\r\n}\r\n\r\nexport interface ICancel {\r\n\ttype: QuestionActionTypes.CANCEL_QUESTION;\r\n}\r\n\r\nexport interface ICloseQuestionForm {\r\n\ttype: QuestionActionTypes.CLOSE_QUESTION_FORM;\r\n}\r\n\r\nexport interface IOpenQuestionForm {\r\n\ttype: QuestionActionTypes.OPEN_QUESTION_FORM;\r\n}\r\n\r\n\r\n// group\r\n\r\nexport interface IGetCategory {\r\n\ttype: QuestionActionTypes.GET_CATEGORY;\r\n\tcategoryId: number,\r\n\tshowCategoryForm: boolean\r\n}\r\n\r\nexport interface IAddCategory {\r\n\ttype: QuestionActionTypes.ADD_CATEGORY;\r\n\t//categoryId: number\r\n\tshowCategoryForm: boolean\r\n}\r\n\r\nexport interface ICancelCategory {\r\n\ttype: QuestionActionTypes.CANCEL_CATEGORY;\r\n}\r\n\r\n\r\nexport interface IToggleCategory {\r\n\ttype: QuestionActionTypes.TOGGLE_CATEGORY;\r\n\tcategoryId: number\r\n}\r\n\r\nexport interface IEditCategory {\r\n\ttype: QuestionActionTypes.EDIT_CATEGORY;\r\n\tcategoryId: number,\r\n\tshowCategoryForm: boolean\r\n}\r\n\r\nexport interface IRemoveCategory {\r\n\ttype: QuestionActionTypes.REMOVE_CATEGORY;\r\n\tcategoryId: number\r\n}\r\n\r\nexport interface IStoreCategory {\r\n\ttype: QuestionActionTypes.STORE_CATEGORY;\r\n\tcategory: ICategory;\r\n}\r\n\r\nexport interface IUpdateCategory {\r\n\ttype: QuestionActionTypes.UPDATE_CATEGORY;\r\n\tcategory: ICategory;\r\n}\r\n\r\nexport interface ICancelCategory {\r\n\ttype: QuestionActionTypes.CANCEL_CATEGORY;\r\n}\r\n\r\n\r\n// question answers\r\nexport interface IRemoveQuestionAnswer {\r\n\ttype: QuestionActionTypes.REMOVE_QUESTION_ANSWER;\r\n\tcategoryId: number,\r\n\tquestionId: number,\r\n\tanswerId: number\r\n}\r\n\r\nexport interface IAssignQuestionAnswer {\r\n\ttype: QuestionActionTypes.ASSIGN_QUESTION_ANSWER;\r\n\tcategoryId: number,\r\n\tquestionId: number,\r\n\tanswerId: number,\r\n\tassignedBy: number,\r\n\ttekst?: string\r\n}\r\n\r\nexport interface IAddAndAssignNewAnswer {\r\n\ttype: AnswerActionTypes.STORE_ANSWER;\r\n\tcategoryId: number,\r\n\tquestionId: number,\r\n\tanswer: IAnswer;\r\n}\r\n\r\nexport interface IAddAndAssignNewAnswer {\r\n\ttype: AnswerActionTypes.STORE_ANSWER;\r\n\tcategoryId: number,\r\n\tquestionId: number,\r\n\tanswer: IAnswer;\r\n}\r\n\r\nexport interface IClear {\r\n\ttype: QuestionActionTypes.CLEAR;\r\n}\r\n\r\n\r\n// Combine the action types with a union (we assume there are more)\r\nexport type QuestionActions = ILoad | IGet | IAdd | IEdit | IRemove | IStore | IUpdate | ICancel |\r\n\tIGetCategory | IAddCategory | IToggleCategory | IEditCategory | IRemoveCategory |\r\n\tIStoreCategory | IUpdateCategory | ICancelCategory |\r\n\tIRemoveQuestionAnswer | IAssignQuestionAnswer |\r\n\tIAddAndAssignNewAnswer |\r\n\tICloseQuestionForm | IOpenQuestionForm | IClear;\r\n\r\nconst isWebStorageSupported = () => 'localStorage' in window\r\n\r\n\r\n// Get All Action <Promise<Return Type>, State Interface, Type of Param, Type of Action>\r\nexport const loadCategories: ActionCreator<\r\n\tThunkAction<Promise<any>, ICategoriesState, null, ILoad>\r\n> = () => {\r\n\treturn async (dispatch: Dispatch) => {\r\n\t\ttry {\r\n\t\t\tlet categories: ICategory[] = [];\r\n\t\t\tlet loadedFromStorage = false;\r\n\t\t\tif (isWebStorageSupported()) {\r\n\t\t\t\tconst sCategories = localStorage.getItem(SUPPORT_CATEGORIES);\r\n\t\t\t\tconsole.log(\"sCategories\", sCategories)\r\n\t\t\t\tif (sCategories !== null) {\r\n\t\t\t\t\t// load from storage\r\n\t\t\t\t\tconst categoriesJson = JSON.parse(sCategories);\r\n\t\t\t\t\tcategories = parseFromLocalStorage(categoriesJson);\r\n\t\t\t\t\tcategories.forEach(category => {\r\n\t\t\t\t\t\tconst sQuestions = localStorage.getItem(`CATEGORY_${category.categoryId}`);\r\n\t\t\t\t\t\tif (sQuestions) {\r\n\t\t\t\t\t\t\tconst json = JSON.parse(sQuestions);\r\n\t\t\t\t\t\t\tcategory.questions = parseQuestionsFromLocalStorage(json);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t})\r\n\t\t\t\t\tloadedFromStorage = true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tconsole.log({categories})\r\n\r\n\t\t\tif (!loadedFromStorage) {\r\n\t\t\t\t// load from data\r\n\t\t\t\tcategories = parseFromJson();\r\n\t\t\t\tfor (let category of categories) {\r\n\t\t\t\t\tcategory.questions.forEach(q => q.categoryId = category.categoryId);\r\n\t\t\t\t\tlocalStorage.setItem(`CATEGORY_${category.categoryId}`, JSON.stringify(category.questions));\r\n\t\t\t\t\tcategory.questions.forEach(q => q.words = q.text.split(' '));\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tconst categoryQuestions = new Map<number, ICategoryState>();\r\n\t\t\tfor (let category of categories) {\r\n\t\t\t\tconst categoryState: ICategoryState = {\r\n\t\t\t\t\tquestions: [...category.questions]\r\n\t\t\t\t}\r\n\t\t\t\tcategoryQuestions.set(category.categoryId, categoryState);\r\n\t\t\t\tcategory.questions = [];\r\n\t\t\t}\r\n\r\n\t\t\tif (!loadedFromStorage) {\r\n\t\t\t\tlocalStorage.setItem(SUPPORT_CATEGORIES, JSON.stringify(categories));\r\n\t\t\t}\r\n\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: QuestionActionTypes.LOAD_CATEGORIES,\r\n\t\t\t\tcategories,\r\n\t\t\t\tcategoryQuestions\r\n\t\t\t});\r\n\t\t}\r\n\t\tcatch (err) {\r\n\t\t\tconsole.error(err);\r\n\t\t}\r\n\t};\r\n};\r\n\r\n\r\n// Get Question <Promise<Return Type>, State Interface, Type of Param, Type of Action> \r\nexport const getQuestion: ActionCreator<\r\n\tThunkAction<Promise<any>, ICategoriesState, string, IGet>\r\n> = (categoryId: number, questionId: number) => {\r\n\treturn async (dispatch: Dispatch) => {\r\n\t\ttry {\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: QuestionActionTypes.GET_QUESTION,\r\n\t\t\t\tcategoryId,\r\n\t\t\t\tquestionId\r\n\t\t\t});\r\n\t\t} catch (err) {\r\n\t\t\tconsole.error(err);\r\n\t\t}\r\n\t};\r\n};\r\n\r\ninterface IMsg {\r\n\tttype: string,\r\n\tdata: object\r\n}\r\n\r\n\r\n\r\nexport const addQuestion: ActionCreator<\r\n\tThunkAction<Promise<any>, IAppState, null, IAdd>\r\n> = (categoryId: number, text: string, canEdit?: boolean) => {\r\n\treturn async (dispatch: Dispatch, getState: () => IAppState) => {\r\n\t\ttry {\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: QuestionActionTypes.ADD_QUESTION,\r\n\t\t\t\tcreatedBy: getState().topState.top!.auth!.who!.userId,\r\n\t\t\t\tcategoryId,\r\n\t\t\t\ttext,\r\n\t\t\t\tshowCategoryForm: false\r\n\t\t\t});\r\n\t\t}\r\n\t\tcatch (err) {\r\n\t\t\tconsole.error(err);\r\n\t\t}\r\n\t};\r\n};\r\n\r\nexport const editQuestion: ActionCreator<\r\n\tThunkAction<Promise<any>, ICategoriesState, null, IEdit>\r\n> = (categoryId: number, questionId: number, showQuestionForm: boolean) => {\r\n\treturn async (dispatch: Dispatch) => {\r\n\t\ttry {\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: QuestionActionTypes.EDIT_QUESTION,\r\n\t\t\t\tcategoryId,\r\n\t\t\t\tquestionId,\r\n\t\t\t\tshowCategoryForm: false,\r\n\t\t\t\tshowQuestionForm\r\n\t\t\t});\r\n\t\t} catch (err) {\r\n\t\t\tconsole.error(err);\r\n\t\t}\r\n\t};\r\n};\r\n\r\nexport const removeQuestion: ActionCreator<\r\n\tThunkAction<Promise<any>, ICategoriesState, null, IRemove>\r\n> = (categoryId: number, questionId: number) => {\r\n\treturn async (dispatch: Dispatch) => {\r\n\t\ttry {\r\n\t\t\tawait delay()\r\n\t\t\t// warning: store answer, after upodate, to local storage\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: QuestionActionTypes.REMOVE_QUESTION,\r\n\t\t\t\tcategoryId,\r\n\t\t\t\tquestionId\r\n\t\t\t});\r\n\t\t} catch (err) {\r\n\t\t\tconsole.error(err);\r\n\t\t}\r\n\t};\r\n};\r\n\r\nexport const selectQuestionAnswer: ActionCreator<\r\n\tThunkAction<Promise<any>, ICategoriesState, null, IRemoveQuestionAnswer>\r\n> = (categoryId: number, questionId: number, answerId: number) => {\r\n\treturn async (dispatch: Dispatch) => {\r\n\t\ttry {\r\n\t\t\tawait delay()\r\n\t\t\t// warning: store answer, after upodate, to local storage\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: QuestionActionTypes.REMOVE_QUESTION_ANSWER,\r\n\t\t\t\tcategoryId: categoryId,\r\n\t\t\t\tquestionId: questionId,\r\n\t\t\t\tanswerId: answerId,\r\n\t\t\t});\r\n\t\t\t//dispatch<any>(getQuestion(questionId))\t// refresh state of question\r\n\t\t}\r\n\t\tcatch (err) {\r\n\t\t\tconsole.error(err);\r\n\t\t}\r\n\t};\r\n};\r\n\r\nexport const copyQuestionAnswer: ActionCreator<\r\n\tThunkAction<Promise<any>, ICategoriesState, null, IRemoveQuestionAnswer>\r\n> = (categoryId: number, questionId: number, answerId: number) => {\r\n\treturn async (dispatch: Dispatch) => {\r\n\t\ttry {\r\n\t\t\tawait delay()\r\n\t\t\t// warning: store answer, after upodate, to local storage\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: QuestionActionTypes.REMOVE_QUESTION_ANSWER,\r\n\t\t\t\tcategoryId: categoryId,\r\n\t\t\t\tquestionId: questionId,\r\n\t\t\t\tanswerId: answerId,\r\n\t\t\t});\r\n\t\t\t//dispatch<any>(getQuestion(questionId))\t// refresh state of question\r\n\t\t}\r\n\t\tcatch (err) {\r\n\t\t\tconsole.error(err);\r\n\t\t}\r\n\t};\r\n};\r\n\r\nexport const removeQuestionAnswer: ActionCreator<\r\n\tThunkAction<Promise<any>, ICategoriesState, null, IRemoveQuestionAnswer>\r\n> = (categoryId: number, questionId: number, answerId: number) => {\r\n\treturn async (dispatch: Dispatch) => {\r\n\t\ttry {\r\n\t\t\tawait delay()\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: QuestionActionTypes.REMOVE_QUESTION_ANSWER,\r\n\t\t\t\tcategoryId: categoryId,\r\n\t\t\t\tquestionId: questionId,\r\n\t\t\t\tanswerId: answerId,\r\n\t\t\t});\r\n\t\t\t// dispatch<any>(getQuestion(questionId))\t// refresh state of question\r\n\t\t}\r\n\t\tcatch (err) {\r\n\t\t\tconsole.error(err);\r\n\t\t}\r\n\t};\r\n};\r\n\r\n\r\nexport const assignQuestionAnswer: ActionCreator<\r\n\tThunkAction<Promise<any>, IAppState, null, IRemoveQuestionAnswer>\r\n> = (categoryId: number, questionId: number, answerId: number, tekst?: string) => {\r\n\treturn async (dispatch: Dispatch, getState: () => IAppState) => {\r\n\t\ttry {\r\n\t\t\tawait delay();\r\n\t\t\t// warning: store answer, after upodate, to local storage\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: QuestionActionTypes.ASSIGN_QUESTION_ANSWER,\r\n\t\t\t\tcategoryId,\r\n\t\t\t\tquestionId,\r\n\t\t\t\tanswerId,\r\n\t\t\t\tassignedBy: getState().topState.top!.auth!.who!.userId\r\n\t\t\t});\r\n\t\t\t//dispatch<any>(getQuestion(questionId))\t// refresh state of question\r\n\t\t}\r\n\t\tcatch (err) {\r\n\t\t\tconsole.error(err);\r\n\t\t}\r\n\t};\r\n};\r\n\r\n\r\nconst syncWithOthers = (type: string, entity: any) => {\r\n\t/*\r\n\tconst btnSync = document.getElementById('btnSync');\r\n\tlocalStorage.setItem('syncAction', JSON.stringify({\r\n\t\t\ttype,\r\n\t\t\tentity,\r\n\t\t\tsessionId: sessionStorage.getItem('sessionId')\r\n\t\t})\r\n\t);\r\n\tbtnSync!.click();\r\n\t*/\r\n};\r\n\r\nexport const storeQuestion: ActionCreator<\r\n\tThunkAction<Promise<any>, IAppState, null, IStore>\r\n> = (question: IQuestion) => {\r\n\treturn async (dispatch: Dispatch, getState: () => IAppState) => {\r\n\t\tconst { categoryId } = question;\r\n\t\ttry {\r\n\t\t\t//await delay();\r\n\t\t\tif (categoryId === 0) {\r\n\t\t\t\tconst res = await addCategoryUnknown(getState(), dispatch);\r\n\t\t\t\tdispatch({\r\n\t\t\t\t\ttype: QuestionActionTypes.STORE_QUESTION,\r\n\t\t\t\t\tquestion\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tdispatch({\r\n\t\t\t\t\ttype: QuestionActionTypes.STORE_QUESTION,\r\n\t\t\t\t\tquestion\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\t\tcatch (err) {\r\n\t\t\tconsole.error(err);\r\n\t\t}\r\n\t};\r\n};\r\n\r\nconst addCategoryUnknown = async (state: IAppState, dispatch: Dispatch) => {\r\n\tif (state.categoriesState.categories.find(c => c.categoryId === 0))\r\n\t\treturn Promise.resolve(-1);\r\n\tconst newCategory = {\r\n\t\t...initialCategory,\r\n\t\tcategoryId: 0,\r\n\t\ttitle: 'Unknown',\r\n\t\tquestions: []\r\n\t}\r\n\treturn dispatch<any>(storeCategory(newCategory))\r\n\t\t.then((categoryId: number) => {\r\n\t\t\treturn categoryId;\r\n\t\t});\r\n}\r\n\r\nexport const updateQuestion: ActionCreator<\r\n\tThunkAction<Promise<any>, IAppState, null, IUpdate>\r\n> = (question: IQuestion) => {\r\n\treturn async (dispatch: Dispatch, getState: () => IAppState) => {\r\n\t\ttry {\r\n\t\t\tconst { categoryId } = question;\r\n\t\t\tawait delay();\r\n\t\t\tif (categoryId === 0) {\r\n\t\t\t\tconst res = await addCategoryUnknown(getState(), dispatch);\r\n\t\t\t\tdispatch({\r\n\t\t\t\t\ttype: QuestionActionTypes.UPDATE_QUESTION,\r\n\t\t\t\t\tquestion\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tdispatch({\r\n\t\t\t\t\ttype: QuestionActionTypes.UPDATE_QUESTION,\r\n\t\t\t\t\tquestion\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\t// if (doSync) {\r\n\t\t\t// \tquestion.categoryIdWas = getState().categoriesState.questionCopy!.categoryId;\r\n\t\t\t// \tsyncWithOthers(QuestionActionTypes.UPDATE_QUESTION, question);\r\n\t\t\t// }\r\n\t\t}\r\n\t\tcatch (err) {\r\n\t\t\tconsole.error(err);\r\n\t\t}\r\n\t};\r\n};\r\n\r\n\r\nconst delay = (): Promise<any> => {\r\n\treturn new Promise((resolve, reject) => {\r\n\t\tsetTimeout(() => {\r\n\t\t\tresolve({\r\n\t\t\t\t'status': 200,\r\n\t\t\t\t'content-type': 'application/json',\r\n\t\t\t\t'data': {\r\n\t\t\t\t\t'results': 1\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t}, 50)\r\n\t})\r\n}\r\n\r\nexport const cancelQuestion: ActionCreator<any> = () => {\r\n\treturn (dispatch: Dispatch) => {\r\n\t\ttry {\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: QuestionActionTypes.CANCEL_QUESTION\r\n\t\t\t});\r\n\t\t} catch (err) {\r\n\t\t\tconsole.error(err);\r\n\t\t}\r\n\t};\r\n};\r\n\r\nexport const closeQuestionForm: ActionCreator<any> = () => {\r\n\treturn (dispatch: Dispatch) => {\r\n\t\ttry {\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: QuestionActionTypes.CLOSE_QUESTION_FORM\r\n\t\t\t});\r\n\t\t} catch (err) {\r\n\t\t\tconsole.error(err);\r\n\t\t}\r\n\t};\r\n};\r\n\r\n\r\n\r\n\r\nexport const openQuestionForm: ActionCreator<any> = () => {\r\n\treturn (dispatch: Dispatch) => {\r\n\t\ttry {\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: QuestionActionTypes.OPEN_QUESTION_FORM\r\n\t\t\t});\r\n\t\t} catch (err) {\r\n\t\t\tconsole.error(err);\r\n\t\t}\r\n\t};\r\n};\r\n\r\n\r\nexport const getCategory: ActionCreator<\r\n\tThunkAction<Promise<any>, ICategoriesState, string, IGet>\r\n> = (categoryId: number, showCategoryForm: boolean) => {\r\n\treturn async (dispatch: Dispatch) => {\r\n\t\ttry {\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: QuestionActionTypes.GET_CATEGORY,\r\n\t\t\t\tcategoryId,\r\n\t\t\t\tshowCategoryForm\r\n\t\t\t});\r\n\t\t} catch (err) {\r\n\t\t\tconsole.error(err);\r\n\t\t}\r\n\t};\r\n};\r\n\r\n\r\nexport const addCategory: ActionCreator<\r\n\tThunkAction<Promise<any>, ICategoriesState, null, IAddCategory>\r\n> = () => {\r\n\treturn async (dispatch: Dispatch) => {\r\n\t\ttry {\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: QuestionActionTypes.ADD_CATEGORY,\r\n\t\t\t\tshowCategoryForm: true\r\n\t\t\t});\r\n\t\t} catch (err) {\r\n\t\t\tconsole.error(err);\r\n\t\t}\r\n\t};\r\n};\r\n\r\nexport const toggleCategory: ActionCreator<\r\n\tThunkAction<Promise<any>, ICategoriesState, null, IEditCategory>\r\n> = (categoryId: number) => {\r\n\treturn async (dispatch: Dispatch) => {\r\n\t\ttry {\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: QuestionActionTypes.TOGGLE_CATEGORY,\r\n\t\t\t\tcategoryId\r\n\t\t\t});\r\n\t\t} catch (err) {\r\n\t\t\tconsole.error(err);\r\n\t\t}\r\n\t};\r\n};\r\n\r\n\r\nexport const editCategory: ActionCreator<\r\n\tThunkAction<Promise<any>, ICategoriesState, null, IEditCategory>\r\n> = (categoryId: number) => {\r\n\treturn async (dispatch: Dispatch) => {\r\n\t\ttry {\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: QuestionActionTypes.EDIT_CATEGORY,\r\n\t\t\t\tcategoryId,\r\n\t\t\t\tshowCategoryForm: true\r\n\t\t\t});\r\n\t\t} catch (err) {\r\n\t\t\tconsole.error(err);\r\n\t\t}\r\n\t};\r\n}\r\n\r\nexport const removeCategory: ActionCreator<\r\n\tThunkAction<Promise<any>, ICategoriesState, null, IRemoveCategory>\r\n> = (categoryId: number) => {\r\n\treturn async (dispatch: Dispatch) => {\r\n\t\ttry {\r\n\t\t\tawait delay()\r\n\t\t\t// warning: store answer, after update, to local storage\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: QuestionActionTypes.REMOVE_CATEGORY,\r\n\t\t\t\tcategoryId\r\n\t\t\t});\r\n\t\t} catch (err) {\r\n\t\t\tconsole.error(err);\r\n\t\t}\r\n\t};\r\n};\r\n\r\nexport const storeCategory: ActionCreator<\r\n\tThunkAction<Promise<any>, IAppState, null, IStoreCategory>\r\n> = (category: ICategory) => {\r\n\treturn async (dispatch: Dispatch, getState: () => IAppState) => {\r\n\t\ttry {\r\n\t\t\t// await updateCategoryFromLocalStorage(group);\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: QuestionActionTypes.STORE_CATEGORY,\r\n\t\t\t\tcategory\r\n\t\t\t});\r\n\t\t\treturn Promise.resolve(category.categoryId) //getState().categoriesState.categories.length)\r\n\t\t}\r\n\t\tcatch (err) {\r\n\t\t\tconsole.error(err);\r\n\t\t}\r\n\t};\r\n};\r\n\r\n\r\nexport const updateCategory: ActionCreator<\r\n\tThunkAction<Promise<any>, ICategoriesState, null, IUpdateCategory>\r\n> = (category: ICategory) => {\r\n\treturn async (dispatch: Dispatch) => {\r\n\t\ttry {\r\n\t\t\t// await updateCategoryFromLocalStorage(group);\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: QuestionActionTypes.UPDATE_CATEGORY,\r\n\t\t\t\tcategory\r\n\t\t\t});\r\n\t\t}\r\n\t\tcatch (err) {\r\n\t\t\tconsole.error(err);\r\n\t\t}\r\n\t};\r\n};\r\n\r\nexport const cancelCategory: ActionCreator<any> = () => {\r\n\treturn (dispatch: Dispatch) => {\r\n\t\ttry {\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: QuestionActionTypes.CANCEL_CATEGORY\r\n\t\t\t});\r\n\t\t}\r\n\t\tcatch (err) {\r\n\t\t\tconsole.error(err);\r\n\t\t}\r\n\t};\r\n};\r\n\r\n\r\nexport const addAndAssignNewAnswer: ActionCreator<\r\n\tThunkAction<Promise<any>, IAppState, null, IStore>\r\n> = (categoryId: number, questionId: number, answer: IAnswer, formMode: string) => {\r\n\treturn async (dispatch: Dispatch, getState: () => IAppState) => {\r\n\t\ttry {\r\n\t\t\tanswer.createdBy = getState().topState.top!.auth!.who!.userId;\r\n\t\t\tdispatch<any>(addAnswer());\r\n\t\t\tdispatch<any>(storeAnswer(answer, formMode))\r\n\t\t\t\t.then((answerId: number) => {\r\n\t\t\t\t\tdispatch<any>(assignQuestionAnswer(categoryId, questionId, answerId))\r\n\t\t\t\t});\r\n\t\t}\r\n\t\tcatch (err) {\r\n\t\t\tconsole.error(err);\r\n\t\t}\r\n\t};\r\n};\r\n\r\nexport const clearQuestions: ActionCreator<any> = () => {\r\n\treturn (dispatch: Dispatch) => {\r\n\t\ttry {\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: QuestionActionTypes.CLEAR\r\n\t\t\t});\r\n\t\t} catch (err) {\r\n\t\t\tconsole.error(err);\r\n\t\t}\r\n\t};\r\n};","// Import redux types\r\nimport { ActionCreator, Dispatch } from 'redux';\r\nimport { ThunkAction } from 'redux-thunk';\r\n\r\n// Import User Typing\r\nimport { IUser, IRole, IRoleJson, IUsersState } from './types';\r\n\r\n///////////////////////////////////////////////////\r\n// localStorage\r\nimport { SUPPORT_USERS } from './reducer';\r\n\r\nimport data from \"./data.json\"\r\nimport { IAppState } from '../store/Store';\r\n\r\nconst parseFromJson = (): IRole[] => {\r\n\treturn data.map(g => {\r\n\t\treturn parseRole(g)\r\n\t})\r\n}\r\n\r\nconst parseFromLocalStorage = (arr: IRoleJson[]): IRole[] => {\r\n\treturn arr.map(g => parseRole(g));\r\n}\r\n\r\nconst parseRole = (g: IRoleJson): IRole => ({\r\n\t...g,\r\n\tusers: g.users.map(u => ({ ...u, created: new Date(u.created) })),\r\n\tcreated: new Date(g.created)\r\n})\r\n\r\n\r\n// Create Action Constants\r\nexport enum UserActionTypes {\r\n\tLOAD_USER_GROUPS = 'LOAD_USER_GROUPS',\r\n\tCREATE_OPTIONS = 'CREATE_OPTIONS',\r\n\tGET_ALL_USERS = 'GET_ALL_USERS',\r\n\tGET_USER = 'GET_USER',\r\n\tADD_USER = 'ADD_USER',\r\n\tEDIT_USER = 'EDIT_USER',\r\n\tREMOVE_USER = 'REMOVE_USER',\r\n\tSTORE_USER = 'STORE_USER',\r\n\tCANCEL_USER = 'CANCEL_USER',\r\n\t// groups\r\n\tADD_ROLE = 'ADD_ROLE',\r\n\tTOGGLE_ROLE = 'EXPAND_ROLE',\r\n\tEDIT_ROLE = 'EDIT_ROLE',\r\n\tREMOVE_ROLE = 'REMOVE_ROLE',\r\n\tSTORE_ROLE = 'STORE_ROLE',\r\n\t// localSTorage\r\n\tSET_IS_DETAIL = 'SET_IS_DETAIL',\r\n}\r\n\r\n\r\n// Interface for Get All Action Type\r\nexport interface IGetAll {\r\n\ttype: UserActionTypes.GET_ALL_USERS;\r\n\troles: IRole[];\r\n}\r\n\r\nexport interface ICreateOptions {\r\n\ttype: UserActionTypes.CREATE_OPTIONS;\r\n}\r\n\r\nexport interface IGet {\r\n\ttype: UserActionTypes.GET_USER;\r\n\tuserId: number;\r\n}\r\n\r\nexport interface IAdd {\r\n\ttype: UserActionTypes.ADD_USER;\r\n\tcreatedBy: number,\r\n\troleId: number,\r\n\ttext: string\r\n\t//userId: number,\r\n}\r\n\r\nexport interface IEdit {\r\n\ttype: UserActionTypes.EDIT_USER;\r\n\troleId: number,\r\n\tuserId: number\r\n}\r\n\r\nexport interface IRemove {\r\n\ttype: UserActionTypes.REMOVE_USER;\r\n\troleId: number,\r\n\tuserId: number,\r\n}\r\n\r\nexport interface IStore {\r\n\ttype: UserActionTypes.STORE_USER;\r\n\tuser: IUser;\r\n\tformMode: string;\r\n}\r\n\r\nexport interface ICancel {\r\n\ttype: UserActionTypes.CANCEL_USER;\r\n}\r\n\r\n// group\r\nexport interface IAddRole {\r\n\ttype: UserActionTypes.ADD_ROLE;\r\n\t//roleId: number\r\n}\r\n\r\nexport interface IToggleRole {\r\n\ttype: UserActionTypes.TOGGLE_ROLE;\r\n\troleId: number\r\n}\r\n\r\nexport interface IEditRole {\r\n\ttype: UserActionTypes.EDIT_ROLE;\r\n\troleId: number\r\n}\r\n\r\nexport interface IRemoveRole {\r\n\ttype: UserActionTypes.REMOVE_ROLE;\r\n\troleId: number\r\n}\r\n\r\nexport interface IStoreRole {\r\n\ttype: UserActionTypes.STORE_ROLE;\r\n\tgroup: IRole;\r\n}\r\n\r\n\r\n// Combine the action types with a union (we assume there are more)\r\nexport type UserActions = IGetAll | IGet | IAdd | IEdit | IRemove | IStore | ICancel |\r\n\tIAddRole | IToggleRole | IEditRole | IRemoveRole | IStoreRole |\r\n\tICreateOptions;\r\n\r\nconst isWebStorageSupported = () => 'localStorage' in window\r\n\r\n\r\nexport const getAllUsers: ActionCreator<\r\n\tThunkAction<Promise<any>, IUsersState, null, IGetAll>\r\n> = () => {\r\n\treturn async (dispatch: Dispatch) => {\r\n\t\ttry {\r\n\t\t\t// const response = await axios.get('https://swapi.co/api/people/');\r\n\t\t\tlet roles: IRole[] = [];\r\n\t\t\tif (isWebStorageSupported()) {\r\n\t\t\t\tconst sUserRoles = localStorage.getItem(SUPPORT_USERS);\r\n\t\t\t\tif (sUserRoles !== null) {\r\n\t\t\t\t\t//const Users: IRole[] = JSON.parse(sUsers);\r\n\t\t\t\t\t//Users.map(g => storageUsers.push(g))\r\n\t\t\t\t\tconst parsed = JSON.parse(sUserRoles);\r\n\t\t\t\t\troles = parseFromLocalStorage(parsed);\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\troles = parseFromJson()\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\troles = parseFromJson()\r\n\t\t\t}\r\n\r\n\t\t\t//const response = await getUsersFromLocalStorage(); \r\n\t\t\tdispatch({\r\n\t\t\t\ttype: UserActionTypes.GET_ALL_USERS,\r\n\t\t\t\troles  //response.data.results,\r\n\t\t\t});\r\n\t\t\tdispatch({type: UserActionTypes.CREATE_OPTIONS})\r\n\t\t}\r\n\t\tcatch (err) {\r\n\t\t\tconsole.error(err);\r\n\t\t}\r\n\t};\r\n};\r\n\r\n\r\n\r\n// Get User <Promise<Return Type>, State Interface, Type of Param, Type of Action> \r\nexport const getUser: ActionCreator<\r\n\tThunkAction<Promise<any>, IUsersState, string, IGet>\r\n> = (userId: number) => {\r\n\treturn async (dispatch: Dispatch) => {\r\n\t\ttry {\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: UserActionTypes.GET_USER,\r\n\t\t\t\tuserId\r\n\t\t\t});\r\n\t\t} catch (err) {\r\n\t\t\tconsole.error(err);\r\n\t\t}\r\n\t};\r\n};\r\n\r\nexport const findUser: ActionCreator<\r\n\tThunkAction<Promise<any>, IAppState, string, IGet>\r\n> = (name: string) => {\r\n\treturn async (dispatch: Dispatch, getState: () => IAppState) => {\r\n\t\ttry {\r\n\t\t\tconst {usersState} = getState();\r\n\t\t\tlet user;\r\n\t\t\tfor (let role of usersState.roles) {\r\n\t\t\t\tuser = role.users.find(user => user.userName === name);\r\n\t\t\t\tif (user)\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\treturn user;\r\n\t\t}\r\n\t\tcatch (err) {\r\n\t\t\tconsole.error(err);\r\n\t\t}\r\n\t};\r\n};\r\n\r\n\r\n\r\nexport const addUser: ActionCreator<\r\n\tThunkAction<Promise<any>, IAppState, null, IAdd>\r\n> = (roleId: number, text: string, canEdit?: boolean) => {\r\n\treturn async (dispatch: Dispatch, getState: () => IAppState) => {\r\n\t\ttry {\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: UserActionTypes.ADD_USER,\r\n\t\t\t\tcreatedBy: getState().topState.top!.auth!.who!.userId,\r\n\t\t\t\troleId,\r\n\t\t\t\ttext\r\n\t\t\t});\r\n\t\t}\r\n\t\tcatch (err) {\r\n\t\t\tconsole.error(err);\r\n\t\t}\r\n\t};\r\n};\r\n\r\nexport const editUser: ActionCreator<\r\n\tThunkAction<Promise<any>, IUsersState, null, IEdit>\r\n> = (roleId: number, userId: number) => {\r\n\treturn async (dispatch: Dispatch) => {\r\n\t\ttry {\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: UserActionTypes.EDIT_USER,\r\n\t\t\t\troleId,\r\n\t\t\t\tuserId\r\n\t\t\t});\r\n\t\t} catch (err) {\r\n\t\t\tconsole.error(err);\r\n\t\t}\r\n\t};\r\n};\r\n\r\nexport const removeUser: ActionCreator<\r\n\tThunkAction<Promise<any>, IUsersState, null, IRemove>\r\n> = (roleId: number, userId: number) => {\r\n\treturn async (dispatch: Dispatch) => {\r\n\t\ttry {\r\n\t\t\tawait delay()\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: UserActionTypes.REMOVE_USER,\r\n\t\t\t\troleId,\r\n\t\t\t\tuserId\r\n\t\t\t});\r\n\t\t\tdispatch({type: UserActionTypes.CREATE_OPTIONS})\r\n\t\t}\r\n\t\tcatch (err) {\r\n\t\t\tconsole.error(err);\r\n\t\t}\r\n\t};\r\n};\r\n\r\n\r\nexport const storeUser: ActionCreator<\r\n\tThunkAction<Promise<any>, IAppState, null, IStore>\r\n> = (user: IUser, formMode: string) => {\r\n\treturn async (dispatch: Dispatch, getState: () => IAppState) => {\r\n\t\ttry {\r\n\t\t\tif (formMode === 'add') {\r\n\t\t\t\tawait delay(); \r\n\r\n\t\t\t\t// if userId == -1 nadji max\r\n\t\t\t\t// return dispatch<any>(addUser(xxx))\r\n\t\t\t\t// \t.then((categoryId: number) => {\r\n\t\t\t\t// \t\treturn categoryId;\r\n\t\t\t\t// \t});\r\n\r\n\t\t\t\tawait dispatch({\r\n\t\t\t\t\ttype: UserActionTypes.STORE_USER,\r\n\t\t\t\t\tuser,\r\n\t\t\t\t\tformMode\r\n\t\t\t\t});\r\n\t\t\t\treturn user;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tawait delay();\r\n\t\t\t\tdispatch({\r\n\t\t\t\t\ttype: UserActionTypes.STORE_USER,\r\n\t\t\t\t\tuser,\r\n\t\t\t\t\tformMode\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\tdispatch({type: UserActionTypes.CREATE_OPTIONS})\r\n\t\t} \r\n\t\tcatch (err) {\r\n\t\t\tconsole.error(err);\r\n\t\t}\r\n\t};\r\n};\r\n\r\nconst delay = (): Promise<any> => {\r\n\treturn new Promise((resolve, reject) => {\r\n\t\tsetTimeout(() => {\r\n\t\t\tresolve({\r\n\t\t\t\t'status': 200,\r\n\t\t\t\t'content-type': 'application/json',\r\n\t\t\t\t'data': {\r\n\t\t\t\t\t'results': 1\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t}, 50)\r\n\t})\r\n}\r\n\r\nexport const cancelUser: ActionCreator<any> = () => {\r\n\treturn (dispatch: Dispatch) => {\r\n\t\ttry {\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: UserActionTypes.CANCEL_USER\r\n\t\t\t});\r\n\t\t} catch (err) {\r\n\t\t\tconsole.error(err);\r\n\t\t}\r\n\t};\r\n};\r\n\r\n/*\r\n * User Roles\r\n */\r\nexport const addRole: ActionCreator<\r\n\tThunkAction<Promise<any>, IUsersState, null, IAddRole>\r\n> = () => {\r\n\treturn async (dispatch: Dispatch) => {\r\n\t\ttry {\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: UserActionTypes.ADD_ROLE\r\n\t\t\t});\r\n\t\t} catch (err) {\r\n\t\t\tconsole.error(err);\r\n\t\t}\r\n\t};\r\n};\r\n\r\nexport const toggleRole: ActionCreator<\r\n\tThunkAction<Promise<any>, IUsersState, null, IEditRole>\r\n> = (roleId: number) => {\r\n\treturn async (dispatch: Dispatch) => {\r\n\t\ttry {\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: UserActionTypes.TOGGLE_ROLE,\r\n\t\t\t\troleId\r\n\t\t\t});\r\n\t\t} catch (err) {\r\n\t\t\tconsole.error(err);\r\n\t\t}\r\n\t};\r\n};\r\n\r\n\r\nexport const editRole: ActionCreator<\r\n\tThunkAction<Promise<any>, IUsersState, null, IEditRole>\r\n> = (roleId: number) => {\r\n\treturn async (dispatch: Dispatch) => {\r\n\t\ttry {\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: UserActionTypes.EDIT_ROLE,\r\n\t\t\t\troleId\r\n\t\t\t});\r\n\t\t} catch (err) {\r\n\t\t\tconsole.error(err);\r\n\t\t}\r\n\t};\r\n};\r\n\r\nexport const removeRole: ActionCreator<\r\n\tThunkAction<Promise<any>, IUsersState, null, IRemoveRole>\r\n> = (roleId: number) => {\r\n\treturn async (dispatch: Dispatch) => {\r\n\t\ttry {\r\n\t\t\tawait delay()\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: UserActionTypes.REMOVE_ROLE,\r\n\t\t\t\troleId: roleId\r\n\t\t\t});\r\n\t\t} catch (err) {\r\n\t\t\tconsole.error(err);\r\n\t\t}\r\n\t};\r\n};\r\n\r\nexport const storeRole: ActionCreator<\r\n\tThunkAction<Promise<any>, IUsersState, null, IStoreRole>\r\n> = (group: IRole) => {\r\n\treturn async (dispatch: Dispatch) => {\r\n\t\ttry {\r\n\t\t\t// await updateRoleFromLocalStorage(group);\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: UserActionTypes.STORE_ROLE,\r\n\t\t\t\tgroup\r\n\t\t\t});\r\n\t\t} catch (err) {\r\n\t\t\tconsole.error(err);\r\n\t\t}\r\n\t};\r\n};\r\n\r\n","import { IAnswer } from '../Answers/types'\r\nimport { IOption } from '../common/types';\r\nimport { IUser } from '../Users/types';\r\nimport { IAuth } from \"../Top/types\";\r\n\r\n// Define the Question type\r\n\r\nexport interface IQuestionAnswer {\r\n\tcategoryId?: number;\r\n\tquestionId?: number;\r\n\tanswerId: number,\r\n\tassignedBy: number,\r\n\tassigned: Date,\r\n\ttext?: string\r\n}\r\n\r\nexport interface IQuestionAnswerJson extends Omit<IQuestionAnswer, 'assigned'> {\r\n\tassigned: string\r\n}\r\n\r\n\r\nexport interface IQuestion {\r\n\tcategoryId: number,\r\n\tquestionId: number,\r\n\ttext: string,\r\n\twords?: string[],\r\n\tanswers: IQuestionAnswer[],\r\n\tsource: number,\r\n\tstatus: number,\r\n\tcreatedBy: number,\r\n\tcreated: Date,\r\n\tcategoryIdWas?: number\r\n}\r\n\r\nexport interface IQuestionJson extends Omit<IQuestion, 'categoryId' | 'answers' | 'created'> {\r\n\tcategoryId?: number,\r\n\tanswers: IQuestionAnswerJson[],\r\n\tcreated: string\r\n}\r\n\r\nexport interface ICategory {\r\n\tcategoryId: number,\r\n\ttitle: string,\r\n\tquestions: IQuestion[],\r\n\tisExpanded?: boolean,\r\n\tcreatedBy: number,\r\n\tcreated: Date\r\n}\r\n\r\nexport interface ICategoryJson extends Omit<ICategory, 'created' | 'questions'> {\r\n\tquestions: IQuestionJson[],\r\n\tcreated: string\r\n}\r\n\r\nexport const initialQuestion: IQuestion = {\r\n\tcategoryId: 0,\r\n\tquestionId: 0,\r\n\ttext: '',\r\n\twords: [],\r\n\tanswers: [],\r\n\tsource: 0,\r\n\tstatus: 0,\r\n\tcreatedBy: 0,\r\n\tcreated: new Date()\r\n };\r\n\r\nexport interface ICategoriesProps {\r\n\tcategories: ICategory[];\r\n\tcategoryQuestions: Map<number, ICategoryState>,\r\n\tshowCategoryForm: boolean;\r\n\tshowQuestionForm: boolean;\r\n\tcategory: ICategory | undefined;\r\n\tquestion: IQuestion | undefined;\r\n\tformMode: string,\r\n\tcanEdit: boolean,\r\n\tauth?: IAuth,\r\n\tonSelectQuestion: (categoryId: number, questionId: number, canEdit: boolean) => void;\r\n\tadd:  (categoryId: number, text: string, canEdit?: boolean) => void;\r\n\tcloseQuestionForm: () => void;\r\n}\r\n\r\nexport interface ICategoryListProps {\r\n\tcategories: ICategory[];\r\n\tcategoryQuestions: Map<number, ICategoryState>,\r\n\tcategoryOptions: IOption<number>[],\r\n\tshowCategoryForm: boolean;\r\n\tshowQuestionForm: boolean;\r\n\tcategory: ICategory | undefined;\r\n\tquestion: IQuestion | undefined;\r\n\tlastAnswer?: IAnswer;\r\n\tformMode: string,\r\n\tcategoryIdEditing: number,\r\n\tcanEdit: boolean,\r\n\tauth?: IAuth,\r\n\tonSelectQuestion: (categoryId: number, questionId: number) => void;\r\n\tadd: (categoryId: number, text: string, canEdit?: boolean) => void;\r\n\tedit: (categoryId: number, questionId: number, showQuestionForm: boolean) => void;\r\n\tremove: (categoryId: number, questionId: number) => void;\r\n\tcloseQuestionForm: () => void;\r\n\topenQuestionForm: () => void;\r\n\r\n\t// groups\r\n\tonSelectCategory: (categoryId: number) => ICategory;\r\n\taddCategory: () => void;\r\n\ttoggleCategory: (categoryId: number) => void;\r\n\teditCategory: (categoryId: number) => void;\r\n\tremoveCategory: (categoryId: number) => void;\r\n\tstoreCategory: (group: ICategory) => void;\r\n\tupdateCategory: (group: ICategory) => void;\r\n\t// question answer\r\n\taddAndAssignNewAnswer: (categoryId: number, questionId: number, answer: IAnswer, formMode: string) => void\r\n}\r\n\r\n\r\nexport interface ICategoryState {\r\n\tquestions: IQuestion[];\r\n}\r\n\r\n\r\n// Define the Question State\r\nexport interface ICategoriesState {\r\n\treadonly categories: ICategory[];\r\n\treadonly category: ICategory | undefined;\r\n\treadonly question: IQuestion | undefined;\r\n\tshowCategoryForm: boolean,\r\n\tshowQuestionForm: boolean,\r\n\tcategoryCopy?: ICategory;\r\n\tquestionCopy?: IQuestion;\r\n\tcategoryQuestions: Map<number, ICategoryState>,\r\n\tcategoryOptions: IOption<number>[];\r\n\tloading: boolean,\r\n\tformMode: string;\r\n\tcategoryIdEditing: number;\r\n}\r\n\r\n\r\nexport interface IQuestionFormProps {\r\n\tquestion: IQuestion;\r\n\tanswers: IAnswer[];\r\n\tformMode: string;\r\n\tcanEdit: boolean,\r\n\tcategoryOptions: IOption<number>[],\r\n\thandleClose: () => void;\r\n\tcancel: () => void;\r\n\teditForm: (question: IQuestion, formMode: string) => void;\r\n \tsaveForm: (question: IQuestion, formMode: string) => void;\r\n  }\r\n\r\n  export interface ICategoryFormProps {\r\n\tcategory: ICategory | undefined;\r\n\tformMode: string;\r\n\tcanEdit: boolean,\r\n\tcancel: () => void;\r\n\tsaveForm: (category: ICategory, formMode: string) => void;\r\n  }\r\n\r\n ","// Import Reducer type\r\nimport { Reducer } from 'redux';\r\n\r\nimport {\r\n\tQuestionActions,\r\n\tQuestionActionTypes\r\n} from './actions';\r\n\r\nimport { IQuestion, ICategoryState, initialQuestion } from './types'\r\n\r\nexport const CATEGORY = 'CATEGORY';\r\n\r\n// Define the initial state\r\nexport const initialCategoryState: ICategoryState = {\r\n\tquestions: []\r\n};\r\n\r\nconst storeToStorage: string[] = [\r\n\tQuestionActionTypes.STORE_QUESTION,\r\n\tQuestionActionTypes.UPDATE_QUESTION,\r\n\tQuestionActionTypes.REMOVE_QUESTION,\r\n\tQuestionActionTypes.REMOVE_QUESTION_ANSWER,\r\n\tQuestionActionTypes.ASSIGN_QUESTION_ANSWER\r\n]\r\n\r\nconst aTypesToStore = Object.keys(QuestionActionTypes)\r\n\t.filter(a => storeToStorage.includes(a));\r\n\r\nexport const reduceQuestions = (\r\n\tcategoryQuestions: Map<number, ICategoryState>,\r\n\taction: QuestionActions,\r\n\tcategoryId: number,\r\n\tquestionId?: number\r\n): {categoryQuestions: Map<number, ICategoryState>, question: IQuestion|undefined} => {\r\n\tconst categoryState = categoryQuestions.get(categoryId)!;\r\n\tconst newState: ICategoryState = myReducer(categoryState, action);\r\n\r\n\tif (aTypesToStore.includes(action.type)) {\r\n\t\tnewState.questions.forEach(q => q.words = []);\r\n\t\tlocalStorage.setItem(`CATEGORY_${categoryId}`, JSON.stringify(newState.questions));\r\n\t\tnewState.questions.forEach(q => q.words = q.text.split(' '));\r\n\t}\r\n\tcategoryQuestions.set(categoryId, newState);\r\n\tconst question = newState.questions.find(q => q.questionId === questionId);\r\n\treturn { categoryQuestions, question }\r\n}\r\n\r\nconst myReducer: Reducer<ICategoryState, QuestionActions> = (\r\n\tstate = initialCategoryState,\r\n\taction\r\n) => {\r\n\tswitch (action.type) {\r\n\r\n\t\tcase QuestionActionTypes.GET_QUESTION: {\r\n\t\t\tconst question = state.questions.find(q => q.questionId === action.questionId);\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tquestion\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tcase QuestionActionTypes.ADD_QUESTION: {\r\n\t\t\tlet questionIdMax = 0;\r\n\t\t\tfor (let question of state.questions)\r\n\t\t\t\tif (question.questionId > questionIdMax)\r\n\t\t\t\t\tquestionIdMax = question.questionId\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tformMode: 'add',\r\n\t\t\t\tquestion: {\r\n\t\t\t\t\t...initialQuestion,\r\n\t\t\t\t\tcreatedBy: action.createdBy,\r\n\t\t\t\t\tcategoryId: action.categoryId,\r\n\t\t\t\t\tquestionId: questionIdMax + 1,\r\n\t\t\t\t\ttext: action.text,\r\n\t\t\t\t\twords: action.text.split(' ')\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tcase QuestionActionTypes.EDIT_QUESTION: {\r\n\t\t\tconst question = state.questions\r\n\t\t\t\t.find(question => question.questionId === action.questionId);\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tformMode: 'edit',\r\n\t\t\t\tquestion\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tcase QuestionActionTypes.STORE_QUESTION: {\r\n\t\t\tconst { question } = action;\r\n\t\t\tquestion.words = question.text.split(' ');\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tquestions: [...state.questions, {...question}]\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tcase QuestionActionTypes.UPDATE_QUESTION: {\r\n\t\t\tconst { question } = action;\r\n\t\t\tquestion.words = question.text.split(' ');\r\n\t\t\tconst { questionId } = question;\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tquestions: state.questions\r\n\t\t\t\t\t.map(q => q.questionId !== questionId\r\n\t\t\t\t\t\t? q\r\n\t\t\t\t\t\t: { ...question }\r\n\t\t\t\t\t)\r\n\t\t\t};\t\t\t\r\n\t\t}\r\n\r\n\t\tcase QuestionActionTypes.CANCEL_QUESTION: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tformMode: 'display'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tcase QuestionActionTypes.REMOVE_QUESTION: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tquestions: state.questions.filter(q => q.questionId !== action.questionId)\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\t// Question answers\r\n\t\tcase QuestionActionTypes.REMOVE_QUESTION_ANSWER: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tquestions: state.questions.map(q => q.questionId !== action.questionId\r\n\t\t\t\t\t? { ...q, answers: [...q.answers] }\r\n\t\t\t\t\t: { ...q, answers: q.answers.filter(qa => qa.answerId !== action.answerId) }\r\n\t\t\t\t)\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tcase QuestionActionTypes.ASSIGN_QUESTION_ANSWER: {\r\n\t\t\tconst { questionId, answerId, assignedBy } = action;\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tquestions: state.questions.map(q => q.questionId !== questionId\r\n\t\t\t\t\t? { ...q, answers: [...q.answers] }\r\n\t\t\t\t\t: { ...q, answers: [...q.answers, { answerId, assignedBy, assigned: new Date() }] }\r\n\t\t\t\t)\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n};\r\n\r\n","// Import Reducer type\r\nimport { Reducer } from 'redux';\r\n\r\nimport {\r\n\tQuestionActions,\r\n\tQuestionActionTypes\r\n} from './actions';\r\n\r\nimport { IQuestion, ICategory, ICategoriesState, ICategoryState } from './types'\r\nimport { reduceQuestions } from './categoryReducer'\r\n\r\nexport const SUPPORT_CATEGORIES = 'SUPPORT_CATEGORIES';\r\n\r\nexport const initialQuestion: IQuestion = {\r\n\tcategoryId: 0,\r\n\tquestionId: 0,\r\n\ttext: '',\r\n\twords: [],\r\n\tsource: 0,\r\n\tstatus: 0,\r\n\tanswers: [],\r\n\tcreatedBy: 0,\r\n\tcreated: new Date()\r\n};\r\n\r\nexport const initialCategory: ICategory = {\r\n\tcategoryId: 0,\r\n\ttitle: '',\r\n\tquestions: [],\r\n\tisExpanded: false,\r\n\tcreatedBy: 0,\r\n\tcreated: new Date()\r\n};\r\n\r\n\r\n// Define the initial state\r\nexport const initialCategoriesState: ICategoriesState = {\r\n\tcategories: [],\r\n\tcategory: undefined,\r\n\tcategoryQuestions: new Map<number, ICategoryState>(),\r\n\tquestion: undefined,\r\n\tshowCategoryForm: false,\r\n\tshowQuestionForm: false,\r\n\tcategoryOptions: [],\r\n\tloading: false,\r\n\tformMode: 'display',\r\n\tcategoryIdEditing: -1\r\n};\r\n\r\nconst storeToStorage: string[] = [\r\n\tQuestionActionTypes.ADD_CATEGORY,\r\n\tQuestionActionTypes.TOGGLE_CATEGORY,\r\n\tQuestionActionTypes.STORE_CATEGORY,\r\n\tQuestionActionTypes.UPDATE_CATEGORY,\r\n\tQuestionActionTypes.REMOVE_CATEGORY\r\n]\r\n\r\nconst aTypesToStore = Object.keys(QuestionActionTypes)\r\n\t.filter(a => storeToStorage.includes(a));\r\n\r\nexport const categoriesReducer: Reducer<ICategoriesState, QuestionActions> = (state, action) => {\r\n\tconst newState = myReducer(state, action);\r\n\tif (aTypesToStore.includes(action.type)) {\r\n\t\tlocalStorage.setItem(SUPPORT_CATEGORIES, JSON.stringify(newState.categories));\r\n\t}\r\n\treturn newState;\r\n}\r\n\r\nconst getQuestions = (categoryId: number, state: ICategoriesState): IQuestion[] => {\r\n\tconst { categoryQuestions } = state;\r\n\tconst categoryState = categoryQuestions.get(categoryId)!;\r\n\treturn categoryState.questions\r\n}\r\n\r\nconst myReducer: Reducer<ICategoriesState, QuestionActions> = (\r\n\tstate = initialCategoriesState,\r\n\taction\r\n) => {\r\n\tswitch (action.type) {\r\n\r\n\t\tcase QuestionActionTypes.LOAD_CATEGORIES: {\r\n\t\t\tconst { categories, categoryQuestions } = action;\r\n\r\n\t\t\tconst categoryOptions = categories.map(g => ({ value: g.categoryId, label: g.title }))\r\n\t\t\tcategoryOptions.unshift({ value: 0, label: 'Unknown' })\r\n\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tcategories,\r\n\t\t\t\tcategoryQuestions,\r\n\t\t\t\tcategoryOptions\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tcase QuestionActionTypes.GET_QUESTION: {\r\n\t\t\tconst { categoryId, questionId } = action;\r\n\t\t\tconst questions = getQuestions(categoryId, state)\r\n\t\t\tconst question = questions.find(q => q.questionId === questionId);\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tcategory: undefined,\r\n\t\t\t\tquestion\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tcase QuestionActionTypes.ADD_QUESTION: {\r\n\t\t\tconst { categoryId } = action;\r\n\t\t\tlet questionId = 0;\r\n\t\t\tif (categoryId !== 0) {\r\n\t\t\t\tconst questions = getQuestions(categoryId, state)\r\n\t\t\t\tquestionId = Math.max(...questions.map(q => q.questionId)) + 1;\r\n\t\t\t}\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tformMode: 'add',\r\n\t\t\t\tcategory: undefined,\r\n\t\t\t\tquestion: {\r\n\t\t\t\t\t...initialQuestion,\r\n\t\t\t\t\tcreatedBy: action.createdBy,\r\n\t\t\t\t\tcategoryId,\r\n\t\t\t\t\tquestionId,\r\n\t\t\t\t\ttext: action.text\r\n\t\t\t\t},\r\n\t\t\t\tshowCategoryForm: false\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tcase QuestionActionTypes.EDIT_QUESTION: {\r\n\t\t\tconst { categoryId, questionId, showQuestionForm } = action;\r\n\t\t\tconst questions = getQuestions(categoryId, state)\r\n\t\t\tconst question = questions.find(q => q.questionId === questionId)!;\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tformMode: 'edit',\r\n\t\t\t\tquestion,\r\n\t\t\t\tquestionCopy: { ...question },\r\n\t\t\t\tshowCategoryForm: false,\r\n\t\t\t\tshowQuestionForm\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tcase QuestionActionTypes.STORE_QUESTION: {\r\n\t\t\tconst { question } = action;\r\n\t\t\tconst { categoryId } = question;\r\n\t\t\tconst { categoryQuestions } = reduceQuestions(state.categoryQuestions, action, categoryId);\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tformMode: 'edit',\r\n\t\t\t\tcategoryQuestions\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tcase QuestionActionTypes.UPDATE_QUESTION: {\r\n\t\t\tlet { questionCopy } = state;\r\n\t\t\tconst { categoryId, questionId, categoryIdWas } = action.question; // comes from other user update\r\n\t\t\tconst categoryIdCopy = categoryIdWas ? categoryIdWas : questionCopy!.categoryId;\r\n\t\t\tif (action.question.categoryId === categoryIdCopy) {\r\n\t\t\t\t// category hasn't been changed\r\n\t\t\t\tconst { categoryQuestions, question } = reduceQuestions(state.categoryQuestions, action, categoryId, questionId);\r\n\t\t\t\treturn {\r\n\t\t\t\t\t...state,\r\n\t\t\t\t\tcategoryQuestions,\r\n\t\t\t\t\tformMode: 'edit',\r\n\t\t\t\t\tquestion\r\n\t\t\t\t};\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\t// assing question to another group\r\n\t\t\t\t// 1) remove question from old category\r\n\t\t\t\tlet { categoryQuestions } = reduceQuestions(state.categoryQuestions, {\r\n\t\t\t\t\t...action,\r\n\t\t\t\t\ttype: QuestionActionTypes.REMOVE_QUESTION,\r\n\t\t\t\t\tcategoryId: categoryIdCopy,\r\n\t\t\t\t\tquestionId\r\n\t\t\t\t}, categoryIdCopy);\r\n\t\t\t\t// 2) add question  to new category\r\n\t\t\t\tcategoryQuestions = reduceQuestions(categoryQuestions, {\r\n\t\t\t\t\t...action,\r\n\t\t\t\t\ttype: QuestionActionTypes.STORE_QUESTION\r\n\t\t\t\t}, categoryId).categoryQuestions;\r\n\t\t\t\t//\r\n\t\t\t\treturn {\r\n\t\t\t\t\t...state,\r\n\t\t\t\t\tcategoryQuestions,\r\n\t\t\t\t\tformMode: 'edit'\r\n\t\t\t\t};\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tcase QuestionActionTypes.CANCEL_QUESTION: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tformMode: 'display',\r\n\t\t\t\tquestion: undefined,\r\n\t\t\t\tshowQuestionForm: false\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tcase QuestionActionTypes.REMOVE_QUESTION: {\r\n\t\t\tconst { categoryId } = action;\r\n\t\t\tconst { categoryQuestions } = reduceQuestions(state.categoryQuestions, action, categoryId);\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tcategoryQuestions,\r\n\t\t\t\tformMode: 'display',\r\n\t\t\t\tquestion: undefined\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\t\r\n\r\n\t\t// Question answers\r\n\t\tcase QuestionActionTypes.REMOVE_QUESTION_ANSWER: {\r\n\t\t\tconst { categoryId, questionId } = action;\r\n\t\t\tconst { categoryQuestions, question } = reduceQuestions(state.categoryQuestions, action, categoryId, questionId);\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tcategoryQuestions,\r\n\t\t\t\tquestion\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tcase QuestionActionTypes.ASSIGN_QUESTION_ANSWER: {\r\n\t\t\tconst { categoryId, questionId, answerId, assignedBy } = action;\r\n\t\t\tif (state.formMode === 'add') { // use state.question, because question is still not added to categoryQuestions\r\n\t\t\t\treturn {\r\n\t\t\t\t\t...state,\r\n\t\t\t\t\tquestion: {\r\n\t\t\t\t\t\t...state.question!,\r\n\t\t\t\t\t\tanswers: [...state.question!.answers, { answerId, assignedBy, assigned: new Date() }]\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tconst { categoryQuestions, question } = reduceQuestions(state.categoryQuestions, action, categoryId, questionId)\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tcategoryQuestions,\r\n\t\t\t\tquestion\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tcase QuestionActionTypes.CLOSE_QUESTION_FORM: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tshowQuestionForm: false\r\n\t\t\t}\r\n\t\t}\r\n\t\tcase QuestionActionTypes.OPEN_QUESTION_FORM: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tshowQuestionForm: true\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t///////////////////////////////////////////////////////////////////////////////////\r\n\t\t// groups\r\n\t\tcase QuestionActionTypes.GET_CATEGORY: {\r\n\t\t\tconst { categoryId, showCategoryForm } = action;\r\n\t\t\t//const questions = getQuestions(categoryId, state)\r\n\t\t\t//const question = questions.find(q => q.questionId === questionId);\r\n\t\t\tconst category = state.categories.find(g => g.categoryId === categoryId);\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tcategory,\r\n\t\t\t\tquestion: undefined,\r\n\t\t\t\tshowCategoryForm,\r\n\t\t\t\tshowQuestionForm: false\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tcase QuestionActionTypes.ADD_CATEGORY: {\r\n\t\t\t// const group =  state.categories.find(g => g.categoryId === action.categoryId);\r\n\t\t\tconst { categoryQuestions } = state;\r\n\t\t\tconst { showCategoryForm } = action;\r\n\t\t\tconst categoryId = state.categories.length === 0 ? 11 : Math.max(...state.categories.map(g => g.categoryId)) + 1;\r\n\t\t\tconst categoryState: ICategoryState = {\r\n\t\t\t\tquestions: []\r\n\t\t\t}\r\n\t\t\tcategoryQuestions.set(categoryId, categoryState)\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tformMode: 'add',\r\n\t\t\t\tcategoryIdEditing: categoryId,\r\n\t\t\t\tcategory: { \r\n\t\t\t\t\t...initialCategory,\r\n\t\t\t\t\ttitle: '',\r\n\t\t\t\t\tcategoryId \r\n\t\t\t\t},\r\n\t\t\t\tquestion: undefined,\r\n\t\t\t\tshowCategoryForm,\r\n\t\t\t\tshowQuestionForm: false\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tcase QuestionActionTypes.TOGGLE_CATEGORY: {\r\n\t\t\t// const group = state.categories.find(g => g.categoryId === action.categoryId);\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tcategories: state.categories.map(g => g.categoryId !== action.categoryId\r\n\t\t\t\t\t? g\r\n\t\t\t\t\t: { ...g, isExpanded: !g.isExpanded }\r\n\t\t\t\t)\r\n\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tcase QuestionActionTypes.EDIT_CATEGORY: {\r\n\t\t\tconst { categories } = state;\r\n\t\t\tconst { categoryId, showCategoryForm } = action;\r\n\t\t\tconst category = categories.find(g => g.categoryId === categoryId)!\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tcategory,\r\n\t\t\t\tformMode: 'edit',\r\n\t\t\t\tcategoryCopy: { ...category },\r\n\t\t\t\tcategoryIdEditing: category.categoryId,\r\n\t\t\t\tshowCategoryForm,\r\n\t\t\t\tshowQuestionForm: false\r\n\t\t\t\t//,category for now lets keep inline editing\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tcase QuestionActionTypes.STORE_CATEGORY: {\r\n\t\t\t// const group = state.categories.find(g => g.categoryId === action.question.categoryId);\r\n\t\t\tconst { category } = action;\r\n\t\t\tconst { categoryQuestions } = state;\r\n\t\t\tconst categoryState: ICategoryState = {\r\n\t\t\t\tquestions: [] //...category.questions]\r\n\t\t\t}\r\n\t\t\tcategoryQuestions.set(category.categoryId, categoryState)\r\n\t\t\tcategory.questions = [];\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tformMode: 'edit',\r\n\t\t\t\tcategoryIdEditing: -1,\r\n\t\t\t\tcategories: [...state.categories, category],\r\n\t\t\t\tcategoryQuestions\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tcase QuestionActionTypes.UPDATE_CATEGORY: {\r\n\t\t\t// const group = state.categories.find(g => g.categoryId === action.question.categoryId);\r\n\t\t\tconst { category } = action;\r\n\t\t\tconst { categoryId, title } = category;\r\n\t\t\tlet { categoryCopy } = state;\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tcategoryIdEditing: -1,\r\n\t\t\t\tcategories: state.categories.map(g => g.categoryId !== categoryId\r\n\t\t\t\t\t? g\r\n\t\t\t\t\t: { ...g, title }\r\n\t\t\t\t)\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tcase QuestionActionTypes.CANCEL_CATEGORY: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tformMode: 'display',\r\n\t\t\t\tcategory: undefined\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tcase QuestionActionTypes.REMOVE_CATEGORY: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tcategories: state.categories.reduce((acc: ICategory[], g) => {\r\n\t\t\t\t\tif (g.categoryId !== action.categoryId)\r\n\t\t\t\t\t\tacc.push({ ...g, questions: [...g.questions] })\r\n\t\t\t\t\treturn acc\r\n\t\t\t\t}, [])\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tcase QuestionActionTypes.CLEAR: {\r\n\t\t\treturn {\r\n\t\t\t\t...initialCategoriesState\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n};\r\n\r\n","// Import Reducer type\r\nimport { Reducer } from 'redux';\r\nimport {\r\n\tAnswerActions,\r\n\tAnswerActionTypes,\r\n\tSUPPORT_ANSWERS\r\n} from './actions';\r\n\r\nimport { IAnswer, IAnswerState } from './types'\r\n\r\nexport const initialAnswer: IAnswer = {\r\n\tanswerId: 0,\r\n\ttext: '',\r\n\twords: [],\r\n\toptions: [],\r\n\tcreatedBy: 0,\r\n\tcreated: new Date()\r\n};\r\n\r\nconst initialAnswerState: IAnswerState = {\r\n\tanswers: [],\r\n\tanswer: undefined,\r\n\tloading: false,\r\n\tformMode: 'display',\r\n\tshowAnswerForm: false\r\n};\r\n\r\nconst aTypesToStore = Object.keys(AnswerActionTypes).filter(a => a !== AnswerActionTypes.GET_ALL_ANSWERS);\r\n\r\nexport const answerReducer: Reducer<IAnswerState, AnswerActions> = (state, action) => {\r\n\tconst newState = myReducer(state, action);\r\n\tif (aTypesToStore.includes(action.type)) {\r\n\t\tlocalStorage.setItem(SUPPORT_ANSWERS, JSON.stringify(newState.answers));\r\n\t}\r\n\treturn newState;\r\n}\r\n\r\nconst myReducer: Reducer<IAnswerState, AnswerActions> = (\r\n\tstate = initialAnswerState,\r\n\taction\r\n) => {\r\n\tswitch (action.type) {\r\n\r\n\t\tcase AnswerActionTypes.GET_ALL_ANSWERS: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tanswers: action.answers.map(answer => { return { \r\n\t\t\t\t\t...answer,\r\n\t\t\t\t\twords: answer.text.split(' ') \r\n\t\t\t\t} }),\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tcase AnswerActionTypes.GET_ANSWER: {\r\n\t\t\tconst answer = state.answers.find(a => a.answerId === action.answerId);\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tanswer,\r\n\t\t\t\tshowAnswerForm: true\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tcase AnswerActionTypes.ADD_ANSWER: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tformMode: 'add',\r\n\t\t\t\tanswer: {\r\n\t\t\t\t\t...initialAnswer,\r\n\t\t\t\t\tcreatedBy: action.createdBy,\r\n\t\t\t\t\tanswerId: state.answers.length === 0 \r\n\t\t\t\t\t\t? 111\r\n\t\t\t\t\t\t: Math.max(...state.answers.map(a => a.answerId)) + 1\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tcase AnswerActionTypes.EDIT_ANSWER: {\r\n\t\t\tconst answer = state.answers.find(a => a.answerId === action.answerId);\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tformMode: 'edit',\r\n\t\t\t\tanswer: { ...answer!, words: answer!.text.split(' ') },\r\n\t\t\t\tshowAnswerForm: true\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tcase AnswerActionTypes.STORE_ANSWER: {\r\n\t\t\tconst { answer } = action;\r\n\t\t\tlet { answerId } = answer!;\r\n\t\t\tlet answers = [];\r\n\t\t\tif (state.formMode === 'add') {\r\n\t\t\t\tif (answerId === -1) {\r\n\t\t\t\t\tanswer.answerId = state.answers.length === 0\r\n\t\t\t\t\t\t? 111\r\n\t\t\t\t\t\t: Math.max(...state.answers.map(a => a.answerId)) + 1;\r\n\t\t\t\t}\r\n\t\t\t\tanswers = [...state.answers, { ...answer, words: answer.text.split(' ') }]\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tanswers = state.answers.map(a => a.answerId === answerId\r\n\t\t\t\t\t? { ...answer, words: answer.text.split(' ') }\r\n\t\t\t\t\t: a)\r\n\t\t\t}\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tformMode: 'edit',\r\n\t\t\t\tanswers,\r\n\t\t\t\tanswer\r\n\t\t\t};\r\n\t\t}\t\r\n\r\n\t\tcase AnswerActionTypes.CANCEL_ANSWER: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tformMode: 'display'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tcase AnswerActionTypes.REMOVE_ANSWER: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tformMode: 'display',\r\n\t\t\t\tanswers: state.answers.filter(a => a.answerId !== action.answerId)\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tcase AnswerActionTypes.CLOSE_ANSWER_FORM: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tformMode: 'display',\r\n\t\t\t\tshowAnswerForm: false\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tcase AnswerActionTypes.CLEAR: {\r\n\t\t\treturn {\r\n\t\t\t\t...initialAnswerState\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\t// case AnswerActionTypes.STORE_ANSWERS_TO_LOCAL_STORAGE: {\r\n\t\t// \tlocalStorage.setItem(SUPPORT_ANSWERS, JSON.stringify(state.answers));\r\n\t\t// \treturn state;\r\n\t\t// }   \t\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n};","// Import redux types\r\nimport { ActionCreator, Dispatch } from 'redux';\r\nimport { ThunkAction } from 'redux-thunk';\r\n// Import Tag Typing\r\nimport { ITag, ITagState } from './types';\r\nimport data from \"./data.json\"\r\nconst storageTagsDemo: ITag[] = data;\r\n\r\n// Create Action Constants\r\nexport enum TagActionTypes {\r\n\tGET_ALL_TAGS = 'GET_ALL_TAGS',\r\n  \tGET_TAG = 'GET_TAG'\r\n}\r\n\r\n// Interface for Get All Action Type\r\nexport interface IGetAll {\r\n\ttype: TagActionTypes.GET_ALL_TAGS;\r\n\ttags: ITag[];\r\n }\r\n \r\nexport interface IGet {\r\n\ttype: TagActionTypes.GET_TAG;\r\n\ttag: ITag;\r\n}\r\n\r\n// localStorage\r\nexport const SUPPORT_TAGS = 'SUPPORT_TAGS' \r\nconst storageTags: ITag[] = [\r\n]\r\n\r\n\r\n// Combine the action types with a union (we assume there are more)\r\nexport type TagActions = IGetAll | IGet;\r\n\r\nconst isWebStorageSupported = () => 'localStorage' in window\r\n\r\n// Get All Action <Promise<Return Type>, State Interface, Type of Param, Type of Action>\r\nexport const getAllTags: ActionCreator<\r\n  ThunkAction<Promise<any>, ITagState, null, IGetAll>\r\n> = () => {\r\n  return async (dispatch: Dispatch) => {\r\n    try {\r\n\t\t// const response = await axios.get('https://swapi.co/api/people/');\r\n\t\tif (isWebStorageSupported()) {\r\n\t\t\tconst sTags = localStorage.getItem(SUPPORT_TAGS);\r\n\t\t\tif (sTags !== null) {\r\n\t\t\t\tconst Tags: ITag[] = JSON.parse(sTags);\r\n\t\t\t\tTags.map(g => storageTags.push(g))\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tstorageTagsDemo.map(g => storageTags.push(g))\t\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {\r\n\t\t\tstorageTagsDemo.map(g => storageTags.push(g))\r\n\t\t}\r\n\r\n\t\t//const response = await getTagsFromLocalStorage(); \r\n      dispatch({\r\n        type: TagActionTypes.GET_ALL_TAGS,\r\n        tags: storageTags //response.data.results,\r\n      });\r\n    } catch (err) {\r\n      console.error(err);\r\n    }\r\n  };\r\n};\r\n\r\n\r\n\r\n\r\n","// Import Reducer type\r\nimport { Reducer } from 'redux';\r\n\r\nimport {\r\n\tUserActions,\r\n\tUserActionTypes\r\n} from './actions';\r\n\r\nimport { IUser, IRole, IUsersState } from './types'\r\n\r\nexport const SUPPORT_USERS = 'SUPPORT_USERS';\r\n\r\nexport const initialUser: IUser = {\r\n\troleId: 0,\r\n\tuserId: 0,\r\n\tuserName: '',\r\n\tpwd: '',\r\n\tdepartment: 'neki',\r\n\tcreatedBy: 0,\r\n\tcreated: new Date(),\r\n};\r\n\r\nexport const initialUserRole: IRole = {\r\n\troleId: 0,\r\n\ttitle: '',\r\n\tcolor: 'lightgreen',\r\n\tusers: [],\r\n\tisExpanded: false,\r\n\tcreatedBy: 0,\r\n\tcreated: new Date()\r\n};\r\n\r\n\r\n// Define the initial state\r\nexport const initialUsersState: IUsersState = {\r\n\troles: [],\r\n\tuserEditing: undefined,\r\n\tallUsers: [],\r\n\troleOptions: [],\r\n\tuserOptions: [],\r\n\tloading: false,\r\n\tformMode: 'display',\r\n\troleIdEditing: -1,\r\n\townerUserId: 101\r\n};\r\n\r\n\r\n/*\r\nconst getUser = (\r\n\t\t\troles: IRole[], \r\n\t\t\troleId: number, \r\n\t\t\tuserId: number) : IUser|undefined => {\r\n\tconst group = roles.find(g => g.roleId === roleId)\r\n\tif (!group)\r\n\t\treturn undefined;\r\n\r\n\tconst user = group\r\n\t\t\t\t\t\t\t.users\r\n\t\t\t\t\t\t\t.find(q => q.userId === userId);\r\n\treturn user;\r\n}\r\n*/\r\n\r\n\r\nconst aTypesToStore = Object.keys(UserActionTypes)\r\n\t.filter(a => a !== UserActionTypes.GET_ALL_USERS);\r\n\r\nexport const userReducer: Reducer<IUsersState, UserActions> = (state, action) => {\r\n\tconst newState = myReducer(state, action);\r\n\tif (aTypesToStore.includes(action.type)) {\r\n\t\tlocalStorage.setItem(SUPPORT_USERS, JSON.stringify(newState.roles));\r\n\t}\r\n\treturn newState;\r\n}\r\n\r\nconst myReducer: Reducer<IUsersState, UserActions> = (\r\n\tstate = initialUsersState,\r\n\taction\r\n) => {\r\n\tswitch (action.type) {\r\n\r\n\t\tcase UserActionTypes.GET_ALL_USERS: {\r\n\t\t\tconst { roles } = action;\r\n\t\t\tconsole.log('roles', roles)\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\troles\r\n\t\t\t};\r\n\t\t}\r\n\t\t//roleOptions: roles.map(g => ({ label: g.title, value: g.roleId })),\r\n\t\t//userOptions: allUsers.map(user => ({ label: user.name, value: user.userId }))\r\n\r\n\t\tcase UserActionTypes.CREATE_OPTIONS: {\r\n\t\t\tconst {roles} = state;\r\n\t\t\tlet allUsers: IUser[] = [];\r\n\t\t\troles.forEach(g => {\r\n\t\t\t\t//console.log('g', g)\r\n\t\t\t\tallUsers = allUsers.concat(g.users)\r\n\t\t\t});\r\n\t\t\tconsole.log('allUsers', allUsers)\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tallUsers,\r\n\t\t\t\troleOptions: roles.map(g => ({ label: g.title, value: g.roleId })),\r\n\t\t\t\tuserOptions: allUsers.map(user => ({ label: user.userName, value: user.userId }))\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tcase UserActionTypes.GET_USER: {\r\n\t\t\tlet user = undefined;\r\n\t\t\tfor (let role of state.roles) {\r\n\t\t\t\tuser = role.users\r\n\t\t\t\t\t.find(user => user.userId === action.userId);\r\n\t\t\t\tif (user)\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tuserEditing: user\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tcase UserActionTypes.ADD_USER: {\r\n\t\t\tlet userIdMax = 0;\r\n\t\t\tfor (let role of state.roles) {\r\n\t\t\t\tfor (let user of role.users) \r\n\t\t\t\t\tif (user.userId > userIdMax)\r\n\t\t\t\t\t\tuserIdMax = user.userId\r\n\t\t\t}\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tformMode: 'add',\r\n\t\t\t\tuserEditing: { \r\n\t\t\t\t\t...initialUser, \r\n\t\t\t\t\tcreatedBy: action.createdBy,\r\n\t\t\t\t\troleId: action.roleId, \r\n\t\t\t\t\tuserId: userIdMax + 1,\r\n\t\t\t\t\ttext: action.text\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tcase UserActionTypes.EDIT_USER: {\r\n\t\t\tconst userRole = state.roles.find(g => g.roleId === action.roleId);\r\n\t\t\tconst user = userRole!.users\r\n\t\t\t\t.find(user => user.userId === action.userId);\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tformMode: 'edit',\r\n\t\t\t\tuserEditing: user\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tcase UserActionTypes.STORE_USER: {\r\n\t\t\tconst { user, formMode } = action;\r\n\t\t\tif (formMode === 'add') { // state.formMode\r\n\t\t\t\tconsole.log(' UserActionTypes.STORE_USER user', user)\r\n\t\t\t\tif (user.roleId === 0 && !state.roles.map(g => g.roleId).includes(0)) {\r\n\t\t\t\t\tconsole.log('unisao')\r\n\t\t\t\t\t// do something\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\t...state,\r\n\t\t\t\t\t\tformMode: 'edit',\r\n\t\t\t\t\t\troles: [\r\n\t\t\t\t\t\t\t...state.roles,\r\n\t\t\t\t\t\t\t{ \r\n\t\t\t\t\t\t\t\t...initialUserRole, \r\n\t\t\t\t\t\t\t\troleId: 0,\r\n\t\t\t\t\t\t\t\ttitle: 'Unknown',\r\n\t\t\t\t\t\t\t\tusers: [user]\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t]\r\n\t\t\t\t\t};\r\n\t\t\t\t}\r\n\t\t\t\treturn {\r\n\t\t\t\t\t...state,\r\n\t\t\t\t\tformMode: 'edit',\r\n\t\t\t\t\troles: state.roles.map(g => g.roleId !== user.roleId ?\r\n\t\t\t\t\t\t{ ...g, users: [...g.users] }\r\n\t\t\t\t\t\t:\r\n\t\t\t\t\t\t{ ...g, users: [...g.users, { ...user }] }\r\n\t\t\t\t\t)\r\n\t\t\t\t};\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tconst { roles } = state;\r\n\t\t\t\tconst {user} = action;\r\n\t\t\t\t//const userId: number = user.roleId;\r\n\t\t\t\tconst g = roles.find(g => g.roleId === user.roleId);\r\n\t\t\t\tconst q = g!.users.find(q => q.userId === user.userId);\r\n\t\t\t\tif (q) { // change user\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\t...state,\r\n\t\t\t\t\t\tformMode: 'edit',\r\n\t\t\t\t\t\troles: roles.map(g => g.roleId !== user.roleId\r\n\t\t\t\t\t\t\t? { ...g, users: [...g.users]\t}\r\n\t\t\t\t\t\t\t: {\r\n\t\t\t\t\t\t\t\t...g, \r\n\t\t\t\t\t\t\t\tusers: g.users\r\n\t\t\t\t\t\t\t\t\t.map(q => q.userId !== user.userId ?\r\n\t\t\t\t\t\t\t\t\t\tq : { ...user }\r\n\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t};\r\n\t\t\t\t}\r\n\t\t\t\telse { // assing user to another group\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\t...state,\r\n\t\t\t\t\t\tformMode: 'edit',\r\n\t\t\t\t\t\troles: roles.map(g => g.roleId !== user.roleId\r\n\t\t\t\t\t\t\t? { ...g, users: [...g.users.filter(q=> q.userId !== user.userId)]\t}\r\n\t\t\t\t\t\t\t: {\t...g, users: [...g.users, { ...user } ]\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t};\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tcase UserActionTypes.CANCEL_USER: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tformMode: 'display',\r\n\t\t\t\tuserEdited: undefined\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tcase UserActionTypes.REMOVE_USER: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tformMode: 'display',\r\n\t\t\t\tuserEdited: undefined,\r\n\t\t\t\troles: state.roles.map(g => g.roleId !== action.roleId ?\r\n\t\t\t\t\t{ ...g, users: [...g.users] }\r\n\t\t\t\t\t:\r\n\t\t\t\t\t{ ...g, users: g.users.filter(q => q.userId !== action.userId) }\r\n\t\t\t\t)\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\t///////////////////////////////////////////////////////////////////////////////////\r\n\t\t// groups\r\n\r\n\t\tcase UserActionTypes.ADD_ROLE: {\r\n\t\t\tlet roleId = Math.max(...state.roles.map(g => g.roleId)) + 1\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\troleIdEditing: roleId,\r\n\t\t\t\troles: [...state.roles, { ...initialUserRole, title: \"New Section\", roleId: roleId }]\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tcase UserActionTypes.TOGGLE_ROLE: {\r\n\t\t\tconsole.log(action)\r\n\t\t\t//const group = state.roles.find(g => g.roleId === action.roleId);\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\troles: state.roles.map(g => g.roleId !== action.roleId\r\n\t\t\t\t\t? g\r\n\t\t\t\t\t: { ...g, isExpanded: !g.isExpanded }\r\n\t\t\t\t)\r\n\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tcase UserActionTypes.EDIT_ROLE: {\r\n\t\t\tconst group = state.roles.find(g => g.roleId === action.roleId)\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\troleIdEditing: group!.roleId\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tcase UserActionTypes.STORE_ROLE: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\troleIdEditing: -1,\r\n\t\t\t\troles: state.roles.map(g => g.roleId !== action.group.roleId ?\r\n\t\t\t\t\tg\r\n\t\t\t\t\t:\r\n\t\t\t\t\t{ ...g, title: action.group.title }\r\n\t\t\t\t)\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tcase UserActionTypes.REMOVE_ROLE: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\troles: state.roles.reduce((acc: IRole[], g) => {\r\n\t\t\t\t\tif (g.roleId !== action.roleId)\r\n\t\t\t\t\t\tacc.push({ ...g, users: [...g.users] })\r\n\t\t\t\t\treturn acc\r\n\t\t\t\t}, [])\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n};\r\n\r\n","// Define the User State\r\nimport { IOption } from '../common/types';\r\nimport { IAuth } from '../Top/types';\r\n\r\nexport interface IUser {\r\n\troleId: number,\r\n\tuserId: number,\r\n\tuserName: string;\r\n\tpwd: string,\r\n\tdepartment: string,\r\n\t\tcreatedBy: number,\r\n\t\tcreated: Date\r\n}\r\n\r\nexport interface IUserJson extends Omit<IUser, 'created'> {\r\n\tcreated: string\r\n}\r\n\r\nexport interface IRole {\r\n\troleId: number,\r\n\ttitle: string,\r\n\tcolor: string,\r\n\tusers: IUser[],\r\n\tisExpanded?: boolean,\r\n\tcreatedBy: number,\r\n\tcreated: Date\r\n}\r\n\r\n// Define the User State\r\nexport interface IUsersState {\r\n\treadonly roles: IRole[];\r\n\treadonly userEditing: IUser | undefined;\r\n\tallUsers: IUser[],\r\n\troleOptions: IOption<number>[];\r\n\tuserOptions: IOption<number>[];\r\n\tloading: boolean,\r\n\tformMode: string;\r\n\troleIdEditing: number;\r\n\townerUserId: number;\r\n}\r\n\r\n\r\nexport interface IRoleJson extends Omit<IRole, 'created' | 'users'> {\r\n\tusers: IUserJson[],\r\n\tcreated: string\r\n}\r\n\r\nexport interface IRolesProps {\r\n\twho: IUser, \r\n\troles: IRole[];\r\n\tuserEditing: IUser | undefined;\r\n\tformMode: string,\r\n\troleIdEditing: number,\r\n\tcanEdit: boolean,\r\n\tonSelectUser: (userId: number) => IUser;\r\n\tadd: (roleId: number, text: string, canEdit?: boolean) => void;\r\n\tedit: (roleId: number, userId: number) => void;\r\n\tremove: (roleId: number, userId: number) => void;\r\n\t// roles\r\n\taddRole: () => void;\r\n\ttoggleRole: (roleId: number) => void;\r\n\teditRole: (roleId: number) => void;\r\n\tremoveRole: (removeId: number) => void;\r\n\tstoreRole: (role: IRole) => void;\r\n}\r\n\r\nexport interface IFormProps {\r\n\tauth?: IAuth;\r\n\tuserEditing: IUser | undefined;\r\n\tformMode: string;\r\n\tcanEdit: boolean,\r\n\tcancel: () => void;\r\n\tsaveForm: (user: IUser, formMode: string) => void;\r\n\troleOptions: IOption<number>[];\r\n  }\r\n \r\n  export enum RoleId {\r\n\tOWNER = 11,\r\n\tADMINS = 22,\r\n\tEDITORS = 33,\r\n\tVIEWERS = 44\r\n}\r\n ","// Import Reducer type\r\nimport { Reducer } from 'redux';\r\nimport {\r\n  TagActions,\r\n  TagActionTypes\r\n} from './actions';\r\n\r\nimport { ITagState } from './types'\r\n\r\n// const initialTag: ITag = {\r\n// \ttagId: 0,\r\n// \tname: ''\r\n// };\r\n\r\nconst initialTagState: ITagState = {\r\n\ttags: [],\r\n\tloading: false,\r\n\tformMode: 'display'\r\n};\r\n\r\n\r\nexport const tagReducer: Reducer<ITagState, TagActions> = (\r\n  state = initialTagState,\r\n  action\r\n) => {\r\n  switch (action.type) {\r\n\r\n   case TagActionTypes.GET_ALL_TAGS: {\r\n\t\treturn {\r\n        ...state,\r\n        tags: action.tags.map(tag => ({...tag}) ),\r\n      };\r\n\t} \r\n\r\n \tcase TagActionTypes.GET_TAG: {\r\n      return {\r\n\t\t  ...state,\r\n        tag: action.tag\r\n      };\r\n\t}    \r\n\r\n\tdefault:\r\n   \t\treturn state;\r\n  }\r\n};"," // Import redux types\r\nimport { ActionCreator, Dispatch } from 'redux';\r\nimport { ThunkAction } from 'redux-thunk';\r\n// Import Top Typing\r\nimport { ILogin, ITop, ITopJson } from './types';\r\n\r\nimport { IAppState } from '../store/Store';\r\nimport { IUser, RoleId } from '../Users/types';\r\nimport { findUser, storeUser, UserActionTypes } from '../Users/actions';\r\n\r\n// localStorage\r\nexport const SUPPORT_TOP = 'SUPPORT_TOP';\r\n\r\n// Create Action Constants\r\nexport enum TopActionTypes {\r\n\tLOAD_TOP = \"LOAD_TOP\",\r\n\tNAVBAR_TOGGLE = 'NAVBAR_TOGGLE',\r\n\tREGISTER = 'REGISTER',\r\n\tREGISTER_USERNAME_EXISTS = 'REGISTER_USERNAME_EXISTS',\r\n\tAUTHENTICATE = 'AUTHENTICATE',\r\n\tUNAUTHENTICATE = 'UNAUTHENTICATE',\r\n\tAUTHENTICATE_WRONG_USERNAME = 'AUTHENTICATE_WRONG_USERNAME',\r\n\tAUTHENTICATE_WRONG_PWD = 'AUTHENTICATE_WRONG_PWD',\r\n\tCANCEL = 'CANCEL',\r\n\tTOGGLE_MODE = 'TOGGLE_MODE',\r\n\tSHOW_MODAL_JSON = 'SHOW_MODAL_JSON'\r\n}\r\n\r\n\r\nexport interface INavbarToggle {\r\n\ttype: TopActionTypes.NAVBAR_TOGGLE;\r\n}\r\n\r\nexport interface ILoadTop {\r\n\ttype: TopActionTypes.LOAD_TOP;\r\n\ttop: ITop\r\n}\r\n\r\nexport interface IRegister {\r\n\ttype: TopActionTypes.REGISTER;\r\n\tuser: IUser;\r\n}\r\n\r\nexport interface IRegisterUsernameExists {\r\n\ttype: TopActionTypes.REGISTER_USERNAME_EXISTS;\r\n}\r\n\r\nexport interface IAuthenticate {\r\n\ttype: TopActionTypes.AUTHENTICATE;\r\n\tuser: IUser;\r\n}\r\n\r\nexport interface IAuthenticateWrongUsername {\r\n\ttype: TopActionTypes.AUTHENTICATE_WRONG_USERNAME;\r\n}\r\n\r\nexport interface IAuthenticateWrongPwd {\r\n\ttype: TopActionTypes.AUTHENTICATE_WRONG_PWD;\r\n}\r\n\r\nexport interface IUnAuthenticate {\r\n\ttype: TopActionTypes.UNAUTHENTICATE;\r\n}\r\n\r\nexport interface ICancel {\r\n\ttype: TopActionTypes.CANCEL;\r\n}\r\n\r\nexport interface IToggleMode {\r\n\ttype: TopActionTypes.TOGGLE_MODE;\r\n}\r\n\r\nexport interface IShowModalJSON {\r\n\ttype: TopActionTypes.SHOW_MODAL_JSON;\r\n\tshow: boolean\r\n}\r\n\r\n\r\n// Combine the action types with a union (we assume there are more)\r\nexport type TopActions = ILoadTop |\r\n\tINavbarToggle |\r\n\tIRegister |\r\n\tIRegisterUsernameExists |\r\n\tIAuthenticate |\r\n\tIAuthenticateWrongUsername |\r\n\tIAuthenticateWrongPwd |\r\n\tIUnAuthenticate |\r\n\tICancel |\r\n\tIToggleMode |\r\n\tIShowModalJSON;\r\n\r\nconst isWebStorageSupported = () => 'localStorage' in window\r\n\r\nconst parseFromLocalStorage = (json: ITopJson): ITop => {\r\n\treturn parseObj(json);\r\n}\r\n\r\nconst parseObj = (json: ITopJson): ITop => {\r\n\tconst { auth } = json;\r\n\tif (!auth) {\r\n\t\treturn {\r\n\t\t\t...json,\r\n\t\t\tauth: undefined\r\n\t\t}\r\n\t}\r\n\r\n\tconst { who, visited, authenticated } = auth;\r\n\treturn {\r\n\t\t...json,\r\n\t\tauth: !auth ? undefined : {\r\n\t\t\t...auth,\r\n\t\t\twho: {\r\n\t\t\t\t...who,\r\n\t\t\t\tcreated: new Date(who.created!)\r\n\t\t\t},\r\n\t\t\tvisited: new Date(visited),\r\n\t\t\tauthenticated: new Date(authenticated)\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport const loadTop: ActionCreator<\r\n\tThunkAction<Promise<any>, IAppState, null, ILoadTop>\r\n> = () => {\r\n\treturn async (dispatch: Dispatch) => {\r\n\t\ttry {\r\n\t\t\tlet top = undefined;\r\n\r\n\t\t\tif (isWebStorageSupported()) {\r\n\t\t\t\tconst s = localStorage.getItem(SUPPORT_TOP);\r\n\t\t\t\tif (s !== null) {\r\n\t\t\t\t\t//const Users: IUserRole[] = JSON.parse(sUsers);\r\n\t\t\t\t\t//Users.map(g => storageUsers.push(g))\r\n\t\t\t\t\tconst parsed = JSON.parse(s);\r\n\t\t\t\t\tconsole.log('parsed', parsed)\r\n\t\t\t\t\ttop = parseFromLocalStorage(parsed);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (top) {\r\n\t\t\t\tdispatch({\r\n\t\t\t\t\ttype: TopActionTypes.LOAD_TOP,\r\n\t\t\t\t\ttop\r\n\t\t\t\t});\r\n\t\t\t\tif (top.auth && top.auth.who) { // check if date is older then a few months\r\n\t\t\t\t\tdispatch<any>(authenticate(top.auth!.who))\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn top;\r\n\t\t}\r\n\t\tcatch (err) {\r\n\t\t\tconsole.error(err);\r\n\t\t}\r\n\t};\r\n}\r\n\r\n\r\nexport const register: ActionCreator<\r\n\tThunkAction<Promise<any>, IAppState, null, IAuthenticate>\r\n> = (loginUser: ILogin) => {\r\n\treturn async (dispatch: Dispatch, getState: () => IAppState) => {\r\n\t\ttry {\r\n\t\t\tconst { usersState } = getState();\r\n\t\t\tconst { allUsers } = usersState;\r\n\t\t\tdispatch<any>(findUser(loginUser.userName))\r\n\t\t\t\t.then((user: IUser) => {\r\n\t\t\t\t\tif (user) {\r\n\t\t\t\t\t\tdispatch({\r\n\t\t\t\t\t\t\ttype: TopActionTypes.REGISTER_USERNAME_EXISTS\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tlet roleId = RoleId.VIEWERS;\r\n\t\t\t\t\t\tlet userId = 0;\r\n\t\t\t\t\t\tif (allUsers.length === 0) {\r\n\t\t\t\t\t\t\troleId = RoleId.OWNER;\r\n\t\t\t\t\t\t\tuserId = usersState.ownerUserId; // owner userId would be 101\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\tuserId = Math.max(...allUsers.map(u => u.userId)) + 1;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tconst user: IUser = {\r\n\t\t\t\t\t\t\troleId,\r\n\t\t\t\t\t\t\tuserId, \r\n\t\t\t\t\t\t\tuserName: loginUser.userName,\r\n\t\t\t\t\t\t\tpwd: loginUser.pwd,\r\n\t\t\t\t\t\t\tdepartment: \"dept1\",\r\n\t\t\t\t\t\t\tcreatedBy: userId, // registered user is treated as creator\r\n\t\t\t\t\t\t\tcreated: new Date()\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tdispatch<any>(storeUser(user, 'add'))\r\n\t\t\t\t\t\t\t.then((user: IUser) => {\r\n\t\t\t\t\t\t\t\tdispatch({\r\n\t\t\t\t\t\t\t\t\ttype: TopActionTypes.REGISTER,\r\n\t\t\t\t\t\t\t\t\tuser\r\n\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\tdispatch<any>(authenticate(loginUser));\r\n\t\t\t\t\t\t\t\tdispatch({type: UserActionTypes.CREATE_OPTIONS})\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t}\r\n\t\tcatch (err) {\r\n\t\t\tconsole.error(err);\r\n\t\t}\r\n\t};\r\n}\r\n\r\nexport const authenticate: ActionCreator<\r\n\tThunkAction<Promise<any>, IAppState, null, IAuthenticate>\r\n> = (loginUser: ILogin) => {\r\n\treturn async (dispatch: Dispatch, getState: () => IAppState) => {\r\n\t\ttry {\r\n\t\t\tdispatch<any>(await findUser(loginUser.userName))\r\n\t\t\t\t.then((user: IUser) => {\r\n\t\t\t\t\tif (user) {\r\n\t\t\t\t\t\tif (user.pwd === loginUser.pwd) {\r\n\t\t\t\t\t\t\tdispatch({\r\n\t\t\t\t\t\t\t\ttype: TopActionTypes.AUTHENTICATE,\r\n\t\t\t\t\t\t\t\tuser\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\tdispatch({\r\n\t\t\t\t\t\t\t\ttype: TopActionTypes.AUTHENTICATE_WRONG_PWD\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tdispatch({\r\n\t\t\t\t\t\t\ttype: TopActionTypes.AUTHENTICATE_WRONG_USERNAME\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t}\r\n\t\tcatch (err) {\r\n\t\t\tconsole.error(err);\r\n\t\t}\r\n\t};\r\n}\r\n\r\nexport const unAuthenticate: ActionCreator<\r\n\tThunkAction<Promise<any>, IAppState, null, IAuthenticate>\r\n> = () => {\r\n\treturn async (dispatch: Dispatch) => {\r\n\t\ttry {\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: TopActionTypes.UNAUTHENTICATE\r\n\t\t\t});\r\n\t\t}\r\n\t\tcatch (err) {\r\n\t\t\tconsole.error(err);\r\n\t\t}\r\n\t};\r\n}\r\n\r\nexport const cancelLogin: ActionCreator<any> = () => {\r\n\treturn (dispatch: Dispatch) => {\r\n\t\ttry {\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: TopActionTypes.CANCEL\r\n\t\t\t});\r\n\t\t} catch (err) {\r\n\t\t\tconsole.error(err);\r\n\t\t}\r\n\t};\r\n};\r\n\r\n\r\nexport const toggleMode: ActionCreator<any> = () => {\r\n\treturn (dispatch: Dispatch) => {\r\n\t\ttry {\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: TopActionTypes.TOGGLE_MODE\r\n\t\t\t});\r\n\t\t} catch (err) {\r\n\t\t\tconsole.error(err);\r\n\t\t}\r\n\t};\r\n};\r\n\r\n\r\nexport const navbarToggle: ActionCreator<any> = () => {\r\n\treturn (dispatch: Dispatch) => {\r\n\t\ttry {\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: TopActionTypes.NAVBAR_TOGGLE\r\n\t\t\t});\r\n\t\t}\r\n\t\tcatch (err) {\r\n\t\t\tconsole.error(err);\r\n\t\t}\r\n\t};\r\n};\r\n\r\nexport const setShowModalJSON: ActionCreator<any> = (show: boolean) => {\r\n\treturn (dispatch: Dispatch) => {\r\n\t\ttry {\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: TopActionTypes.SHOW_MODAL_JSON,\r\n\t\t\t\tshow\r\n\t\t\t});\r\n\t\t}\r\n\t\tcatch (err) {\r\n\t\t\tconsole.error(err);\r\n\t\t}\r\n\t};\r\n};\r\n\r\n/*\r\nexport function checkAuthentication() {\r\n\treturn async (dispatch: Dispatch) => {\r\n\t  const auth = await window.localStorage.getItem(\"authenticated\");\r\n\t  const formattedAuth = typeof auth === \"string\" ?\r\n\t\tJSON.parse(auth) :\r\n\t\tnull;\r\n  \r\n\t  formattedAuth ? dispatch(authenticate()) : dispatch(unauthenticate());\r\n\t};\r\n  }\r\n*/","// Import Reducer type\r\nimport { Reducer } from 'redux';\r\nimport {\r\n\tSUPPORT_TOP, TopActions, TopActionTypes\r\n} from './actions';\r\nimport { ITop, ITopState } from './types';\r\n\r\nconst initialTop: ITop = {\r\n\tisAuthenticated: null,\r\n\tuuid: null,\r\n\tdarkMode: true,\r\n\tshowModalJSON: false\r\n};\r\n\r\nconst initialTopState: ITopState = {\r\n\ttop: initialTop\r\n};\r\n\r\nconst aTypesToStore = Object.keys(TopActionTypes).filter(a => a !== TopActionTypes.LOAD_TOP);\r\n\r\nexport const topReducer: Reducer<ITopState, TopActions> = (state, action) => {\r\n\tconst newState = myReducer(state, action);\r\n\tif (aTypesToStore.includes(action.type)) {\r\n\t\tlocalStorage.setItem(SUPPORT_TOP, JSON.stringify(newState.top));\r\n\t}\r\n\treturn newState;\r\n}\r\n\r\nconst myReducer: Reducer<ITopState, TopActions> = (\r\n\tstate = initialTopState,\r\n\taction\r\n) => {\r\n\tswitch (action.type) {\r\n\r\n\t\tcase TopActionTypes.LOAD_TOP: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\ttop: { \r\n\t\t\t\t\t...action.top, \r\n\t\t\t\t\tauthError: ''\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tcase TopActionTypes.REGISTER: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\ttop: {\r\n\t\t\t\t\tisAuthenticated: true,\r\n\t\t\t\t\tuuid: \"placeholder-uuid\",\r\n\t\t\t\t\tauth: {\r\n\t\t\t\t\t\twho: action.user,\r\n\t\t\t\t\t\tauthenticated: new Date(),\r\n\t\t\t\t\t\tvisited: new Date()\r\n\t\t\t\t\t},\r\n\t\t\t\t\tdarkMode: false,\r\n\t\t\t\t\tshowModalJSON: false\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tcase TopActionTypes.REGISTER_USERNAME_EXISTS: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\ttop: {\r\n\t\t\t\t\t...state.top,\r\n\t\t\t\t\tauthError: \"Username already exists, please chose another!\"\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t}\t\t\r\n\r\n\t\t// case TopActionTypes.NAVBAR_TOGGLE: {\r\n\t\t// \treturn {\r\n\t\t// \t\t...state,\r\n\t\t// \t\ttop: {\r\n\t\t// \t\t\t...state.top\r\n\t\t// \t\t}\r\n\t\t// \t};\r\n\t\t// }\t\r\n\r\n\t\tcase TopActionTypes.SHOW_MODAL_JSON: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\ttop: {\r\n\t\t\t\t\t...state.top,\r\n\t\t\t\t\tshowModalJSON: action.show\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t}\t\r\n\t\t\r\n\t\tcase TopActionTypes.TOGGLE_MODE: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\ttop: {\r\n\t\t\t\t\t...state.top,\r\n\t\t\t\t\tdarkMode: !state.top.darkMode\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t}\t\r\n\r\n\t\tcase TopActionTypes.AUTHENTICATE: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\ttop: {\r\n\t\t\t\t\t...state.top,\r\n\t\t\t\t\tisAuthenticated: true,\r\n\t\t\t\t\tuuid: \"placeholder-uuid\",\r\n\t\t\t\t\tauth: {\r\n\t\t\t\t\t\twho: action.user,\r\n\t\t\t\t\t\tauthenticated: new Date(),\r\n\t\t\t\t\t\tvisited: new Date()\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tcase TopActionTypes.UNAUTHENTICATE: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\ttop: {\r\n\t\t\t\t\t...state.top,\r\n\t\t\t\t\tisAuthenticated: false,\r\n\t\t\t\t\tauth: undefined\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tcase TopActionTypes.AUTHENTICATE_WRONG_USERNAME: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\ttop: {\r\n\t\t\t\t\t...state.top,\r\n\t\t\t\t\tauthError: \"User doesn't exist!\"\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tcase TopActionTypes.AUTHENTICATE_WRONG_PWD: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\ttop: {\r\n\t\t\t\t\t...state.top,\r\n\t\t\t\t\tauthError: \"Password doesn't match!\"\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t}\r\n\r\n\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n};","import { applyMiddleware, combineReducers, createStore, Store } from 'redux';\r\nimport thunk from 'redux-thunk';\r\n\r\nimport { categoriesReducer } from '../Categories/categoriesReducer';\r\nimport { answerReducer } from '../Answers/reducer';\r\n\r\nimport { IAnswerState } from '../Answers/types';\r\nimport { ICategoriesState } from '../Categories/types';\r\nimport { IUsersState } from '../Users/types';\r\nimport { userReducer } from '../Users/reducer';\r\nimport { ITagState } from '../roleTags/types';\r\nimport { tagReducer } from '../roleTags/reducer';\r\nimport { ITopState } from '../Top/types';\r\nimport { topReducer } from '../Top/reducer';\r\n\r\nexport interface IAppState {\r\n  categoriesState: ICategoriesState;\r\n  answerState: IAnswerState;\r\n  usersState: IUsersState;\r\n  tagState: ITagState;\r\n  topState: ITopState;\r\n}\r\n\r\n// Create the root reducer\r\nconst rootReducer = combineReducers<IAppState>({\r\n  categoriesState: categoriesReducer,\r\n  answerState: answerReducer,\r\n  usersState: userReducer,\r\n  tagState: tagReducer,\r\n  topState: topReducer\r\n});\r\n\r\n// Create a configure store function of type `IAppState`\r\nexport default function configureStore(): Store<IAppState, any> {\r\n  const store = createStore(rootReducer, undefined, applyMiddleware(thunk));\r\n  return store;\r\n}","import { connect, Provider } from 'react-redux';\r\nimport { createContext, useReducer } from \"react\";\r\nimport { IAppState } from './store/Store';\r\n\r\nexport interface IThemeState {\r\n  darkMode: boolean,\r\n  variant?: string,\r\n  bg: string\r\n}\r\n\r\nenum ThemeActionKind {\r\n  LIGHTMODE = 'LIGHTMODE',\r\n  DARKMODE = 'DARKMODE',\r\n}\r\n\r\n// An interface for our actions\r\ninterface IThemeAction {\r\n  type: ThemeActionKind;\r\n}\r\n\r\nconst initialState = {\r\n  darkMode: false,\r\n  variant: 'light',\r\n  bg: 'light'\r\n};\r\n\r\nexport const ThemeContext = createContext<{ state: IThemeState; dispatch: React.Dispatch<any> }>({\r\n  state: initialState,\r\n  dispatch: () => null\r\n});\r\n\r\n\r\nconst themeReducer = (state: IThemeState, action: IThemeAction) => {\r\n  switch (action.type) {\r\n    case \"LIGHTMODE\":\r\n      return { ...state, darkMode: false, variant: 'light', bg: 'light' };\r\n    case \"DARKMODE\":\r\n      return { ...state, darkMode: true, variant: 'dark', bg: 'dark' };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport function ThemeProvider(props: { children: React.ReactNode, darkMode: boolean })\r\n{\r\n  const initState = {\r\n    ...initialState, \r\n    darkMode: props.darkMode,\r\n    variant: props.darkMode? 'dark' : 'light',\r\n    bg: props.darkMode? 'dark' : 'light'\r\n  }\r\n\r\n  const [state, dispatch] = useReducer(themeReducer, initState);\r\n  return <ThemeContext.Provider value={{ state, dispatch }}>\r\n    {props.children}\r\n  </ThemeContext.Provider>;\r\n}\r\n\r\n","import * as React from 'react';\r\nimport { createRef } from 'react'\r\n\r\nimport Autosuggest from 'react-autosuggest';\r\nimport AutosuggestHighlightMatch from \"autosuggest-highlight/match\";\r\nimport AutosuggestHighlightParse from \"autosuggest-highlight/parse\";\r\n\r\nimport { IQuestion, ICategory, ICategoryState } from '../Categories/types'\r\nimport './AutoSuggest.css'\r\n\r\n// https://developer.mozilla.org/en/docs/Web/JavaScript/Guide/Regular_Expression\r\n// s#Using_Special_Characters\r\nfunction escapeRegexCharacters(str: string): string {\r\n\treturn str.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&');\r\n}\r\n\r\n\r\nlet inputAutosuggest = createRef<HTMLInputElement>();\r\n\r\nconst QuestionAutosuggestMulti = Autosuggest as { new(): Autosuggest<IQuestion, ICategory> };\r\n\r\nexport class AutoSuggest extends React.Component<{\r\n\tcategories: ICategory[],\r\n\tcategoryQuestions: Map<number, ICategoryState>,\r\n\ttekst: string | undefined,\r\n\tonSelectQuestion: (categoryId: number, questionId: number) => void\r\n}, any\r\n> {\r\n\t// region Fields\r\n\r\n\tstate: any;\r\n\t//inputAutosuggest: React.RefObject<HTMLInputElement>;\r\n\t// endregion region Constructor\r\n\tconstructor(props: any) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tvalue: props.tekst || '',\r\n\t\t\tsuggestions: this.getSuggestions(''),\r\n\t\t\thighlighted: ''\r\n\t\t};\r\n\t\t//this.inputAutosuggest = createRef<HTMLInputElement>();\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\r\n\t\tsetTimeout(() => {\r\n\t\t\t//inputAutosuggest!.current!.focus();\r\n\t\t\tsetTimeout(() => {\r\n\t\t\t\twindow.focus()\r\n\t\t\t\tinputAutosuggest!.current!.focus();\r\n\t\t\t}, 500)\r\n\r\n\t\t}, 100)\r\n\r\n\t\t// console.log('componentDidMount', document)\r\n\t\t// console.log(document?.getElementById('inputAutoSuggest'))\r\n\t\t//document?.getElementById('inputAutoSuggest')?.focus(); \r\n\t}\r\n\r\n\t// endregion region Rendering methods\r\n\trender(): JSX.Element {\r\n\t\tconst { value, suggestions } = this.state;\r\n\r\n\t\treturn <QuestionAutosuggestMulti\r\n\t\t\tonSuggestionsClearRequested={this.onSuggestionsClearRequested}  // (sl) added\r\n\t\t\tmultiSection={true}\r\n\t\t\tsuggestions={suggestions}\r\n\t\t\tonSuggestionsFetchRequested={this.onSuggestionsFetchRequested.bind(this)}\r\n\t\t\tonSuggestionSelected={this.onSuggestionSelected.bind(this)}\r\n\t\t\tgetSuggestionValue={this.getSuggestionValue}\r\n\t\t\trenderSuggestion={this.renderSuggestion}\r\n\t\t\trenderSectionTitle={this.renderSectionTitle}\r\n\t\t\tgetSectionSuggestions={this.getSectionSuggestions}\r\n\t\t\t// onSuggestionHighlighted={this.onSuggestionHighlighted} (sl)\r\n\t\t\tonSuggestionHighlighted={this.onSuggestionHighlighted.bind(this)}\r\n\t\t\thighlightFirstSuggestion={false}\r\n\t\t\trenderInputComponent={this.renderInputComponent}\r\n\t\t\trenderSuggestionsContainer={this.renderSuggestionsContainer}\r\n\t\t\tfocusInputOnSuggestionClick={false}\r\n\t\t\tinputProps={{\r\n\t\t\t\tplaceholder: `Type 'promocode'`,\r\n\t\t\t\tvalue,\r\n\t\t\t\tonChange: (e, changeEvent) => this.onChange(e, changeEvent),\r\n\t\t\t\tautoFocus: true\r\n\t\t\t}}\r\n\t\t/>;\r\n\t}\r\n\r\n\tprotected onSuggestionsClearRequested = () => {\r\n\t\tthis.setState({\r\n\t\t\tsuggestions: []\r\n\t\t});\r\n\t};\r\n\r\n\r\n\r\n\tprotected onSuggestionSelected(event: React.FormEvent<any>, data: Autosuggest.SuggestionSelectedEventData<IQuestion>): void {\r\n\t\tconst question: IQuestion = data.suggestion;\r\n\t\t// alert(`Selected question is ${question.questionId} (${question.text}).`);\r\n\t\tthis.props.onSelectQuestion(question.categoryId, question.questionId);\r\n\t}\r\n\r\n\t/*\r\n\tprotected renderSuggestion(suggestion: Question, params: Autosuggest.RenderSuggestionParams): JSX.Element {\r\n\t\t const className = params.isHighlighted ? \"highlighted\" : undefined;\r\n\t\t return <span className={className}>{suggestion.name}</span>;\r\n\t}\r\n\t*/\r\n\r\n\tprotected renderSuggestion(suggestion: IQuestion, params: Autosuggest.RenderSuggestionParams): JSX.Element {\r\n\t\t// const className = params.isHighlighted ? \"highlighted\" : undefined;\r\n\t\t//return <span className={className}>{suggestion.name}</span>;\r\n\t\tconst matches = AutosuggestHighlightMatch(suggestion.text, params.query);\r\n\t\tconst parts = AutosuggestHighlightParse(suggestion.text, matches);\r\n\r\n\t\treturn (\r\n\t\t\t<span>\r\n\t\t\t\t{parts.map((part, index) => {\r\n\t\t\t\t\tconst className = part.highlight ? 'react-autosuggest__suggestion-match' : undefined;\r\n\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\t<span className={className} key={index}>\r\n\t\t\t\t\t\t\t{part.text}\r\n\t\t\t\t\t\t</span>\r\n\t\t\t\t\t);\r\n\t\t\t\t})}\r\n\t\t\t</span>\r\n\t\t);\r\n\t}\r\n\r\n\tprotected renderSectionTitle(section: ICategory): JSX.Element {\r\n\t\treturn <strong>{section.title}</strong>;\r\n\t}\r\n\r\n\t// protected renderInputComponent(inputProps: Autosuggest.InputProps<IQuestion>): JSX.Element {\r\n\t// \t const { onChange, onBlur, ...restInputProps } = inputProps;\r\n\t// \t return (\r\n\t// \t\t  <div>\r\n\t// \t\t\t\t<input {...restInputProps} />\r\n\t// \t\t  </div>\r\n\t// \t );\r\n\t// }\r\n\r\n\tprotected renderInputComponent(inputProps: Autosuggest.RenderInputComponentProps): JSX.Element {\r\n\t\tconst { ref, ...restInputProps } = inputProps;\r\n\t\t// if (ref !== undefined)\r\n\t\t// \tthis.inputAutosuggest = ref as React.RefObject<HTMLInputElement>;\r\n\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t<input {...restInputProps} ref={inputAutosuggest} />\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n\r\n\r\n\tprotected renderSuggestionsContainer({ containerProps, children, query }: Autosuggest.RenderSuggestionsContainerParams): JSX.Element {\r\n\t\treturn (\r\n\t\t\t<div {...containerProps}>\r\n\t\t\t\t<span>{children}</span>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n\t// endregion region Event handlers\r\n\r\n\tprotected onChange(event: /*React.ChangeEvent<HTMLInputElement>*/ React.FormEvent<any>, { newValue, method }: Autosuggest.ChangeEvent): void {\r\n\t\tthis.setState({ value: newValue });\r\n\t}\r\n\r\n\tprotected onSuggestionsFetchRequested({ value }: any): void {\r\n\t\tthis.setState({\r\n\t\t\tsuggestions: this.getSuggestions(value)\r\n\t\t});\r\n\t}\r\n\r\n\tprivate anyWord = (valueWordRegex: RegExp[], questionWords: string[]): boolean => {\r\n\t\tfor (let valWordRegex of valueWordRegex)\r\n\t\t\tfor (let questionWord of questionWords)\r\n\t\t\t\tif (valWordRegex.test(questionWord))\r\n\t\t\t\t\treturn true;\r\n\t\treturn false;\r\n\t}\r\n\t// endregion region Helper methods\r\n\tprotected getSuggestions(value: string): ICategory[] {\r\n\t\tconst escapedValue = escapeRegexCharacters(value.trim());\r\n\r\n\t\tif (escapedValue === '') {\r\n\t\t\treturn [];\r\n\t\t}\r\n\r\n\t\tconst valueWords = escapedValue.split(' ');\r\n\t\tconst valueWordRegex = valueWords.map(word => new RegExp(word, 'i'))\r\n\t\t// const regex = new RegExp('^' + escapedValue, 'i');\r\n\t\t// const regex = new RegExp(escapedValue, 'i');\r\n\r\n\t\t// return AutoSuggest.questions\t \r\n\t\t//  return this.props.categories\r\n\t\t// \t\t.map(section => {\r\n\t\t// \t\t\treturn {\r\n\t\t// \t\t\t\t\ttitle: section.title,\r\n\t\t// \t\t\t\t\tquestions: section\r\n\t\t// \t\t\t\t\t\t.questions\r\n\t\t// \t\t\t\t\t\t.filter(question => regex.test(question.text))\r\n\t\t// \t\t\t};\r\n\t\t// \t\t})\r\n\t\t// \t\t.filter(section => section.questions.length > 0);\r\n\t\tconst { categories, categoryQuestions } = this.props;\r\n\t\treturn categories\r\n\t\t\t.map(group => {\r\n\t\t\t\tconsole.log('categoryId:', group.categoryId);\r\n\t\t\t\tconsole.log('questions:', categoryQuestions.get(group.categoryId)!.questions)\r\n\t\t\t\treturn {\r\n\t\t\t\t\t...group,\r\n\t\t\t\t\tquestions: //.group.questions\r\n\t\t\t\t\t\tcategoryQuestions.get(group.categoryId)!.questions\r\n\t\t\t\t\t\t\t.filter(question => this.anyWord(valueWordRegex, question.words!))\r\n\t\t\t\t};\r\n\t\t\t})\r\n\t\t\t.filter(section => section.questions.length > 0);\r\n\t}\r\n\r\n\tprotected getSuggestionValue(suggestion: IQuestion) {\r\n\t\treturn suggestion.text;\r\n\t}\r\n\r\n\tprotected getSectionSuggestions(section: ICategory) {\r\n\t\treturn section.questions;\r\n\t}\r\n\r\n\tprotected onSuggestionHighlighted(params: Autosuggest.SuggestionHighlightedParams): void {\r\n\t\tthis.setState({\r\n\t\t\thighlighted: params.suggestion\r\n\t\t});\r\n\t}\r\n\t// endregion\r\n}\r\n\r\n","import { connect } from 'react-redux';\r\nimport { IAppState } from '../../store/Store';\r\nimport {OptionName}  from '../components/OptionName'\r\n\r\ninterface IOwnProps {\r\n\tid: number\r\n}\r\n\r\nconst mapStateToProps = (store: IAppState, ownProps: IOwnProps ) => {\r\n\treturn {\r\n\t\toptions: store.usersState.userOptions,\r\n\t\tid: ownProps.id\r\n\t};\r\n};\r\n\r\n\r\nexport default connect(mapStateToProps)(OptionName);\r\n","import { IOption, OptionValue } from \"../types\";\r\n\r\ntype Props<T extends OptionValue> = {\r\n    options: IOption<T>[];\r\n    id: T;\r\n};\r\n\r\nexport interface IProps {\r\n\toptions: IOption<number>[];\r\n  id: number;\r\n}\r\n\r\nexport function OptionName<T extends OptionValue>(props: Props<T>) {\r\n    const { id } = props;\r\n    const option: IOption<T>|undefined = props.options.find(option => option.value === id);\r\n    return (\r\n        <span>\r\n            {option\r\n                ? option!.label\r\n                : \"Unknown\"\r\n            }\r\n        </span>\r\n    );\r\n}","import React, { useContext } from 'react';\r\nimport { useFormik } from 'formik';\r\nimport * as Yup from 'yup'\r\nimport { ICategoryFormProps } from '../types';\r\n\r\nimport { ThemeContext } from \"../../ThemeContext\";\r\nimport { Button, Container, Form } from \"react-bootstrap\";\r\nimport UserName from '../../common/containers/UserName';\r\n//import { number } from 'yup/lib/locale';\r\n\r\nconst CategForm: React.FC<ICategoryFormProps> = (props: ICategoryFormProps) => {\r\n\r\n  const category = props.category!;\r\n  const { categoryId, title, questions, isExpanded, createdBy, created } = category;\r\n\r\n  const formik = useFormik({\r\n    enableReinitialize: true,\r\n    initialValues: {\r\n      categoryId,\r\n      title,\r\n      questions,\r\n      isExpanded,\r\n      createdBy,\r\n      created\r\n    },\r\n    validationSchema: Yup.object({\r\n      title: Yup.string()\r\n        .max(150, 'Must be 150 characters or less')\r\n        .required('Required')\r\n    }),\r\n    onSubmit: values => {\r\n      // alert(JSON.stringify(values, null, 2));\r\n      props.saveForm(values, props.formMode)\r\n    }\r\n  });\r\n\r\n  const isEdit = () => props.formMode === 'edit';\r\n\r\n  console.log('RENDERING', formik.values)\r\n  return (\r\n    <Form onSubmit={formik.handleSubmit}>\r\n\r\n      {isEdit() &&\r\n        <Form.Group controlId=\"categoryId\">\r\n          <Form.Label>Id: </Form.Label>\r\n          <span> {formik.values.categoryId}</span>\r\n        </Form.Group>\r\n      }\r\n\r\n      <Form.Group controlId=\"title\">\r\n        <Form.Label>Title</Form.Label>\r\n        <Form.Control\r\n          as=\"textarea\"\r\n          name=\"title\"\r\n          onChange={formik.handleChange}\r\n          //onBlur={formik.handleBlur}\r\n          onBlur={(e: React.FocusEvent<HTMLTextAreaElement>): void => {\r\n            if (isEdit() && formik.initialValues.title !== formik.values.title)\r\n              formik.submitForm();\r\n          }}\r\n          value={formik.values.title}\r\n          style={{ width: '100%' }}\r\n          rows={2}\r\n          placeholder={'New Category'}\r\n        />\r\n        <Form.Text className=\"text-danger\">\r\n          {formik.touched.title && formik.errors.title ? (\r\n            <div className=\"text-danger\">{formik.errors.title}</div>\r\n          ) : null}\r\n        </Form.Text>\r\n      </Form.Group>\r\n\r\n      <br />\r\n\r\n      <Form.Group controlId=\"createdBy\">\r\n        <Form.Label>Created by:</Form.Label>\r\n        <UserName id={formik.values.createdBy} />\r\n      </Form.Group>\r\n      {/* <br /> */}\r\n      <Form.Group controlId=\"created\">\r\n        <Form.Label className=\"id\">Created:</Form.Label>\r\n        <span>{formik.values.created.toLocaleDateString()}</span>\r\n      </Form.Group>\r\n      <br />\r\n      {!isEdit() &&\r\n        <div className=\"buttons\">\r\n          {props.canEdit &&\r\n            <Button\r\n              variant=\"secondary\"\r\n              size=\"sm\"\r\n              onClick={() => {\r\n                props.cancel();\r\n                //props.handleClose()\r\n              }}>\r\n              Cancel\r\n            </Button>}\r\n          {props.canEdit &&\r\n            <Button\r\n              variant=\"primary\"\r\n              size=\"sm\"\r\n              type=\"submit\"\r\n            >\r\n              Save\r\n            </Button>}\r\n        </div>\r\n      }\r\n    </Form>\r\n\r\n\r\n  );\r\n};\r\n\r\nexport const CategoryForm: React.FC<ICategoryFormProps> = (props: ICategoryFormProps) => {\r\n\r\n  const theme = useContext(ThemeContext);\r\n  const { darkMode, variant, bg } = theme.state;\r\n\r\n  return (\r\n    <Container className={`${darkMode ? \"dark\" : \"\"}`}>\r\n      <CategForm {...props} />\r\n    </Container>\r\n  )\r\n}","import { connect } from 'react-redux';\r\n\r\nimport { IAppState } from '../../store/Store';\r\nimport { ICategory } from '../types'\r\n\r\nimport { Dispatch } from 'redux';  // ActionCreatorsMapObject, \r\n\r\nimport {\r\n\tstoreCategory,\r\n\tupdateCategory,\r\n\tcancelCategory,\r\n\tQuestionActions\r\n} from '../actions'\r\n\r\nimport { CategoryForm } from '../components/CategoryForm';\r\n\r\ninterface IProps {\r\n\tcanEdit: boolean\r\n}\r\n\r\n// Grab the categories from the store and make them available on props\r\nconst mapStateToProps = (store: IAppState, ownProps: IProps ) => {\r\n\tconst {categoriesState } = store;\r\n\tconst { category, formMode } = categoriesState; \r\n\treturn {\r\n\t\tcategory,\r\n\t\tformMode,\r\n\t\tcanEdit: ownProps.canEdit\r\n\t};\r\n};\r\n\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch<QuestionActions>) => {\r\n\treturn {\r\n\t\tsaveForm: (category: ICategory, formMode: string) => \r\n\t\t\tdispatch<any>(formMode==='add' \r\n\t\t\t\t? storeCategory(category)\r\n\t\t\t\t: updateCategory(category)),\r\n\t\tcancel: () => dispatch<any>(cancelCategory()),\r\n\t}\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CategoryForm);\r\n","import React from \"react\";\r\nimport Form from 'react-bootstrap/Form';\r\nimport { IOption, OptionValue } from \"./types\";\r\n\r\ntype Props<T extends OptionValue> = {\r\n    options: IOption<T>[];\r\n    value: T;\r\n    onChange: (e: React.FormEvent<HTMLSelectElement>, value: T) => void;\r\n    id: string,\r\n    name: string,\r\n    disabled?: boolean\r\n};\r\n\r\nexport function Select<T extends OptionValue>(props: Props<T>) {\r\n    const disabled = props.disabled ? true : false;\r\n    function handleOnChange(e: React.FormEvent<HTMLSelectElement>) {\r\n        const { selectedIndex } = e.currentTarget;\r\n        const selectedOption: IOption<T> = props.options[selectedIndex];\r\n        props.onChange(e, selectedOption.value);\r\n    }\r\n\r\n    return (\r\n        <Form.Select\r\n            id={props.id}\r\n            value={props.value}\r\n            onChange={handleOnChange}\r\n            disabled={disabled}\r\n            size=\"sm\"\r\n        >\r\n            {props.options.map(option => (\r\n                <option key={option.value} value={option.value}>\r\n                    {option.label}\r\n                </option>\r\n            ))}\r\n        </Form.Select>\r\n    );\r\n}","export const sourceOptions = [\r\n    { label: \"Unknown\", value: 0 },\r\n    { label: \"Gmail\", value: 1 },\r\n    { label: \"Outlook\", value: 2 },\r\n    { label: \"Phone\", value: 3 },\r\n    { label: \"Chat\", value: 4 },\r\n    { label: \"Slack\", value: 5 }\r\n]","export const statusOptions = [\r\n    { label: \"Unknown\", value: 0 },\r\n    { label: \"In progress\", value: 1 },\r\n    { label: \"Can't reproduce\", value: 2 },\r\n    { label: \"Blocked\", value: 3 },\r\n    { label: \"Complete\", value: 4 }\r\n]","import * as React from 'react';\r\n\r\nimport Autosuggest from 'react-autosuggest';\r\nimport AutosuggestHighlightMatch from \"autosuggest-highlight/match\";\r\nimport AutosuggestHighlightParse from \"autosuggest-highlight/parse\";\r\n\r\nimport { IAnswer }  from '../Answers/types'\r\nimport './AutoSuggest.css'\r\nimport { IQuestion } from '../Categories/types';\r\n\r\n// https://developer.mozilla.org/en/docs/Web/JavaScript/Guide/Regular_Expression\r\n// s#Using_Special_Characters\r\nfunction escapeRegexCharacters(str: string): string {\r\n\treturn str.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&');\r\n}\r\n\r\nconst QuestionAutosuggestMulti = Autosuggest as { new (): Autosuggest<IAnswer> };\r\n\r\ninterface IProps {\r\n\tanswersUnassigned: IAnswer[], \r\n\tquestion: IQuestion,\r\n\tassignQuestionAnswer: (categoryId: number, questionId: number, answerId: number) => void\r\n\tsetAnswerText?: (val: string) => void\r\n}\r\n\r\nexport class AutoSuggestAnswer extends React.Component<IProps, any> {\r\n\r\n\tstate: any;\r\n\r\n\tconstructor(props: any) {\r\n\t\t super(props);\r\n\r\n\t\t this.state = {\r\n\t\t\t  value: '',\r\n\t\t\t  suggestions: this.getSuggestions(''),\r\n\t\t\t  highlighted: ''\r\n\t\t };\r\n\t}\r\n\t// endregion region Rendering methods\r\n\trender(): JSX.Element {\r\n\t\t const {value, suggestions} = this.state;\r\n\r\n\t\t return <QuestionAutosuggestMulti\r\n\t\t \t  onSuggestionsClearRequested={this.onSuggestionsClearRequested}  // (sl) added\r\n\t\t\t  multiSection={false}\r\n\t\t\t  suggestions={suggestions}\r\n\t\t\t  onSuggestionsFetchRequested={this.onSuggestionsFetchRequested.bind(this)}\r\n\t\t\t  onSuggestionSelected={this.onSuggestionSelected.bind(this)}\r\n\t\t\t  getSuggestionValue={this.getSuggestionValue}\r\n\t\t\t  renderSuggestion={this.renderSuggestion}\r\n\t\t\t  // onSuggestionHighlighted={this.onSuggestionHighlighted} (sl)\r\n\t\t\t  onSuggestionHighlighted={this.onSuggestionHighlighted.bind(this)}  \r\n\t\t\t  highlightFirstSuggestion={true}\r\n\t\t\t  // renderInputComponent={this.renderInputComponent}\r\n\t\t\t  renderSuggestionsContainer={this.renderSuggestionsContainer}\r\n\t\t\t  inputProps={{\r\n\t\t\t\t\tplaceholder: `Search answers...`,\r\n\t\t\t\t\tvalue,\r\n\t\t\t\t\tonChange: (e, changeEvent) => this.onChange(e, changeEvent),\r\n\t\t\t  }}/>;\r\n\t}\r\n\r\n\tprotected onSuggestionsClearRequested = () => {\r\n\t\tthis.setState({\r\n\t\t  suggestions: []\r\n\t\t});\r\n\t };\r\n  \r\n  \r\n\r\n\tprotected onSuggestionSelected(event: React.FormEvent<any>, data: Autosuggest.SuggestionSelectedEventData<IAnswer>): void {\r\n\t\t const answer: IAnswer = data.suggestion;\r\n\t\t // alert(`Selected question is ${question.answerId} (${question.text}).`);\r\n\t\t this.props.assignQuestionAnswer(\r\n\t\t\t this.props.question.categoryId,\r\n\t\t\t this.props.question.questionId, \r\n\t\t\t answer.answerId);\r\n\t\tthis.setState({\r\n\t\t\tvalue: ''\r\n\t\t})\r\n\t}\r\n\r\n\t/*\r\n\tprotected renderSuggestion(suggestion: Question, params: Autosuggest.RenderSuggestionParams): JSX.Element {\r\n\t\t const className = params.isHighlighted ? \"highlighted\" : undefined;\r\n\t\t return <span className={className}>{suggestion.name}</span>;\r\n\t}\r\n\t*/\r\n\r\n\tprotected renderSuggestion(suggestion: IAnswer, params: Autosuggest.RenderSuggestionParams): JSX.Element {\r\n\t\t// const className = params.isHighlighted ? \"highlighted\" : undefined;\r\n\t\t//return <span className={className}>{suggestion.name}</span>;\r\n\t\tconst matches = AutosuggestHighlightMatch(suggestion.text, params.query);\r\n\t\tconst parts = AutosuggestHighlightParse(suggestion.text, matches);\r\n\t \r\n\t\treturn (\r\n\t\t  <span>\r\n\t\t\t {parts.map((part, index) => {\r\n\t\t\t\tconst className = part.highlight ? 'react-autosuggest__suggestion-match' : undefined;\r\n\t \r\n\t\t\t\treturn (\r\n\t\t\t\t  <span className={className} key={index}>\r\n\t\t\t\t\t {part.text}\r\n\t\t\t\t  </span>\r\n\t\t\t\t);\r\n\t\t\t })}\r\n\t\t  </span>\r\n\t\t);\r\n\t}\r\n\r\n\t// protected renderInputComponent(inputProps: Autosuggest.InputProps<IAnswer>): JSX.Element {\r\n\t// \t const { onChange, onBlur, ...restInputProps } = inputProps;\r\n\t// \t return (\r\n\t// \t\t  <div>\r\n\t// \t\t\t\t<input {...restInputProps} />\r\n\t// \t\t  </div>\r\n\t// \t );\r\n\t// }\r\n\r\n\tprotected renderSuggestionsContainer({containerProps, children, query}: Autosuggest.RenderSuggestionsContainerParams): JSX.Element {\r\n\t\t return (\r\n\t\t\t  <div {...containerProps}>\r\n\t\t\t\t\t<span>{children}</span>\r\n\t\t\t  </div>\r\n\t\t );\r\n\t}\r\n\t// endregion region Event handlers\r\n\tprotected onChange(event: React.FormEvent<any>, {newValue, method}: Autosuggest.ChangeEvent): void {\r\n\t\tif (this.props.setAnswerText) {\r\n\t\t\tthis.props.setAnswerText(newValue);\r\n\t\t}\r\n\t\tthis.setState({value: newValue});\r\n\t}\r\n\r\n\tprotected onSuggestionsFetchRequested({value}: any): void {\r\n\t\t this.setState({\r\n\t\t\t  suggestions: this.getSuggestions(value)\r\n\t\t });\r\n\t}\r\n\r\n\tprivate anyWord = (valueWordRegex: RegExp[], questionWords: string[]) : boolean => {\r\n\t\tfor (let valWordRegex of valueWordRegex)\r\n\t\t\tfor (let questionWord of questionWords)\r\n\t\t\t\tif (valWordRegex.test(questionWord))\r\n\t\t\t\t\treturn true;\r\n\t\treturn false;\r\n\t} \r\n\t// endregion region Helper methods\r\n\tprotected getSuggestions(value: string): IAnswer[] {\r\n\t\tconst escapedValue = escapeRegexCharacters(value.trim());\r\n\r\n\t\tif (escapedValue === '') {\r\n\t\t\treturn [];\r\n\t\t}\r\n\r\n\t\tconst valueWords = escapedValue.split(' ');\r\n\t\tconst valueWordRegex = valueWords.map(word => new RegExp(word, 'i') )\r\n\t\t// const regex = new RegExp('^' + escapedValue, 'i');\r\n\t\t// const regex = new RegExp(escapedValue, 'i');\r\n\r\n\t\treturn this.props.answersUnassigned.filter(answer => this.anyWord(valueWordRegex, answer.words!))\r\n\t}\r\n\r\n\tprotected getSuggestionValue(suggestion: IAnswer) {\r\n\t\t return suggestion.text;\r\n\t}\r\n\r\n\r\n\tprotected onSuggestionHighlighted(params: Autosuggest.SuggestionHighlightedParams): void {\r\n\t\t this.setState({\r\n\t\t\t  highlighted: params.suggestion\r\n\t\t });\r\n\t}\r\n\t// endregion\r\n}\r\n\r\n","import { useRef, useState, useEffect } from 'react';\r\n\r\nimport isMobile from 'ismobilejs';\r\nconst isMob = isMobile(navigator.userAgent).any;\r\n\r\ninterface IHoverProps {\r\n\tisHovered: boolean;\r\n}\r\n\r\n// Hook\r\nexport function useHover(): [React.RefObject<HTMLDivElement>, IHoverProps] {\r\n\tconst [hoverProps, setValue] = useState({ isHovered: isMob ? true : false });\r\n\r\n\tconst divRef = useRef<HTMLDivElement>(null);\r\n\r\n\tconst handleMouseOver = () => setValue({ isHovered: true });\r\n\tconst handleMouseOut = () => setValue({ isHovered: false });\r\n\r\n\tuseEffect(\r\n\t\t() => {\r\n\t\t\tconst node = divRef.current;\r\n\t\t\tif (node) {\r\n\r\n\t\t\t\tif (!isMob) {\r\n\t\t\t\t\tnode.addEventListener('mouseenter', () => handleMouseOver());\r\n\t\t\t\t\tnode.addEventListener('mouseleave', () => handleMouseOut());\r\n\r\n\t\t\t\t\treturn () => {\r\n\t\t\t\t\t\tnode.removeEventListener('mouseenter', () => handleMouseOver());\r\n\t\t\t\t\t\tnode.removeEventListener('mouseleave', () => handleMouseOut());\r\n\t\t\t\t\t};\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}, [divRef.current] // Recall only if ref changes\r\n\t);\r\n\r\n\treturn [divRef, hoverProps];\r\n}\r\n\r\n","import * as React from 'react';\r\n\r\nimport { useHover } from '../../common/useHover'\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faWindowClose, faCopy } from '@fortawesome/free-solid-svg-icons'\r\n\r\nimport { IQuestion, IQuestionAnswer } from '../types';\r\nimport { Button } from 'react-bootstrap';\r\n\r\n\r\ninterface IQuestionAnswerRowProps {\r\n\tquestion: IQuestion;\r\n\tquestionAnswer: IQuestionAnswer;\r\n\tselectQuestionAnswer: (categoryId: number, questionId: number, answerId: number) => void;\r\n\tcopyQuestionAnswer: (categoryId: number, questionId: number, answerId: number) => void;\r\n\tremoveQuestionAnswer: (categoryId: number, questionId: number, answerId: number) => void;\r\n}\r\n\r\nconst QuestionAnswerRow: React.FC<IQuestionAnswerRowProps> = (props: IQuestionAnswerRowProps) => {\r\n\r\n\tconst [hoverRef, hoverProps] = useHover();\r\n\r\n\tconst { question, questionAnswer, removeQuestionAnswer } = props;\r\n\tconst { categoryId, questionId } = question;\r\n\tconst { answerId, text, assigned } = questionAnswer;\r\n\r\n\treturn (\r\n\t\t<div ref={hoverRef}  className=\"d-flex justify-content-start align-items-center\">\r\n\t\t\t<Button\r\n\t\t\t\tstyle={{ fontSize: '13px' }}\r\n\t\t\t\tvariant='link'\r\n\t\t\t\tsize=\"sm\"\r\n\t\t\t\tclassName=\"answer py-0 px-1 text-decoration-none\"\r\n\t\t\t\ttitle={`AnswerId:${answerId}\\nAssigned: ${assigned.toLocaleDateString()} ${assigned.toLocaleTimeString()}`}\r\n\t\t\t\tonClick={() => {\r\n\t\t\t\t\t// selectQuestionAnswer(categoryId, questionId, answerId)}\r\n\t\t\t\t\t// alert('No action for the time being')\r\n\t\t\t\t}}\r\n\t\t\t>\r\n\t\t\t\t{text}\r\n\t\t\t</Button>\r\n\t\t\t{hoverProps.isHovered &&\r\n\t\t\t\t<button className=\"button-edit\" title=\"Copy Answer to Cliboard\"\r\n\t\t\t\t\tonClick={(e) => {\r\n\t\t\t\t\t\t//const input = document.querySelector<HTMLInputElement>('#' + id);\r\n\t\t\t\t\t\tif (navigator.clipboard) {\r\n\t\t\t\t\t\t\tnavigator.clipboard.writeText(`${questionAnswer.text}`) // input!.value)\r\n\t\t\t\t\t\t\t\t.then(() => {\r\n\t\t\t\t\t\t\t\t\tconsole.log('Copied to clipboard successfully.');\r\n\t\t\t\t\t\t\t\t}, (err) => {\r\n\t\t\t\t\t\t\t\t\tconsole.log('Failed to copy the text to clipboard.', err);\r\n\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\te.stopPropagation();\r\n\t\t\t\t\t\t// copyQuestionAnswer(categoryId, questionId, answerId);\r\n\t\t\t\t\t}\r\n\t\t\t\t\t}>\r\n\t\t\t\t\t<FontAwesomeIcon icon={faCopy} color='lightblue' />\r\n\t\t\t\t</button>\r\n\t\t\t}\r\n\t\t\t{hoverProps.isHovered &&\r\n\t\t\t\t<button \r\n\t\t\t\t\tclassName=\"button-remove\"\r\n\t\t\t\t\ttitle=\"Remove\"\r\n\t\t\t\t\tonClick={(e) => {\r\n\t\t\t\t\t\t\tremoveQuestionAnswer(categoryId, questionId, answerId);\r\n\t\t\t\t\t\t\te.preventDefault();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t>\r\n\t\t\t\t\t<FontAwesomeIcon icon={faWindowClose} color='lightblue' />\r\n\t\t\t\t</button>\r\n\t\t\t}\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default QuestionAnswerRow\r\n\r\n","import React, { useContext } from 'react';\r\nimport { Button, Container, Form } from \"react-bootstrap\";\r\nimport { useFormik } from 'formik';\r\nimport * as Yup from 'yup'\r\nimport { IAnswer } from '../types';\r\nimport UserName from '../../common/containers/UserName'\r\nimport { ThemeContext } from '../../ThemeContext';\r\nimport { initialAnswer } from '../../Answers/reducer'\r\n\r\ninterface IProps {\r\n\tanswer: IAnswer;\r\n\tformMode: string;\r\n\toptions?: string[];\r\n\tcancel: () => void;\r\n\tsaveForm: (answer: IAnswer, formMode: string) => void;\r\n}\r\n\r\nconst AnsForm: React.FC<IProps> = (props: IProps) => {\r\n\r\n\tlet { answer } = props;\r\n\tif (!answer) // it is still view in modal, although hidden\r\n    \tanswer = { ...initialAnswer };\r\n\r\n\tconst formik = useFormik({\r\n\t\tenableReinitialize: true,\r\n\t\tinitialValues: {\r\n\t\t\tanswerId: answer.answerId,\r\n\t\t\ttext: answer.text,\r\n\t\t\tcreatedBy: answer.createdBy,\r\n\t\t\tcreated: answer.created\r\n\t\t},\r\n\t\tvalidationSchema: Yup.object({\r\n\t\t\ttext: Yup.string()\r\n\t\t\t\t.max(150, 'Must be 150 characters or less')\r\n\t\t\t\t.required('Required'),\r\n\t\t}),\r\n\t\tonSubmit: (values) => {\r\n\t\t\t// alert(JSON.stringify(values, null, 2));\r\n\t\t\tprops.saveForm(values, props.formMode)\r\n\t\t},\r\n\t});\r\n\r\n\tconst isEdit = () => props.formMode === 'edit';\r\n\tconsole.log('RENDERING', formik.values)\r\n\r\n\treturn (\r\n\t\t<Form onSubmit={formik.handleSubmit}>\r\n\t\t\t{isEdit() &&\r\n\t\t\t\t<Form.Group controlId=\"answerId\">\r\n\t\t\t\t\t<Form.Label>Id: </Form.Label>\r\n\t\t\t\t\t<span> {formik.values.answerId}</span>\r\n\t\t\t\t</Form.Group>\r\n\t\t\t}\r\n\r\n\t\t\t<Form.Group controlId=\"text\">\r\n\t\t\t\t<Form.Label>Answer</Form.Label>\r\n\t\t\t\t<Form.Control\r\n\t\t\t\t\tas=\"textarea\"\r\n\t\t\t\t\tname=\"text\"\r\n\t\t\t\t\tonChange={formik.handleChange}\r\n\t\t\t\t\t//onBlur={formik.handleBlur}\r\n\t\t\t\t\tonBlur={(e: React.FocusEvent<HTMLTextAreaElement>): void => {\r\n\t\t\t\t\t\tif (isEdit() && formik.initialValues.text !== formik.values.text)\r\n\t\t\t\t\t\t\tformik.submitForm();\r\n\t\t\t\t\t}}\r\n\t\t\t\t\tvalue={formik.values.text}\r\n\t\t\t\t\tstyle={{ width: '100%' }}\r\n\t\t\t\t\trows={2}\r\n\t\t\t\t/>\r\n\t\t\t\t<Form.Text className=\"text-danger\">\r\n\t\t\t\t\t{formik.touched.text && formik.errors.text ? (\r\n\t\t\t\t\t\t<div className=\"text-danger\">{formik.errors.text}</div>\r\n\t\t\t\t\t) : null}\r\n\t\t\t\t</Form.Text>\r\n\t\t\t</Form.Group>\r\n\r\n\t\t\t<Form.Group controlId=\"createdBy\">\r\n\t\t\t\t<Form.Label>Created by:</Form.Label>\r\n\t\t\t\t<UserName id={formik.values.createdBy} />\r\n\t\t\t</Form.Group>\r\n\t\t\t{/* <br /> */}\r\n\t\t\t<Form.Group controlId=\"created\">\r\n\t\t\t\t<Form.Label className=\"id\">Created:</Form.Label>\r\n\t\t\t\t<span>{formik.values.created.toLocaleDateString()}</span>\r\n\t\t\t</Form.Group>\r\n\r\n\t\t\t{!isEdit() &&\r\n\t\t\t\t<div className=\"buttons\">\r\n\t\t\t\t\t<Button\r\n\t\t\t\t\t\tvariant=\"secondary\"\r\n\t\t\t\t\t\tsize=\"sm\"\r\n\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\tprops.cancel();\r\n\t\t\t\t\t\t\t//props.handleClose()\r\n\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\tCancel\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t\t<Button\r\n\t\t\t\t\t\tvariant=\"primary\"\r\n\t\t\t\t\t\tsize=\"sm\"\r\n\t\t\t\t\t\ttype=\"submit\"\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\tSave\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t</div>\r\n\t\t\t}\r\n\t\t</Form>\r\n\t);\r\n};\r\n\r\nexport const AnswerForm: React.FC<IProps> = (props: IProps) => {\r\n\tconst theme = useContext(ThemeContext);\r\n\tconst { darkMode, variant, bg } = theme.state;\r\n\r\n\treturn (\r\n\t\t<Container className={`${darkMode ? \"dark\" : \"\"}`}>\r\n\t\t\t<AnsForm {...props} />\r\n\t\t</Container>\r\n\t)\r\n}","import * as React from 'react';\r\n\r\nimport { IQuestion, IQuestionAnswer } from '../types';\r\nimport { IAnswer } from '../../Answers/types';\r\nimport { AutoSuggestAnswer } from '../../components/AutoSuggestAnswer';\r\nimport QuestionAnswerRow from './QuestionAnswerRow';\r\nimport { ThemeContext } from '../../ThemeContext';\r\nimport { useContext, useState } from 'react';\r\nimport { Button, Table } from 'react-bootstrap';\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport { AnswerForm } from '../../Answers/components/Form';\r\n\r\ninterface IProps {\r\n\tquestion: IQuestion,\r\n\tquestionAnswers: IQuestionAnswer[],\r\n\tanswers?: IAnswer[],\r\n\tanswer?: IAnswer,\r\n\tcanEdit: boolean,\r\n\tformMode: string,\r\n\tselectQuestionAnswer: (categoryId: number, questionId: number, answerId: number) => void,\r\n\tcopyQuestionAnswer: (categoryId: number, questionId: number, answerId: number) => void,\r\n\tremoveQuestionAnswer: (categoryId: number, questionId: number, answerId: number) => void,\r\n\tassignQuestionAnswer: (categoryId: number, questionId: number, answerId: number, tekst?: string) => void,\r\n\tsetAnswerText?: (val: string) => void;\r\n\tadd: (categoryId: number, questionId: number) => void,\r\n\tsaveForm: (categoryId: number, questionId: number, answer: IAnswer) => void,\r\n\tcancel: () => void\r\n}\r\n\r\nconst QuestionAnswers: React.FC<IProps> = (props: IProps) => {\r\n\tconst {\r\n\t\tquestion,\r\n\t\tquestionAnswers,\r\n\t\tanswers,\r\n\t\tanswer,\r\n\t\tcanEdit,\r\n\t\tformMode,\r\n\t\tselectQuestionAnswer, copyQuestionAnswer, removeQuestionAnswer,\r\n\t\tassignQuestionAnswer, add, saveForm, cancel\r\n\t} = props;\r\n\r\n\tconst answersUnassigned = answers!.filter(a => !question.answers.map(a => a.answerId).includes(a.answerId))\r\n\r\n\tconst [tekst, setTekst] = React.useState('');\r\n\tconst setAnswerText = (val: string) => {\r\n\t\tsetTekst(val);\r\n\t}\r\n\r\n\tconst assignQA = (categoryId: number, questionId: number, answerId: number) => {\r\n\t\tassignQuestionAnswer(\r\n\t\t\tcategoryId,\r\n\t\t\tquestionId,\r\n\t\t\tanswerId\r\n\t\t);\r\n\t\tsetShowAssign(false);\r\n\t}\r\n\r\n\r\n\tconst addAnswer = () => {\r\n\t\tadd(question.categoryId, question.questionId);\r\n\t\thandleShow();\r\n\t}\r\n\r\n\tconst saveAnswerForm = (answer: IAnswer, formMode: string) => {\r\n\t\tsaveForm(question.categoryId, question.questionId, answer);\r\n\t\thandleClose();\r\n\t};\r\n\r\n\tconst cancelAnswer = () => {\r\n\t\tcancel();\r\n\t\thandleClose();\r\n\t}\r\n\r\n\tconst theme = useContext(ThemeContext);\r\n\tconst { darkMode, variant, bg } = theme.state;\r\n\r\n\tconst [show, setShow] = useState(false);\r\n\tconst handleClose = () => setShow(false);\r\n\tconst handleShow = () => setShow(true);\r\n\r\n\tconst [showAssign, setShowAssign] = useState(false);\r\n\r\n\treturn (\r\n\t\t<div className=\"name-container\">\r\n\t\t\t{/* { questionAnswers.length === 0 && \r\n\t\t\t\t<div>\r\n\t\t\t\t\tNo answers yet\r\n\t\t\t\t</div>\r\n\t\t\t} */}\r\n\t\t\t{questionAnswers.length > -1 &&\r\n\t\t\t\t<div style={{ height: '100px', overflowY: 'auto' }}>\r\n\t\t\t\t\t<Table variant={variant} responsive striped bordered hover size=\"sm\" className=\"mb-0\">\r\n\t\t\t\t\t\t<thead>\r\n\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t<th colSpan={2} className=\"py-0 px-5\" style={{ color: 'lightblue' }}>{questionAnswers.length === 0 ? 'No answers yet' : 'Answers'}</th>\r\n\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t</thead>\r\n\t\t\t\t\t\t<tbody>\r\n\t\t\t\t\t\t\t{questionAnswers.map(qa =>\r\n\t\t\t\t\t\t\t\t<tr key={qa.answerId}>\r\n\t\t\t\t\t\t\t\t\t<td\r\n\t\t\t\t\t\t\t\t\t\ttitle={`AnswerId:${qa.answerId}\\nAssigned: ${qa.assigned.toLocaleDateString()} ${qa.assigned.toLocaleTimeString()}`}\r\n\t\t\t\t\t\t\t\t\t\tclassName=\"py-0 px-0\"\r\n\t\t\t\t\t\t\t\t\t\tcolSpan={2}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t<QuestionAnswerRow\r\n\t\t\t\t\t\t\t\t\t\t\tkey={qa.answerId}\r\n\t\t\t\t\t\t\t\t\t\t\tquestion={question}\r\n\t\t\t\t\t\t\t\t\t\t\tquestionAnswer={qa}\r\n\t\t\t\t\t\t\t\t\t\t\tselectQuestionAnswer={selectQuestionAnswer}\r\n\t\t\t\t\t\t\t\t\t\t\tcopyQuestionAnswer={copyQuestionAnswer}\r\n\t\t\t\t\t\t\t\t\t\t\tremoveQuestionAnswer={removeQuestionAnswer}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t\t{/* <td title={`AnswerId:${qa.answerId}\\nAssigned: ${qa.assigned.toLocaleDateString()} ${qa.assigned.toLocaleTimeString()}`}>\r\n\t\t\t\t\t\t\t\t\t{qa.text}\r\n\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t{ canEdit && formMode !== 'display' &&\r\n\t\t\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t\t\t\t<button className=\"button-remove\" title=\"Remove Answer\" \r\n\t\t\t\t\t\t\t\t\t\t\tonClick={(e) => { \r\n\t\t\t\t\t\t\t\t\t\t\t\te.stopPropagation();\r\n\t\t\t\t\t\t\t\t\t\t\t\te.preventDefault();\r\n\t\t\t\t\t\t\t\t\t\t\t\tremoveQuestionAnswer!(question.categoryId, question.questionId, qa.answerId)\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\t\t\t<FontAwesomeIcon icon={faWindowClose}  color='lightblue' />\r\n\t\t\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t} */}\r\n\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t)}\r\n\r\n\t\t\t\t\t\t</tbody>\r\n\t\t\t\t\t</Table>\r\n\t\t\t\t</div>\r\n\t\t\t}\r\n\t\t\t{canEdit && formMode !== 'display' &&\r\n\t\t\t\t<div className=\"d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center py-1\">\r\n\t\t\t\t\t{answers && answers.length > 0 && \r\n\t\t\t\t\t<Button size=\"sm\" className=\"button-edit py-0\" title=\"Assign a new Answer\" \r\n\t\t\t\t\t\tstyle={{border:'1px solid silver', fontSize: '12px'}}\r\n\t\t\t\t\t\tvariant={variant}\r\n\t\t\t\t\t\tonClick={\r\n\t\t\t\t\t\t\t(e) => {\r\n\t\t\t\t\t\t\t\tsetShowAssign(true);\r\n\t\t\t\t\t\t\t\te.preventDefault()\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}>\r\n\t\t\t\t\t\tAssign a new answer\r\n\t\t\t\t\t</Button>}\r\n\t\t\t\t\t<Button size=\"sm\" className=\"button-edit py-0\" title=\"Add a new Answer\" style={{border:'1px solid silver', fontSize: '12px'}}\r\n\t\t\t\t\t\tvariant={variant}\r\n\t\t\t\t\t\tonClick={\r\n\t\t\t\t\t\t\t(e) => {\r\n\t\t\t\t\t\t\t\taddAnswer();\r\n\t\t\t\t\t\t\t\te.preventDefault()\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}>\r\n\t\t\t\t\t\tCreate a new answer{/* <FontAwesomeIcon icon={faPlus} color='lightblue' /> */}\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t</div>\r\n\t\t\t}\r\n\t\t\t<Modal show={show} onHide={handleClose} animation={true} centered size=\"lg\"\r\n\t\t\t\tclassName={`${darkMode ? \"dark\" : \"\"}`}\r\n\t\t\t\tcontentClassName={`${darkMode ? \"dark\" : \"\"}`}>\r\n\t\t\t\t<Modal.Header closeButton>\r\n\t\t\t\t\t<Modal.Title>Add answer</Modal.Title>\r\n\t\t\t\t</Modal.Header>\r\n\t\t\t\t<Modal.Body style={{ height: '40vh', width: '50vw' }} >\r\n\t\t\t\t\t<AnswerForm\r\n\t\t\t\t\t\tanswer={answer!}\r\n\t\t\t\t\t\tformMode='add'\r\n\t\t\t\t\t\tcancel={cancelAnswer}\r\n\t\t\t\t\t\tsaveForm={saveAnswerForm} />\r\n\t\t\t\t</Modal.Body>\r\n\t\t\t</Modal>\r\n\t\t\t<Modal show={showAssign} onHide={() => setShowAssign(false)} animation={true} size=\"lg\" centered\r\n\t\t\t\tclassName={`${darkMode ? \"dark\" : \"\"}`}\r\n\t\t\t\tcontentClassName={`${darkMode ? \"dark\" : \"\"}`}>\r\n\t\t\t\t<Modal.Header closeButton>\r\n\t\t\t\t\t<Modal.Title>Add answer</Modal.Title>\r\n\t\t\t\t</Modal.Header>\r\n\t\t\t\t<Modal.Body style={{ height: '40vh', width: '50vw' }} className=\"question-answers\">\r\n\t\t\t\t\t<AutoSuggestAnswer\r\n\t\t\t\t\t\tquestion={question}\r\n\t\t\t\t\t\tanswersUnassigned={answersUnassigned!}\r\n\t\t\t\t\t\tassignQuestionAnswer={assignQA}\r\n\t\t\t\t\t\tsetAnswerText={setAnswerText}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</Modal.Body>\r\n\t\t\t</Modal>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default QuestionAnswers\r\n\r\n","import { connect } from 'react-redux';\r\n\r\nimport { IAppState } from '../../store/Store';\r\nimport { IQuestion, IQuestionAnswer } from '../types'\r\nimport { IAnswer } from '../../Answers/types'\r\n\r\nimport { Dispatch } from 'redux';\r\n\r\nimport {\r\n\tQuestionActions,\r\n\tremoveQuestionAnswer,\r\n\tassignQuestionAnswer,\r\n\taddAndAssignNewAnswer,\r\n\tselectQuestionAnswer,\r\n\tcopyQuestionAnswer\r\n} from '../actions'\r\n\r\nimport { addAnswer, cancelAnswer, storeAnswer } from '../../Answers/actions';\r\nimport QuestionAnswers from '../components/QuestionAnswers';\r\n\r\nconst joinQuestionAnswers = (question: IQuestion | undefined, answers: IAnswer[]): IQuestionAnswer[] => {\r\n\tif (question === undefined || question.answers.length === 0 || answers === undefined)\r\n\t\treturn [];\r\n\tconsole.log(\"question.answers\", question.answers)\r\n\tconst questionAnswers = question.answers.map(qa => ({\r\n\t\t...qa, text: answers.find(a => a.answerId === qa.answerId)!.text\r\n\t})\r\n\t);\r\n\treturn questionAnswers.sort((a, b) => a.assigned > b.assigned ? 1 : -1);\r\n}\r\n\r\ninterface IProps {\r\n\tcanEdit: boolean\r\n}\r\n\r\n// Grab the categories from the store and make them available on props\r\nconst mapStateToProps = (store: IAppState, ownProps: IProps) => { // \r\n\tconst { categoriesState, answerState } = store;\r\n\tconst { question, categoryOptions, formMode } = categoriesState;\r\n\tconst { answers, answer } = answerState;\r\n\treturn {\r\n\t\tcategoryOptions,\r\n\t\tquestion: question!,\r\n\t\tquestionAnswers: joinQuestionAnswers(question, answers),\r\n\t\tanswers,\r\n\t\tanswer,\r\n\t\tformMode,\r\n\t\tcanEdit: ownProps.canEdit\r\n\t};\r\n};\r\n\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch<QuestionActions>) => {\r\n\treturn {\r\n\t\tadd: (categoryId: number, questionId: number) => dispatch<any>(addAnswer()),\r\n\t\tsaveForm: (categoryId: number, questionId: number, answer: IAnswer) => {\r\n\t\t\tdispatch<any>(storeAnswer(answer, 'add'));\r\n\t\t\tdispatch<any>(assignQuestionAnswer(categoryId, questionId, answer.answerId))\r\n\t\t},\r\n\t\tcancel: () => dispatch<any>(cancelAnswer()),\r\n\r\n\t\tselectQuestionAnswer: (categoryId: number, questionId: number, answerId: number) =>\r\n\t\t\tdispatch<any>(selectQuestionAnswer(categoryId, questionId, answerId)),\r\n\t\tcopyQuestionAnswer: (categoryId: number, questionId: number, answerId: number) =>\r\n\t\t\tdispatch<any>(copyQuestionAnswer(categoryId, questionId, answerId)),\r\n\t\tremoveQuestionAnswer: (categoryId: number, questionId: number, answerId: number) =>\r\n\t\t\tdispatch<any>(removeQuestionAnswer(categoryId, questionId, answerId)),\r\n\r\n\t\tassignQuestionAnswer: (categoryId: number, questionId: number, answerId: number) =>\r\n\t\t\tdispatch<any>(assignQuestionAnswer(categoryId, questionId, answerId)),\r\n\r\n\t\taddAndAssignNewAnswer: (categoryId: number, questionId: number, answer: IAnswer, formMode: string) => {\r\n\t\t\tdispatch<any>(addAndAssignNewAnswer(categoryId, questionId, answer, formMode))\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(QuestionAnswers);\r\n\r\n","import React, { useContext } from 'react';\r\nimport { useFormik } from 'formik';\r\nimport * as Yup from 'yup'\r\nimport { IQuestionFormProps } from '../types';\r\n\r\nimport { Select } from '../../common/Select';\r\nimport UserName from '../../common/containers/UserName';\r\n//import { number } from 'yup/lib/locale';\r\nimport { ThemeContext } from \"../../ThemeContext\";\r\nimport { Button, Container, Form } from \"react-bootstrap\";\r\n\r\nimport { sourceOptions } from '../sourceOptions'\r\nimport { statusOptions } from '../statusOptions'\r\nimport { initialQuestion } from '../categoriesReducer';\r\nimport ContainerQuestionAnswers from '../containers/ContainerQuestionAnswers';\r\n\r\nconst QuestForm: React.FC<IQuestionFormProps> = (props: IQuestionFormProps) => {\r\n\r\n  let { question } = props;\r\n  if (!question) // it is still view in modal, although hidden\r\n    question = { ...initialQuestion };\r\n\r\n  const formik = useFormik({\r\n    enableReinitialize: true,\r\n    initialValues: {\r\n      categoryId: question.categoryId,\r\n      questionId: question.questionId,\r\n      text: question.text,\r\n      source: question.source,\r\n      status: question.status,\r\n      answers: question.answers,\r\n      createdBy: question.createdBy,\r\n      created: question.created\r\n    },\r\n    validationSchema: Yup.object({\r\n      text: Yup.string()\r\n        .max(150, 'Must be 150 characters or less')\r\n        .required('Required'),\r\n      categoryId: Yup.number()\r\n        .moreThan(0, 'Select Category')\r\n        .required('Required')\r\n    }),\r\n    onSubmit: values => {\r\n      // alert(JSON.stringify(values, null, 2));\r\n      props.saveForm(values, props.formMode);\r\n      props.handleClose();\r\n    }\r\n  });\r\n\r\n  const isEdit = () => props.formMode === 'edit';\r\n  const isDisabled = props.formMode === 'display';\r\n\r\n  console.log('RENDERING', formik.values)\r\n  return (\r\n    <Form onSubmit={formik.handleSubmit} >\r\n      {isEdit() &&\r\n        <Form.Group controlId=\"questionId\">\r\n          <Form.Label>Id:</Form.Label>\r\n          <span> {formik.values.questionId}</span>\r\n        </Form.Group>\r\n      }\r\n\r\n      <Form.Group controlId=\"categoryId\">\r\n        <Form.Label>Category</Form.Label>\r\n        <Select\r\n          id=\"categoryId\"\r\n          name=\"categoryId\"\r\n          options={props.categoryOptions}\r\n          //onChange={formik.handleChange}\r\n          onChange={(e, value) => {\r\n            formik.setFieldValue(\"categoryId\", value);\r\n            if (isEdit()) formik.submitForm();\r\n          }}\r\n          value={formik.values.categoryId}\r\n          disabled={isDisabled}\r\n        />\r\n        <Form.Text className=\"text-danger\">\r\n          {formik.touched.categoryId && formik.errors.categoryId ? (\r\n            <div className=\"text-danger\">{formik.errors.categoryId}</div>\r\n          ) : null}\r\n        </Form.Text>\r\n      </Form.Group>\r\n\r\n      <Form.Group controlId=\"text\">\r\n        <Form.Label>Text</Form.Label>\r\n        <Form.Control\r\n          size=\"sm\"\r\n          as=\"textarea\"\r\n          name=\"text\"\r\n          onChange={formik.handleChange}\r\n          //onBlur={formik.handleBlur}\r\n          onBlur={(e: React.FocusEvent<HTMLTextAreaElement>): void => {\r\n            if (isEdit() && formik.initialValues.text !== formik.values.text)\r\n              formik.submitForm();\r\n          }}\r\n          value={formik.values.text}\r\n          style={{ width: '100%' }}\r\n          className=\"py-0\"\r\n          rows={2}\r\n          disabled={isDisabled}\r\n        />\r\n        <Form.Text className=\"text-danger\">\r\n          {formik.touched.text && formik.errors.text ? (\r\n            <div className=\"text-danger\">{formik.errors.text}</div>\r\n          ) : null}\r\n        </Form.Text>\r\n      </Form.Group>\r\n\r\n      <Form.Group controlId=\"source\">\r\n        <Form.Label>Source</Form.Label>\r\n        <Select\r\n          id=\"source\"\r\n          name=\"source\"\r\n          options={sourceOptions}\r\n          // onChange={formik.handleChange}\r\n          onChange={(e, value) => {\r\n            formik.setFieldValue(\"source\", value)\r\n            if (isEdit()) formik.submitForm();\r\n          }}\r\n          value={formik.values.source}\r\n          disabled={isDisabled}\r\n        />\r\n        <Form.Text className=\"text-danger\">\r\n          {formik.touched.source && formik.errors.source ? (\r\n            <div className=\"text-danger\">{formik.errors.source}</div>\r\n          ) : null}\r\n        </Form.Text>\r\n      </Form.Group>\r\n\r\n      <br />\r\n      <ContainerQuestionAnswers  canEdit={props.canEdit} />\r\n      <br />\r\n\r\n      <Form.Group controlId=\"status\">\r\n        <Form.Label>Status</Form.Label>\r\n        <Select\r\n          id=\"status\"\r\n          name=\"status\"\r\n          options={statusOptions}\r\n          //onChange={formik.handleChange}\r\n          onChange={(e, value) => {\r\n            formik.setFieldValue(\"status\", value)\r\n            if (isEdit()) formik.submitForm();\r\n          }}\r\n          value={formik.values.status}\r\n          disabled={isDisabled}\r\n        />\r\n        <Form.Text className=\"text-danger\">\r\n          {formik.touched.status && formik.errors.status ? (\r\n            <div className=\"text-danger\">{formik.errors.status}</div>\r\n          ) : null}\r\n        </Form.Text>\r\n      </Form.Group>\r\n\r\n      <br />\r\n      <Form.Group controlId=\"createdBy\">\r\n        <Form.Label>Created by:</Form.Label>\r\n        {' '}<UserName id={formik.values.createdBy} />\r\n      </Form.Group>\r\n\r\n      <Form.Group controlId=\"created\">\r\n        <Form.Label className=\"id\">Created:</Form.Label>\r\n        <span>{' '}{formik.values.created.toLocaleDateString()}</span>\r\n      </Form.Group>\r\n\r\n      {!isEdit() && !isDisabled &&\r\n        <div className=\"buttons\">\r\n          {props.canEdit &&\r\n            <Button\r\n              variant=\"secondary\"\r\n              size=\"sm\"\r\n              onClick={() => {\r\n                props.cancel();\r\n                props.handleClose()\r\n              }}>\r\n              Cancel\r\n            </Button>}\r\n          {props.canEdit &&\r\n            <Button\r\n              variant=\"primary\"\r\n              size=\"sm\"\r\n              type=\"submit\"\r\n            >\r\n              Save\r\n            </Button>}\r\n        </div>\r\n      }\r\n      {isDisabled && props.canEdit &&\r\n        <div className=\"buttons\">\r\n          <Button\r\n            variant=\"secondary\"\r\n            size=\"sm\"\r\n            onClick={() => {\r\n              props.editForm(question, props.formMode);\r\n            }}>\r\n            Edit\r\n          </Button>\r\n        </div>\r\n      }\r\n    </Form>\r\n  );\r\n};\r\n\r\n\r\nexport const QuestionForm: React.FC<IQuestionFormProps> = (props: IQuestionFormProps) => {\r\n\r\n  const theme = useContext(ThemeContext);\r\n  const { darkMode, variant, bg } = theme.state;\r\n\r\n  return (\r\n    <Container className={`mb-1 ${darkMode ? \"dark\" : \"\"}`}>\r\n      <QuestForm {...props} />\r\n    </Container>\r\n  )\r\n}","import { connect } from 'react-redux';\r\n\r\nimport { IAppState } from '../../store/Store';\r\nimport { IQuestion } from '../types'\r\n\r\nimport { Dispatch } from 'redux';\r\n\r\nimport { QuestionActions,  \r\n\tstoreQuestion,\r\n\tupdateQuestion,\r\n\tcancelQuestion,\r\n\teditQuestion\r\n} from '../actions'\r\n\r\nimport { QuestionForm } from '../components/QuestionForm';\r\n\r\ninterface IProps {\r\n\tcanEdit: boolean,\r\n\thandleClose: () => void\r\n}\r\n\r\n// Grab the categories from the store and make them available on props\r\nconst mapStateToProps = (store: IAppState, ownProps: IProps ) => {\r\n\tconst {categoriesState, answerState } = store;\r\n\tconst { question, categoryOptions, formMode } = categoriesState; \r\n\tconst { answers } = answerState;\r\n\treturn {\r\n\t\tcategoryOptions,\r\n\t\tquestion: question!,\r\n\t\tanswers,\r\n\t\tformMode,\r\n\t\tcanEdit: ownProps.canEdit,\r\n\t\thandleClose: ownProps.handleClose\r\n\t};\r\n};\r\n\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch<QuestionActions>) => {\r\n\treturn {\r\n\t\teditForm: (question: IQuestion, formMode: string) => \r\n\t\t\tdispatch<any>(editQuestion(question.categoryId, question.questionId, true)),\r\n\t\tsaveForm: (question: IQuestion, formMode: string) => \r\n\t\t\tdispatch<any>(formMode==='add'?storeQuestion(question):updateQuestion(question)),\r\n\t\tcancel: () => dispatch<any>(cancelQuestion()),\r\n\t\r\n\t}\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(QuestionForm);\r\n\r\n","import { useContext } from 'react';\r\n\r\nimport { useHover } from '../../common/useHover'\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faWindowClose, faEdit } from '@fortawesome/free-solid-svg-icons'\r\nimport { Button, ListGroup } from 'react-bootstrap'\r\n\r\nimport { IQuestion } from '../types';\r\nimport { ThemeContext } from '../../ThemeContext';\r\n\r\n\r\ninterface IQuestionRowProps {\r\n\tquestion: IQuestion;\r\n\tonSelectQuestion: (categoryId: number, questionId: number) => void;\r\n\tedit: (categoryId: number, questionId: number, showQuestionForm: boolean) => void;\r\n\tremove: (categoryId: number, questionId: number) => void;\r\n}\r\n\r\nconst QuestionRow: React.FC<IQuestionRowProps> = (props: IQuestionRowProps) => {\r\n\r\n\tconst [hoverRef, hoverProps] = useHover();\r\n\r\n\tconst { question, onSelectQuestion, edit, remove } = props;\r\n\tconst { categoryId, questionId } = question;\r\n\r\n\tconst theme = useContext(ThemeContext);\r\n\tconst { darkMode, variant, bg } = theme.state;\r\n\r\n\treturn (\r\n\t\t<ListGroup.Item className=\"py-0\" variant={variant}>\r\n\t\t\t<div ref={hoverRef} className=\"d-flex justify-content-start align-items-center\">\r\n\t\t\t\t<Button\r\n\t\t\t\t\tstyle={{ fontSize: '13px' }}\r\n\t\t\t\t\tvariant='link'\r\n\t\t\t\t\tsize=\"sm\"\r\n\t\t\t\t\tclassName=\"py-0 px-1 text-decoration-none\"\r\n\t\t\t\t\tonClick={() => onSelectQuestion(categoryId, questionId)}>\r\n\t\t\t\t\t{question.text}\r\n\t\t\t\t</Button>\r\n\t\t\t\t{hoverProps.isHovered &&\r\n\t\t\t\t\t<Button\r\n\t\t\t\t\t\tvariant={variant}\r\n\t\t\t\t\t\tsize=\"sm\"\r\n\t\t\t\t\t\tclassName=\"py-0 px-1\"\r\n\t\t\t\t\t\tstyle={{ backgroundColor: 'transparent', borderWidth: '0' }}\r\n\t\t\t\t\t\ttitle=\"Edit\"\r\n\t\t\t\t\t\tonClick={() => edit(categoryId, questionId, true)}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<FontAwesomeIcon icon={faEdit} color={darkMode?'lightblue':'lightblue'} />\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t}\r\n\t\t\t\t{hoverProps.isHovered &&\r\n\t\t\t\t\t<Button\r\n\t\t\t\t\t\tvariant={variant}\r\n\t\t\t\t\t\tsize=\"sm\"\r\n\t\t\t\t\t\tclassName=\"py-0 px-1\"\r\n\t\t\t\t\t\tstyle={{ backgroundColor: 'transparent', borderWidth: '0' }}\r\n\t\t\t\t\t\ttitle=\"Remove\"\r\n\t\t\t\t\t\tonClick={() => remove(categoryId, questionId)}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<FontAwesomeIcon icon={faWindowClose} color={darkMode?'lightblue':'lightblue'} />\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t}\r\n\t\t\t</div>\r\n\t\t</ListGroup.Item>\r\n\t)\r\n}\r\n\r\nexport default QuestionRow\r\n\r\n","import { useContext } from 'react'\r\nimport { useHover } from '../../common/useHover'\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faWindowClose, faEdit, faCaretRight, faCaretDown, faPlus } from '@fortawesome/free-solid-svg-icons'\r\nimport { ThemeContext } from \"../../ThemeContext\";\r\nimport { Badge, Button, ListGroup } from 'react-bootstrap'\r\n\r\nimport { ICategory, IQuestion } from '../types';\r\nimport QuestionRow from './QuestionRow';\r\n\r\n\r\ninterface ICategoryRowProps {\r\n\tcategory: ICategory;\r\n\tquestions: IQuestion[];\r\n\ttoggleCategory: (categoryId: number) => void;\r\n\teditCategory: (categoryId: number) => void;\r\n\tremoveCategory: (categoryId: number) => void;\r\n\tonSelectCategory: (categoryId: number) => void;\r\n\tonSelectQuestion: (categoryId: number, questionId: number) => void;\r\n\tadd: (categoryId: number, text: string, canEdit?: boolean) => void;\r\n\tedit: (categoryId: number, questionId: number, showQuestionForm: boolean) => void;\r\n\tremove: (categoryId: number, questionId: number) => void;\r\n}\r\n\r\nconst CategoryRow: React.FC<ICategoryRowProps> = (props: ICategoryRowProps) => {\r\n\r\n\tconst [hoverRef, hoverProps] = useHover();\r\n\tconst { category, questions, toggleCategory, editCategory, removeCategory, onSelectCategory,\r\n\t\tonSelectQuestion, add, edit, remove } = props;\r\n\tconst { categoryId, title, isExpanded } = category;\r\n\r\n\tconst theme = useContext(ThemeContext);\r\n\tconst { darkMode, variant, bg } = theme.state;\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<ListGroup.Item\r\n\t\t\t\tvariant={variant}\r\n\t\t\t\tclassName=\"py-0 px-1\"\r\n\t\t\t\tas=\"li\"\r\n\t\t\t>\r\n\t\t\t\t<div ref={hoverRef} className=\"d-flex justify-content-start align-items-center\">\r\n\t\t\t\t\t<Button\r\n\t\t\t\t\t\tvariant='link'\r\n\t\t\t\t\t\tsize=\"sm\"\r\n\t\t\t\t\t\tclassName=\"py-0 px-1\"\r\n\t\t\t\t\t\tstyle={{ backgroundColor: 'transparent', borderWidth: '0' }}\r\n\t\t\t\t\t\tonClick={() => toggleCategory(categoryId)}\r\n\t\t\t\t\t\ttitle=\"Expand\"\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<FontAwesomeIcon icon={isExpanded ? faCaretDown : faCaretRight} color='orange' size='lg' />\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t\t<Button\r\n\t\t\t\t\t\tvariant='link'\r\n\t\t\t\t\t\tsize=\"sm\"\r\n\t\t\t\t\t\tclassName=\"py-0 mx-1 text-decoration-none\"\r\n\t\t\t\t\t\tonClick={() => onSelectCategory(categoryId)}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t{title}\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t\t<Badge bg=\"primary\" pill>\r\n\t\t\t\t\t\t{questions.length}\r\n\t\t\t\t\t</Badge>\r\n\t\t\t\t\t<Button\r\n\t\t\t\t\t\tvariant={variant}\r\n\t\t\t\t\t\tsize=\"lg\"\r\n\t\t\t\t\t\tclassName=\"py-0 px-1\"\r\n\t\t\t\t\t\tstyle={{ backgroundColor: 'transparent', borderWidth: '0' }}\r\n\t\t\t\t\t\ttitle=\"Add a new Question\"\r\n\t\t\t\t\t\tonClick={() => add(category.categoryId, '', true)}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<FontAwesomeIcon icon={faPlus} size='xs' color='orange' />\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t\t{hoverProps.isHovered &&\r\n\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\tvariant={variant}\r\n\t\t\t\t\t\t\tsize=\"sm\"\r\n\t\t\t\t\t\t\tclassName=\"py-0 px-1\"\r\n\t\t\t\t\t\t\tstyle={{ backgroundColor: 'transparent', borderWidth: '0' }}\r\n\t\t\t\t\t\t\ttitle=\"Edit Category\"\r\n\t\t\t\t\t\t\tonClick={() => editCategory(categoryId)}>\r\n\t\t\t\t\t\t\t<FontAwesomeIcon icon={faEdit} color='lightblue' />\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t}\r\n\t\t\t\t\t{hoverProps.isHovered && questions.length === 0 &&\r\n\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\tsize=\"sm\"\r\n\t\t\t\t\t\t\tclassName=\"py-0 px-1\"\r\n\t\t\t\t\t\t\tstyle={{ backgroundColor: 'transparent', borderWidth: '0' }}\r\n\t\t\t\t\t\t\ttitle=\"Remove Category\"\r\n\t\t\t\t\t\t\tonClick={() => removeCategory(categoryId)}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<FontAwesomeIcon icon={faWindowClose} color='lightblue' />\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t}\r\n\t\t\t\t</div>\r\n\t\t\t</ListGroup.Item>\r\n\r\n\t\t\t{isExpanded &&\r\n\t\t\t\t<ListGroup.Item className=\"py-0\" variant={variant}>\r\n\t\t\t\t\t<ListGroup as=\"ul\" variant={variant} className=\"inner-list\">\r\n\t\t\t\t\t\t{questions.map(question =>\r\n\t\t\t\t\t\t\t<QuestionRow\r\n\t\t\t\t\t\t\t\tkey={question.questionId}\r\n\t\t\t\t\t\t\t\tquestion={question}\r\n\t\t\t\t\t\t\t\tonSelectQuestion={onSelectQuestion}\r\n\t\t\t\t\t\t\t\tedit={edit}\r\n\t\t\t\t\t\t\t\tremove={remove}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t</ListGroup>\r\n\t\t\t\t</ListGroup.Item>\r\n\t\t\t}\r\n\t\t</>\r\n\t)\r\n}\r\n\r\nexport default CategoryRow\r\n\r\n","import { useRef, useContext } from 'react'\r\nimport { faPlus } from '@fortawesome/free-solid-svg-icons'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nimport { ThemeContext } from \"../../ThemeContext\";\r\n\r\nimport { ICategoryListProps } from '../types'\r\n\r\nimport CategoryRow from './CategoryRow';\r\n\r\nimport { ListGroup } from 'react-bootstrap';\r\n\r\nconst CategoryList: React.FC<ICategoryListProps> = (props: ICategoryListProps) => {\r\n\r\n\tconst theme = useContext(ThemeContext);\r\n\tconst { darkMode, variant, bg } = theme.state;\r\n\r\n\tconst { categories, categoryQuestions,\r\n\t\tonSelectCategory, onSelectQuestion, add, edit, remove, \r\n\t\taddCategory, toggleCategory, editCategory, removeCategory } = props;\r\n\r\n\r\n\tconst inputEl = useRef<HTMLInputElement>(null);\r\n\tsetTimeout(() => {\r\n\t\tif (inputEl.current !== null) {\r\n\t\t\tinputEl.current!.select();\r\n\t\t\tinputEl.current!.focus()\r\n\t\t}\r\n\t}, 100)\r\n\r\n\t// const expandCategory = (categoryId: number): void => {\r\n\t// \tconst div = document.querySelector<HTMLDivElement>(\"#divCategory\" + categoryId);\r\n\t// \tconsole.log(div)\r\n\t// \tdiv!.style.display = 'block';\r\n\t// }\r\n\r\n\tconsole.log('RENDERUJEM Categories ----------->>>>>>>>>>')\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<h5>Categories{' '}\r\n\t\t\t\t<button className=\"button-add-category button-edit\" title=\"Add a new Category\" onClick={() => addCategory()}>\r\n\t\t\t\t\t<FontAwesomeIcon icon={faPlus} size='xs' color='lightblue' />\r\n\t\t\t\t</button>\r\n\t\t\t</h5>\r\n\r\n\t\t\t<ListGroup as=\"ul\" variant={variant}>\r\n\t\t\t\t{categories.map(category => {\r\n\t\t\t\t\tconst { categoryId, title, isExpanded } = category;\r\n\t\t\t\t\tconst categoryState = categoryQuestions.get(categoryId);\r\n\t\t\t\t\tconst { questions } = categoryState!;\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\t// {categoryIdEditing === categoryId &&\r\n\t\t\t\t\t\t// \t<input ref={inputEl} name=\"groupTitle\" type=\"text\"\r\n\t\t\t\t\t\t// \t\tonBlur={(e) => updateCategory({ ...category, title: e.target.value })}\r\n\t\t\t\t\t\t// \t\tdefaultValue={title}\r\n\t\t\t\t\t\t// \t/>\r\n\t\t\t\t\t\t// }\r\n\t\t\t\t\t\t// {categoryIdEditing !== categoryId && (\r\n\t\t\t\t\t\t<CategoryRow\r\n\t\t\t\t\t\t\tkey={category.categoryId}\r\n\t\t\t\t\t\t\tcategory={category}\r\n\t\t\t\t\t\t\tquestions={questions}\r\n\t\t\t\t\t\t\tonSelectCategory={onSelectCategory}\r\n\t\t\t\t\t\t\ttoggleCategory={toggleCategory}\r\n\t\t\t\t\t\t\teditCategory={editCategory}\r\n\t\t\t\t\t\t\tremoveCategory={removeCategory}\r\n\t\t\t\t\t\t\tonSelectQuestion={onSelectQuestion}\r\n\t\t\t\t\t\t\tadd={add}\r\n\t\t\t\t\t\t\tedit={edit}\r\n\t\t\t\t\t\t\tremove={remove}\r\n\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t// )}\r\n\r\n\t\t\t\t\t);\r\n\t\t\t\t})\r\n\t\t\t\t}\r\n\t\t\t</ListGroup>\r\n\t\t</>\r\n\t)\r\n}\r\n\r\nexport default CategoryList","import { connect } from 'react-redux';\r\n\r\nimport { IAppState } from '../../store/Store';\r\nimport { ICategory } from '../types'\r\nimport { IAnswer } from '../../Answers/types'\r\n\r\nimport { Dispatch } from 'redux';\r\n\r\nimport { QuestionActions,  \r\n\tgetQuestion, \r\n\taddQuestion, \r\n\teditQuestion,\r\n\tremoveQuestion,\r\n\tcloseQuestionForm,\r\n\topenQuestionForm,\r\n\taddCategory,\r\n\teditCategory,\r\n\tremoveCategory,\r\n\tstoreCategory,\r\n\tupdateCategory,\r\n\taddAndAssignNewAnswer,\r\n\ttoggleCategory,\r\n\tgetCategory\r\n} from '../actions'\r\n\r\nimport CategoryList from '../components/CategoryList'\r\n\r\ninterface IProps {\r\n\tcanEdit: boolean\r\n}\r\n\r\n// Grab the categories from the store and make them available on props\r\nconst mapStateToProps = (store: IAppState, ownProps: IProps ) => {\r\n\tconst {categoriesState, tagState, topState} = store;\r\n\t\r\n\tconst { \r\n\t\tcategories,\r\n\t\tcategoryQuestions,\r\n\t\tshowCategoryForm,\r\n\t\tcategory,\r\n\t\tshowQuestionForm,\r\n\t\tquestion,\r\n\t\tcategoryOptions,\r\n\t\tformMode,\r\n\t\tcategoryIdEditing\r\n\t} = categoriesState;\r\n\r\n\treturn {\r\n\t\tcategories,\r\n\t\tcategoryQuestions,\r\n\t\tcategoryOptions,\r\n\t\tshowCategoryForm,\r\n\t\tcategory,\r\n\t\tshowQuestionForm,\r\n\t\tquestion,\r\n\t\tformMode,\r\n\t\tcategoryIdEditing,\r\n\t\tcanEdit: ownProps.canEdit,\r\n\t\ttagOptions: tagState.tags.map(f => ({ label: f.name, value: f.tagId, color: f.color })),\r\n\t\tauth: topState.top.auth\r\n\t};\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch<QuestionActions>) => {\r\n\treturn {\r\n\t\tonSelectQuestion: (categoryId: number, questionId: number) => {\r\n\t\t\tdispatch<any>(getQuestion(categoryId, questionId));\r\n\t\t\tdispatch<any>(openQuestionForm());\r\n\t\t},\r\n\t\tadd: (categoryId: number, text: string, canEdit?: boolean) => {\r\n\t\t\tdispatch<any>(addQuestion(categoryId, text, canEdit))\r\n\t\t\tdispatch<any>(openQuestionForm());\r\n\t\t},\r\n\t\t//edit: (categoryId: number, questionId: number) => dispatch<any>(editQuestion(categoryId, questionId)),\r\n\t\tedit: (categoryId: number, questionId: number, showQuestionForm: boolean) => dispatch<any>(editQuestion(categoryId, questionId, showQuestionForm)),\r\n\t\tremove: (categoryId: number, questionId: number) => dispatch<any>(removeQuestion(categoryId, questionId)),\r\n\t\tcloseQuestionForm: () => dispatch<any>(closeQuestionForm()),\r\n\t\topenQuestionForm: () => dispatch<any>(openQuestionForm()),\r\n\r\n\t\t// question answer\r\n\t\taddAndAssignNewAnswer: (categoryId: number, questionId: number, answer: IAnswer, formMode: string) => {\r\n\t\t\tdispatch<any>(addAndAssignNewAnswer(categoryId, questionId, answer, formMode))\r\n\t\t},\r\n\t\t// groups\r\n\t\tonSelectCategory: (categoryId: number) => dispatch<any>(getCategory(categoryId, true)),\r\n\t\taddCategory: () => dispatch<any>(addCategory()),\r\n\t\ttoggleCategory: (categoryId: number) =>  dispatch<any>(toggleCategory(categoryId)),\r\n\t\teditCategory: (categoryId: number) =>  dispatch<any>(editCategory(categoryId)),\r\n\t\tremoveCategory: (categoryId: number) => dispatch<any>(removeCategory(categoryId)),\r\n\t\tstoreCategory: (group: ICategory) => dispatch<any>(storeCategory(group)),\r\n\t\tupdateCategory: (group: ICategory) => dispatch<any>(updateCategory(group)),\r\n\t}\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CategoryList)\r\n","import * as React from 'react';\r\nimport { useRef, useContext, useEffect } from 'react'\r\n\r\nimport { ICategoriesProps } from '../types'\r\n\r\nimport { AutoSuggest } from '../../components/AutoSuggest';\r\nimport ContainerCategoryForm from '../containers/ContainerCategoryForm';\r\nimport ContainerQuestionForm from '../containers/ContainerQuestionForm';\r\nimport { useParams } from 'react-router-dom' // useRouteMatch\r\nimport { ThemeContext } from \"../../ThemeContext\";\r\n\r\nimport { Col, Container, Row } from 'react-bootstrap';\r\nimport ContainerCategoryList from '../containers/ContainerCategoryList';\r\nimport { closeQuestionForm } from '../actions';\r\n\r\ntype SupportParams = {\r\n\ttekst: string;\r\n};\r\n\r\nconst Page: React.FC<ICategoriesProps> = (props: ICategoriesProps) => {\r\n\r\n\tlet { tekst } = useParams<SupportParams>();\r\n\r\n\tconst {\r\n\t\tcategories,\r\n\t\tcategoryQuestions,\r\n\t\tshowCategoryForm,\r\n\t\tcategory,\r\n\t\tshowQuestionForm,\r\n\t\tquestion,\r\n\t\tformMode,\r\n\t\tcanEdit,\r\n\t\tonSelectQuestion } = props;\r\n\r\n\t// const open = categories && (category || question)\r\n\r\n\tconst inputEl = useRef<HTMLInputElement>(null);\r\n\tsetTimeout(() => {\r\n\t\tif (inputEl.current !== null) {\r\n\t\t\tinputEl.current!.select();\r\n\t\t\tinputEl.current!.focus()\r\n\t\t}\r\n\t}, 100)\r\n\r\n\tconsole.log('RENDERUJEM Categories ----------->>>>>>>>>>')\r\n\r\n\tconst theme = useContext(ThemeContext);\r\n\tconst { darkMode, variant, bg } = theme.state;\r\n\r\n\treturn (\r\n\t\t<Container fluid>\r\n\t\t\t<Row className={`${darkMode ? \"dark\" : \"light\"}`}>\r\n\t\t\t\t<Col md={7}>\r\n\t\t\t\t\t<div style={{ border: '0px solid silver' }}>\r\n\t\t\t\t\t\t<AutoSuggest\r\n\t\t\t\t\t\t\tcategories={categories}\r\n\t\t\t\t\t\t\tcategoryQuestions={categoryQuestions}\r\n\t\t\t\t\t\t\ttekst={tekst}\r\n\t\t\t\t\t\t\tonSelectQuestion={(categoryId: number, questionId: number) => onSelectQuestion(categoryId, questionId, canEdit)}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<hr />\r\n\t\t\t\t\t\t{/* <h3>Categories</h3> */}\r\n\t\t\t\t\t\t{categories &&\r\n\t\t\t\t\t\t\t<ContainerCategoryList {...props} />\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</Col>\r\n\t\t\t\t<Col md={5}>\r\n\t\t\t\t\t<div\r\n\t\t\t\t\t\tclassName={`${darkMode ? \"dark\" : \"light\"}`}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t{categories && showCategoryForm && category &&\r\n\t\t\t\t\t\t\t<div style={{ border: '1px solid silver', borderRadius: '5px', padding: '5px 5px 15px 5px' }}>\r\n\t\t\t\t\t\t\t\t<h4 style={{ marginTop: 0 }}>Category</h4>\r\n\t\t\t\t\t\t\t\t<ContainerCategoryForm canEdit={formMode === 'display' ? false : canEdit} />\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t{categories && showQuestionForm && question &&\r\n\t\t\t\t\t\t\t<div style={{ border: '1px solid silver', borderRadius: '5px', padding: '5px 5px 15px 5px' }}>\r\n\t\t\t\t\t\t\t\t<h4 style={{ marginTop: 0 }}>Question</h4>\r\n\t\t\t\t\t\t\t\t<ContainerQuestionForm canEdit={formMode === 'display' ? false : canEdit} handleClose={() => { }} />\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</Col>\r\n\t\t\t\t{/* </Collapse> */}\r\n\t\t\t</Row>\r\n\t\t</Container>\r\n\t);\r\n}\r\n\r\nexport default Page;","import React, { useState, useContext } from 'react';\r\nimport { useParams } from 'react-router-dom' // useRouteMatch\r\n\r\nimport { ICategoriesProps } from '../types';\r\n\r\nimport { AutoSuggest } from '../../components/AutoSuggest';\r\nimport ContainerQuestionForm from '../containers/ContainerQuestionForm'\r\nimport { ThemeContext } from \"../../ThemeContext\";\r\n\r\nimport { faPlus } from '@fortawesome/free-solid-svg-icons'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport { Col, Container, Row } from 'react-bootstrap';\r\n\r\ntype SupportParams = {\r\n\ttekst: string;\r\n};\r\n\r\nconst SupportPage: React.FC<ICategoriesProps> = (props: ICategoriesProps) => {\r\n\tlet { tekst } = useParams<SupportParams>();\r\n\tconst { categories, categoryQuestions, category, question, showQuestionForm, onSelectQuestion, add, canEdit } = props;\r\n\r\n\tconst [show, setShow] = useState(false);\r\n\tconst handleClose = () => setShow(false);\r\n\tconst handleShow = () => setShow(true);\r\n\tconst open = categories && (category || question)\r\n\r\n\tconst theme = useContext(ThemeContext);\r\n\tconst { darkMode, variant, bg } = theme.state;\r\n\tconsole.log(1111111111111)\r\n\treturn (\r\n\t\t<Container fluid>\r\n\t\t\t<Row className={`${darkMode ? \"dark\" : \"\"}`}>\r\n\t\t\t\t<Col md={open ? 6 : 12} lg={open ? 6 : 12}>\r\n\t\t\t\t\t<div style={{ display: 'flex', alignItems: 'center' }}>\r\n\t\t\t\t\t\t<AutoSuggest\r\n\t\t\t\t\t\t\tcategories={categories}\r\n\t\t\t\t\t\t\tcategoryQuestions={categoryQuestions}\r\n\t\t\t\t\t\t\ttekst={tekst}\r\n\t\t\t\t\t\t\tonSelectQuestion={(categoryId: number, questionId: number) => onSelectQuestion(categoryId, questionId, canEdit)}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\tvariant={variant}\r\n\t\t\t\t\t\t\tclassName=\"button-edit\"\r\n\t\t\t\t\t\t\ttitle=\"Create a new Question\"\r\n\t\t\t\t\t\t\tonClick={() => { add(0, tekst ?? '', true); handleShow(); }}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<FontAwesomeIcon icon={faPlus} size=\"lg\" />\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</Col>\r\n\t\t\t</Row>\r\n\t\t\t<Row>\r\n\t\t\t\t<Col md={open ? 6 : 12} lg={open ? 6 : 12}>\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t{categories && question && showQuestionForm &&\r\n\t\t\t\t\t\t\t<div style={{ border: '1px solid silver', borderRadius: '5px', padding: '5px 5px 15px 5px' }}>\r\n\t\t\t\t\t\t\t\t<h4 style={{ textAlign: 'center' }}>Question</h4>\r\n\t\t\t\t\t\t\t\t<ContainerQuestionForm canEdit={canEdit} handleClose={() => { }} />\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</Col>\r\n\t\t\t</Row>\r\n\t\t\t<Modal show={show} onHide={handleClose} animation={true} size=\"sm\" centered\r\n\t\t\t\tclassName={`${darkMode ? \"dark\" : \"\"}`}\r\n\t\t\t\tcontentClassName={`${darkMode ? \"dark\" : \"\"}`}>\r\n\t\t\t\t<Modal.Header closeButton>\r\n\t\t\t\t\t<Modal.Title>Store question</Modal.Title>\r\n\t\t\t\t</Modal.Header>\r\n\t\t\t\t<Modal.Body>\r\n\t\t\t\t\t<ContainerQuestionForm canEdit={canEdit} handleClose={handleClose} />\r\n\t\t\t\t</Modal.Body>\r\n\t\t\t\t{/* <Modal.Footer>\r\n\t\t\t\t\t<Button variant=\"secondary\" onClick={handleClose}>\r\n\t\t\t\t\t\tClose\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t\t<Button variant=\"primary\" onClick={handleClose}>\r\n\t\t\t\t\t\tSave Changes\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t</Modal.Footer> */}\r\n\t\t\t</Modal>\r\n\t\t</Container>\r\n\r\n\t);\r\n}\r\n\r\nexport default SupportPage\r\n\r\n","import { connect } from 'react-redux';\r\n\r\nimport { IAppState } from '../../store/Store';\r\n\r\nimport { Dispatch } from 'redux';  // ActionCreatorsMapObject, \r\n\r\nimport { QuestionActions,  \r\n\tgetQuestion, \r\n\taddQuestion, \r\n\tcloseQuestionForm,\r\n\topenQuestionForm,\r\n\teditQuestion,\r\n} from '../actions'\r\n\r\nimport CategoriesPage from '../components/CategoriesPage'\r\nimport SupportPage from '../components/SuportPage'\r\n\r\ninterface IProps {\r\n\tcanEdit: boolean\r\n}\r\n\r\n// Grab the categories from the store and make them available on props\r\nconst mapStateToProps = (store: IAppState, ownProps: IProps ) => {\r\n\tconst {categoriesState, tagState, topState} = store;\r\n\t\r\n\tconst { \r\n\t\tcategories,\r\n\t\tcategoryQuestions,\r\n\t\tshowCategoryForm,\r\n\t\tcategory,\r\n\t\tshowQuestionForm,\r\n\t\tquestion,\r\n\t\tcategoryOptions,\r\n\t\tformMode,\r\n\t\tcategoryIdEditing,\r\n\t} = categoriesState;\r\n\r\n\treturn {\r\n\t\tcategories,\r\n\t\tcategoryQuestions,\r\n\t\tcategoryOptions,\r\n\t\tshowCategoryForm,\r\n\t\tcategory,\r\n\t\tshowQuestionForm,\r\n\t\tquestion,\r\n\t\tformMode,\r\n\t\tcategoryIdEditing,\r\n\t\tcanEdit: ownProps.canEdit,\r\n\t\ttagOptions: tagState.tags.map(f => ({ label: f.name, value: f.tagId, color: f.color })),\r\n\t\tauth: topState.top.auth\r\n\t};\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch<QuestionActions>) => {\r\n\treturn {\r\n\t\tonSelectQuestion: (categoryId: number, questionId: number, canEdit: boolean) => {\r\n\t\t\tdispatch<any>(canEdit?editQuestion(categoryId, questionId):getQuestion(categoryId, questionId));\r\n\t\t\tdispatch<any>(openQuestionForm());\r\n\t\t},\r\n\t\tadd: (categoryId: number, text: string, canEdit?: boolean) => dispatch<any>(addQuestion(categoryId, text, canEdit)),\r\n\t\tcloseQuestionForm: () => dispatch<any>(closeQuestionForm())\r\n\t}\r\n}\r\n\r\n\r\nexport default {\r\n\tcategories: connect(mapStateToProps, mapDispatchToProps)(CategoriesPage),\r\n\tsupporter: connect(mapStateToProps, mapDispatchToProps)(SupportPage)\r\n};","import * as React from 'react';\r\n\r\nimport containers from '../Categories/containers/ContainerCategoriesPage'\r\n\r\n// type TParams = { id: string };\r\n\r\n// function Product({ match }: RouteComponentProps<TParams>) {\r\n//   return <h2>This is a page for product with ID: {match.params.id} </h2>;\r\n// }\r\n\r\ninterface IMyProps {\r\n  canEdit: boolean;\r\n}\r\n\r\nconst Support: React.FC<IMyProps> = (props: IMyProps) => { \r\n  return (\r\n      <containers.supporter canEdit={props.canEdit} />\r\n  );\r\n};\r\n\r\nexport default Support;","import * as React from 'react';\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faWindowClose, faEdit } from '@fortawesome/free-solid-svg-icons'\r\n\r\nimport { IAnswer } from '../types';\r\nimport { IQuestionAnswer } from '../../Categories/types';\r\n\r\ninterface IProps {\r\n\tanswer: IAnswer,\r\n\tusedAnswers: IQuestionAnswer[],\r\n\tgetCategoryQuestion: (categoryId: number, questionId: number) => string,\r\n\tedit: (answerId: number) => void;\r\n\tremove: (answerId: number) => void;\r\n}\r\n\r\nexport const ListRow: React.FC<IProps> = (props: IProps) => {\r\n\tconst { answer, usedAnswers, getCategoryQuestion, edit, remove } = props;\r\n\treturn (\r\n\t\t<tr key={answer.answerId} >\r\n\t\t\t<td>\r\n\t\t\t\t{answer.answerId}\r\n\t\t\t</td>\r\n\t\t\t<td>\r\n\t\t\t\t{answer.text}\r\n\t\t\t</td>\r\n\t\t\t<td>\r\n\t\t\t\t<button\r\n\t\t\t\t\tclassName=\"button-edit\"\r\n\t\t\t\t\ttitle=\"Add a new Answer\"\r\n\t\t\t\t\tonClick={() => edit(answer.answerId)}>\r\n\t\t\t\t\t<FontAwesomeIcon icon={faEdit} color='lightblue' />\r\n\t\t\t\t</button>\r\n\t\t\t</td>\r\n\t\t\t<td>\r\n\t\t\t\t<button\r\n\t\t\t\t\tclassName=\"button-remove\"\r\n\t\t\t\t\ttitle=\"Remove Answer\"\r\n\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\tconst qa = usedAnswers.find(a => a.answerId === answer.answerId);\r\n\t\t\t\t\t\tif (qa)\r\n\t\t\t\t\t\t\talert(`Answer is assigned to the question: \\n\"${getCategoryQuestion(qa.categoryId!, qa.questionId!)}\". \\nFirst unassign answer from question!`)\r\n\t\t\t\t\t\telse\r\n\t\t\t\t\t\t\tremove(answer.answerId)\r\n\t\t\t\t\t}\r\n\t\t\t\t\t}>\r\n\t\t\t\t\t<FontAwesomeIcon icon={faWindowClose} color='lightblue' />\r\n\t\t\t\t</button>\r\n\t\t\t</td>\r\n\t\t</tr>\r\n\t);\r\n}\r\n\r\n","import * as React from 'react';\r\nimport { useContext } from 'react';\r\nimport { Table } from 'react-bootstrap';\r\nimport { IQuestionAnswer } from '../../Categories/types';\r\nimport { ThemeContext } from '../../ThemeContext';\r\n\r\nimport { IAnswer } from '../types';\r\nimport { ListRow } from './ListRow';\r\n\r\ninterface IProps {\r\n\tanswers: IAnswer[],\r\n\tusedAnswers: IQuestionAnswer[],\r\n\tgetCategoryQuestion: (categoryId: number, questionId: number) => string,\r\n\tedit: (answerId: number) => void;\r\n\tremove: (answerId: number) => void;\r\n}\r\n\r\nconst List: React.FC<IProps> = (props: IProps) => {\r\n\tconst { answers, usedAnswers, getCategoryQuestion, edit, remove } = props;\r\n\r\n\tconst theme = useContext(ThemeContext);\r\n\tconst { darkMode, variant, bg } = theme.state;\r\n\r\n\treturn (\r\n\t\t<Table variant={variant} responsive striped bordered hover size=\"sm\">\r\n\t\t\t<thead>\r\n\t\t\t\t<tr>\r\n\t\t\t\t\t<th>Id</th>\r\n\t\t\t\t\t<th>Answer</th>\r\n\t\t\t\t\t<th></th>\r\n\t\t\t\t\t<th></th>\r\n\t\t\t\t</tr>\r\n\t\t\t</thead>\r\n\t\t\t<tbody>\r\n\t\t\t\t{ answers.map(answer => \r\n\t\t\t\t\t<ListRow\r\n\t\t\t\t\t\tkey={answer.answerId}\r\n\t\t\t\t\t\tanswer={answer}\r\n\t\t\t\t\t\tusedAnswers={usedAnswers}\r\n\t\t\t\t\t\tgetCategoryQuestion={getCategoryQuestion}\r\n\t\t\t\t\t\tedit={edit}\r\n\t\t\t\t\t\tremove={remove}\r\n\t\t\t\t\t/>\r\n\t\t\t\t)}\r\n\t\t\t</tbody>\r\n\t\t</Table>\r\n\t);\r\n  }\r\n\r\nexport default List\r\n\r\n","import { useContext } from 'react';\r\nimport { useParams } from 'react-router-dom' // useRouteMatch\r\nimport { ThemeContext } from \"../../ThemeContext\";\r\n\r\nimport { IAnswer } from '../types';\r\nimport { AnswerForm } from './Form'\r\nimport List from './List';\r\nimport { IQuestionAnswer } from '../../Categories/types';\r\nimport { Button, Col, Container, Row } from 'react-bootstrap';\r\n\r\ninterface IProps {\r\n\tanswers: IAnswer[],\r\n\tanswer: IAnswer,\r\n\tusedAnswers: IQuestionAnswer[],\r\n\tgetCategoryQuestion: (categoryId: number, questionId: number) => string,\r\n\tformMode: string,\r\n\tadd: () => void;\r\n\tedit: (answerId: number) => void;\r\n\tremove: (answerId: number) => void;\r\n\tcancel: () => void;\r\n\tsaveForm: (answer: IAnswer, formMode: string) => void;\r\n}\r\n\r\ntype MyParams = {\r\n\tslug: string;\r\n};\r\n\r\nconst Page: React.FC<IProps> = (props: IProps) => {\r\n\t// let { slug } = useParams<MyParams>();\r\n\r\n\tconst theme = useContext(ThemeContext);\r\n\tconst { darkMode, variant, bg } = theme.state;\r\n\r\n\t// slug = ''\r\n\tconst { answers, answer, usedAnswers, getCategoryQuestion, formMode, add, edit, remove, cancel, saveForm } = props;\r\n\treturn (\r\n\t\t<Container fluid>\r\n\t\t\t<Row className={`${darkMode ? \"dark\" : \"light\"}`}>\r\n\t\t\t\t<Col md={7}>\r\n\t\t\t\t\t<div className={`${darkMode ? \"dark\" : \"\"}`}>\r\n\t\t\t\t\t\t<Button variant=\"primary\" onClick={() => add()} className=\"mb-1\">Add new</Button>\r\n\t\t\t\t\t\t{answers.length === 0 ? (\r\n\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t{'No answers at all  '}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t: (\r\n\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t<List\r\n\t\t\t\t\t\t\t\t\t\tanswers={answers}\r\n\t\t\t\t\t\t\t\t\t\tusedAnswers={usedAnswers}\r\n\t\t\t\t\t\t\t\t\t\tgetCategoryQuestion={getCategoryQuestion}\r\n\t\t\t\t\t\t\t\t\t\tedit={edit}\r\n\t\t\t\t\t\t\t\t\t\tremove={remove} />\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</Col>\r\n\t\t\t\t<Col md={5}>\r\n\t\t\t\t\t<div className={`${darkMode ? \"dark\" : \"light\"}`}>\r\n\t\t\t\t\t\t{answer &&\r\n\t\t\t\t\t\t\t<div style={{ border: '1px solid silver', borderRadius: '5px', padding: '5px 5px 15px 5px' }}>\r\n\t\t\t\t\t\t\t\t<h4>\r\n\t\t\t\t\t\t\t\t\t{formMode === 'add' ? 'New Answer' : 'Answer'}\r\n\t\t\t\t\t\t\t\t</h4>\r\n\t\t\t\t\t\t\t\t<AnswerForm\r\n\t\t\t\t\t\t\t\t\tanswer={answer}\r\n\t\t\t\t\t\t\t\t\tformMode={formMode}\r\n\t\t\t\t\t\t\t\t\tcancel={cancel}\r\n\t\t\t\t\t\t\t\t\tsaveForm={(answer: IAnswer) => saveForm(answer, formMode)}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t</Col>\r\n\t\t\t</Row>\r\n\t\t</Container>\r\n\t);\r\n}\r\n\r\nexport default Page\r\n\r\n","import { connect } from 'react-redux';\r\nimport { Dispatch } from 'redux';\r\n\r\nimport { IAppState } from '../../store/Store';\r\n\r\nimport { AnswerActions,  addAnswer, editAnswer, removeAnswer, storeAnswer, cancelAnswer } from '../actions' // , IAddAnswer\r\n\r\nimport { IAnswer } from '../types'\r\n\r\nimport Page from '../components/Page'\r\nimport { IQuestionAnswer, ICategoriesState } from '../../Categories/types';\r\n\r\nconst getUsedAnswers = (categoriesState: ICategoriesState) : IQuestionAnswer[]=> {\r\n\tconst { categories, categoryQuestions } = categoriesState;\r\n\tlet questionAnswers: IQuestionAnswer[] = [];\r\n\tfor (let category of categories) {\r\n\t\tconst categoryState = categoryQuestions.get(category.categoryId)!;\r\n\t\tfor (let question of categoryState.questions) {\r\n\t\t\tconst arr = question.answers.map(a => ({\r\n\t\t\t\t...a,\r\n\t\t\t\tcategoryId: category.categoryId,\r\n\t\t\t\tquestionId: question.questionId\r\n\t\t\t}))\r\n\t\t\tquestionAnswers = questionAnswers.concat(arr)\r\n\t\t}\r\n\t}\r\n\treturn questionAnswers;\r\n}\r\n\r\nconst getCategoryQuestion = (categoriesState: ICategoriesState, categoryId: number, questionId: number) : string => {\r\n\tconst { categories, categoryQuestions } = categoriesState;\r\n\tconst category = categories.find( g => g.categoryId === categoryId);\r\n\tconst categoryState = categoryQuestions.get(category!.categoryId)!;\r\n\tconst question = categoryState.questions.find(q => q.questionId === questionId);\r\n\treturn `${category!.title}/${question!.text}`;\r\n\r\n}\r\n\r\nconst mapStateToProps = (store: IAppState) => {\r\n  return {\r\n\tanswers: store.answerState.answers,\r\n\tanswer: store.answerState.answer!,\r\n\tformMode: store.answerState.formMode,\r\n\tusedAnswers: getUsedAnswers(store.categoriesState),\r\n\tgetCategoryQuestion: (categoryId: number, questionId: number): string => getCategoryQuestion(store.categoriesState, categoryId, questionId),\r\n\twho: store.topState.top.auth!.who\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch<AnswerActions>) => {\r\n\treturn {\r\n\t\t//setFormMode: (formMode: string) => dispatch<any>(setFormMode(formMode)),\r\n\t\tadd: () => dispatch<any>(addAnswer()),\r\n\t\tedit: (answerId: number) => dispatch<any>(editAnswer(answerId)),\r\n\t\tremove: (answerId: number) => dispatch<any>(removeAnswer(answerId)),\r\n\t\tsaveForm: (answer: IAnswer, formMode: string) => dispatch<any>(storeAnswer(answer, formMode)),\r\n\t\tcancel: () => dispatch<any>(cancelAnswer()),\r\n\t}\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Page);","import React, { useContext } from 'react';\r\nimport { useFormik } from 'formik';\r\nimport * as Yup from 'yup'\r\n\r\nimport { Select } from '../../common/Select';\r\nimport { IFormProps } from '../types'\r\nimport UserName from '../../common/containers/UserName';\r\n\r\nimport { Button, Container, Form } from \"react-bootstrap\";\r\nimport { ThemeContext } from '../../ThemeContext';\r\n\r\nconst UsrForm: React.FC<IFormProps> = (props: IFormProps) => {\r\n  const { userEditing, auth } = props;\r\n  const { who } = auth!;\r\n  const { roleId, userId, userName, pwd, department, createdBy, created } = userEditing!;\r\n  const formik = useFormik({\r\n    enableReinitialize: true,\r\n    initialValues: {\r\n      roleId,\r\n      userId,\r\n      userName,\r\n      pwd,\r\n      department,\r\n      createdBy,\r\n      created\r\n    },\r\n    validationSchema: Yup.object({\r\n      roleId: Yup.string()\r\n        .required('Required'),\r\n      //.notOneOf(['11']),\r\n      userName: Yup.string()\r\n        .max(64, 'Must be 64 characters or less')\r\n        .required('Required'),\r\n      pwd: Yup\r\n        .string()\r\n        .min(7)\r\n        .max(16)\r\n        .required()\r\n    }),\r\n    onSubmit: values => {\r\n      alert(JSON.stringify(values, null, 2));\r\n      if (who.roleId !== 11)\r\n        alert(\"Only Owner can maintain Users\")\r\n      else\r\n        props.saveForm(values, props.formMode)\r\n    }\r\n  });\r\n\r\n  const isEdit = () => props.formMode === 'edit';\r\n\r\n  console.log('RENDERING user', formik.values)\r\n\r\n  return (\r\n    <Form onSubmit={formik.handleSubmit}>\r\n\r\n      <Form.Group controlId=\"userId\">\r\n        <Form.Label>UserId:</Form.Label><span id=\"userId\">{' '}{formik.values.userId}</span>\r\n      </Form.Group>\r\n\r\n      <Form.Group controlId=\"roleId\">\r\n        <Form.Label>Role</Form.Label>\r\n        <Select\r\n          id=\"roleId\"\r\n          name=\"roleId\"\r\n          options={roleId === 11 ? props.roleOptions : props.roleOptions.filter(r => r.value !== 11)}\r\n          //onChange={formik.handleChange}\r\n          onChange={(e, value) => {\r\n            formik.setFieldValue(\"roleId\", value);\r\n            if (isEdit()) formik.submitForm();\r\n          }}\r\n          value={formik.values.roleId}\r\n          disabled={roleId === 11}\r\n        />\r\n      </Form.Group>\r\n\r\n      <Form.Group controlId=\"userName\">\r\n        <Form.Label>Name</Form.Label>\r\n        <Form.Control\r\n          as=\"input\"\r\n          name=\"userName\"\r\n          onChange={formik.handleChange}\r\n          //onBlur={formik.handleBlur}\r\n          onBlur={(e: React.FocusEvent<HTMLTextAreaElement>): void => {\r\n            if (isEdit() && formik.initialValues.userName !== formik.values.userName)\r\n              formik.submitForm();\r\n          }}\r\n          value={formik.values.userName}\r\n          style={{ width: '100%' }}\r\n        />\r\n        <Form.Text className=\"text-danger\">\r\n          {formik.touched.userName && formik.errors.userName ? (\r\n            <div className=\"text-danger\">{formik.errors.userName}</div>\r\n          ) : null}\r\n        </Form.Text>\r\n      </Form.Group>\r\n\r\n      <Form.Group className=\"mb-3\" controlId=\"pwd\">\r\n        <Form.Label>Password</Form.Label>\r\n        <Form.Control\r\n          type=\"password\"\r\n          placeholder=\"Password\"\r\n          name=\"pwd\"\r\n          value={formik.values.pwd}\r\n          onChange={formik.handleChange}\r\n          onBlur={(e: React.FocusEvent<HTMLTextAreaElement>): void => {\r\n            if (isEdit() && formik.initialValues.pwd !== formik.values.pwd)\r\n              formik.submitForm();\r\n          }}\r\n        />\r\n        <Form.Text className=\"text-danger\">\r\n          {formik.touched.pwd && formik.errors.pwd ? (\r\n            <div className=\"text-danger\">{formik.errors.pwd}</div>\r\n          ) : null}\r\n        </Form.Text>\r\n      </Form.Group>\r\n\r\n      {/* <button type=\"submit\">Submit</button> */}\r\n      <Form.Group controlId=\"createdBy\">\r\n        <Form.Label>Created by:</Form.Label>\r\n        <UserName id={formik.values.createdBy} />\r\n      </Form.Group>\r\n\r\n      {/* <br /> */}\r\n      <Form.Group controlId=\"created\">\r\n        <Form.Label className=\"id\">Created:</Form.Label>\r\n        <span>{formik.values.created.toLocaleDateString()}</span>\r\n      </Form.Group>\r\n\r\n      {!isEdit() &&\r\n        <div className=\"buttons\">\r\n          {props.canEdit &&\r\n            <Button\r\n              variant=\"secondary\"\r\n              size=\"sm\"\r\n              onClick={() => {\r\n                props.cancel();\r\n                // props.handleClose()\r\n              }}>\r\n              Cancel\r\n            </Button>}\r\n          {props.canEdit &&\r\n            <Button\r\n              variant=\"primary\"\r\n              size=\"sm\"\r\n              type=\"submit\"\r\n            >\r\n              Save\r\n            </Button>}\r\n        </div>\r\n      }\r\n    </Form>\r\n  );\r\n};\r\n\r\n\r\nexport const UserForm: React.FC<IFormProps> = (props: IFormProps) => {\r\n  const theme = useContext(ThemeContext);\r\n  const { darkMode, variant, bg } = theme.state;\r\n  return (\r\n    <Container className={`${darkMode ? \"dark\" : \"\"}`}>\r\n      <UsrForm {...props} />\r\n    </Container>\r\n  )\r\n}","// import * as React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { IAppState } from '../../store/Store';\r\nimport { IUser } from '../types'\r\n\r\nimport { Dispatch } from 'redux';  // ActionCreatorsMapObject, \r\n\r\nimport { UserActions,  \r\n\tgetUser, \r\n\taddUser, \r\n\teditUser,\r\n\tremoveUser,\r\n\tstoreUser,\r\n\tcancelUser\r\n} from '../actions'\r\n\r\nimport {UserForm}  from '../components/UserForm'\r\n\r\ninterface IProps {\r\n\tcanEdit: boolean\r\n}\r\n\r\n// Grab the users from the store and make them available on props\r\nconst mapStateToProps = (store: IAppState, ownProps: IProps ) => {\r\n\tconst {usersState, topState} = store;\r\n\tconst { roles, userEditing, roleOptions, formMode, roleIdEditing } = usersState; \r\n\treturn {\r\n\t\tauth: topState.top.auth,\r\n\t\troles,\r\n\t\troleOptions,\r\n\t\tuserEditing,\r\n\t\tformMode,\r\n\t\troleIdEditing,\r\n\t\tcanEdit: ownProps.canEdit\r\n\t};\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch<UserActions>) => {\r\n\treturn {\r\n\t\tonSelectUser: (userId: number) => dispatch<any>(getUser(userId)),\r\n\t\tadd: (userRoleId: number, text: string, canEdit?: boolean) => dispatch<any>(addUser(userRoleId, text, canEdit)),\r\n\t\tedit: (userRoleId: number, userId: number) => dispatch<any>(editUser(userRoleId, userId)),\r\n\t\tremove: (userRoleId: number, userId: number) => dispatch<any>(removeUser(userRoleId, userId)),\r\n\t\tsaveForm: (user: IUser, formMode: string) => dispatch<any>(storeUser(user, formMode)),\r\n\t\tcancel: () => dispatch<any>(cancelUser()),\t\r\n\t}\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(UserForm);\r\n","import * as React from 'react';\r\n\r\nimport { useHover } from '../../common/useHover'\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faWindowClose, faEdit } from '@fortawesome/free-solid-svg-icons'\r\n\r\nimport { IUser } from '../types';\r\nimport { Button, ListGroup } from 'react-bootstrap';\r\nimport { ThemeContext } from '../../ThemeContext';\r\n\r\ninterface IRowProps {\r\n\twho: IUser;\r\n\tuser: IUser;\r\n\tonSelectUser: (userId: number) => IUser;\r\n\tedit: (roleId: number, userId: number) => void;\r\n\tremove: (roleId: number, userId: number) => void;\r\n}\r\n\r\nconst UserRow: React.FC<IRowProps> = (props: IRowProps) => {\r\n\r\n\tconst [hoverRef, hoverProps] = useHover();\r\n\r\n\tconst { who, user, onSelectUser, edit, remove } = props;\r\n\tconst { roleId, userId, userName } = user;\r\n\r\n\tconst theme = React.useContext(ThemeContext);\r\n\tconst { darkMode, variant, bg } = theme.state;\r\n\r\n\treturn (\r\n\t\t<ListGroup.Item\r\n\t\t\tas=\"li\"\r\n\t\t\tclassName=\"py-0\"\r\n\t\t\tvariant={variant}\r\n\t\t>\r\n\t\t\t<div ref={hoverRef} className=\"d-flex justify-content-start align-items-center\">\r\n\t\t\t\t<Button\r\n\t\t\t\t\tstyle={{ fontSize: '13px' }}\r\n\t\t\t\t\tvariant='link'\r\n\t\t\t\t\tsize=\"sm\"\r\n\t\t\t\t\tclassName=\"py-0 px-1 text-decoration-none\"\r\n\t\t\t\t\tonClick={() => onSelectUser(userId)}>\r\n\t\t\t\t\t{userName} {userId}\r\n\t\t\t\t</Button>\r\n\t\t\t\t{hoverProps.isHovered &&\r\n\t\t\t\t\t<Button\r\n\t\t\t\t\t\tvariant={variant}\r\n\t\t\t\t\t\tsize=\"sm\"\r\n\t\t\t\t\t\tclassName=\"py-0 px-1\"\r\n\t\t\t\t\t\tstyle={{ backgroundColor: 'transparent', borderWidth: '0' }}\r\n\t\t\t\t\t\ttitle=\"Edit\"\r\n\t\t\t\t\t\tonClick={() => edit(roleId, userId)}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<FontAwesomeIcon icon={faEdit} color='lightblue' />\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t}\r\n\t\t\t\t{hoverProps.isHovered && who.roleId === 11 &&\r\n\t\t\t\t\t<Button\r\n\t\t\t\t\t\tvariant={variant}\r\n\t\t\t\t\t\tsize=\"sm\"\r\n\t\t\t\t\t\tclassName=\"py-0 px-1\"\r\n\t\t\t\t\t\tstyle={{ backgroundColor: 'transparent', borderWidth: '0' }}\r\n\t\t\t\t\t\ttitle=\"Remove\"\r\n\t\t\t\t\t\tonClick={() => remove(roleId, userId)}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<FontAwesomeIcon icon={faWindowClose} color='lightblue' />\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t}\r\n\t\t\t</div>\r\n\t\t</ListGroup.Item>\r\n\t)\r\n}\r\n\r\nexport default UserRow\r\n\r\n","import * as React from 'react';\r\n\r\nimport { useHover } from '../../common/useHover'\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faWindowClose, faEdit, faCaretRight, faCaretDown, faPlus } from '@fortawesome/free-solid-svg-icons'\r\nimport { Badge, Button } from 'react-bootstrap'\r\n\r\nimport { IRole, IUser } from '../types';\r\nimport { ThemeContext } from '../../ThemeContext';\r\n\r\ninterface IUserRowProps {\r\n\twho: IUser;\r\n\tuserRole: IRole;\r\n\ttoggleRole: (roleId: number) => void;\r\n\teditRole: (roleId: number) => void;\r\n\tremoveRole: (roleId: number) => void;\r\n\tadd: (roleId: number, text: string, canEdit?: boolean) => void;\r\n}\r\n\r\nconst RoleRow: React.FC<IUserRowProps> = (props: IUserRowProps) => {\r\n\r\n\tconst [hoverRef, hoverProps] = useHover();\r\n\tconst { who, userRole, toggleRole, editRole, removeRole, add } = props;\r\n\tconst { roleId, title, users, isExpanded, color } = userRole;\r\n\r\n\tconst theme = React.useContext(ThemeContext);\r\n\tconst { darkMode, variant, bg } = theme.state;\r\n\r\n\treturn (\r\n\t\t<div ref={hoverRef}>\r\n\t\t\t<button\r\n\t\t\t\tclassName=\"button-edit\"\r\n\t\t\t\ttitle=\"Expand\"\r\n\t\t\t\tonClick={() => toggleRole(roleId)}\r\n\t\t\t\tstyle={{ marginLeft: '5px' }}\r\n\t\t\t>\r\n\t\t\t\t<FontAwesomeIcon icon={isExpanded ? faCaretDown : faCaretRight} color={color} size='lg' />\r\n\t\t\t</button>\r\n\t\t\t<Button\r\n\t\t\t\tvariant='link'\r\n\t\t\t\tsize=\"sm\"\r\n\t\t\t\tclassName=\"py-0 mx-1 text-decoration-none\"\r\n\t\t\t>\r\n\t\t\t\t{title}\r\n\t\t\t</Button>\r\n\t\t\t<Button\r\n\t\t\t\tvariant={variant}\r\n\t\t\t\tsize=\"lg\"\r\n\t\t\t\tclassName=\"py-0 px-1\"\r\n\t\t\t\tstyle={{ backgroundColor: 'transparent', borderWidth: '0' }}\r\n\t\t\t\ttitle=\"Add a new User\"\r\n\t\t\t\tonClick={() => add(roleId, '')}\r\n\t\t\t\tdisabled={roleId === 11}\r\n\t\t\t>\r\n\t\t\t\t<FontAwesomeIcon icon={faPlus} size='xs' color='orange' />\r\n\t\t\t</Button>\r\n\t\t\t{hoverProps.isHovered && who.roleId === 11 &&\r\n\t\t\t\t<button className=\"button-edit\" title=\"Edit Section\" onClick={() => editRole(roleId)}>\r\n\t\t\t\t\t<FontAwesomeIcon icon={faEdit} color='lightblue' />\r\n\t\t\t\t</button>\r\n\t\t\t}\r\n\t\t\t{hoverProps.isHovered && users.length === 0 && who.roleId === 11 &&\r\n\t\t\t\t<button className=\"button-remove\" title=\"Remove Section\" onClick={() => removeRole(roleId)}>\r\n\t\t\t\t\t<FontAwesomeIcon icon={faWindowClose} color='lightblue' />\r\n\t\t\t\t</button>\r\n\t\t\t}\r\n\t\t\t<Badge bg=\"primary\" pill>\r\n\t\t\t\t{users.length}\r\n\t\t\t</Badge>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default RoleRow\r\n\r\n","import { Fragment, useContext } from 'react';\r\nimport { useRef } from 'react'\r\nimport { Col, Container, ListGroup, Row } from 'react-bootstrap';\r\nimport { faPlus } from '@fortawesome/free-solid-svg-icons'\r\n\r\nimport { IRole, IRolesProps } from '../types'\r\n\r\nimport UserForm from '../containers/UserForm'\r\nimport UserRow from './UserRow';\r\nimport RoleRow from './RoleRow';\r\nimport { ThemeContext } from \"../../ThemeContext\";\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\n// type SupportParams = {\r\n// \ttekst: string;\r\n// };\r\n\r\nconst UserPage: React.FC<IRolesProps> = (props: IRolesProps) => {\r\n\r\n\t//let { tekst } = useParams<SupportParams>();\r\n\tconst { who, roles, userEditing,\r\n\t\tformMode, roleIdEditing,\r\n\t\tonSelectUser, add, edit, remove, canEdit,\r\n\t\taddRole, toggleRole, editRole, removeRole, storeRole } = props;\r\n\r\n\tconst inputEl = useRef<HTMLInputElement>(null);\r\n\tsetTimeout(() => {\r\n\t\tif (inputEl.current !== null) {\r\n\t\t\tinputEl.current!.select();\r\n\t\t\tinputEl.current!.focus()\r\n\t\t}\r\n\t}, 100)\r\n\r\n\t// const expandRole = (roleId: number): void => {\r\n\t// \tconst div = document.querySelector<HTMLDivElement>(\"#divRole\" + roleId);\r\n\t// \tconsole.log(div)\r\n\t// \tdiv!.style.display = 'block';\r\n\t// }\r\n\tconst theme = useContext(ThemeContext);\r\n\tconst { darkMode, variant, bg } = theme.state;\r\n\r\n\tconst userRoles: IRole[] = roles ?? [];\r\n\tconsole.log({userRoles})\r\n\r\n\treturn (\r\n\t\t<Container fluid>\r\n\t\t\t<Row className={`${darkMode ? \"dark\" : \"light\"}`}>\r\n\t\t\t\t<Col md={7}>\r\n\t\t\t\t\t<div style={{ border: '0px solid silver' }}>\r\n\t\t\t\t\t\t<h5>Users by Role{' '}\r\n\t\t\t\t\t\t\t<button className=\"button-add-category button-edit\" title=\"Add a new Role\" onClick={() => addRole()}>\r\n\t\t\t\t\t\t\t\t<FontAwesomeIcon icon={faPlus} size='xs' color='lightblue' />\r\n\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t</h5>\r\n\t\t\t\t\t\t<ListGroup\r\n\t\t\t\t\t\t\tas=\"ul\"\r\n\t\t\t\t\t\t\tvariant={variant}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t{userRoles.map(role => {\r\n\t\t\t\t\t\t\t\tconst { roleId, title, isExpanded, users } = role;\r\n\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t<Fragment key={roleId}>\r\n\t\t\t\t\t\t\t\t\t\t<ListGroup.Item\r\n\t\t\t\t\t\t\t\t\t\t\tvariant={variant}\r\n\t\t\t\t\t\t\t\t\t\t\tclassName=\"py-0 px-1\"\r\n\t\t\t\t\t\t\t\t\t\t\tas=\"li\"\r\n\t\t\t\t\t\t\t\t\t\t\tkey={roleId + \"_1\"}\r\n\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className=\"d-flex justify-content-start align-items-center\" style={{ textAlign: 'start' }}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t{roleIdEditing === roleId &&\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<input ref={inputEl} name=\"groupTitle\" type=\"text\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonBlur={(e) => storeRole({ ...role, title: e.target.value })}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tdefaultValue={title}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t{roleIdEditing !== roleId && (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<RoleRow\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\twho={who}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tuserRole={role}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\ttoggleRole={toggleRole}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\teditRole={editRole}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tremoveRole={removeRole}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tadd={add}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</ListGroup.Item>\r\n\t\t\t\t\t\t\t\t\t\t{isExpanded && role.users.length > 0 &&\r\n\t\t\t\t\t\t\t\t\t\t\t<ListGroup.Item\r\n\t\t\t\t\t\t\t\t\t\t\t\tvariant={variant}\r\n\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"py-0 px-1\"\r\n\t\t\t\t\t\t\t\t\t\t\t\tas=\"li\"\r\n\t\t\t\t\t\t\t\t\t\t\t\tkey={roleId + \"_2\"}\r\n\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<ListGroup\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tas=\"ul\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tvariant={variant}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"inner-list py-0 ms-5\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t{users.map(user =>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<UserRow\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\twho={who}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tkey={user.userId}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tuser={user}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonSelectUser={onSelectUser}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tedit={edit}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tremove={remove}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t</ListGroup>\r\n\t\t\t\t\t\t\t\t\t\t\t</ListGroup.Item>\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t</Fragment>\r\n\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t</ListGroup>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</Col>\r\n\t\t\t\t<Col md={5}>\r\n\t\t\t\t\t<div className={`${darkMode ? \"dark\" : \"light\"}`}>\r\n\t\t\t\t\t\t{userRoles && userEditing &&\r\n\t\t\t\t\t\t\t<div style={{ border: '1px solid silver', borderRadius: '5px', padding: '5px 5px 15px 5px' }}>\r\n\t\t\t\t\t\t\t\t<h4 style={{ marginTop: 0, color: 'white' }}>User</h4>\r\n\t\t\t\t\t\t\t\t<UserForm canEdit={formMode === 'display' ? false : canEdit} />\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</Col>\r\n\t\t\t</Row>\r\n\t\t</Container>\r\n\t);\r\n}\r\n\r\nexport default UserPage\r\n\r\n","import { connect } from 'react-redux';\r\n\r\nimport { IAppState } from '../../store/Store';\r\nimport { IRole } from '../types'\r\n\r\nimport { Dispatch } from 'redux';  // ActionCreatorsMapObject, \r\n\r\nimport { UserActions,  \r\n\tgetUser, \r\n\taddUser, \r\n\teditUser,\r\n\tremoveUser,\r\n\taddRole,\r\n\teditRole,\r\n\tremoveRole,\r\n\tstoreRole,\r\n\ttoggleRole\r\n} from '../actions'\r\n\r\nimport UsersPage from '../components/UsersPage'\r\n\r\ninterface IProps {\r\n\tcanEdit: boolean\r\n}\r\n\r\n// Grab the users from the store and make them available on props\r\nconst mapStateToProps = (store: IAppState, ownProps: IProps ) => {\r\n\tconst { usersState,  topState} = store;\r\n\tconst { roles, userEditing, formMode, roleIdEditing } = usersState; \r\n\treturn {\r\n\t\twho: topState.top.auth!.who,\r\n\t\troles,\r\n\t\tuserEditing,\r\n\t\tformMode,\r\n\t\troleIdEditing,\r\n\t\tcanEdit: ownProps.canEdit\r\n\t};\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch<UserActions>) => {\r\n\treturn {\r\n\t\t// user\r\n\t\tonSelectUser: (userId: number) => dispatch<any>(getUser(userId)),\r\n\t\tadd: (userRoleId: number, text: string, canEdit?: boolean) => dispatch<any>(addUser(userRoleId, text, canEdit)),\r\n\t\tedit: (userRoleId: number, userId: number) => dispatch<any>(editUser(userRoleId, userId)),\r\n\t\tremove: (userRoleId: number, userId: number) => dispatch<any>(removeUser(userRoleId, userId)),\r\n\t\t// groups\r\n\t\taddRole: () => dispatch<any>(addRole()),\r\n\t\ttoggleRole: (roleId: number) =>  dispatch<any>(toggleRole(roleId)),\r\n\t\teditRole: (roleId: number) =>  dispatch<any>(editRole(roleId)),\r\n\t\tremoveRole: (roleId: number) => dispatch<any>(removeRole(roleId)),\r\n\t\tstoreRole: (role: IRole) => dispatch<any>(storeRole(role))\r\n\t}\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(UsersPage);\r\n","import React, { useContext } from 'react';\r\nimport { Button, Col, Container, Form, Row } from \"react-bootstrap\";\r\n\r\nimport { useFormik } from 'formik';\r\nimport * as Yup from 'yup'\r\n\r\nimport { ThemeContext } from '../../ThemeContext';\r\n\r\nimport { IFormProps } from '../types';\r\n//import { number } from 'yup/lib/locale';\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\n\r\nconst LogForm: React.FC<IFormProps> = (props: IFormProps) => {\r\n\r\n  let { authError } = props;\r\n\r\n  let navigate = useNavigate();\r\n  if (props.isAuthenticated) {\r\n    navigate('/questions');\r\n  }\r\n\r\n  const formik = useFormik({\r\n    enableReinitialize: true,\r\n    initialValues: {\r\n      userName: '',\r\n      pwd: ''\r\n    },\r\n    validationSchema: Yup.object({\r\n      userName: Yup\r\n        .string()\r\n        .max(32, 'Must be 32 characters or less')\r\n        .required('Required'),\r\n      pwd: Yup\r\n        .string()\r\n        .min(7)\r\n        .max(16)\r\n        //.matches(/^(?=.*[a-z])(?=.*[A-Z])(?=.*d)[a-zA-Zd]$/)\r\n        .required()\r\n    }),\r\n    onSubmit: values => {\r\n      // alert(JSON.stringify(values, null, 2));\r\n      props.saveForm(values, props.formMode, props.isRegister)\r\n    }\r\n  });\r\n\r\n  const isEdit = () => props.formMode === 'edit';\r\n\r\n  console.log('RENDERING LoginForm', formik.values)\r\n\r\n  return (\r\n    <Form onSubmit={formik.handleSubmit}>\r\n\r\n      {/* <label htmlFor=\"name\">User name</label> */}\r\n      <Form.Group controlId=\"userName\">\r\n        <Form.Label>Name</Form.Label>\r\n        <Form.Control\r\n          as=\"input\"\r\n          name=\"userName\"\r\n          onChange={formik.handleChange}\r\n          onBlur={formik.handleBlur}\r\n          // onBlur={(e: React.FormEvent<HTMLInputElement>): void => {\r\n          //   if (isEdit() && formik.initialValues.name !== formik.values.name)\r\n          //     formik.submitForm();\r\n          // }}\r\n          value={formik.values.userName}\r\n          placeholder=\"User name\"\r\n          maxLength={16}\r\n        />\r\n        <Form.Text className=\"text-danger\">\r\n          {formik.touched.userName && formik.errors.userName ? (\r\n            <div className=\"text-danger\">{formik.errors.userName}</div>\r\n          ) : null}\r\n        </Form.Text>\r\n      </Form.Group>\r\n      <br/>\r\n\r\n      <Form.Group controlId=\"pwd\">\r\n        <Form.Label>Password</Form.Label>\r\n        <Form.Control\r\n          as=\"input\"\r\n          name=\"pwd\"\r\n          type=\"password\"\r\n          onChange={formik.handleChange}\r\n          onBlur={formik.handleBlur}\r\n          value={formik.values.pwd}\r\n          placeholder=\"password\"\r\n          // style={{ width: '40%' }}\r\n          maxLength={16}\r\n        />\r\n        <Form.Text className=\"text-danger\">\r\n          {formik.touched.pwd && formik.errors.pwd ? (\r\n            <div className=\"text-danger\">{formik.errors.pwd}</div>\r\n          ) : null}\r\n        </Form.Text>\r\n      </Form.Group>\r\n\r\n      {authError &&\r\n        <div>{authError}</div>\r\n      }\r\n\r\n      <br />\r\n\r\n      <div className=\"buttons\">\r\n        <Button\r\n          variant=\"secondary\"\r\n          size=\"sm\"\r\n          onClick={() => {\r\n            props.cancel();\r\n            navigate('/landing');\r\n            // props.handleClose()\r\n          }}>\r\n          Cancel\r\n        </Button>\r\n        <Button\r\n          variant=\"primary\"\r\n          size=\"sm\"\r\n          type=\"submit\"\r\n        >\r\n          Submit\r\n        </Button>\r\n      </div>\r\n\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport const LoginForm: React.FC<IFormProps> = (props: IFormProps) => {\r\n  const theme = useContext(ThemeContext);\r\n  const { darkMode, variant, bg } = theme.state;\r\n  return (\r\n    <Container className={`${darkMode ? \"dark\" : \"\"}`} >\r\n      <Row className=\"py-2\">\r\n        <Col md=\"4\" className=\"mx-auto\">\r\n          <h4 style={{textAlign: 'center'}}>\r\n            {props.isRegister ? (\r\n              'Register'\r\n            ) : (\r\n              'Sign In'\r\n            )}\r\n          </h4>\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        <Col md=\"6\" className=\"mx-auto\">\r\n          <LogForm {...props} />\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  )\r\n}","// import * as React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { IAppState } from '../../store/Store';\r\n\r\nimport { Dispatch } from 'redux'; \r\n\r\nimport { register, authenticate, cancelLogin, TopActions } from '../actions'\r\n\r\nimport { LoginForm } from '../components/LoginForm';\r\nimport { ILogin } from '../types';\r\n\r\ninterface IProps {\r\n\tcanEdit: boolean,\r\n\tisRegister: boolean\r\n}\r\n\r\nconst mapStateToProps = (store: IAppState, ownProps: IProps) => {\r\n\tconst { topState } = store;\r\n\tconst { top } = topState;\r\n\treturn {\r\n\t\tisAuthenticated: top.isAuthenticated,\r\n\t\tuuid: top.uuid,\r\n\t\tauthError: top.authError,\r\n\t\tcanEdit: ownProps.canEdit,\r\n\t\tisRegister: ownProps.isRegister,\r\n\t\tformMode: 'edit'\r\n\t};\r\n};\r\n\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch<TopActions>) => {\r\n\treturn {\r\n\t\tsaveForm: (login: ILogin, formMode: string, isRegister: boolean) => \r\n\t\t\tdispatch<any>(isRegister ? \r\n\t\t\t\tregister(login)\t: authenticate(login)),\r\n\t\tcancel: () => dispatch<any>(cancelLogin())\r\n\t}\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(LoginForm);\r\n\r\n","import * as React from \"react\";\r\n\r\ninterface ILanding {\r\n}\r\n\r\nconst Landing: React.FC<ILanding> = (props: ILanding) => {\r\n  return (\r\n    <div>\r\n      Landing Page\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Landing;\r\n","import JSZip from 'jszip';\r\n\r\nexport const LocalStorage = {\r\n\r\n  display: async () => {\r\n    let s = \"\";\r\n    for (let i = 0; i < localStorage.length; i++) {\r\n      const key = localStorage.key(i);\r\n      console.log(\"============\");\r\n      s += (\"\\n============\");\r\n      console.log(key);\r\n      s += '\\n' + key;\r\n      console.log(\"\\n============\");\r\n      s += (\"\\n============\\n\");\r\n      console.log(key ? await localStorage.getItem(key) : \"null\");\r\n      s += '\\n' + key ? localStorage.getItem(key) : \"null\"\r\n    }\r\n    return Promise.resolve(s);\r\n  },\r\n\r\n  clear: (clearAnswers, clearQuestions) => {\r\n    if (window.confirm('Are you sure?') === true) {\r\n      const top = localStorage.getItem('SUPPORT_TOP')\r\n      const users = localStorage.getItem('SUPPORT_USERS')\r\n\r\n      localStorage.clear();\r\n\r\n      clearAnswers();\r\n      clearQuestions();\r\n\r\n      if (top)\r\n        localStorage.setItem('SUPPORT_TOP', top)\r\n\r\n      if (users)\r\n        localStorage.setItem('SUPPORT_USERS', users)\r\n\r\n      // after LocalStorage.clear(),\r\n      // we don't load demo data.json in loadCategories()\r\n      localStorage.setItem('SUPPORT_CATEGORIES', \"\")\r\n      localStorage.setItem('SUPPORT_ANSWERS', \"\")       \r\n    }\r\n  },\r\n\r\n  export: () => {\r\n    let data = JSON.stringify(localStorage)\r\n    const zip = true\r\n\r\n    if (!data) {\r\n      console.error('Console.save: No data')\r\n    }\r\n\r\n    console.log(new Date().toISOString())\r\n    const f = new Date().toISOString().replace(/T/, ' ').replace(/\\..+/, '');\r\n    const filename = `SupportKnowlegde_${f}.${(zip ? 'zip' : 'json')}`\r\n\r\n    // if (typeof data === \"object\") {\r\n    //   data = JSON.stringify(data, undefined, 4)\r\n    // }\r\n\r\n    if (zip) {\r\n      const zip = new JSZip();\r\n      zip.file(\"KnowledgeSupport.json\", data);\r\n      zip.generateAsync({ type: \"blob\" })\r\n        .then(function (blob) {\r\n          const e = document.createEvent('MouseEvents')\r\n          const a = document.createElement('a')\r\n          a.download = filename;\r\n          a.href = window.URL.createObjectURL(blob)\r\n          a.dataset.downloadurl = ['text/json', a.download, a.href].join(':')\r\n          e.initMouseEvent('click', true, false, window, 0, 0, 0, 0, 0, false, false, false, false, 0, null)\r\n          a.dispatchEvent(e)\r\n        });\r\n    }\r\n    else {\r\n      var blob = new Blob([data], { type: 'text/json' }),\r\n        e = document.createEvent('MouseEvents'),\r\n        a = document.createElement('a')\r\n\r\n      a.download = filename\r\n      a.href = window.URL.createObjectURL(blob)\r\n      a.dataset.downloadurl = ['text/json', a.download, a.href].join(':')\r\n      e.initMouseEvent('click', true, false, window, 0, 0, 0, 0, 0, false, false, false, false, 0, null)\r\n      a.dispatchEvent(e)\r\n    }\r\n  },\r\n\r\n  import: async (file, getAllAnswers, loadCategories) => {\r\n    const zipper = new JSZip();\r\n    zipper.loadAsync(file).then(function (contents) {\r\n      Object.keys(contents.files).forEach(function (filename) {\r\n        zipper.file(filename).async('string').then(function (content) {\r\n          console.log(filename, \"CONTENT:\", content);\r\n\r\n          const data = JSON.parse(content);\r\n          Object.keys(data).forEach(function (k) {\r\n            if (![\"SUPPORT_USERS\", \"SUPPORT_TOP\"].includes(k)) {\r\n              localStorage.setItem(k, data[k]);\r\n            }\r\n          });\r\n\r\n          getAllAnswers();\r\n          loadCategories();\r\n\r\n          return new Blob([content], { type: 'text/json' })\r\n        });\r\n      });\r\n    });\r\n    return new Blob([\"Imported\"], { type: 'text/json' })\r\n  }\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import { useContext, useState } from \"react\";\r\n\r\nimport { ThemeContext } from \"./ThemeContext\";\r\n\r\nimport { connect } from \"react-redux\";\r\nimport { Dispatch } from 'redux';\r\n\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nimport { IAppState } from \"./store/Store\";\r\nimport { IAuth } from \"./Top/types\";\r\n\r\nimport { LocalStorage } from \"./ExportImport\"\r\n\r\n// import logo from './logo.svg'\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faQuestion, faSurprise, faUser, faUserFriends, faAnchor, faDatabase } from '@fortawesome/free-solid-svg-icons'\r\n\r\nimport Container from 'react-bootstrap/Container';\r\nimport Nav from 'react-bootstrap/Nav';\r\nimport Navbar from 'react-bootstrap/Navbar';\r\nimport NavDropdown from 'react-bootstrap/NavDropdown';\r\nimport Offcanvas from 'react-bootstrap/Offcanvas';\r\nimport { setShowModalJSON, toggleMode, TopActions } from \"./Top/actions\";\r\nimport { closeQuestionForm } from \"./Categories/actions\";\r\n\r\nimport { clearAnswers } from \"./Answers/actions\";\r\nimport { clearQuestions } from \"./Categories/actions\";\r\nimport { getAllAnswers } from './Answers/actions';\r\nimport { loadCategories } from './Categories/actions';\r\n\r\nimport { Modal } from \"react-bootstrap\";\r\n\r\ninterface ISideBarProps {\r\n  isAuthenticated: boolean | null;\r\n  showModalJSON: boolean;\r\n  auth?: IAuth,\r\n  signOut: () => void;\r\n  toggleMode: () => void;\r\n  closeQuestionForm: () => void;\r\n  clearAnswers: () => void;\r\n  clearQuestions: () => void;\r\n  getAllAnswers: () => void;\r\n  loadCategories: () => void;\r\n  setShowModalJSON: (show : boolean) => void;\r\n}\r\n\r\nfunction SideBar(props: ISideBarProps) {\r\n  const {\r\n    isAuthenticated,\r\n    showModalJSON,\r\n    auth,\r\n    signOut,\r\n    toggleMode,\r\n    closeQuestionForm,\r\n    clearAnswers,\r\n    clearQuestions,\r\n    getAllAnswers,\r\n    loadCategories,\r\n    setShowModalJSON\r\n  } = props;\r\n\r\n  const theme = useContext(ThemeContext);\r\n  const { darkMode, variant, bg } = theme.state;\r\n\r\n  let navigate = useNavigate();\r\n\r\n  const otkaciMe = () => {\r\n    signOut();\r\n    navigate('/landing');\r\n  }\r\n\r\n  const [show, setShow] = useState(false);\r\n  const [strJSON, setStrJSON] = useState(\"\");\r\n\r\n  return (\r\n    <Navbar expand={\"md\"} variant={variant} bg={bg} collapseOnSelect className=\"sticky-top\">\r\n      <Container fluid>\r\n        <Navbar.Brand href=\"#\" className=\"ps-3\">Support Knowledge</Navbar.Brand>\r\n        <Navbar.Toggle aria-controls={`offcanvasNavbar-expand`} />\r\n        <Navbar.Offcanvas\r\n          id={`offcanvasNavbar-expand`}\r\n          aria-labelledby={`offcanvasNavbarLabel-expand`}\r\n          placement=\"end\"\r\n          className={`text-bg-${bg}`}\r\n        >\r\n          {darkMode ? (\r\n            <Offcanvas.Header closeButton closeVariant=\"white\">\r\n              <Offcanvas.Title id={`offcanvasNavbarLabel-expand`}>Support</Offcanvas.Title>\r\n            </Offcanvas.Header>\r\n          ) : (\r\n            <Offcanvas.Header closeButton>\r\n              <Offcanvas.Title id={`offcanvasNavbarLabel-expand`}>Support</Offcanvas.Title>\r\n            </Offcanvas.Header>\r\n          )}\r\n\r\n          < Offcanvas.Body >\r\n            <Nav\r\n              className=\"justify-content-end flex-grow-1 pe-3 d-flex flex-nowrap\"\r\n              onSelect={eventKey => {\r\n                switch (eventKey) {\r\n                  case \"LIGHTMODE\":\r\n                  case \"DARKMODE\":\r\n                    if (document.body.classList.contains('dark')) {\r\n                      document.body.classList.remove('dark')\r\n                      document.body.classList.add('light')\r\n                    }\r\n                    else {\r\n                      document.body.classList.add('dark')\r\n                    }\r\n                    theme.dispatch({ type: eventKey })\r\n                    toggleMode();\r\n                    break;\r\n\r\n                  case \"STORAGE_DISPLAY\":\r\n                    LocalStorage.display()\r\n                      .then(s => { setStrJSON(s) });\r\n                    setShowModalJSON(true);\r\n                    break;\r\n                  case \"STORAGE_CLEAR\":\r\n                    LocalStorage.clear(clearAnswers, clearQuestions)\r\n                    break;\r\n                  case \"STORAGE_EXPORT\":\r\n                    LocalStorage.export()\r\n                    break;\r\n                  case \"STORAGE_IMPORT\":\r\n                    setShow(true)\r\n                    break;\r\n                }\r\n              }\r\n              }\r\n            >\r\n              {isAuthenticated &&\r\n                <Nav.Link href=\"#/supporter/promo\" onClick={() => {\r\n                  closeQuestionForm();\r\n                }}>\r\n                  <FontAwesomeIcon icon={faSurprise} color='lightblue' />{' '}Supporter\r\n                </Nav.Link>\r\n              }\r\n              {isAuthenticated &&\r\n                <Nav.Link href=\"#/questions\">\r\n                  <FontAwesomeIcon icon={faQuestion} color='lightblue' />{' '}Questions\r\n                </Nav.Link>\r\n              }\r\n              {isAuthenticated &&\r\n                <Nav.Link href=\"#/answers/pera\">\r\n                  <FontAwesomeIcon icon={faAnchor} color='lightblue' />{' '}Answers\r\n                </Nav.Link>\r\n              }\r\n              {isAuthenticated && auth && auth!.who.roleId === 11 &&\r\n                <Nav.Link href=\"#/users/2\">\r\n                  <FontAwesomeIcon icon={faUserFriends} color='lightblue' />{' '}Users\r\n                </Nav.Link>\r\n              }\r\n\r\n              {!isAuthenticated &&\r\n                <Nav.Link href=\"#/landing\">\r\n                  Landing\r\n                </Nav.Link>\r\n              }\r\n              {!isAuthenticated &&\r\n                <Nav.Link href=\"#/About\">\r\n                  About\r\n                </Nav.Link>\r\n              }\r\n\r\n              {/* <NavDropdown\r\n                title={<><FontAwesomeIcon icon={faCog} color='lightblue' />{' '}Settings</>}\r\n                id={`offcanvasNavbarDropdown-expand`}\r\n                menuVariant={variant}\r\n              >\r\n              </NavDropdown> */}\r\n\r\n              {!isAuthenticated &&\r\n                <Nav.Link href=\"#/Register\">\r\n                  Register\r\n                </Nav.Link>\r\n              }\r\n              {!isAuthenticated &&\r\n                <Nav.Link href=\"#/sign-in \">\r\n                  Sign In\r\n                </Nav.Link>\r\n              }\r\n\r\n              {isAuthenticated &&\r\n                // <Nav.Link href=\"#\" disabled>\r\n                //   <FontAwesomeIcon icon={faUser} />{' '}{auth!.who.userName}\r\n                // </Nav.Link>\r\n\r\n                <NavDropdown\r\n                  title={<><FontAwesomeIcon icon={faUser} />{' '}{auth!.who.userName}</>}\r\n                  id={`offcanvasNavbarDropdown-expand`}\r\n                  menuVariant={variant}\r\n                  align=\"end\"\r\n                >\r\n                  <NavDropdown.Item eventKey=\"DARKMODE\">\r\n                    Dark mode\r\n                  </NavDropdown.Item>\r\n                  <NavDropdown.Item eventKey=\"LIGHTMODE\">\r\n                    Light mode\r\n                  </NavDropdown.Item>\r\n                  {/* <Form className=\"d-flex\">\r\n                  <Form.Control\r\n                    type=\"search\"\r\n                    placeholder=\"Search\"\r\n                    className=\"me-2\"\r\n                    aria-label=\"Search\"\r\n                  />\r\n                  <Button variant=\"outline-success\">Search</Button>\r\n                </Form> */}\r\n\r\n                  <NavDropdown.Divider />\r\n                  <NavDropdown\r\n                    title={<span style={{ padding: \"0px 5px\", fontSize: '0.9rem' }}><FontAwesomeIcon icon={faDatabase} />{' '}Local Storage</span>}\r\n                    id={`offcanvasNavbarDropdown-expand2`}\r\n                    menuVariant={variant}\r\n                    align=\"end\"\r\n                  >\r\n                    <NavDropdown.Item href=\"#\" eventKey=\"STORAGE_DISPLAY\">\r\n                      Display\r\n                    </NavDropdown.Item>\r\n                    <NavDropdown.Divider />\r\n                    <NavDropdown.Item href=\"#\" eventKey=\"STORAGE_CLEAR\">\r\n                      Clear\r\n                    </NavDropdown.Item>\r\n                    <NavDropdown.Divider />\r\n                    <NavDropdown.Item href=\"#\" eventKey=\"STORAGE_EXPORT\">\r\n                      Export to zip file\r\n                    </NavDropdown.Item>\r\n                    <NavDropdown.Divider />\r\n                    <NavDropdown.Item href=\"#\" eventKey=\"STORAGE_IMPORT\">\r\n                      Import from zip file\r\n                    </NavDropdown.Item>\r\n                  </NavDropdown>\r\n                  <NavDropdown.Divider />\r\n                  <NavDropdown.Item href=\"#\" onClick={otkaciMe}>\r\n                    Sign out\r\n                  </NavDropdown.Item>\r\n                </NavDropdown>\r\n              }\r\n            </Nav>\r\n          </Offcanvas.Body>\r\n        </Navbar.Offcanvas>\r\n\r\n        <Modal show={show} onHide={() => setShow(false)} animation={true} size=\"lg\" centered\r\n          className={`${darkMode ? \"dark\" : \"\"}`}\r\n          contentClassName={`${darkMode ? \"dark\" : \"\"}`}>\r\n          <Modal.Header closeButton>\r\n            <Modal.Title>Select file to import</Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n            <input type=\"file\" accept=\"application/zip\" onChange={(e) => {\r\n              //e.target.files![0].text().then(t => console.log(t)) \r\n              LocalStorage.import(e.target.files![0], getAllAnswers, loadCategories)\r\n              setShow(false)\r\n            }} />\r\n          </Modal.Body>\r\n          <Modal.Footer>\r\n            Only Categories, Questions and Answers will be imported.\r\n            <br />\r\n            Registered user will stay unchanged.\r\n          </Modal.Footer>\r\n        </Modal>\r\n\r\n        <Modal show={showModalJSON}\r\n          onHide={() => { setShowModalJSON(false); setStrJSON('') }} animation={true} size=\"lg\" centered\r\n          className={`${darkMode ? \"dark\" : \"\"}`}\r\n          contentClassName={`${darkMode ? \"dark\" : \"\"}`}>\r\n          <Modal.Header closeButton>\r\n            <Modal.Title>LOCAL STORAGE</Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n            <pre style={{ whiteSpace: \"pre-line\"}}>\r\n            { strJSON }\r\n            </pre>\r\n          </Modal.Body>\r\n          <Modal.Footer>\r\n          </Modal.Footer>\r\n        </Modal>\r\n\r\n      </Container>\r\n    </Navbar>\r\n  );\r\n}\r\n\r\ninterface IOwnProps {\r\n  signOut: () => void;\r\n}\r\n\r\nconst mapStateToProps = (store: IAppState, ownProps: IOwnProps) => ({\r\n  isAuthenticated: store.topState.top.isAuthenticated,\r\n  auth: store.topState.top.auth,\r\n  showModalJSON: store.topState.top.showModalJSON,\r\n  signOut: ownProps.signOut\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch<TopActions>) => {\r\n  return {\r\n    toggleMode: () => dispatch<any>(toggleMode()),\r\n    closeQuestionForm: () => dispatch<any>(closeQuestionForm()),\r\n    clearAnswers: () => dispatch<any>(clearAnswers()),\r\n    clearQuestions: () => dispatch<any>(clearQuestions()),\r\n    getAllAnswers: () => dispatch<any>(getAllAnswers()),\r\n    loadCategories: () => dispatch<any>(loadCategories()),\r\n    setShowModalJSON:  (show: boolean) => dispatch<any>(setShowModalJSON(show))\r\n  }\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(SideBar);\r\n","import * as React from \"react\";\r\n\r\ninterface ILanding {\r\n}\r\n\r\nconst Landing: React.FC<ILanding> = (props: ILanding) => {\r\n  return (\r\n    <>\r\n      <h2 style={{ textAlign: 'center', marginBlockStart: '0.66rem', marginBlockEnd: '0.1rem' }}>Questions &amp; Answers</h2>\r\n      <div className=\"d-flex flex-column justify-content-start align-items-center pt-3 mx-auto border-bottom\">\r\n        <p className=\"mx-auto\">\r\n          A knowledge base for sharing information.\r\n        </p>\r\n        <p className=\"mx-auto\">\r\n          When you record your experiences and insights, other members of your team can share info.\r\n        </p>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Landing;\r\n","import React, { useState, useContext, useEffect } from 'react';\r\n\r\nimport { HashRouter as Router, Route, Routes } from 'react-router-dom' // useRouteMatch\r\n\r\nimport { connect } from 'react-redux';\r\nimport { Dispatch } from 'redux';\r\n\r\nimport { IAppState } from './store/Store';\r\nimport { ThemeContext } from \"./ThemeContext\";\r\n\r\nimport Support from './components/Support';\r\nimport AnswersPage from './Answers/containers/Page'\r\nimport containers from './Categories/containers/ContainerCategoriesPage'\r\n\r\nimport UsersPage from './Users/containers/UsersPage';\r\nimport { authenticate, unAuthenticate, TopActions, navbarToggle } from './Top/actions';\r\nimport LoginForm from './Top/containers/LoginForm';\r\nimport Landing from './components/Landing';\r\nimport { ILogin, IAuth } from './Top/types';\r\n\r\nimport { Container, Row, Col } from 'react-bootstrap';\r\n\r\nimport SideBar from './SideBar';\r\nimport About from './components/About';\r\n\r\ninterface IProps {\r\n\tisAuthenticated: boolean | null;\r\n\tuuid: string | null;\r\n\tauth?: IAuth,\r\n\ttoggleNavbar: () => void,\r\n\tcheckAuthentication: (login: ILogin) => void;\r\n\tsignOut: () => void;\r\n}\r\n\r\nconst App = ({ isAuthenticated, uuid, auth, toggleNavbar, checkAuthentication, signOut }: IProps) => {\r\n\r\n\t// let main: null | HTMLDivElement = null;\r\n\r\n\t// const [mainMd, setMainMd] = useState(9);\r\n\t// const [mainLg, setMainLg] = useState(10);\r\n\r\n\tconst theme = useContext(ThemeContext);\r\n\tconst { darkMode, variant, bg } = theme.state;\r\n\r\n\tuseEffect(() => {\r\n\t\tdocument.body.classList.add(bg)\r\n\t}, []);\r\n\r\n\r\n\tconst canEdit = isAuthenticated === true && auth!.who.roleId < 44;\r\n\r\n\t// null is the third state false/true/null in reducer\r\n\tconst app = \r\n\t\t<Router>\r\n\t\t\t<SideBar signOut={signOut} />\r\n\t\t\t<Container fluid>\r\n\t\t\t\t<Row className={`${darkMode ? \"dark\" : \"\"}`}>\r\n\t\t\t\t\t{/* <Col id=\"main\" md={mainMd} lg={mainLg} className=\"ms-sm-auto px-md-4\"> */}\r\n\t\t\t\t\t<Col id=\"main\" className=\"ms-sm-auto px-md-4\" variant={variant} bg={variant}>\r\n\t\t\t\t\t\t<div className=\"d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pt-3 pb-2 mb-3 border-bottom\">\r\n\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t<div className={`${darkMode ? \"dark\" : \"\"}`}>\r\n\t\t\t\t\t\t\t<Routes>\r\n\t\t\t\t\t\t\t\t<Route path=\"/\" element={<Landing />} />\r\n\t\t\t\t\t\t\t\t<Route path=\"/sign-in\" element={\r\n\t\t\t\t\t\t\t\t\t<LoginForm canEdit={true} isRegister={false} />\r\n\t\t\t\t\t\t\t\t} />\r\n\t\t\t\t\t\t\t\t<Route path=\"/register\" element={\r\n\t\t\t\t\t\t\t\t\t<LoginForm canEdit={true} isRegister={true} />\r\n\t\t\t\t\t\t\t\t} />\r\n\t\t\t\t\t\t\t\t<Route path=\"/supporter/:tekst\" element={<Support canEdit={canEdit} />} />\r\n\t\t\t\t\t\t\t\t<Route path=\"/questions\" element={<containers.categories canEdit={canEdit} />} />\r\n\t\t\t\t\t\t\t\t<Route path=\"/answers/:slug\" element={<AnswersPage />} />\r\n\t\t\t\t\t\t\t\t<Route path=\"/users/:slug\" element={<UsersPage canEdit={true} />} />\r\n\t\t\t\t\t\t\t\t<Route path=\"/about\" element={<About />} />\r\n\t\t\t\t\t\t\t\t<Route path=\"/landing\" element={<Landing />} />\r\n\t\t\t\t\t\t\t</Routes>\r\n\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t</Row>\r\n\t\t\t</Container>\r\n\t\t</Router>\r\n\t// )\r\n\t// : (\r\n\t// \tnull\r\n\t// );\r\n\r\n\treturn (\r\n\t\t<Container fluid className=\"App\">\r\n\t\t\t{app}\r\n\t\t</Container>\r\n\t);\r\n}\r\n\r\nconst mapStateToProps = (store: IAppState) => ({\r\n\tisAuthenticated: store.topState.top.isAuthenticated,\r\n\tauth: store.topState.top.auth,\r\n\tuuid: store.topState.top.uuid\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch<TopActions>) => {\r\n\treturn {\r\n\t\ttoggleNavbar: () => dispatch<any>(navbarToggle()),\r\n\t\tcheckAuthentication: async (login: ILogin) => await dispatch<any>(authenticate(login)),\r\n\t\tsignOut: () => dispatch<any>(unAuthenticate())\r\n\t}\r\n};\r\n\r\nexport default connect(\r\n\tmapStateToProps,\r\n\tmapDispatchToProps\r\n)(App);\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport * as ReactDOM from 'react-dom';\r\n\r\nimport { Provider } from 'react-redux';\r\n\r\nimport configureStore from './store/Store';\r\nimport { loadCategories } from './Categories/actions';\r\nimport { getAllAnswers } from './Answers/actions';\r\n\r\nimport './index.css';\r\nimport './normalize.scss'\r\nimport './App.css';\r\n\r\nimport { getAllUsers } from './Users/actions';\r\nimport { getAllTags } from './roleTags/actions';\r\nimport { loadTop } from './Top/actions';\r\nimport App from './App';\r\n\r\nimport { ThemeProvider } from './ThemeContext';\r\nimport { ITop } from './Top/types';\r\n\r\n// Uncomment to clean up the localStorage\r\n// localStorage.clear(); // !!!!!!!!!!!!\r\n\r\nconst store = configureStore();\r\nstore.dispatch(loadCategories());\r\nstore.dispatch(getAllAnswers());\r\nstore.dispatch(getAllUsers())\r\nstore.dispatch<any>(loadTop())\r\n\t.then((top: ITop)=> {\r\n\t\tconsole.log({top})\r\n\t})\r\n\t.catch((err: { getMessage: () => any; }) => {\r\n\t\tconsole.error(err.getMessage());\r\n\t});\r\nstore.dispatch(getAllTags());\r\n\r\nconst sessionId = Math.floor((Math.random() * 10000) + 1);\r\nsessionStorage.setItem('sessionId', sessionId.toString())\r\n\r\nconst state = store.getState();\r\n\r\nReactDOM.render(\r\n\t<React.StrictMode>\r\n\t\t<Provider store={store} >\r\n\t\t\t<ThemeProvider darkMode={state.topState.top.darkMode }>\r\n\t\t\t\t<App />\r\n\t\t\t</ThemeProvider>\r\n\t\t</Provider>\r\n\t</React.StrictMode>,\r\n\tdocument.getElementById('root')\r\n);\r\n"],"sourceRoot":""}