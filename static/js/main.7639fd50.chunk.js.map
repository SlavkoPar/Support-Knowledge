{"version":3,"sources":["Answers/actions.ts","Categories/actions.ts","Top/actions.ts","Categories/types.ts","Categories/categoryReducer.ts","Categories/categoriesReducer.ts","Answers/reducer.ts","user/actions.ts","roleTags/actions.ts","user/reducer.ts","roleTags/reducer.ts","Top/reducer.ts","store/Store.tsx","components/AutoSuggest.tsx","formik/theme.js","common/containers/UserName.tsx","common/components/OptionName.tsx","Categories/components/CategoryForm.tsx","Categories/containers/ContainerCategoryForm.tsx","components/AutoSuggestAnswer.tsx","common/useHover.tsx","Categories/components/QuestionAnswerRow.tsx","Categories/components/QuestionAnswers.tsx","common/Select.tsx","Categories/sourceOptions.ts","Categories/statusOptions.ts","Categories/components/QuestionForm.tsx","Categories/containers/ContainerQuestionForm.tsx","Categories/components/QuestionRow.tsx","Categories/components/CategoryRow.tsx","Categories/components/CategoryList.tsx","Categories/components/CategoriesPage.tsx","Categories/components/SuportPage.tsx","Categories/containers/CategoriesPage.tsx","components/Support.tsx","Answers/components/Form.tsx","Answers/components/ListRow.tsx","Answers/components/List.tsx","Answers/components/Page.tsx","Answers/containers/Page.tsx","user/components/UserForm.tsx","user/containers/UserForm.tsx","user/components/UserRow.tsx","user/components/RoleRow.tsx","user/components/UserPage.tsx","user/containers/UsersPage.tsx","Top/components/LoginForm.tsx","Top/containers/LoginForm.tsx","components/Landing.tsx","Navig.tsx","Header.tsx","App.tsx","index.tsx"],"names":["AnswerActionTypes","parseFromJson","data","map","a","parseDates","created","Date","SUPPORT_ANSWERS","QuestionActionTypes","addAnswer","dispatch","getState","type","ADD_ANSWER","createdBy","topState","top","auth","who","userId","err","console","error","storeAnswer","answer","formMode","STORE_ANSWER","Promise","resolve","answerState","answerId","g","questions","q","categoryId","answers","assigned","TopActionTypes","getQuestion","questionId","GET_QUESTION","addQuestion","text","canEdit","ADD_QUESTION","editQuestion","EDIT_QUESTION","removeQuestion","doSync","delay","REMOVE_QUESTION","syncWithOthers","assignQuestionAnswer","tekst","ASSIGN_QUESTION_ANSWER","assignedBy","setIsDetail","isDetail","SET_IS_DETAIL","entity","btnSync","document","getElementById","localStorage","setItem","JSON","stringify","sessionId","sessionStorage","getItem","click","storeQuestion","question","addCategoryUnknown","STORE_QUESTION","state","categoriesState","categories","find","c","newCategory","initialCategory","title","storeCategory","then","updateQuestion","UPDATE_QUESTION","categoryIdWas","questionCopy","reject","setTimeout","getCategory","GET_CATEGORY","addCategory","ADD_CATEGORY","editCategory","EDIT_CATEGORY","removeCategory","REMOVE_CATEGORY","category","STORE_CATEGORY","updateCategory","UPDATE_CATEGORY","addAndAssignNewAnswer","initialQuestion","words","source","status","initialCategoryState","aTypesToStore","Object","keys","reduceQuestions","categoryQuestions","action","categoryState","get","newState","myReducer","includes","set","questionIdMax","split","CANCEL_QUESTION","filter","REMOVE_QUESTION_ANSWER","qa","SUPPORT_CATEGORIES","isExpanded","initialCategoriesState","undefined","Map","categoryOptions","loading","categoryIdEditing","storeToStorage","TOGGLE_CATEGORY","getQuestions","LOAD_CATEGORIES","value","label","unshift","Math","max","categoryIdCopy","categoryCopy","CANCEL_CATEGORY","reduce","acc","push","initialAnswer","options","initialAnswerState","GET_ALL_ANSWERS","GET_ANSWER","length","EDIT_ANSWER","CANCEL_ANSWER","REMOVE_ANSWER","SUPPORT_TOP","UserActionTypes","parseObj","json","visited","authenticated","authenticate","loginUser","findUser","userName","user","pwd","AUTHENTICATE","AUTHENTICATE_WRONG_PWD","AUTHENTICATE_WRONG_USERNAME","parseRole","users","u","TagActionTypes","getUser","GET_USER","name","usersState","roles","role","addUser","roleId","ADD_USER","editUser","EDIT_USER","removeUser","REMOVE_USER","CREATE_OPTIONS","storeUser","STORE_USER","SUPPORT_USERS","initialUser","department","initialUserRole","color","initialUsersState","allUsers","roleOptions","userOptions","roleIdEditing","GET_ALL_USERS","log","concat","userIdMax","userRole","CANCEL_USER","ADD_ROLE","TOGGLE_ROLE","EDIT_ROLE","group","STORE_ROLE","REMOVE_ROLE","storageTagsDemo","storageTags","initialTagState","tags","initialTopState","navbarOpen","isAuthenticated","uuid","LOAD_TOP","REGISTER","REGISTER_USERNAME_EXISTS","authError","NAVBAR_TOGGLE","UNAUTHENTICATE","rootReducer","combineReducers","tagState","GET_ALL_TAGS","tag","GET_TAG","inputAutosuggest","createRef","QuestionAutosuggestMulti","Autosuggest","AutoSuggest","props","onSuggestionsClearRequested","setState","suggestions","anyWord","valueWordRegex","questionWords","valWordRegex","questionWord","test","getSuggestions","highlighted","window","focus","current","this","multiSection","onSuggestionsFetchRequested","bind","onSuggestionSelected","getSuggestionValue","renderSuggestion","renderSectionTitle","getSectionSuggestions","onSuggestionHighlighted","highlightFirstSuggestion","renderInputComponent","renderSuggestionsContainer","inputProps","placeholder","onChange","e","changeEvent","event","suggestion","onSelectQuestion","params","matches","AutosuggestHighlightMatch","query","parts","AutosuggestHighlightParse","part","index","className","highlight","section","ref","restInputProps","containerProps","children","newValue","method","escapedValue","trim","replace","word","RegExp","React","COLORS","require","palx","connect","store","ownProps","id","option","Form","formik","useFormik","enableReinitialize","initialValues","validationSchema","Yup","required","onSubmit","values","saveForm","isEdit","handleSubmit","htmlFor","handleChange","onBlur","submitForm","style","width","rows","touched","errors","UserName","onClick","cancel","toLocaleDateString","onSelectCategory","add","edit","remove","height","background","padding","borderRadius","boxShadow","maxWidth","margin","AutoSuggestAnswer","setAnswerText","answersUnassigned","useHover","useState","isHovered","hoverProps","setValue","divRef","useRef","handleMouseOver","handleMouseOut","useEffect","node","addEventListener","removeEventListener","QuestionAnswerRow","hoverRef","questionAnswer","removeQuestionAnswer","selectQuestionAnswer","copyQuestionAnswer","alert","navigator","clipboard","writeText","stopPropagation","icon","faCopy","preventDefault","faWindowClose","QuestionAnswers","questionAnswers","setTekst","toLocaleTimeString","val","divDetailView","classList","zIndex","goDetail","faPlus","Select","disabled","selectedIndex","currentTarget","selectedOption","sourceOptions","statusOptions","setFieldValue","joinQuestionAnswers","sort","b","QuestionRow","faEdit","CategoryRow","toggleCategory","marginLeft","faCaretDown","faCaretRight","size","CategoryList","inputEl","select","paddingBottom","textAlign","target","defaultValue","Page","useParams","open","Container","fluid","Row","border","Col","md","lg","backgroundColor","marginTop","ContainerQuestionForm","ContainerCategoryForm","SupportPage","display","mapStateToProps","tagOptions","f","tagId","mapDispatchToProps","CategoriesPage","supporter","div","querySelector","setAttribute","Support","marginBlockStart","marginBlockEnd","fontSize","AnswerForm","ListRow","usedAnswers","List","slug","getUsedAnswers","editAnswer","removeAnswer","onSelectUser","userRoleId","UserRow","RoleRow","toggleRole","editRole","removeRole","UserPage","userRoles","addRole","storeRole","navigate","useNavigate","min","isRegister","handleBlur","maxLength","login","CANCEL","alignItems","justifyContent","Landing","signOut","href","faSurprise","faQuestion","faAnchor","faUserFriends","setOpen","signIn","register","Navbar","as","bg","expand","Button","variant","faAngleDoubleLeft","faAngleDoubleRight","Brand","Toggle","Collapse","FormControl","Nav","maxHeight","navbarScroll","Link","faUser","faCog","NavDropdown","Item","Divider","toggleNavbar","checkAuthentication","mainMd","setMainMd","mainLg","setMainLg","app","in","dimension","onEnter","onEntering","onEntered","onExit","onExiting","onExited","path","element","UsersPage","clear","createStore","applyMiddleware","thunk","loadedFromStorage","sCategories","categoriesJson","parse","forEach","sQuestions","sAnswers","parsed","sUserRoles","s","sTags","floor","random","toString","evt","detail","i","treatFirstUserAsTheOwner","res","ReactDOM","StrictMode"],"mappings":"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","file":"static/js/main.7639fd50.chunk.js","sourcesContent":["// Import redux types\r\nimport { ActionCreator, Dispatch } from 'redux';\r\nimport { ThunkAction } from 'redux-thunk';\r\n// Import Answer Typing\r\nimport { IAnswer, IAnswerState, IAnswerJson } from './types';\r\n\r\nimport { IAppState } from '../store/Store';\r\n\r\nimport data from \"./data.json\"\r\nconst parseFromJson = (): IAnswer[] => {\r\n\treturn data.map(a => parseDates(a))\r\n}\r\n\r\nconst parseFromLocalStorage = (arr: IAnswerJson[]) : IAnswer[] =>  {\r\n\treturn arr.map(a => parseDates(a));\r\n}\r\n\r\nconst parseDates = (a: IAnswerJson): IAnswer => ({\r\n\t...a, \r\n\tcreated: new Date(a.created)\r\n})\r\n\r\n// localStorage\r\nexport const SUPPORT_ANSWERS = 'SUPPORT_ANSWERS';\r\n \r\n// Create Action Constants\r\nexport enum AnswerActionTypes {\r\n  GET_ALL_ANSWERS = 'GET_ALL_ANSWERS',\r\n  GET_ANSWER = 'GET_ANSWER',\r\n  ADD_ANSWER = 'ADD_ANSWER',\r\n  EDIT_ANSWER = 'EDIT_ANSWER',\r\n  REMOVE_ANSWER = 'REMOVE_ANSWER',\r\n  STORE_ANSWER = 'STORE_ANSWER',\r\n  CANCEL_ANSWER = 'CANCEL_ANSWER'\r\n}\r\n\r\n// Interface for Get All Action Type\r\nexport interface IGetAll {\r\n\ttype: AnswerActionTypes.GET_ALL_ANSWERS;\r\n\tanswers: IAnswer[];\r\n }\r\n \r\nexport interface IGet {\r\n\ttype: AnswerActionTypes.GET_ANSWER;\r\n\tanswerId: number;\r\n}\r\n\r\nexport interface IAdd {\r\n\ttype: AnswerActionTypes.ADD_ANSWER;\r\n\tcreatedBy: number\r\n}\r\n\r\nexport interface IEdit {\r\n\ttype: AnswerActionTypes.EDIT_ANSWER;\r\n\tanswerId: number;\r\n}\r\n\r\nexport interface IRemove {\r\n\ttype: AnswerActionTypes.REMOVE_ANSWER;\r\n\tanswerId: number;\r\n}\r\n\r\nexport interface IStore {\r\n\ttype: AnswerActionTypes.STORE_ANSWER;\r\n\tanswer: IAnswer;\r\n\tassignToQuestion?: boolean\r\n}\r\n\r\nexport interface ICancel {\r\n\ttype: AnswerActionTypes.CANCEL_ANSWER;\r\n}\r\n\r\n\r\n// Combine the action types with a union (we assume there are more)\r\nexport type AnswerActions = IGetAll | IGet | IAdd | IEdit | IRemove | IStore | ICancel;\r\n\r\nconst isWebStorageSupported = () => 'localStorage' in window\r\n\r\n// Get All Action <Promise<Return Type>, State Interface, Type of Param, Type of Action>\r\nexport const getAllAnswers: ActionCreator<\r\n\tThunkAction<Promise<any>, IAnswerState, null, IGetAll>\r\n> = () => {\r\n\treturn async (dispatch: Dispatch) => {\r\n\t\ttry {\r\n\t\t\t// const response = await axios.get('https://swapi.co/api/people/');\r\n\t\t\tlet answers: IAnswer[] = [];\r\n\t\t\tif (isWebStorageSupported()) {\r\n\t\t\t\tconst sAnswers = localStorage.getItem(SUPPORT_ANSWERS);\r\n\t\t\t\tconsole.log('SAnswers',  sAnswers)\r\n\t\t\t\tif (sAnswers !== null) {\r\n\t\t\t\t\tconst parsed = JSON.parse(sAnswers);\r\n\t\t\t\t\tanswers = parseFromLocalStorage(parsed);\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tanswers = parseFromJson();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tanswers = parseFromJson();\r\n\t\t\t}\r\n\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: AnswerActionTypes.GET_ALL_ANSWERS,\r\n\t\t\t\tanswers\r\n\t\t\t});\r\n\t\t} catch (err) {\r\n\t\t\tconsole.error(err);\r\n\t\t}\r\n\t};\r\n};\r\n\r\n\r\nexport const addAnswer: ActionCreator<any> = () => {\r\n  return (dispatch: Dispatch, getState: () => IAppState) => {\r\n    try {\r\n      dispatch({\r\n        type: AnswerActionTypes.ADD_ANSWER,\r\n\t\tcreatedBy: getState().topState.top!.auth!.who!.userId,\t\r\n      });\r\n    } catch (err) {\r\n      console.error(err);\r\n    }\r\n  };\r\n};\r\n\r\nexport const getAnswer: ActionCreator<\r\n\tThunkAction<Promise<any>, IAnswerState, null, IGet>\r\n> = (answerId: number) => {\r\n\treturn async (dispatch: Dispatch) => {\r\n\t\ttry {\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: AnswerActionTypes.GET_ANSWER,\r\n\t\t\t\tanswerId\r\n\t\t\t});\r\n\t\t} catch (err) {\r\n\t\t\tconsole.error(err);\r\n\t\t}\r\n\t};\r\n};\r\n\r\nexport const editAnswer: ActionCreator<\r\n\tThunkAction<Promise<any>, IAnswerState, null, IEdit>\r\n> = (answerId: number) => {\r\n\treturn async (dispatch: Dispatch) => {\r\n\t\ttry {\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: AnswerActionTypes.EDIT_ANSWER,\r\n\t\t\t\tanswerId\r\n\t\t\t});\r\n\t\t} catch (err) {\r\n\t\t\tconsole.error(err);\r\n\t\t}\r\n\t};\r\n};\r\n\r\nexport const removeAnswer: ActionCreator<\r\n\tThunkAction<Promise<any>, IAnswerState, null, IGetAll>\r\n> = (answerId: number) => {\r\n\treturn async (dispatch: Dispatch) => {\r\n\t\ttry {\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: AnswerActionTypes.REMOVE_ANSWER,\r\n\t\t\t\tanswerId\r\n\t\t\t});\r\n\t\t} catch (err) {\r\n\t\t\tconsole.error(err);\r\n\t\t}\r\n\t};\r\n};\r\n\r\n\r\nexport const storeAnswer: ActionCreator<\r\n\tThunkAction<Promise<any>, IAppState, null, IStore>\r\n> = (answer: IAnswer, formMode: string) => {\r\n\treturn async (dispatch: Dispatch, getState: () => IAppState ): Promise<any> => {\r\n\t\ttry {\r\n\t\t\tif (formMode === 'add') {\r\n\t\t\t\tdispatch({\r\n\t\t\t\t\ttype: AnswerActionTypes.STORE_ANSWER,\r\n\t\t\t\t\tanswer\r\n\t\t\t\t});\r\n\t\t\t\treturn Promise.resolve(getState().answerState.answer!.answerId)\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tdispatch({\r\n\t\t\t\t\ttype: AnswerActionTypes.STORE_ANSWER,\r\n\t\t\t\t\tanswer\r\n\t\t\t\t});\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t}\r\n\t\tcatch (err) {\r\n\t\t\tconsole.error(err);\r\n\t\t}\r\n\t};\r\n};\r\n\r\nexport const cancelAnswer: ActionCreator<any> = () => {\r\n\treturn (dispatch: Dispatch) => {\r\n\t  try {\r\n\t\t dispatch({\r\n\t\t\ttype: AnswerActionTypes.CANCEL_ANSWER\r\n\t\t });\r\n\t  } catch (err) {\r\n\t\t console.error(err);\r\n\t  }\r\n\t};\r\n };\r\n \r\n\r\n// const addAnswerToLocalStorage = (answer: IAnswer): Promise<any> => {\r\n// \treturn new Promise((resolve, reject) => {\r\n// \t\tsetTimeout(() => {\r\n// \t\t\tresolve({\r\n// \t\t\t\t'status': 200,\r\n// \t\t\t\t'content-type': 'application/json',\r\n// \t\t\t\t'data' : {\r\n// \t\t\t\t'results': answer\r\n// \t\t\t\t}\r\n// \t\t\t})\r\n// \t\t}, 50)\r\n// \t})\r\n// }\r\n\r\n","// Import redux types\r\nimport { ActionCreator, Dispatch } from 'redux';\r\nimport { ThunkAction } from 'redux-thunk';\r\n// import axios from 'axios';\r\n\r\n// Import Question Typing\r\nimport { IQuestion, ICategory, ICategoryJson, ICategoriesState, IQuestionJson, ICategoryState } from './types';\r\n\r\nimport { addAnswer, AnswerActionTypes, storeAnswer } from '../Answers/actions'\r\nimport { IAnswer, IAnswerState } from '../Answers/types';\r\n\r\n///////////////////////////////////////////////////\r\n// localStorage\r\nimport { initialCategory, SUPPORT_CATEGORIES } from './categoriesReducer';\r\n\r\nimport data from \"./data.json\"\r\nimport { IAppState } from '../store/Store';\r\nimport { reduceQuestions } from './categoryReducer';\r\n\r\nconst parseFromJson = (): ICategory[] => {\r\n\treturn data.map(g => parseDates(g));\r\n}\r\n\r\nconst parseQuestionsFromLocalStorage = (questions: IQuestionJson[]): IQuestion[] => {\r\n\treturn questions.map(q => ({\r\n\t\t...q,\r\n\t\tcategoryId: q.categoryId!,\r\n\t\tanswers: q.answers.map(a => ({ ...a, assigned: new Date(a.assigned) })),\r\n\t\tcreated: new Date(q.created)\r\n\t})\r\n\t)\r\n}\r\n\r\nconst parseFromLocalStorage = (arr: ICategoryJson[]): ICategory[] => {\r\n\treturn arr.map(g => parseDates(g));\r\n}\r\n\r\nconst parseDates = (g: ICategoryJson): ICategory => {\r\n\treturn {\r\n\t\t...g,\r\n\t\tquestions: g.questions.map(q => ({\r\n\t\t\t...q,\r\n\t\t\tcategoryId: g.categoryId,\r\n\t\t\tanswers: q.answers.map(a => ({ ...a, assigned: new Date(a.assigned) })),\r\n\t\t\tcreated: new Date(q.created)\r\n\t\t})),\r\n\t\tcreated: new Date(g.created)\r\n\t}\r\n}\r\n\r\n// Create Action Constants\r\nexport enum QuestionActionTypes {\r\n\tLOAD_CATEGORIES = 'LOAD_CATEGORIES',\r\n\tGET_QUESTION = 'GET_QUESTION',\r\n\tADD_QUESTION = 'ADD_QUESTION',\r\n\tEDIT_QUESTION = 'EDIT_QUESTION',\r\n\tREMOVE_QUESTION = 'REMOVE_QUESTION',\r\n\tSTORE_QUESTION = 'STORE_QUESTION',\r\n\tUPDATE_QUESTION = 'UPDATE_QUESTION',\r\n\tCANCEL_QUESTION = 'CANCEL_QUESTION',\r\n\t// groups\r\n\tGET_CATEGORY = 'GET_CATEGORY',\r\n\tADD_CATEGORY = 'ADD_CATEGORY',\r\n\tTOGGLE_CATEGORY = 'EXPAND_CATEGORY',\r\n\tEDIT_CATEGORY = 'EDIT_CATEGORY',\r\n\tREMOVE_CATEGORY = 'REMOVE_CATEGORY',\r\n\tSTORE_CATEGORY = 'STORE_CATEGORY',\r\n\tUPDATE_CATEGORY = 'UPDATE_CATEGORY',\r\n\tCANCEL_CATEGORY = 'CANCEL_CATEGORY',\r\n\t// question answers\r\n\tREMOVE_QUESTION_ANSWER = 'REMOVE_QUESTION_ANSWER',\r\n\tASSIGN_QUESTION_ANSWER = 'ASSIGN_QUESTION_ANSWER',\r\n\t// localSTorage\r\n\tSET_IS_DETAIL = 'SET_IS_DETAIL',\r\n\tSET_LAST_ANSWER_ID = 'SET_LAST_ANSWER_ID'\r\n}\r\n\r\n\r\n// Interface for Get All Action Type\r\nexport interface ILoad {\r\n\ttype: QuestionActionTypes.LOAD_CATEGORIES;\r\n\tcategories: ICategory[];\r\n\tcategoryQuestions: Map<number, ICategoryState>\r\n}\r\n\r\n\r\nexport interface IGet {\r\n\ttype: QuestionActionTypes.GET_QUESTION;\r\n\tcategoryId: number;\r\n\tquestionId: number;\r\n}\r\n\r\nexport interface IAdd {\r\n\ttype: QuestionActionTypes.ADD_QUESTION;\r\n\tcreatedBy: number;\r\n\tcategoryId: number;\r\n\ttext: string;\r\n}\r\n\r\nexport interface IEdit {\r\n\ttype: QuestionActionTypes.EDIT_QUESTION;\r\n\tcategoryId: number,\r\n\tquestionId: number\r\n}\r\n\r\nexport interface IRemove {\r\n\ttype: QuestionActionTypes.REMOVE_QUESTION;\r\n\tcategoryId: number,\r\n\tquestionId: number\r\n}\r\n\r\nexport interface IStore {\r\n\ttype: QuestionActionTypes.STORE_QUESTION;\r\n\tquestion: IQuestion;\r\n}\r\n\r\nexport interface IUpdate {\r\n\ttype: QuestionActionTypes.UPDATE_QUESTION;\r\n\tquestion: IQuestion;\r\n}\r\n\r\nexport interface ICancel {\r\n\ttype: QuestionActionTypes.CANCEL_QUESTION;\r\n}\r\n\r\n// group\r\n\r\nexport interface IGetCategory {\r\n\ttype: QuestionActionTypes.GET_CATEGORY;\r\n\tcategoryId: number\r\n}\r\n\r\nexport interface IAddCategory {\r\n\ttype: QuestionActionTypes.ADD_CATEGORY;\r\n\t//categoryId: number\r\n}\r\n\r\nexport interface ICancelCategory {\r\n\ttype: QuestionActionTypes.CANCEL_CATEGORY;\r\n}\r\n\r\n\r\nexport interface IToggleCategory {\r\n\ttype: QuestionActionTypes.TOGGLE_CATEGORY;\r\n\tcategoryId: number\r\n}\r\n\r\nexport interface IEditCategory {\r\n\ttype: QuestionActionTypes.EDIT_CATEGORY;\r\n\tcategoryId: number\r\n}\r\n\r\nexport interface IRemoveCategory {\r\n\ttype: QuestionActionTypes.REMOVE_CATEGORY;\r\n\tcategoryId: number\r\n}\r\n\r\nexport interface IStoreCategory {\r\n\ttype: QuestionActionTypes.STORE_CATEGORY;\r\n\tcategory: ICategory;\r\n}\r\n\r\nexport interface IUpdateCategory {\r\n\ttype: QuestionActionTypes.UPDATE_CATEGORY;\r\n\tcategory: ICategory;\r\n}\r\n\r\nexport interface ICancelCategory {\r\n\ttype: QuestionActionTypes.CANCEL_CATEGORY;\r\n}\r\n\r\n\r\n// question answers\r\nexport interface IRemoveQuestionAnswer {\r\n\ttype: QuestionActionTypes.REMOVE_QUESTION_ANSWER;\r\n\tcategoryId: number,\r\n\tquestionId: number,\r\n\tanswerId: number\r\n}\r\n\r\nexport interface IAssignQuestionAnswer {\r\n\ttype: QuestionActionTypes.ASSIGN_QUESTION_ANSWER;\r\n\tcategoryId: number,\r\n\tquestionId: number,\r\n\tanswerId: number,\r\n\tassignedBy: number,\r\n\ttekst?: string\r\n}\r\n\r\nexport interface ISetIsDetail {\r\n\ttype: QuestionActionTypes.SET_IS_DETAIL;\r\n\tisDetail: boolean\r\n}\r\n\r\nexport interface IAddAndAssignNewAnswer {\r\n\ttype: AnswerActionTypes.STORE_ANSWER;\r\n\tcategoryId: number,\r\n\tquestionId: number,\r\n\tanswer: IAnswer;\r\n}\r\n\r\n\r\n// Combine the action types with a union (we assume there are more)\r\nexport type QuestionActions = ILoad | IGet | IAdd | IEdit | IRemove | IStore | IUpdate | ICancel |\r\n\tIGetCategory | IAddCategory | IToggleCategory | IEditCategory | IRemoveCategory | IStoreCategory | IUpdateCategory | ICancelCategory |\r\n\tIRemoveQuestionAnswer | IAssignQuestionAnswer |\r\n\tISetIsDetail |\r\n\tIAddAndAssignNewAnswer;\r\n\r\nconst isWebStorageSupported = () => 'localStorage' in window\r\n\r\n\r\n// Get All Action <Promise<Return Type>, State Interface, Type of Param, Type of Action>\r\nexport const loadCategories: ActionCreator<\r\n\tThunkAction<Promise<any>, ICategoriesState, null, ILoad>\r\n> = () => {\r\n\treturn async (dispatch: Dispatch) => {\r\n\t\ttry {\r\n\t\t\tlet categories: ICategory[] = [];\r\n\t\t\tlet loadedFromStorage = false;\r\n\t\t\tif (isWebStorageSupported()) {\r\n\t\t\t\tconst sCategories = localStorage.getItem(SUPPORT_CATEGORIES);\r\n\t\t\t\tif (sCategories !== null) {\r\n\t\t\t\t\t// load from storage\r\n\t\t\t\t\tconst categoriesJson = JSON.parse(sCategories);\r\n\t\t\t\t\tcategories = parseFromLocalStorage(categoriesJson);\r\n\t\t\t\t\tcategories.forEach(category => {\r\n\t\t\t\t\t\tconst sQuestions = localStorage.getItem(`CATEGORY_${category.categoryId}`);\r\n\t\t\t\t\t\tif (sQuestions) {\r\n\t\t\t\t\t\t\tconst json = JSON.parse(sQuestions);\r\n\t\t\t\t\t\t\tcategory.questions = parseQuestionsFromLocalStorage(json);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t})\r\n\t\t\t\t\tloadedFromStorage = true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (!loadedFromStorage) {\r\n\t\t\t\t// load from data\r\n\t\t\t\tcategories = parseFromJson();\r\n\t\t\t\tfor (let category of categories) {\r\n\t\t\t\t\tcategory.questions.forEach(q => {\r\n\t\t\t\t\t\tq.categoryId = category.categoryId;\r\n\t\t\t\t\t\tq.words = q.text.split(' ');\r\n\t\t\t\t\t})\r\n\t\t\t\t\tlocalStorage.setItem(`CATEGORY_${category.categoryId}`, JSON.stringify(category.questions));\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tconst categoryQuestions = new Map<number, ICategoryState>();\r\n\t\t\tfor (let category of categories) {\r\n\t\t\t\tconst categoryState: ICategoryState = {\r\n\t\t\t\t\tquestions: [...category.questions]\r\n\t\t\t\t}\r\n\t\t\t\tcategoryQuestions.set(category.categoryId, categoryState);\r\n\t\t\t\tcategory.questions = [];\r\n\t\t\t}\r\n\r\n\t\t\tif (!loadedFromStorage) {\r\n\t\t\t\tlocalStorage.setItem(SUPPORT_CATEGORIES, JSON.stringify(categories));\r\n\t\t\t}\r\n\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: QuestionActionTypes.LOAD_CATEGORIES,\r\n\t\t\t\tcategories,\r\n\t\t\t\tcategoryQuestions\r\n\t\t\t});\r\n\t\t}\r\n\t\tcatch (err) {\r\n\t\t\tconsole.error(err);\r\n\t\t}\r\n\t};\r\n};\r\n\r\n\r\n// Get Question <Promise<Return Type>, State Interface, Type of Param, Type of Action> \r\nexport const getQuestion: ActionCreator<\r\n\tThunkAction<Promise<any>, ICategoriesState, string, IGet>\r\n> = (categoryId: number, questionId: number) => {\r\n\treturn async (dispatch: Dispatch) => {\r\n\t\ttry {\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: QuestionActionTypes.GET_QUESTION,\r\n\t\t\t\tcategoryId,\r\n\t\t\t\tquestionId\r\n\t\t\t});\r\n\t\t} catch (err) {\r\n\t\t\tconsole.error(err);\r\n\t\t}\r\n\t};\r\n};\r\n\r\ninterface IMsg {\r\n\tttype: string,\r\n\tdata: object\r\n}\r\n\r\n\r\n\r\nexport const addQuestion: ActionCreator<\r\n\tThunkAction<Promise<any>, IAppState, null, IAdd>\r\n> = (categoryId: number, text: string, canEdit?: boolean) => {\r\n\treturn async (dispatch: Dispatch, getState: () => IAppState) => {\r\n\t\ttry {\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: QuestionActionTypes.ADD_QUESTION,\r\n\t\t\t\tcreatedBy: getState().topState.top!.auth!.who!.userId,\r\n\t\t\t\tcategoryId,\r\n\t\t\t\ttext\r\n\t\t\t});\r\n\t\t}\r\n\t\tcatch (err) {\r\n\t\t\tconsole.error(err);\r\n\t\t}\r\n\t};\r\n};\r\n\r\nexport const editQuestion: ActionCreator<\r\n\tThunkAction<Promise<any>, ICategoriesState, null, IEdit>\r\n> = (categoryId: number, questionId: number) => {\r\n\treturn async (dispatch: Dispatch) => {\r\n\t\ttry {\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: QuestionActionTypes.EDIT_QUESTION,\r\n\t\t\t\tcategoryId,\r\n\t\t\t\tquestionId\r\n\t\t\t});\r\n\t\t} catch (err) {\r\n\t\t\tconsole.error(err);\r\n\t\t}\r\n\t};\r\n};\r\n\r\nexport const removeQuestion: ActionCreator<\r\n\tThunkAction<Promise<any>, ICategoriesState, null, IRemove>\r\n> = (doSync: boolean, categoryId: number, questionId: number) => {\r\n\treturn async (dispatch: Dispatch) => {\r\n\t\ttry {\r\n\t\t\tawait delay()\r\n\t\t\t// warning: store answer, after upodate, to local storage\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: QuestionActionTypes.REMOVE_QUESTION,\r\n\t\t\t\tcategoryId,\r\n\t\t\t\tquestionId\r\n\t\t\t});\r\n\t\t\tif (doSync)\r\n\t\t\t\tsyncWithOthers(QuestionActionTypes.REMOVE_QUESTION, {categoryId, questionId});\r\n\t\t} catch (err) {\r\n\t\t\tconsole.error(err);\r\n\t\t}\r\n\t};\r\n};\r\n\r\nexport const selectQuestionAnswer: ActionCreator<\r\n\tThunkAction<Promise<any>, ICategoriesState, null, IRemoveQuestionAnswer>\r\n> = (categoryId: number, questionId: number, answerId: number) => {\r\n\treturn async (dispatch: Dispatch) => {\r\n\t\ttry {\r\n\t\t\tawait delay()\r\n\t\t\t// warning: store answer, after upodate, to local storage\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: QuestionActionTypes.REMOVE_QUESTION_ANSWER,\r\n\t\t\t\tcategoryId: categoryId,\r\n\t\t\t\tquestionId: questionId,\r\n\t\t\t\tanswerId: answerId,\r\n\t\t\t});\r\n\t\t\t//dispatch<any>(getQuestion(questionId))\t// refresh state of question\r\n\t\t}\r\n\t\tcatch (err) {\r\n\t\t\tconsole.error(err);\r\n\t\t}\r\n\t};\r\n};\r\n\r\nexport const copyQuestionAnswer: ActionCreator<\r\n\tThunkAction<Promise<any>, ICategoriesState, null, IRemoveQuestionAnswer>\r\n> = (categoryId: number, questionId: number, answerId: number) => {\r\n\treturn async (dispatch: Dispatch) => {\r\n\t\ttry {\r\n\t\t\tawait delay()\r\n\t\t\t// warning: store answer, after upodate, to local storage\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: QuestionActionTypes.REMOVE_QUESTION_ANSWER,\r\n\t\t\t\tcategoryId: categoryId,\r\n\t\t\t\tquestionId: questionId,\r\n\t\t\t\tanswerId: answerId,\r\n\t\t\t});\r\n\t\t\t//dispatch<any>(getQuestion(questionId))\t// refresh state of question\r\n\t\t}\r\n\t\tcatch (err) {\r\n\t\t\tconsole.error(err);\r\n\t\t}\r\n\t};\r\n};\r\n\r\nexport const removeQuestionAnswer: ActionCreator<\r\n\tThunkAction<Promise<any>, ICategoriesState, null, IRemoveQuestionAnswer>\r\n> = (categoryId: number, questionId: number, answerId: number) => {\r\n\treturn async (dispatch: Dispatch) => {\r\n\t\ttry {\r\n\t\t\tawait delay()\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: QuestionActionTypes.REMOVE_QUESTION_ANSWER,\r\n\t\t\t\tcategoryId: categoryId,\r\n\t\t\t\tquestionId: questionId,\r\n\t\t\t\tanswerId: answerId,\r\n\t\t\t});\r\n\t\t\t// dispatch<any>(getQuestion(questionId))\t// refresh state of question\r\n\t\t}\r\n\t\tcatch (err) {\r\n\t\t\tconsole.error(err);\r\n\t\t}\r\n\t};\r\n};\r\n\r\n\r\nexport const assignQuestionAnswer: ActionCreator<\r\n\tThunkAction<Promise<any>, IAppState, null, IRemoveQuestionAnswer>\r\n> = (categoryId: number, questionId: number, answerId: number, tekst?: string) => {\r\n\r\n\treturn async (dispatch: Dispatch, getState: () => IAppState) => {\r\n\t\ttry {\r\n\t\t\tawait delay();\r\n\t\t\t// warning: store answer, after upodate, to local storage\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: QuestionActionTypes.ASSIGN_QUESTION_ANSWER,\r\n\t\t\t\tcategoryId,\r\n\t\t\t\tquestionId,\r\n\t\t\t\tanswerId,\r\n\t\t\t\tassignedBy: getState().topState.top!.auth!.who!.userId,\r\n\t\t\t});\r\n\t\t\t//dispatch<any>(getQuestion(questionId))\t// refresh state of question\r\n\t\t}\r\n\t\tcatch (err) {\r\n\t\t\tconsole.error(err);\r\n\t\t}\r\n\t};\r\n};\r\n\r\nexport const setIsDetail: ActionCreator<\r\n\tThunkAction<Promise<any>, ICategoriesState, null, ISetIsDetail>\r\n> = (isDetail: boolean) => {\r\n\treturn async (dispatch: Dispatch) => {\r\n\t\ttry {\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: QuestionActionTypes.SET_IS_DETAIL,\r\n\t\t\t\tisDetail\r\n\t\t\t});\r\n\t\t}\r\n\t\tcatch (err) {\r\n\t\t\tconsole.error(err);\r\n\t\t}\r\n\t};\r\n};\r\n\r\nconst syncWithOthers = (type: string, entity: any) => {\r\n\tconst btnSync = document.getElementById('btnSync');\r\n\tlocalStorage.setItem('syncAction', JSON.stringify({\r\n\t\t\ttype,\r\n\t\t\tentity,\r\n\t\t\tsessionId: sessionStorage.getItem('sessionId')\r\n\t\t})\r\n\t);\r\n\tbtnSync!.click();\r\n};\r\n\r\nexport const storeQuestion: ActionCreator<\r\n\tThunkAction<Promise<any>, IAppState, null, IStore>\r\n> = (doSync: boolean, question: IQuestion) => {\r\n\treturn async (dispatch: Dispatch, getState: () => IAppState) => {\r\n\t\tconst { categoryId } = question;\r\n\t\ttry {\r\n\t\t\t//await delay();\r\n\t\t\tif (categoryId === 0) {\r\n\t\t\t\tconst res = await addCategoryUnknown(getState(), dispatch);\r\n\t\t\t\tdispatch({\r\n\t\t\t\t\ttype: QuestionActionTypes.STORE_QUESTION,\r\n\t\t\t\t\tquestion\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tdispatch({\r\n\t\t\t\t\ttype: QuestionActionTypes.STORE_QUESTION,\r\n\t\t\t\t\tquestion\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\tif (doSync)\r\n\t\t\t\tsyncWithOthers(QuestionActionTypes.STORE_QUESTION, question);\r\n\t\t}\r\n\t\tcatch (err) {\r\n\t\t\tconsole.error(err);\r\n\t\t}\r\n\t};\r\n};\r\n\r\nconst addCategoryUnknown = async (state: IAppState, dispatch: Dispatch) => {\r\n\tif (state.categoriesState.categories.find(c => c.categoryId === 0))\r\n\t\treturn Promise.resolve(-1);\r\n\tconst newCategory = {\r\n\t\t...initialCategory,\r\n\t\tcategoryId: 0,\r\n\t\ttitle: 'Unknown',\r\n\t\tquestions: []\r\n\t}\r\n\treturn dispatch<any>(storeCategory(newCategory))\r\n\t\t.then((categoryId: number) => {\r\n\t\t\treturn categoryId;\r\n\t\t});\r\n}\r\n\r\nexport const updateQuestion: ActionCreator<\r\n\tThunkAction<Promise<any>, IAppState, null, IUpdate>\r\n> = (doSync: boolean, question: IQuestion) => {\r\n\treturn async (dispatch: Dispatch, getState: () => IAppState) => {\r\n\t\ttry {\r\n\t\t\tconst { categoryId } = question;\r\n\t\t\tawait delay();\r\n\t\t\tif (categoryId === 0) {\r\n\t\t\t\tconst res = await addCategoryUnknown(getState(), dispatch);\r\n\t\t\t\tdispatch({\r\n\t\t\t\t\ttype: QuestionActionTypes.UPDATE_QUESTION,\r\n\t\t\t\t\tquestion\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tdispatch({\r\n\t\t\t\t\ttype: QuestionActionTypes.UPDATE_QUESTION,\r\n\t\t\t\t\tquestion\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\tif (doSync) {\r\n\t\t\t\tquestion.categoryIdWas = getState().categoriesState.questionCopy!.categoryId;\r\n\t\t\t\tsyncWithOthers(QuestionActionTypes.UPDATE_QUESTION, question);\r\n\t\t\t}\r\n\t\t}\r\n\t\tcatch (err) {\r\n\t\t\tconsole.error(err);\r\n\t\t}\r\n\t};\r\n};\r\n\r\n\r\nconst delay = (): Promise<any> => {\r\n\treturn new Promise((resolve, reject) => {\r\n\t\tsetTimeout(() => {\r\n\t\t\tresolve({\r\n\t\t\t\t'status': 200,\r\n\t\t\t\t'content-type': 'application/json',\r\n\t\t\t\t'data': {\r\n\t\t\t\t\t'results': 1\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t}, 50)\r\n\t})\r\n}\r\n\r\nexport const cancelQuestion: ActionCreator<any> = () => {\r\n\treturn (dispatch: Dispatch) => {\r\n\t\ttry {\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: QuestionActionTypes.CANCEL_QUESTION\r\n\t\t\t});\r\n\t\t} catch (err) {\r\n\t\t\tconsole.error(err);\r\n\t\t}\r\n\t};\r\n};\r\n\r\nexport const getCategory: ActionCreator<\r\n\tThunkAction<Promise<any>, ICategoriesState, string, IGet>\r\n> = (categoryId: number) => {\r\n\treturn async (dispatch: Dispatch) => {\r\n\t\ttry {\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: QuestionActionTypes.GET_CATEGORY,\r\n\t\t\t\tcategoryId\r\n\t\t\t});\r\n\t\t} catch (err) {\r\n\t\t\tconsole.error(err);\r\n\t\t}\r\n\t};\r\n};\r\n\r\n\r\nexport const addCategory: ActionCreator<\r\n\tThunkAction<Promise<any>, ICategoriesState, null, IAddCategory>\r\n> = () => {\r\n\treturn async (dispatch: Dispatch) => {\r\n\t\ttry {\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: QuestionActionTypes.ADD_CATEGORY\r\n\t\t\t});\r\n\t\t} catch (err) {\r\n\t\t\tconsole.error(err);\r\n\t\t}\r\n\t};\r\n};\r\n\r\nexport const toggleCategory: ActionCreator<\r\n\tThunkAction<Promise<any>, ICategoriesState, null, IEditCategory>\r\n> = (categoryId: number) => {\r\n\treturn async (dispatch: Dispatch) => {\r\n\t\ttry {\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: QuestionActionTypes.TOGGLE_CATEGORY,\r\n\t\t\t\tcategoryId\r\n\t\t\t});\r\n\t\t} catch (err) {\r\n\t\t\tconsole.error(err);\r\n\t\t}\r\n\t};\r\n};\r\n\r\n\r\nexport const editCategory: ActionCreator<\r\n\tThunkAction<Promise<any>, ICategoriesState, null, IEditCategory>\r\n> = (categoryId: number) => {\r\n\treturn async (dispatch: Dispatch) => {\r\n\t\ttry {\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: QuestionActionTypes.EDIT_CATEGORY,\r\n\t\t\t\tcategoryId\r\n\t\t\t});\r\n\t\t} catch (err) {\r\n\t\t\tconsole.error(err);\r\n\t\t}\r\n\t};\r\n}\r\n\r\nexport const removeCategory: ActionCreator<\r\n\tThunkAction<Promise<any>, ICategoriesState, null, IRemoveCategory>\r\n> = (doSync: boolean, categoryId: number) => {\r\n\treturn async (dispatch: Dispatch) => {\r\n\t\ttry {\r\n\t\t\tawait delay()\r\n\t\t\t// warning: store answer, after update, to local storage\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: QuestionActionTypes.REMOVE_CATEGORY,\r\n\t\t\t\tcategoryId\r\n\t\t\t});\r\n\t\t\tif (doSync)\r\n\t\t\t\tsyncWithOthers(QuestionActionTypes.REMOVE_CATEGORY, categoryId);\r\n\t\t} catch (err) {\r\n\t\t\tconsole.error(err);\r\n\t\t}\r\n\t};\r\n};\r\n\r\nexport const storeCategory: ActionCreator<\r\n\tThunkAction<Promise<any>, IAppState, null, IStoreCategory>\r\n> = (doSync: boolean, category: ICategory) => {\r\n\treturn async (dispatch: Dispatch, getState: () => IAppState) => {\r\n\t\ttry {\r\n\t\t\t// await updateCategoryFromLocalStorage(group);\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: QuestionActionTypes.STORE_CATEGORY,\r\n\t\t\t\tcategory\r\n\t\t\t});\r\n\t\t\tif (doSync)\r\n\t\t\t\tsyncWithOthers(QuestionActionTypes.STORE_CATEGORY, category);\r\n\t\t\treturn Promise.resolve(category.categoryId) //getState().categoriesState.categories.length)\r\n\t\t}\r\n\t\tcatch (err) {\r\n\t\t\tconsole.error(err);\r\n\t\t}\r\n\t};\r\n};\r\n\r\n\r\nexport const updateCategory: ActionCreator<\r\n\tThunkAction<Promise<any>, ICategoriesState, null, IStoreCategory>\r\n> = (doSync: boolean, category: ICategory) => {\r\n\treturn async (dispatch: Dispatch) => {\r\n\t\ttry {\r\n\t\t\t// await updateCategoryFromLocalStorage(group);\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: QuestionActionTypes.UPDATE_CATEGORY,\r\n\t\t\t\tcategory\r\n\t\t\t});\r\n\t\t\tif (doSync)\r\n\t\t\t\tsyncWithOthers(QuestionActionTypes.UPDATE_CATEGORY, category);\r\n\t\t} catch (err) {\r\n\t\t\tconsole.error(err);\r\n\t\t}\r\n\t};\r\n};\r\n\r\nexport const cancelCategory: ActionCreator<any> = () => {\r\n\treturn (dispatch: Dispatch) => {\r\n\t\ttry {\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: QuestionActionTypes.CANCEL_CATEGORY\r\n\t\t\t});\r\n\t\t}\r\n\t\tcatch (err) {\r\n\t\t\tconsole.error(err);\r\n\t\t}\r\n\t};\r\n};\r\n\r\n\r\nexport const addAndAssignNewAnswer: ActionCreator<\r\n\tThunkAction<Promise<any>, IAppState, null, IStore>\r\n> = (categoryId: number, questionId: number, answer: IAnswer, formMode: string) => {\r\n\treturn async (dispatch: Dispatch, getState: () => IAppState) => {\r\n\t\ttry {\r\n\t\t\tanswer.createdBy = getState().topState.top!.auth!.who!.userId;\r\n\t\t\tdispatch<any>(addAnswer());\r\n\t\t\tdispatch<any>(storeAnswer(answer, formMode))\r\n\t\t\t\t.then((answerId: number) => {\r\n\t\t\t\t\tdispatch<any>(assignQuestionAnswer(categoryId, questionId, answerId))\r\n\t\t\t\t});\r\n\t\t}\r\n\t\tcatch (err) {\r\n\t\t\tconsole.error(err);\r\n\t\t}\r\n\t};\r\n};","// Import redux types\r\nimport { ActionCreator, Dispatch } from 'redux';\r\nimport { ThunkAction } from 'redux-thunk';\r\n// Import Top Typing\r\nimport { ILogin, ITop, ITopJson, ITopState } from './types';\r\n\r\nimport { IAppState } from '../store/Store';\r\nimport { IUser } from '../user/types';\r\nimport { findUser, getUser, storeUser } from '../user/actions';\r\n\r\n// localStorage\r\nexport const SUPPORT_TOP = 'SUPPORT_TOP';\r\n\r\n// Create Action Constants\r\nexport enum TopActionTypes {\r\n\tLOAD_TOP = \"LOAD_TOP\",\r\n\tNAVBAR_TOGGLE = 'NAVBAR_TOGGLE',\r\n\tREGISTER = 'REGISTER',\r\n\tREGISTER_USERNAME_EXISTS = 'REGISTER_USERNAME_EXISTS',\r\n\tAUTHENTICATE = 'AUTHENTICATE',\r\n\tUNAUTHENTICATE = 'UNAUTHENTICATE',\r\n\tAUTHENTICATE_WRONG_USERNAME = 'AUTHENTICATE_WRONG_USERNAME',\r\n\tAUTHENTICATE_WRONG_PWD = 'AUTHENTICATE_WRONG_PWD',\r\n\tCANCEL = 'CANCEL'\r\n}\r\n\r\n\r\nexport interface INavbarToggle {\r\n\ttype: TopActionTypes.NAVBAR_TOGGLE;\r\n}\r\n\r\nexport interface ILoadTop {\r\n\ttype: TopActionTypes.LOAD_TOP;\r\n\ttop: ITop\r\n}\r\n\r\nexport interface IRegister {\r\n\ttype: TopActionTypes.REGISTER;\r\n\tuser: IUser;\r\n}\r\n\r\nexport interface IRegisterUsernameExists {\r\n\ttype: TopActionTypes.REGISTER_USERNAME_EXISTS;\r\n}\r\n\r\nexport interface IAuthenticate {\r\n\ttype: TopActionTypes.AUTHENTICATE;\r\n\tuser: IUser;\r\n}\r\n\r\nexport interface IAuthenticateWrongUsername {\r\n\ttype: TopActionTypes.AUTHENTICATE_WRONG_USERNAME;\r\n}\r\n\r\nexport interface IAuthenticateWrongPwd {\r\n\ttype: TopActionTypes.AUTHENTICATE_WRONG_PWD;\r\n}\r\n\r\nexport interface IUnAuthenticate {\r\n\ttype: TopActionTypes.UNAUTHENTICATE;\r\n}\r\n\r\nexport interface ICancel {\r\n\ttype: TopActionTypes.CANCEL;\r\n}\r\n\r\n\r\n// Combine the action types with a union (we assume there are more)\r\nexport type TopActions = ILoadTop |\r\n\tINavbarToggle |\r\n\tIRegister |\r\n\tIRegisterUsernameExists |\r\n\tIAuthenticate |\r\n\tIAuthenticateWrongUsername |\r\n\tIAuthenticateWrongPwd |\r\n\tIUnAuthenticate |\r\n\tICancel;\r\n\r\nconst isWebStorageSupported = () => 'localStorage' in window\r\n\r\nconst parseFromLocalStorage = (json: ITopJson): ITop => {\r\n\treturn parseObj(json);\r\n}\r\n\r\nconst parseObj = (json: ITopJson): ITop => {\r\n\tconst { auth } = json;\r\n\tconst { who, visited, authenticated } = auth;\r\n\treturn {\r\n\t\t...json,\r\n\t\tauth: {\r\n\t\t\t...auth,\r\n\t\t\twho: {\r\n\t\t\t\t...who,\r\n\t\t\t\tcreated: new Date(who.created!)\r\n\t\t\t},\r\n\t\t\tvisited: new Date(visited),\r\n\t\t\tauthenticated: new Date(authenticated)\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport const loadTop: ActionCreator<\r\n\tThunkAction<Promise<any>, IAppState, null, IAuthenticate>\r\n> = () => {\r\n\treturn async (dispatch: Dispatch) => {\r\n\t\ttry {\r\n\t\t\tlet top = undefined;\r\n\r\n\t\t\tif (isWebStorageSupported()) {\r\n\t\t\t\tconst s = localStorage.getItem(SUPPORT_TOP);\r\n\t\t\t\tif (s !== null) {\r\n\t\t\t\t\t//const Users: IUserRole[] = JSON.parse(sUsers);\r\n\t\t\t\t\t//Users.map(g => storageUsers.push(g))\r\n\t\t\t\t\tconst parsed = JSON.parse(s);\r\n\t\t\t\t\tconsole.log('parsed', parsed)\r\n\t\t\t\t\ttop = parseFromLocalStorage(parsed);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (top) {\r\n\t\t\t\tdispatch({\r\n\t\t\t\t\ttype: TopActionTypes.LOAD_TOP,\r\n\t\t\t\t\ttop\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\t\tcatch (err) {\r\n\t\t\tconsole.error(err);\r\n\t\t}\r\n\t};\r\n}\r\n\r\n\r\nexport const register: ActionCreator<\r\n\tThunkAction<Promise<any>, IAppState, null, IAuthenticate>\r\n> = (loginUser: ILogin) => {\r\n\treturn async (dispatch: Dispatch, getState: () => IAppState) => {\r\n\t\ttry {\r\n\t\t\tdispatch<any>(findUser(loginUser.userName))\r\n\t\t\t\t.then((user: IUser) => {\r\n\t\t\t\t\tif (user) {\r\n\t\t\t\t\t\tdispatch({\r\n\t\t\t\t\t\t\ttype: TopActionTypes.REGISTER_USERNAME_EXISTS\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tconst user: IUser = {\r\n\t\t\t\t\t\t\troleId: 44, // Viewers\r\n\t\t\t\t\t\t\tuserId: 357, //-1,\r\n\t\t\t\t\t\t\tuserName: loginUser.userName,\r\n\t\t\t\t\t\t\tpwd: loginUser.pwd,\r\n\t\t\t\t\t\t\tdepartment: \"dept1\",\r\n\t\t\t\t\t\t\tcreatedBy: 0,\r\n\t\t\t\t\t\t\tcreated: new Date()\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tdispatch<any>(storeUser(user, 'add'))\r\n\t\t\t\t\t\t\t.then((user: IUser) => {\r\n\t\t\t\t\t\t\t\tdispatch({\r\n\t\t\t\t\t\t\t\t\ttype: TopActionTypes.REGISTER,\r\n\t\t\t\t\t\t\t\t\tuser\r\n\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t}\r\n\t\tcatch (err) {\r\n\t\t\tconsole.error(err);\r\n\t\t}\r\n\t};\r\n}\r\n\r\nexport const authenticate: ActionCreator<\r\n\tThunkAction<Promise<any>, IAppState, null, IAuthenticate>\r\n> = (loginUser: ILogin) => {\r\n\treturn async (dispatch: Dispatch, getState: () => IAppState) => {\r\n\t\ttry {\r\n\t\t\tdispatch<any>(findUser(loginUser.userName))\r\n\t\t\t\t.then((user: IUser) => {\r\n\t\t\t\t\tif (user) {\r\n\t\t\t\t\t\tif (user.pwd === loginUser.pwd) {\r\n\t\t\t\t\t\t\tdispatch({\r\n\t\t\t\t\t\t\t\ttype: TopActionTypes.AUTHENTICATE,\r\n\t\t\t\t\t\t\t\tuser\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\tdispatch({\r\n\t\t\t\t\t\t\t\ttype: TopActionTypes.AUTHENTICATE_WRONG_PWD\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tdispatch({\r\n\t\t\t\t\t\t\ttype: TopActionTypes.AUTHENTICATE_WRONG_USERNAME\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t}\r\n\t\tcatch (err) {\r\n\t\t\tconsole.error(err);\r\n\t\t}\r\n\t};\r\n}\r\n\r\nexport const unAuthenticate: ActionCreator<\r\n\tThunkAction<Promise<any>, IAppState, null, IAuthenticate>\r\n> = () => {\r\n\treturn async (dispatch: Dispatch) => {\r\n\t\ttry {\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: TopActionTypes.UNAUTHENTICATE\r\n\t\t\t});\r\n\t\t}\r\n\t\tcatch (err) {\r\n\t\t\tconsole.error(err);\r\n\t\t}\r\n\t};\r\n}\r\n\r\nexport const cancelLogin: ActionCreator<any> = () => {\r\n\treturn (dispatch: Dispatch) => {\r\n\t\ttry {\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: TopActionTypes.CANCEL\r\n\t\t\t});\r\n\t\t} catch (err) {\r\n\t\t\tconsole.error(err);\r\n\t\t}\r\n\t};\r\n};\r\n\r\n\r\nexport const navbarToggle: ActionCreator<any> = () => {\r\n\treturn (dispatch: Dispatch) => {\r\n\t\ttry {\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: TopActionTypes.NAVBAR_TOGGLE\r\n\t\t\t});\r\n\t\t}\r\n\t\tcatch (err) {\r\n\t\t\tconsole.error(err);\r\n\t\t}\r\n\t};\r\n};\r\n\r\n/*\r\nexport function checkAuthentication() {\r\n\treturn async (dispatch: Dispatch) => {\r\n\t  const auth = await window.localStorage.getItem(\"authenticated\");\r\n\t  const formattedAuth = typeof auth === \"string\" ?\r\n\t\tJSON.parse(auth) :\r\n\t\tnull;\r\n  \r\n\t  formattedAuth ? dispatch(authenticate()) : dispatch(unauthenticate());\r\n\t};\r\n  }\r\n*/","import { IAnswer } from '../Answers/types'\r\nimport { IOption } from '../common/types';\r\nimport { IUser } from '../user/types';\r\n\r\n// Define the Question type\r\n\r\nexport interface IQuestionAnswer {\r\n\tanswerId: number,\r\n\tassignedBy: number,\r\n\tassigned: Date,\r\n\ttext?: string\r\n}\r\n\r\nexport interface IQuestionAnswerJson extends Omit<IQuestionAnswer, 'assigned'> {\r\n\tassigned: string\r\n}\r\n\r\n\r\nexport interface IQuestion {\r\n\tcategoryId: number,\r\n\tquestionId: number,\r\n\ttext: string,\r\n\twords?: string[],\r\n\tanswers: IQuestionAnswer[],\r\n\tsource: number,\r\n\tstatus: number,\r\n\tcreatedBy: number,\r\n\tcreated: Date,\r\n\tcategoryIdWas?: number\r\n}\r\n\r\nexport interface IQuestionJson extends Omit<IQuestion, 'categoryId' | 'answers' | 'created'> {\r\n\tcategoryId?: number,\r\n\tanswers: IQuestionAnswerJson[],\r\n\tcreated: string\r\n}\r\n\r\nexport interface ICategory {\r\n\tcategoryId: number,\r\n\ttitle: string,\r\n\tquestions: IQuestion[],\r\n\tisExpanded?: boolean,\r\n\tcreatedBy: number,\r\n\tcreated: Date\r\n}\r\n\r\nexport interface ICategoryJson extends Omit<ICategory, 'created' | 'questions'> {\r\n\tquestions: IQuestionJson[],\r\n\tcreated: string\r\n}\r\n\r\nexport const initialQuestion: IQuestion = {\r\n\tcategoryId: 0,\r\n\tquestionId: 0,\r\n\ttext: '',\r\n\twords: [],\r\n\tanswers: [],\r\n\tsource: 0,\r\n\tstatus: 0,\r\n\tcreatedBy: 0,\r\n\tcreated: new Date()\r\n };\r\n\r\n export interface ICategoriesProps {\r\n\tcategories: ICategory[];\r\n\tcategoryQuestions: Map<number, ICategoryState>,\r\n\tcategoryOptions: IOption<number>[],\r\n\tcategory: ICategory | undefined;\r\n\tquestion: IQuestion | undefined;\r\n\tlastAnswer?: IAnswer;\r\n\tformMode: string,\r\n\tcategoryIdEditing: number,\r\n\tcanEdit: boolean,\r\n\twho: IUser,\r\n\tnavbarOpen: boolean,\r\n\tonSelectQuestion: (categoryId: number, questionId: number) => IQuestion;\r\n\tadd: (categoryId: number, text: string, canEdit?: boolean) => void;\r\n\tedit: (categoryId: number, questionId: number) => void;\r\n\tremove: (categoryId: number, questionId: number) => void;\r\n\t// groups\r\n\tonSelectCategory: (categoryId: number) => ICategory;\r\n\taddCategory: () => void;\r\n\ttoggleCategory: (categoryId: number) => void;\r\n\teditCategory: (categoryId: number) => void;\r\n\tremoveCategory: (categoryId: number) => void;\r\n\tstoreCategory: (group: ICategory) => void;\r\n\tupdateCategory: (group: ICategory) => void;\r\n\t// question answer\r\n\taddAndAssignNewAnswer: (categoryId: number, questionId: number, answer: IAnswer, formMode: string) => void\r\n}\r\n\r\nexport interface ICategoryState {\r\n\tquestions: IQuestion[];\r\n}\r\n\r\n\r\n// Define the Question State\r\nexport interface ICategoriesState {\r\n\treadonly categories: ICategory[];\r\n\treadonly category: ICategory | undefined;\r\n\treadonly question: IQuestion | undefined;\r\n\tcategoryCopy?: ICategory;\r\n\tquestionCopy?: IQuestion;\r\n\tcategoryQuestions: Map<number, ICategoryState>,\r\n\tcategoryOptions: IOption<number>[];\r\n\tloading: boolean,\r\n\tformMode: string;\r\n\tcategoryIdEditing: number;\r\n\tisDetail: boolean\r\n}\r\n\r\n\r\nexport interface IQuestionFormProps {\r\n\tquestion: IQuestion;\r\n\tquestionAnswers: IQuestionAnswer[];\r\n\tanswers: IAnswer[];\r\n\tformMode: string;\r\n\tcanEdit: boolean,\r\n\tcancel: () => void;\r\n\tsaveForm: (question: IQuestion, formMode: string) => void;\r\n\tselectQuestionAnswer: (categoryId: number, questionId: number, answerId: number) => void;\r\n\tcopyQuestionAnswer: (categoryId: number, questionId: number, answerId: number) => void;\r\n\tremoveQuestionAnswer: (categoryId: number, questionId: number, answerId: number) => void;\r\n\tassignQuestionAnswer: (categoryId: number, questionId: number, answerId: number) => void;\r\n\tsetIsDetail: (isDetail: boolean) => void;\r\n\tcategoryOptions: IOption<number>[];\r\n  }\r\n\r\n  export interface ICategoryFormProps {\r\n\tcategory: ICategory | undefined;\r\n\tformMode: string;\r\n\tcanEdit: boolean,\r\n\tcancel: () => void;\r\n\tsaveForm: (category: ICategory, formMode: string) => void;\r\n\tsetIsDetail: (isDetail: boolean) => void;\r\n  }\r\n\r\n","// Import Reducer type\r\nimport { Reducer } from 'redux';\r\n\r\nimport {\r\n\tQuestionActions,\r\n\tQuestionActionTypes\r\n} from './actions';\r\nimport { initialCategory } from './categoriesReducer';\r\n\r\nimport { IQuestion, ICategoryState, initialQuestion } from './types'\r\n\r\nexport const CATEGORY = 'CATEGORY';\r\n\r\n// Define the initial state\r\nexport const initialCategoryState: ICategoryState = {\r\n\tquestions: []\r\n};\r\n\r\n\r\nconst aTypesToStore = Object.keys(QuestionActionTypes);\r\n\t//.filter(a => a !== QuestionActionTypes.LOAD_CATEGORY);\r\n\r\nexport const reduceQuestions = (\r\n\tcategoryQuestions: Map<number, ICategoryState>,\r\n\taction: QuestionActions,\r\n\tcategoryId: number,\r\n\tquestionId?: number\r\n): {categoryQuestions: Map<number, ICategoryState>, question: IQuestion|undefined} => {\r\n\tconst categoryState = categoryQuestions.get(categoryId)!;\r\n\tconst newState: ICategoryState = myReducer(categoryState, action);\r\n\tif (aTypesToStore.includes(action.type)) {\r\n\t\tlocalStorage.setItem(`CATEGORY_${categoryId}`, JSON.stringify(newState.questions));\r\n\t}\r\n\tcategoryQuestions.set(categoryId, newState);\r\n\tconst question = newState.questions.find(q => q.questionId === questionId);\r\n\treturn { categoryQuestions, question }\r\n}\r\n\r\n\r\nconst myReducer: Reducer<ICategoryState, QuestionActions> = (\r\n\tstate = initialCategoryState,\r\n\taction\r\n) => {\r\n\tswitch (action.type) {\r\n\r\n\t\tcase QuestionActionTypes.GET_QUESTION: {\r\n\t\t\tconst question = state.questions.find(q => q.questionId === action.questionId);\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tquestion\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tcase QuestionActionTypes.ADD_QUESTION: {\r\n\t\t\tlet questionIdMax = 0;\r\n\t\t\tfor (let question of state.questions)\r\n\t\t\t\tif (question.questionId > questionIdMax)\r\n\t\t\t\t\tquestionIdMax = question.questionId\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tformMode: 'add',\r\n\t\t\t\tquestion: {\r\n\t\t\t\t\t...initialQuestion,\r\n\t\t\t\t\tcreatedBy: action.createdBy,\r\n\t\t\t\t\tcategoryId: action.categoryId,\r\n\t\t\t\t\tquestionId: questionIdMax + 1,\r\n\t\t\t\t\ttext: action.text\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tcase QuestionActionTypes.EDIT_QUESTION: {\r\n\t\t\tconst question = state.questions\r\n\t\t\t\t.find(question => question.questionId === action.questionId);\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tformMode: 'edit',\r\n\t\t\t\tquestion\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tcase QuestionActionTypes.STORE_QUESTION: {\r\n\t\t\tconst { question } = action;\r\n\t\t\tquestion.words = question.text.split(' ');\r\n\t\t\tconst { questionId } = question;\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tquestions: [...state.questions, {...question}]\r\n\t\t\t\t// questions: state.questions\r\n\t\t\t\t// \t.map(q => q.questionId !== questionId\r\n\t\t\t\t// \t\t? q\r\n\t\t\t\t// \t\t: { ...question }\r\n\t\t\t\t// \t)\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tcase QuestionActionTypes.UPDATE_QUESTION: {\r\n\t\t\tconst { question } = action;\r\n\t\t\tconst { questionId } = question;\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tquestions: state.questions\r\n\t\t\t\t\t.map(q => q.questionId !== questionId\r\n\t\t\t\t\t\t? q\r\n\t\t\t\t\t\t: { ...question }\r\n\t\t\t\t\t)\r\n\t\t\t};\t\t\t\r\n\t\t}\r\n\r\n\t\tcase QuestionActionTypes.CANCEL_QUESTION: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tformMode: 'display'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tcase QuestionActionTypes.REMOVE_QUESTION: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tquestions: state.questions.filter(q => q.questionId !== action.questionId)\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\t// Question answers\r\n\t\tcase QuestionActionTypes.REMOVE_QUESTION_ANSWER: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tquestions: state.questions.map(q => q.questionId !== action.questionId\r\n\t\t\t\t\t? { ...q, answers: [...q.answers] }\r\n\t\t\t\t\t: { ...q, answers: q.answers.filter(qa => qa.answerId !== action.answerId) }\r\n\t\t\t\t)\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tcase QuestionActionTypes.ASSIGN_QUESTION_ANSWER: {\r\n\t\t\tconst { questionId, answerId, assignedBy } = action;\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tquestions: state.questions.map(q => q.questionId !== questionId\r\n\t\t\t\t\t? { ...q, answers: [...q.answers] }\r\n\t\t\t\t\t: { ...q, answers: [...q.answers, { answerId, assignedBy, assigned: new Date() }] }\r\n\t\t\t\t)\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tcase QuestionActionTypes.SET_IS_DETAIL: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tisDetail: action.isDetail\r\n\t\t\t}\r\n\t\t}\r\n\r\n\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n};\r\n\r\n","// Import Reducer type\r\nimport { Reducer } from 'redux';\r\n\r\nimport {\r\n\tQuestionActions,\r\n\tQuestionActionTypes\r\n} from './actions';\r\n\r\nimport { IQuestion, ICategory, ICategoriesState, ICategoryState } from './types'\r\nimport { reduceQuestions } from './categoryReducer'\r\nimport { createWatchCompilerHost } from 'typescript';\r\n\r\nexport const SUPPORT_CATEGORIES = 'SUPPORT_CATEGORIES';\r\n\r\nexport const initialQuestion: IQuestion = {\r\n\tcategoryId: 0,\r\n\tquestionId: 0,\r\n\ttext: '',\r\n\twords: [],\r\n\tsource: 0,\r\n\tstatus: 0,\r\n\tanswers: [],\r\n\tcreatedBy: 0,\r\n\tcreated: new Date()\r\n};\r\n\r\nexport const initialCategory: ICategory = {\r\n\tcategoryId: 0,\r\n\ttitle: '',\r\n\tquestions: [],\r\n\tisExpanded: false,\r\n\tcreatedBy: 0,\r\n\tcreated: new Date()\r\n};\r\n\r\n\r\n// Define the initial state\r\nexport const initialCategoriesState: ICategoriesState = {\r\n\tcategories: [],\r\n\tcategory: undefined,\r\n\tcategoryQuestions: new Map<number, ICategoryState>(),\r\n\tquestion: undefined,\r\n\tcategoryOptions: [],\r\n\tloading: false,\r\n\tformMode: 'display',\r\n\tcategoryIdEditing: -1,\r\n\tisDetail: false\r\n};\r\n\r\nconst storeToStorage: string[] = [\r\n\tQuestionActionTypes.ADD_CATEGORY,\r\n\tQuestionActionTypes.TOGGLE_CATEGORY,\r\n\tQuestionActionTypes.STORE_CATEGORY,\r\n\tQuestionActionTypes.UPDATE_CATEGORY,\r\n\tQuestionActionTypes.REMOVE_CATEGORY\r\n]\r\n\r\nconst aTypesToStore = Object.keys(QuestionActionTypes)\r\n\t.filter(a => storeToStorage.includes(a));\r\n\r\nexport const categoriesReducer: Reducer<ICategoriesState, QuestionActions> = (state, action) => {\r\n\tconst newState = myReducer(state, action);\r\n\tif (aTypesToStore.includes(action.type)) {\r\n\t\tlocalStorage.setItem(SUPPORT_CATEGORIES, JSON.stringify(newState.categories));\r\n\t}\r\n\treturn newState;\r\n}\r\n\r\nconst getQuestions = (categoryId: number, state: ICategoriesState): IQuestion[] => {\r\n\tconst { categoryQuestions } = state;\r\n\tconst categoryState = categoryQuestions.get(categoryId)!;\r\n\treturn categoryState.questions\r\n}\r\n\r\nconst myReducer: Reducer<ICategoriesState, QuestionActions> = (\r\n\tstate = initialCategoriesState,\r\n\taction\r\n) => {\r\n\tswitch (action.type) {\r\n\r\n\t\tcase QuestionActionTypes.LOAD_CATEGORIES: {\r\n\t\t\tconst { categories, categoryQuestions } = action;\r\n\r\n\t\t\tconst categoryOptions = categories.map(g => ({ value: g.categoryId, label: g.title }))\r\n\t\t\tcategoryOptions.unshift({ value: 0, label: 'Unknown' })\r\n\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tcategories,\r\n\t\t\t\tcategoryQuestions,\r\n\t\t\t\tcategoryOptions\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tcase QuestionActionTypes.GET_QUESTION: {\r\n\t\t\tconst { categoryId, questionId } = action;\r\n\t\t\tconst questions = getQuestions(categoryId, state)\r\n\t\t\tconst question = questions.find(q => q.questionId === questionId);\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tcategory: undefined,\r\n\t\t\t\tquestion\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tcase QuestionActionTypes.ADD_QUESTION: {\r\n\t\t\tconst { categoryId } = action;\r\n\t\t\tconst questions = getQuestions(categoryId, state)\r\n\t\t\tconst questionId = Math.max(...questions.map(q => q.questionId)) + 1;\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tformMode: 'add',\r\n\t\t\t\tcategory: undefined,\r\n\t\t\t\tquestion: {\r\n\t\t\t\t\t...initialQuestion,\r\n\t\t\t\t\tcreatedBy: action.createdBy,\r\n\t\t\t\t\tcategoryId,\r\n\t\t\t\t\tquestionId,\r\n\t\t\t\t\ttext: action.text\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tcase QuestionActionTypes.EDIT_QUESTION: {\r\n\t\t\tconst { categoryId, questionId } = action;\r\n\t\t\tconst questions = getQuestions(categoryId, state)\r\n\t\t\tconst question = questions.find(q => q.questionId === questionId)!;\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tformMode: 'edit',\r\n\t\t\t\tquestion,\r\n\t\t\t\tquestionCopy: { ...question }\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tcase QuestionActionTypes.STORE_QUESTION: {\r\n\t\t\tconst { question } = action;\r\n\t\t\tconst { categoryId, questionId } = question;\r\n\t\t\tconst { categoryQuestions } = reduceQuestions(state.categoryQuestions, action, categoryId);\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tformMode: 'edit',\r\n\t\t\t\tcategoryQuestions\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tcase QuestionActionTypes.UPDATE_QUESTION: {\r\n\t\t\tlet { questionCopy } = state;\r\n\t\t\tconst { categoryId, questionId, categoryIdWas } = action.question; // comes from other user update\r\n\t\t\tconst categoryIdCopy = categoryIdWas ? categoryIdWas : questionCopy!.categoryId;\r\n\t\t\tif (action.question.categoryId === categoryIdCopy) {\r\n\t\t\t\t// category hasn't been changed\r\n\t\t\t\tconst { categoryQuestions, question } = reduceQuestions(state.categoryQuestions, action, categoryId, questionId);\r\n\t\t\t\treturn {\r\n\t\t\t\t\t...state,\r\n\t\t\t\t\tcategoryQuestions,\r\n\t\t\t\t\tformMode: 'edit',\r\n\t\t\t\t\tquestion\r\n\t\t\t\t};\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\t// assing question to another group\r\n\t\t\t\t// 1) remove question from old category\r\n\t\t\t\tlet { categoryQuestions } = reduceQuestions(state.categoryQuestions, {\r\n\t\t\t\t\t...action,\r\n\t\t\t\t\ttype: QuestionActionTypes.REMOVE_QUESTION,\r\n\t\t\t\t\tcategoryId: categoryIdCopy,\r\n\t\t\t\t\tquestionId\r\n\t\t\t\t}, categoryIdCopy);\r\n\t\t\t\t// 2) add question  to new category\r\n\t\t\t\tcategoryQuestions = reduceQuestions(categoryQuestions, {\r\n\t\t\t\t\t...action,\r\n\t\t\t\t\ttype: QuestionActionTypes.STORE_QUESTION\r\n\t\t\t\t}, categoryId).categoryQuestions;\r\n\t\t\t\t//\r\n\t\t\t\treturn {\r\n\t\t\t\t\t...state,\r\n\t\t\t\t\tcategoryQuestions,\r\n\t\t\t\t\tformMode: 'edit'\r\n\t\t\t\t};\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tcase QuestionActionTypes.CANCEL_QUESTION: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tformMode: 'display',\r\n\t\t\t\tquestion: undefined\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tcase QuestionActionTypes.REMOVE_QUESTION: {\r\n\t\t\tconst { categoryId } = action;\r\n\t\t\tconst { categoryQuestions } = reduceQuestions(state.categoryQuestions, action, categoryId);\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tcategoryQuestions,\r\n\t\t\t\tformMode: 'display',\r\n\t\t\t\tquestion: undefined\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\t// Question answers\r\n\t\tcase QuestionActionTypes.REMOVE_QUESTION_ANSWER: {\r\n\t\t\tconst { categoryId, questionId } = action;\r\n\t\t\tconst { categoryQuestions, question } = reduceQuestions(state.categoryQuestions, action, categoryId, questionId);\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tcategoryQuestions,\r\n\t\t\t\tquestion\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tcase QuestionActionTypes.ASSIGN_QUESTION_ANSWER: {\r\n\t\t\tconst { categoryId, questionId } = action;\r\n\t\t\tconst { categoryQuestions, question } = reduceQuestions(state.categoryQuestions, action, categoryId, questionId);\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tcategoryQuestions,\r\n\t\t\t\tquestion\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tcase QuestionActionTypes.SET_IS_DETAIL: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tisDetail: action.isDetail\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t///////////////////////////////////////////////////////////////////////////////////\r\n\t\t// groups\r\n\t\tcase QuestionActionTypes.GET_CATEGORY: {\r\n\t\t\tconst { categoryId } = action;\r\n\t\t\t//const questions = getQuestions(categoryId, state)\r\n\t\t\t//const question = questions.find(q => q.questionId === questionId);\r\n\t\t\tconst category = state.categories.find(g => g.categoryId === categoryId);\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tcategory,\r\n\t\t\t\tquestion: undefined\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tcase QuestionActionTypes.ADD_CATEGORY: {\r\n\t\t\t// const group =  state.categories.find(g => g.categoryId === action.categoryId);\r\n\t\t\tconst { categoryQuestions } = state;\r\n\t\t\tlet categoryId = Math.max(...state.categories.map(g => g.categoryId)) + 1;\r\n\t\t\tconst categoryState: ICategoryState = {\r\n\t\t\t\tquestions: []\r\n\t\t\t}\r\n\t\t\tcategoryQuestions.set(categoryId, categoryState)\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tformMode: 'add',\r\n\t\t\t\tcategoryIdEditing: categoryId,\r\n\t\t\t\tcategory: { \r\n\t\t\t\t\t...initialCategory,\r\n\t\t\t\t\ttitle: \"New Category\",\r\n\t\t\t\t\tcategoryId \r\n\t\t\t\t},\r\n\t\t\t\tquestion: undefined\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tcase QuestionActionTypes.TOGGLE_CATEGORY: {\r\n\t\t\tconst group = state.categories.find(g => g.categoryId === action.categoryId);\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tcategories: state.categories.map(g => g.categoryId !== action.categoryId\r\n\t\t\t\t\t? g\r\n\t\t\t\t\t: { ...g, isExpanded: !g.isExpanded }\r\n\t\t\t\t)\r\n\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tcase QuestionActionTypes.EDIT_CATEGORY: {\r\n\t\t\tconst category = state.categories.find(g => g.categoryId === action.categoryId)!\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tcategoryCopy: { ...category },\r\n\t\t\t\tcategoryIdEditing: category.categoryId\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tcase QuestionActionTypes.STORE_CATEGORY: {\r\n\t\t\t// const group = state.categories.find(g => g.categoryId === action.question.categoryId);\r\n\t\t\tconst { category } = action;\r\n\t\t\tconst { categoryQuestions } = state;\r\n\t\t\tconst categoryState: ICategoryState = {\r\n\t\t\t\tquestions: [] //...category.questions]\r\n\t\t\t}\r\n\t\t\tcategoryQuestions.set(category.categoryId, categoryState)\r\n\t\t\tcategory.questions = [];\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tformMode: 'edit',\r\n\t\t\t\tcategoryIdEditing: -1,\r\n\t\t\t\tcategories: [...state.categories, category],\r\n\t\t\t\tcategoryQuestions\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tcase QuestionActionTypes.UPDATE_CATEGORY: {\r\n\t\t\t// const group = state.categories.find(g => g.categoryId === action.question.categoryId);\r\n\t\t\tconst { category } = action;\r\n\t\t\tconst { categoryId, title } = category;\r\n\t\t\tlet { categoryCopy } = state;\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tcategoryIdEditing: -1,\r\n\t\t\t\tcategories: state.categories.map(g => g.categoryId !== categoryId\r\n\t\t\t\t\t? g\r\n\t\t\t\t\t: { ...g, title }\r\n\t\t\t\t)\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tcase QuestionActionTypes.CANCEL_CATEGORY: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tformMode: 'display',\r\n\t\t\t\tcategory: undefined\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tcase QuestionActionTypes.REMOVE_CATEGORY: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tcategories: state.categories.reduce((acc: ICategory[], g) => {\r\n\t\t\t\t\tif (g.categoryId !== action.categoryId)\r\n\t\t\t\t\t\tacc.push({ ...g, questions: [...g.questions] })\r\n\t\t\t\t\treturn acc\r\n\t\t\t\t}, [])\r\n\t\t\t};\r\n\t\t}\r\n\r\n\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n};\r\n\r\n","// Import Reducer type\r\nimport { Reducer } from 'redux';\r\nimport {\r\n\tAnswerActions,\r\n\tAnswerActionTypes,\r\n\tSUPPORT_ANSWERS\r\n} from './actions';\r\n\r\nimport { IAnswer, IAnswerState } from './types'\r\n\r\nconst initialAnswer: IAnswer = {\r\n\tanswerId: 0,\r\n\ttext: '',\r\n\twords: [],\r\n\toptions: [],\r\n\tcreatedBy: 0,\r\n\tcreated: new Date()\r\n};\r\n\r\nconst initialAnswerState: IAnswerState = {\r\n\tanswers: [],\r\n\tanswer: undefined,\r\n\tloading: false,\r\n\tformMode: 'display'\r\n};\r\n\r\nconst aTypesToStore = Object.keys(AnswerActionTypes).filter(a => a !== AnswerActionTypes.GET_ALL_ANSWERS);\r\n\r\nexport const answerReducer: Reducer<IAnswerState, AnswerActions> = (state, action) => {\r\n\tconst newState = myReducer(state, action);\r\n\tif (aTypesToStore.includes(action.type)) {\r\n\t\tlocalStorage.setItem(SUPPORT_ANSWERS, JSON.stringify(newState.answers));\r\n\t}\r\n\treturn newState;\r\n}\r\n\r\nconst myReducer: Reducer<IAnswerState, AnswerActions> = (\r\n\tstate = initialAnswerState,\r\n\taction\r\n) => {\r\n\tswitch (action.type) {\r\n\r\n\t\tcase AnswerActionTypes.GET_ALL_ANSWERS: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tanswers: action.answers.map(answer => { return { \r\n\t\t\t\t\t...answer,\r\n\t\t\t\t\twords: answer.text.split(' ') \r\n\t\t\t\t} }),\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tcase AnswerActionTypes.GET_ANSWER: {\r\n\t\t\tconst answer = state.answers.find(a => a.answerId === action.answerId);\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tanswer\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tcase AnswerActionTypes.ADD_ANSWER: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tformMode: 'add',\r\n\t\t\t\tanswer: {\r\n\t\t\t\t\t...initialAnswer,\r\n\t\t\t\t\tcreatedBy: action.createdBy,\r\n\t\t\t\t\tanswerId: state.answers.length === 0 \r\n\t\t\t\t\t\t? 1\r\n\t\t\t\t\t\t: Math.max(...state.answers.map(a => a.answerId)) + 1\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tcase AnswerActionTypes.EDIT_ANSWER: {\r\n\t\t\tconst answer = state.answers.find(a => a.answerId === action.answerId);\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tformMode: 'edit',\r\n\t\t\t\tanswer: { ...answer!, words: answer!.text.split(' ') }\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tcase AnswerActionTypes.STORE_ANSWER: {\r\n\t\t\tconst { answer } = action;\r\n\t\t\tlet { answerId } = answer!;\r\n\t\t\tlet answers = [];\r\n\t\t\tif (state.formMode === 'add') {\r\n\t\t\t\tif (answerId === -1) {\r\n\t\t\t\t\tanswer.answerId = state.answers.length === 0\r\n\t\t\t\t\t\t? 1\r\n\t\t\t\t\t\t: Math.max(...state.answers.map(a => a.answerId)) + 1;\r\n\t\t\t\t}\r\n\t\t\t\tanswers = [...state.answers, { ...answer, words: answer.text.split(' ') }]\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tanswers = state.answers.map(a => a.answerId === answerId\r\n\t\t\t\t\t? { ...answer, words: answer.text.split(' ') }\r\n\t\t\t\t\t: a)\r\n\t\t\t}\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tformMode: 'edit',\r\n\t\t\t\tanswers,\r\n\t\t\t\tanswer\r\n\t\t\t};\r\n\t\t}\t\r\n\r\n\t\tcase AnswerActionTypes.CANCEL_ANSWER: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tformMode: 'display'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tcase AnswerActionTypes.REMOVE_ANSWER: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tformMode: 'display',\r\n\t\t\t\tanswers: state.answers.filter(a => a.answerId !== action.answerId)\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\t// case AnswerActionTypes.STORE_ANSWERS_TO_LOCAL_STORAGE: {\r\n\t\t// \tlocalStorage.setItem(SUPPORT_ANSWERS, JSON.stringify(state.answers));\r\n\t\t// \treturn state;\r\n\t\t// }   \t\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n};","// Import redux types\r\nimport { ActionCreator, Dispatch } from 'redux';\r\nimport { ThunkAction } from 'redux-thunk';\r\n// import axios from 'axios';\r\n\r\n// Import User Typing\r\nimport { IUser, IRole, IRoleJson, IUsersState } from './types';\r\n\r\n\r\n///////////////////////////////////////////////////\r\n// localStorage\r\nimport { SUPPORT_USERS } from './reducer';\r\n\r\nimport data from \"./data.json\"\r\nimport { IAppState } from '../store/Store';\r\nimport { TopActionTypes } from '../Top/actions';\r\n\r\nconst parseFromJson = (): IRole[] => {\r\n\treturn data.map(g => {\r\n\t\treturn parseRole(g)\r\n\t})\r\n}\r\n\r\nconst parseFromLocalStorage = (arr: IRoleJson[]): IRole[] => {\r\n\treturn arr.map(g => parseRole(g));\r\n}\r\n\r\nconst parseRole = (g: IRoleJson): IRole => ({\r\n\t...g,\r\n\tusers: g.users.map(u => ({ ...u, created: new Date(u.created) })),\r\n\tcreated: new Date(g.created)\r\n})\r\n\r\n\r\n// Create Action Constants\r\nexport enum UserActionTypes {\r\n\tLOAD_USER_GROUPS = 'LOAD_USER_GROUPS',\r\n\tCREATE_OPTIONS = 'CREATE_OPTIONS',\r\n\tGET_ALL_USERS = 'GET_ALL_USERS',\r\n\tGET_USER = 'GET_USER',\r\n\tADD_USER = 'ADD_USER',\r\n\tEDIT_USER = 'EDIT_USER',\r\n\tREMOVE_USER = 'REMOVE_USER',\r\n\tSTORE_USER = 'STORE_USER',\r\n\tCANCEL_USER = 'CANCEL_USER',\r\n\t// groups\r\n\tADD_ROLE = 'ADD_ROLE',\r\n\tTOGGLE_ROLE = 'EXPAND_ROLE',\r\n\tEDIT_ROLE = 'EDIT_ROLE',\r\n\tREMOVE_ROLE = 'REMOVE_ROLE',\r\n\tSTORE_ROLE = 'STORE_ROLE',\r\n\t// localSTorage\r\n\tSET_IS_DETAIL = 'SET_IS_DETAIL',\r\n}\r\n\r\n\r\n// Interface for Get All Action Type\r\nexport interface IGetAll {\r\n\ttype: UserActionTypes.GET_ALL_USERS;\r\n\troles: IRole[];\r\n}\r\n\r\nexport interface ICreateOptions {\r\n\ttype: UserActionTypes.CREATE_OPTIONS;\r\n}\r\n\r\nexport interface IGet {\r\n\ttype: UserActionTypes.GET_USER;\r\n\tuserId: number;\r\n}\r\n\r\nexport interface IAdd {\r\n\ttype: UserActionTypes.ADD_USER;\r\n\tcreatedBy: number,\r\n\troleId: number,\r\n\ttext: string\r\n\t//userId: number,\r\n}\r\n\r\nexport interface IEdit {\r\n\ttype: UserActionTypes.EDIT_USER;\r\n\troleId: number,\r\n\tuserId: number\r\n}\r\n\r\nexport interface IRemove {\r\n\ttype: UserActionTypes.REMOVE_USER;\r\n\troleId: number,\r\n\tuserId: number,\r\n}\r\n\r\nexport interface IStore {\r\n\ttype: UserActionTypes.STORE_USER;\r\n\tuser: IUser;\r\n\tformMode: string;\r\n}\r\n\r\nexport interface ICancel {\r\n\ttype: UserActionTypes.CANCEL_USER;\r\n}\r\n\r\n// group\r\nexport interface IAddRole {\r\n\ttype: UserActionTypes.ADD_ROLE;\r\n\t//roleId: number\r\n}\r\n\r\nexport interface IToggleRole {\r\n\ttype: UserActionTypes.TOGGLE_ROLE;\r\n\troleId: number\r\n}\r\n\r\nexport interface IEditRole {\r\n\ttype: UserActionTypes.EDIT_ROLE;\r\n\troleId: number\r\n}\r\n\r\nexport interface IRemoveRole {\r\n\ttype: UserActionTypes.REMOVE_ROLE;\r\n\troleId: number\r\n}\r\n\r\nexport interface IStoreRole {\r\n\ttype: UserActionTypes.STORE_ROLE;\r\n\tgroup: IRole;\r\n}\r\n\r\n\r\nexport interface ISetIsDetail {\r\n\ttype: UserActionTypes.SET_IS_DETAIL;\r\n\tisDetail: boolean\r\n}\r\n\r\n\r\n\r\n// Combine the action types with a union (we assume there are more)\r\nexport type UserActions = IGetAll | IGet | IAdd | IEdit | IRemove | IStore | ICancel |\r\n\tIAddRole | IToggleRole | IEditRole | IRemoveRole | IStoreRole |\r\n\tISetIsDetail | ICreateOptions;\r\n\r\nconst isWebStorageSupported = () => 'localStorage' in window\r\n\r\n\r\nexport const getAllUsers: ActionCreator<\r\n\tThunkAction<Promise<any>, IUsersState, null, IGetAll>\r\n> = () => {\r\n\treturn async (dispatch: Dispatch) => {\r\n\t\ttry {\r\n\t\t\t// const response = await axios.get('https://swapi.co/api/people/');\r\n\t\t\tlet roles: IRole[] = [];\r\n\t\t\tif (isWebStorageSupported()) {\r\n\t\t\t\tconst sUserRoles = localStorage.getItem(SUPPORT_USERS);\r\n\t\t\t\tif (sUserRoles !== null) {\r\n\t\t\t\t\t//const Users: IRole[] = JSON.parse(sUsers);\r\n\t\t\t\t\t//Users.map(g => storageUsers.push(g))\r\n\t\t\t\t\tconst parsed = JSON.parse(sUserRoles);\r\n\t\t\t\t\troles = parseFromLocalStorage(parsed);\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\troles = parseFromJson()\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\troles = parseFromJson()\r\n\t\t\t}\r\n\r\n\t\t\t//const response = await getUsersFromLocalStorage(); \r\n\t\t\tdispatch({\r\n\t\t\t\ttype: UserActionTypes.GET_ALL_USERS,\r\n\t\t\t\troles  //response.data.results,\r\n\t\t\t});\r\n\t\t\tdispatch({type: UserActionTypes.CREATE_OPTIONS})\r\n\t\t}\r\n\t\tcatch (err) {\r\n\t\t\tconsole.error(err);\r\n\t\t}\r\n\t};\r\n};\r\n\r\n\r\n\r\n// Get User <Promise<Return Type>, State Interface, Type of Param, Type of Action> \r\nexport const getUser: ActionCreator<\r\n\tThunkAction<Promise<any>, IUsersState, string, IGet>\r\n> = (userId: number) => {\r\n\treturn async (dispatch: Dispatch) => {\r\n\t\ttry {\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: UserActionTypes.GET_USER,\r\n\t\t\t\tuserId\r\n\t\t\t});\r\n\t\t} catch (err) {\r\n\t\t\tconsole.error(err);\r\n\t\t}\r\n\t};\r\n};\r\n\r\nexport const findUser: ActionCreator<\r\n\tThunkAction<Promise<any>, IAppState, string, IGet>\r\n> = (name: string) => {\r\n\treturn async (dispatch: Dispatch, getState: () => IAppState) => {\r\n\t\ttry {\r\n\t\t\tconst {usersState} = getState();\r\n\t\t\tlet user;\r\n\t\t\tfor (let role of usersState.roles) {\r\n\t\t\t\tuser = role.users.find(user => user.userName === name);\r\n\t\t\t\tif (user)\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\treturn user;\r\n\t\t}\r\n\t\tcatch (err) {\r\n\t\t\tconsole.error(err);\r\n\t\t}\r\n\t};\r\n};\r\n\r\n\r\n\r\nexport const addUser: ActionCreator<\r\n\tThunkAction<Promise<any>, IAppState, null, IAdd>\r\n> = (roleId: number, text: string, canEdit?: boolean) => {\r\n\treturn async (dispatch: Dispatch, getState: () => IAppState) => {\r\n\t\ttry {\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: UserActionTypes.ADD_USER,\r\n\t\t\t\tcreatedBy: getState().topState.top!.auth!.who!.userId,\r\n\t\t\t\troleId,\r\n\t\t\t\ttext\r\n\t\t\t});\r\n\t\t}\r\n\t\tcatch (err) {\r\n\t\t\tconsole.error(err);\r\n\t\t}\r\n\t};\r\n};\r\n\r\nexport const editUser: ActionCreator<\r\n\tThunkAction<Promise<any>, IUsersState, null, IEdit>\r\n> = (roleId: number, userId: number) => {\r\n\treturn async (dispatch: Dispatch) => {\r\n\t\ttry {\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: UserActionTypes.EDIT_USER,\r\n\t\t\t\troleId,\r\n\t\t\t\tuserId\r\n\t\t\t});\r\n\t\t} catch (err) {\r\n\t\t\tconsole.error(err);\r\n\t\t}\r\n\t};\r\n};\r\n\r\nexport const removeUser: ActionCreator<\r\n\tThunkAction<Promise<any>, IUsersState, null, IRemove>\r\n> = (roleId: number, userId: number) => {\r\n\treturn async (dispatch: Dispatch) => {\r\n\t\ttry {\r\n\t\t\tawait delay()\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: UserActionTypes.REMOVE_USER,\r\n\t\t\t\troleId,\r\n\t\t\t\tuserId\r\n\t\t\t});\r\n\t\t\tdispatch({type: UserActionTypes.CREATE_OPTIONS})\r\n\t\t}\r\n\t\tcatch (err) {\r\n\t\t\tconsole.error(err);\r\n\t\t}\r\n\t};\r\n};\r\n\r\n\r\nexport const setIsDetail: ActionCreator<\r\n\tThunkAction<Promise<any>, IUsersState, null, ISetIsDetail>\r\n> = (isDetail: boolean) => {\r\n\treturn async (dispatch: Dispatch) => {\r\n\t\ttry {\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: UserActionTypes.SET_IS_DETAIL,\r\n\t\t\t\tisDetail\r\n\t\t\t});\r\n\t\t}\r\n\t\tcatch (err) {\r\n\t\t\tconsole.error(err);\r\n\t\t}\r\n\t};\r\n};\r\n\r\nexport const storeUser: ActionCreator<\r\n\tThunkAction<Promise<any>, IAppState, null, IStore>\r\n> = (user: IUser, formMode: string) => {\r\n\treturn async (dispatch: Dispatch, getState: () => IAppState) => {\r\n\t\ttry {\r\n\t\t\tif (formMode === 'add') {\r\n\t\t\t\tawait delay(); \r\n\r\n\t\t\t\t// if userId == -1 nadji max\r\n\t\t\t\t// return dispatch<any>(addUser(xxx))\r\n\t\t\t\t// \t.then((categoryId: number) => {\r\n\t\t\t\t// \t\treturn categoryId;\r\n\t\t\t\t// \t});\r\n\r\n\t\t\t\tawait dispatch({\r\n\t\t\t\t\ttype: UserActionTypes.STORE_USER,\r\n\t\t\t\t\tuser,\r\n\t\t\t\t\tformMode\r\n\t\t\t\t});\r\n\t\t\t\t// dodao na Zlataru\r\n\t\t\t\tdispatch({\r\n\t\t\t\t\ttype: TopActionTypes.AUTHENTICATE,\r\n\t\t\t\t\tuser\r\n\t\t\t\t});\r\n\t\t\t\treturn user;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tawait delay();\r\n\t\t\t\tdispatch({\r\n\t\t\t\t\ttype: UserActionTypes.STORE_USER,\r\n\t\t\t\t\tuser,\r\n\t\t\t\t\tformMode\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\tdispatch({type: UserActionTypes.CREATE_OPTIONS})\r\n\t\t} \r\n\t\tcatch (err) {\r\n\t\t\tconsole.error(err);\r\n\t\t}\r\n\t};\r\n};\r\n\r\nconst delay = (): Promise<any> => {\r\n\treturn new Promise((resolve, reject) => {\r\n\t\tsetTimeout(() => {\r\n\t\t\tresolve({\r\n\t\t\t\t'status': 200,\r\n\t\t\t\t'content-type': 'application/json',\r\n\t\t\t\t'data': {\r\n\t\t\t\t\t'results': 1\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t}, 50)\r\n\t})\r\n}\r\n\r\nexport const cancelUser: ActionCreator<any> = () => {\r\n\treturn (dispatch: Dispatch) => {\r\n\t\ttry {\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: UserActionTypes.CANCEL_USER\r\n\t\t\t});\r\n\t\t} catch (err) {\r\n\t\t\tconsole.error(err);\r\n\t\t}\r\n\t};\r\n};\r\n\r\n/*\r\n * User Roles\r\n */\r\nexport const addRole: ActionCreator<\r\n\tThunkAction<Promise<any>, IUsersState, null, IAddRole>\r\n> = () => {\r\n\treturn async (dispatch: Dispatch) => {\r\n\t\ttry {\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: UserActionTypes.ADD_ROLE\r\n\t\t\t});\r\n\t\t} catch (err) {\r\n\t\t\tconsole.error(err);\r\n\t\t}\r\n\t};\r\n};\r\n\r\nexport const toggleRole: ActionCreator<\r\n\tThunkAction<Promise<any>, IUsersState, null, IEditRole>\r\n> = (roleId: number) => {\r\n\treturn async (dispatch: Dispatch) => {\r\n\t\ttry {\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: UserActionTypes.TOGGLE_ROLE,\r\n\t\t\t\troleId\r\n\t\t\t});\r\n\t\t} catch (err) {\r\n\t\t\tconsole.error(err);\r\n\t\t}\r\n\t};\r\n};\r\n\r\n\r\nexport const editRole: ActionCreator<\r\n\tThunkAction<Promise<any>, IUsersState, null, IEditRole>\r\n> = (roleId: number) => {\r\n\treturn async (dispatch: Dispatch) => {\r\n\t\ttry {\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: UserActionTypes.EDIT_ROLE,\r\n\t\t\t\troleId\r\n\t\t\t});\r\n\t\t} catch (err) {\r\n\t\t\tconsole.error(err);\r\n\t\t}\r\n\t};\r\n};\r\n\r\nexport const removeRole: ActionCreator<\r\n\tThunkAction<Promise<any>, IUsersState, null, IRemoveRole>\r\n> = (roleId: number) => {\r\n\treturn async (dispatch: Dispatch) => {\r\n\t\ttry {\r\n\t\t\tawait delay()\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: UserActionTypes.REMOVE_ROLE,\r\n\t\t\t\troleId: roleId\r\n\t\t\t});\r\n\t\t} catch (err) {\r\n\t\t\tconsole.error(err);\r\n\t\t}\r\n\t};\r\n};\r\n\r\nexport const storeRole: ActionCreator<\r\n\tThunkAction<Promise<any>, IUsersState, null, IStoreRole>\r\n> = (group: IRole) => {\r\n\treturn async (dispatch: Dispatch) => {\r\n\t\ttry {\r\n\t\t\t// await updateRoleFromLocalStorage(group);\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: UserActionTypes.STORE_ROLE,\r\n\t\t\t\tgroup\r\n\t\t\t});\r\n\t\t} catch (err) {\r\n\t\t\tconsole.error(err);\r\n\t\t}\r\n\t};\r\n};\r\n\r\n","// Import redux types\r\nimport { ActionCreator, Dispatch } from 'redux';\r\nimport { ThunkAction } from 'redux-thunk';\r\n// Import Tag Typing\r\nimport { ITag, ITagState } from './types';\r\nimport data from \"./data.json\"\r\nconst storageTagsDemo: ITag[] = data;\r\n\r\n// Create Action Constants\r\nexport enum TagActionTypes {\r\n\tGET_ALL_TAGS = 'GET_ALL_TAGS',\r\n  \tGET_TAG = 'GET_TAG'\r\n}\r\n\r\n// Interface for Get All Action Type\r\nexport interface IGetAll {\r\n\ttype: TagActionTypes.GET_ALL_TAGS;\r\n\ttags: ITag[];\r\n }\r\n \r\nexport interface IGet {\r\n\ttype: TagActionTypes.GET_TAG;\r\n\ttag: ITag;\r\n}\r\n\r\n// localStorage\r\nexport const SUPPORT_TAGS = 'SUPPORT_TAGS' \r\nconst storageTags: ITag[] = [\r\n]\r\n\r\n\r\n// Combine the action types with a union (we assume there are more)\r\nexport type TagActions = IGetAll | IGet;\r\n\r\nconst isWebStorageSupported = () => 'localStorage' in window\r\n\r\n// Get All Action <Promise<Return Type>, State Interface, Type of Param, Type of Action>\r\nexport const getAllTags: ActionCreator<\r\n  ThunkAction<Promise<any>, ITagState, null, IGetAll>\r\n> = () => {\r\n  return async (dispatch: Dispatch) => {\r\n    try {\r\n\t\t// const response = await axios.get('https://swapi.co/api/people/');\r\n\t\tif (isWebStorageSupported()) {\r\n\t\t\tconst sTags = localStorage.getItem(SUPPORT_TAGS);\r\n\t\t\tif (sTags !== null) {\r\n\t\t\t\tconst Tags: ITag[] = JSON.parse(sTags);\r\n\t\t\t\tTags.map(g => storageTags.push(g))\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tstorageTagsDemo.map(g => storageTags.push(g))\t\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {\r\n\t\t\tstorageTagsDemo.map(g => storageTags.push(g))\r\n\t\t}\r\n\r\n\t\t//const response = await getTagsFromLocalStorage(); \r\n      dispatch({\r\n        type: TagActionTypes.GET_ALL_TAGS,\r\n        tags: storageTags //response.data.results,\r\n      });\r\n    } catch (err) {\r\n      console.error(err);\r\n    }\r\n  };\r\n};\r\n\r\n\r\n\r\n\r\n","// Import Reducer type\r\nimport { Reducer } from 'redux';\r\n\r\nimport {\r\n\tUserActions,\r\n\tUserActionTypes\r\n} from './actions';\r\n\r\nimport { IUser, IRole, IUsersState } from './types'\r\n\r\nexport const SUPPORT_USERS = 'SUPPORT_USERS';\r\n\r\nexport const initialUser: IUser = {\r\n\troleId: 0,\r\n\tuserId: 0,\r\n\tuserName: '',\r\n\tpwd: '',\r\n\tdepartment: 'neki',\r\n\tcreatedBy: 0,\r\n\tcreated: new Date()\r\n};\r\n\r\nexport const initialUserRole: IRole = {\r\n\troleId: 0,\r\n\ttitle: '',\r\n\tcolor: 'lightgreen',\r\n\tusers: [],\r\n\tisExpanded: false,\r\n\tcreatedBy: 0,\r\n\tcreated: new Date()\r\n};\r\n\r\n\r\n// Define the initial state\r\nexport const initialUsersState: IUsersState = {\r\n\troles: [],\r\n\tuser: undefined,\r\n\tallUsers: [],\r\n\troleOptions: [],\r\n\tuserOptions: [],\r\n\tloading: false,\r\n\tformMode: 'display',\r\n\troleIdEditing: -1,\r\n\tisDetail: false\r\n};\r\n\r\n\r\n/*\r\nconst getUser = (\r\n\t\t\troles: IRole[], \r\n\t\t\troleId: number, \r\n\t\t\tuserId: number) : IUser|undefined => {\r\n\tconst group = roles.find(g => g.roleId === roleId)\r\n\tif (!group)\r\n\t\treturn undefined;\r\n\r\n\tconst user = group\r\n\t\t\t\t\t\t\t.users\r\n\t\t\t\t\t\t\t.find(q => q.userId === userId);\r\n\treturn user;\r\n}\r\n*/\r\n\r\n\r\nconst aTypesToStore = Object.keys(UserActionTypes)\r\n\t.filter(a => a !== UserActionTypes.GET_ALL_USERS);\r\n\r\nexport const userReducer: Reducer<IUsersState, UserActions> = (state, action) => {\r\n\tconst newState = myReducer(state, action);\r\n\tif (aTypesToStore.includes(action.type)) {\r\n\t\tlocalStorage.setItem(SUPPORT_USERS, JSON.stringify(newState.roles));\r\n\t}\r\n\treturn newState;\r\n}\r\n\r\nconst myReducer: Reducer<IUsersState, UserActions> = (\r\n\tstate = initialUsersState,\r\n\taction\r\n) => {\r\n\tswitch (action.type) {\r\n\r\n\t\tcase UserActionTypes.GET_ALL_USERS: {\r\n\t\t\tconst { roles } = action;\r\n\t\t\tconsole.log('roles', roles)\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\troles\r\n\t\t\t};\r\n\t\t}\r\n\t\t//roleOptions: roles.map(g => ({ label: g.title, value: g.roleId })),\r\n\t\t//userOptions: allUsers.map(user => ({ label: user.name, value: user.userId }))\r\n\r\n\t\tcase UserActionTypes.CREATE_OPTIONS: {\r\n\t\t\tconst {roles} = state;\r\n\t\t\tlet allUsers: IUser[] = [];\r\n\t\t\troles.map(g => {\r\n\t\t\t\t//console.log('g', g)\r\n\t\t\t\tallUsers = allUsers.concat(g.users)\r\n\t\t\t});\r\n\t\t\tconsole.log('allUsers', allUsers)\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tallUsers,\r\n\t\t\t\troleOptions: roles.map(g => ({ label: g.title, value: g.roleId })),\r\n\t\t\t\tuserOptions: allUsers.map(user => ({ label: user.userName, value: user.userId }))\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tcase UserActionTypes.GET_USER: {\r\n\t\t\tlet user = undefined;\r\n\t\t\tfor (let role of state.roles) {\r\n\t\t\t\tuser = role.users\r\n\t\t\t\t\t.find(user => user.userId === action.userId);\r\n\t\t\t\tif (user)\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tuser\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tcase UserActionTypes.ADD_USER: {\r\n\t\t\tlet userIdMax = 0;\r\n\t\t\tfor (let role of state.roles) {\r\n\t\t\t\tfor (let user of role.users) \r\n\t\t\t\t\tif (user.userId > userIdMax)\r\n\t\t\t\t\t\tuserIdMax = user.userId\r\n\t\t\t}\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tformMode: 'add',\r\n\t\t\t\tuser: { \r\n\t\t\t\t\t...initialUser, \r\n\t\t\t\t\tcreatedBy: action.createdBy,\r\n\t\t\t\t\troleId: action.roleId, \r\n\t\t\t\t\tuserId: userIdMax + 1,\r\n\t\t\t\t\ttext: action.text\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tcase UserActionTypes.EDIT_USER: {\r\n\t\t\tconst userRole = state.roles.find(g => g.roleId === action.roleId);\r\n\t\t\tconst user = userRole!.users\r\n\t\t\t\t.find(user => user.userId === action.userId);\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tformMode: 'edit',\r\n\t\t\t\tuser\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tcase UserActionTypes.STORE_USER: {\r\n\t\t\tconst { user, formMode } = action;\r\n\t\t\tif (formMode === 'add') { // state.formMode\r\n\t\t\t\tconsole.log(' UserActionTypes.STORE_USER user', user)\r\n\t\t\t\tif (user.roleId === 0 && !state.roles.map(g => g.roleId).includes(0)) {\r\n\t\t\t\t\tconsole.log('unisao')\r\n\t\t\t\t\t// do something\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\t...state,\r\n\t\t\t\t\t\tformMode: 'edit',\r\n\t\t\t\t\t\troles: [\r\n\t\t\t\t\t\t\t...state.roles,\r\n\t\t\t\t\t\t\t{ \r\n\t\t\t\t\t\t\t\t...initialUserRole, \r\n\t\t\t\t\t\t\t\troleId: 0,\r\n\t\t\t\t\t\t\t\ttitle: 'Unknown',\r\n\t\t\t\t\t\t\t\tusers: [user]\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t]\r\n\t\t\t\t\t};\r\n\t\t\t\t}\r\n\t\t\t\treturn {\r\n\t\t\t\t\t...state,\r\n\t\t\t\t\tformMode: 'edit',\r\n\t\t\t\t\troles: state.roles.map(g => g.roleId !== user.roleId ?\r\n\t\t\t\t\t\t{ ...g, users: [...g.users] }\r\n\t\t\t\t\t\t:\r\n\t\t\t\t\t\t{ ...g, users: [...g.users, { ...user }] }\r\n\t\t\t\t\t)\r\n\t\t\t\t};\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tconst { roles } = state;\r\n\t\t\t\tconst {user} = action;\r\n\t\t\t\tconst userId: number = user.roleId;\r\n\t\t\t\tconst g = roles.find(g => g.roleId === user.roleId);\r\n\t\t\t\tconst q = g!.users.find(q => q.userId === user.userId);\r\n\t\t\t\tif (q) { // change user\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\t...state,\r\n\t\t\t\t\t\tformMode: 'edit',\r\n\t\t\t\t\t\troles: roles.map(g => g.roleId !== user.roleId\r\n\t\t\t\t\t\t\t? { ...g, users: [...g.users]\t}\r\n\t\t\t\t\t\t\t: {\r\n\t\t\t\t\t\t\t\t...g, \r\n\t\t\t\t\t\t\t\tusers: g.users\r\n\t\t\t\t\t\t\t\t\t.map(q => q.userId !== user.userId ?\r\n\t\t\t\t\t\t\t\t\t\tq : { ...user }\r\n\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t};\r\n\t\t\t\t}\r\n\t\t\t\telse { // assing user to another group\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\t...state,\r\n\t\t\t\t\t\tformMode: 'edit',\r\n\t\t\t\t\t\troles: roles.map(g => g.roleId !== user.roleId\r\n\t\t\t\t\t\t\t? { ...g, users: [...g.users.filter(q=> q.userId !== user.userId)]\t}\r\n\t\t\t\t\t\t\t: {\t...g, users: [...g.users, { ...user } ]\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t};\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tcase UserActionTypes.CANCEL_USER: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tformMode: 'display',\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tcase UserActionTypes.REMOVE_USER: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tformMode: 'display',\r\n\t\t\t\tuser: undefined,\r\n\t\t\t\troles: state.roles.map(g => g.roleId !== action.roleId ?\r\n\t\t\t\t\t{ ...g, users: [...g.users] }\r\n\t\t\t\t\t:\r\n\t\t\t\t\t{ ...g, users: g.users.filter(q => q.userId !== action.userId) }\r\n\t\t\t\t)\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tcase UserActionTypes.SET_IS_DETAIL: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tisDetail: action.isDetail\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t///////////////////////////////////////////////////////////////////////////////////\r\n\t\t// groups\r\n\r\n\t\tcase UserActionTypes.ADD_ROLE: {\r\n\t\t\tlet roleId = Math.max(...state.roles.map(g => g.roleId)) + 1\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\troleIdEditing: roleId,\r\n\t\t\t\troles: [...state.roles, { ...initialUserRole, title: \"New Section\", roleId: roleId }]\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tcase UserActionTypes.TOGGLE_ROLE: {\r\n\t\t\tconsole.log(action)\r\n\t\t\tconst group = state.roles.find(g => g.roleId === action.roleId);\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\troles: state.roles.map(g => g.roleId !== action.roleId\r\n\t\t\t\t\t? g\r\n\t\t\t\t\t: { ...g, isExpanded: !g.isExpanded }\r\n\t\t\t\t)\r\n\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tcase UserActionTypes.EDIT_ROLE: {\r\n\t\t\tconst group = state.roles.find(g => g.roleId === action.roleId)\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\troleIdEditing: group!.roleId\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tcase UserActionTypes.STORE_ROLE: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\troleIdEditing: -1,\r\n\t\t\t\troles: state.roles.map(g => g.roleId !== action.group.roleId ?\r\n\t\t\t\t\tg\r\n\t\t\t\t\t:\r\n\t\t\t\t\t{ ...g, title: action.group.title }\r\n\t\t\t\t)\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tcase UserActionTypes.REMOVE_ROLE: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\troles: state.roles.reduce((acc: IRole[], g) => {\r\n\t\t\t\t\tif (g.roleId !== action.roleId)\r\n\t\t\t\t\t\tacc.push({ ...g, users: [...g.users] })\r\n\t\t\t\t\treturn acc\r\n\t\t\t\t}, [])\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n};\r\n\r\n","// Import Reducer type\r\nimport { Reducer } from 'redux';\r\nimport {\r\n  TagActions,\r\n  TagActionTypes\r\n} from './actions';\r\n\r\nimport {ITag, ITagState } from './types'\r\n\r\nconst initialTag: ITag = {\r\n\ttagId: 0,\r\n\tname: ''\r\n};\r\n\r\nconst initialTagState: ITagState = {\r\n\ttags: [],\r\n\tloading: false,\r\n\tformMode: 'display'\r\n};\r\n\r\n\r\nexport const tagReducer: Reducer<ITagState, TagActions> = (\r\n  state = initialTagState,\r\n  action\r\n) => {\r\n  switch (action.type) {\r\n\r\n   case TagActionTypes.GET_ALL_TAGS: {\r\n\t\treturn {\r\n        ...state,\r\n        tags: action.tags.map(tag => ({...tag}) ),\r\n      };\r\n\t} \r\n\r\n \tcase TagActionTypes.GET_TAG: {\r\n      return {\r\n\t\t  ...state,\r\n        tag: action.tag\r\n      };\r\n\t}    \r\n\r\n\tdefault:\r\n   \t\treturn state;\r\n  }\r\n};","// Import Reducer type\r\nimport { Reducer } from 'redux';\r\nimport {\r\n\tSUPPORT_TOP, TopActions, TopActionTypes\r\n} from './actions';\r\nimport { ITop, ITopState } from './types';\r\n\r\nconst initialTop: ITop = {\r\n\tnavbarOpen: true,\r\n\tisAuthenticated: null,\r\n\tuuid: null\r\n};\r\n\r\nconst initialTopState: ITopState = {\r\n\ttop: initialTop\r\n};\r\n\r\nconst aTypesToStore = Object.keys(TopActionTypes).filter(a => a !== TopActionTypes.LOAD_TOP);\r\n\r\nexport const topReducer: Reducer<ITopState, TopActions> = (state, action) => {\r\n\tconst newState = myReducer(state, action);\r\n\tif (aTypesToStore.includes(action.type)) {\r\n\t\tlocalStorage.setItem(SUPPORT_TOP, JSON.stringify(newState.top));\r\n\t}\r\n\treturn newState;\r\n}\r\n\r\nconst myReducer: Reducer<ITopState, TopActions> = (\r\n\tstate = initialTopState,\r\n\taction\r\n) => {\r\n\tswitch (action.type) {\r\n\r\n\t\tcase TopActionTypes.LOAD_TOP: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\ttop: action.top\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tcase TopActionTypes.REGISTER: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\ttop: {\r\n\t\t\t\t\tnavbarOpen: true,\r\n\t\t\t\t\tisAuthenticated: true,\r\n\t\t\t\t\tuuid: \"placeholder-uuid\",\r\n\t\t\t\t\tauth: {\r\n\t\t\t\t\t\twho: action.user,\r\n\t\t\t\t\t\tauthenticated: new Date(),\r\n\t\t\t\t\t\tvisited: new Date()\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tcase TopActionTypes.REGISTER_USERNAME_EXISTS: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\ttop: {\r\n\t\t\t\t\t...state.top,\r\n\t\t\t\t\tauthError: \"Username already exists, please chose another!\"\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t}\t\t\r\n\r\n\t\tcase TopActionTypes.NAVBAR_TOGGLE: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\ttop: {\r\n\t\t\t\t\t...state.top,\r\n\t\t\t\t\tnavbarOpen: !state.top.navbarOpen\t\t\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t}\t\r\n\r\n\t\tcase TopActionTypes.AUTHENTICATE: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\ttop: {\r\n\t\t\t\t\tnavbarOpen: true,\r\n\t\t\t\t\tisAuthenticated: true,\r\n\t\t\t\t\tuuid: \"placeholder-uuid\",\r\n\t\t\t\t\tauth: {\r\n\t\t\t\t\t\twho: action.user,\r\n\t\t\t\t\t\tauthenticated: new Date(),\r\n\t\t\t\t\t\tvisited: new Date()\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tcase TopActionTypes.UNAUTHENTICATE: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\ttop: {\r\n\t\t\t\t\tnavbarOpen: true,\r\n\t\t\t\t\tisAuthenticated: false,\r\n\t\t\t\t\tuuid: null\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tcase TopActionTypes.AUTHENTICATE_WRONG_USERNAME: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\ttop: {\r\n\t\t\t\t\t...state.top,\r\n\t\t\t\t\tauthError: \"User doesn't exist!\"\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tcase TopActionTypes.AUTHENTICATE_WRONG_PWD: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\ttop: {\r\n\t\t\t\t\t...state.top,\r\n\t\t\t\t\tauthError: \"Password doesn't match!\"\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t}\r\n\r\n\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n};","import { applyMiddleware, combineReducers, createStore, Store } from 'redux';\r\nimport thunk from 'redux-thunk';\r\n\r\nimport { categoriesReducer } from '../Categories/categoriesReducer';\r\nimport { answerReducer } from '../Answers/reducer';\r\n\r\nimport { IAnswerState } from '../Answers/types';\r\nimport { ICategoriesState } from '../Categories/types';\r\nimport { IUsersState } from '../user/types';\r\nimport { userReducer } from '../user/reducer';\r\nimport { ITagState } from '../roleTags/types';\r\nimport { tagReducer } from '../roleTags/reducer';\r\nimport { ITopState } from '../Top/types';\r\nimport { topReducer } from '../Top/reducer';\r\n\r\nexport interface IAppState {\r\n  categoriesState: ICategoriesState;\r\n  answerState: IAnswerState;\r\n  usersState: IUsersState;\r\n  tagState: ITagState;\r\n  topState: ITopState\r\n}\r\n\r\n// Create the root reducer\r\nconst rootReducer = combineReducers<IAppState>({\r\n  categoriesState: categoriesReducer,\r\n  answerState: answerReducer,\r\n  usersState: userReducer,\r\n  tagState: tagReducer,\r\n  topState: topReducer\r\n});\r\n\r\n// Create a configure store function of type `IAppState`\r\nexport default function configureStore(): Store<IAppState, any> {\r\n  const store = createStore(rootReducer, undefined, applyMiddleware(thunk));\r\n  return store;\r\n}","import * as React from 'react';\r\nimport { createRef } from 'react'\r\n\r\nimport Autosuggest from 'react-autosuggest';\r\nimport AutosuggestHighlightMatch from \"autosuggest-highlight/match\";\r\nimport AutosuggestHighlightParse from \"autosuggest-highlight/parse\";\r\n\r\n\r\nimport { IQuestion, ICategory, ICategoryState } from '../Categories/types'\r\nimport './AutoSuggest.css'\r\n\r\n\r\n// https://developer.mozilla.org/en/docs/Web/JavaScript/Guide/Regular_Expression\r\n// s#Using_Special_Characters\r\nfunction escapeRegexCharacters(str: string): string {\r\n\treturn str.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&');\r\n}\r\n\r\n\r\nlet inputAutosuggest = createRef<HTMLInputElement>();\r\n\r\nconst QuestionAutosuggestMulti = Autosuggest as { new(): Autosuggest<IQuestion, ICategory> };\r\n\r\nexport class AutoSuggest extends React.Component<{ \r\n\tcategories: ICategory[], \r\n\tcategoryQuestions: Map<number, ICategoryState>,\r\n\ttekst: string|undefined, \r\n\tonSelectQuestion: (categoryId: number, questionId: number) => void }, any> {\r\n\t// region Fields\r\n\r\n\tstate: any;\r\n\t//inputAutosuggest: React.RefObject<HTMLInputElement>;\r\n\t// endregion region Constructor\r\n\tconstructor(props: any) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tvalue: props.tekst || '',\r\n\t\t\tsuggestions: this.getSuggestions(''),\r\n\t\t\thighlighted: ''\r\n\t\t};\r\n\t\t//this.inputAutosuggest = createRef<HTMLInputElement>();\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\t\tsetTimeout(() => {\r\n\t\t\t//inputAutosuggest!.current!.focus();\r\n\t\t\tsetTimeout(() => {\r\n\t\t\t\twindow.focus()\r\n\t\t\t\tinputAutosuggest!.current!.focus();\r\n\t\t\t}, 500)\r\n\r\n\t\t}, 100)\r\n\r\n\t\t// console.log('componentDidMount', document)\r\n\t\t// console.log(document?.getElementById('inputAutoSuggest'))\r\n\t\t//document?.getElementById('inputAutoSuggest')?.focus(); \r\n\t}\r\n\r\n\t// endregion region Rendering methods\r\n\trender(): JSX.Element {\r\n\t\tconst { value, suggestions } = this.state;\r\n\r\n\t\treturn <QuestionAutosuggestMulti\r\n\t\t\tonSuggestionsClearRequested={this.onSuggestionsClearRequested}  // (sl) added\r\n\t\t\tmultiSection={true}\r\n\t\t\tsuggestions={suggestions}\r\n\t\t\tonSuggestionsFetchRequested={this.onSuggestionsFetchRequested.bind(this)}\r\n\t\t\tonSuggestionSelected={this.onSuggestionSelected.bind(this)}\r\n\t\t\tgetSuggestionValue={this.getSuggestionValue}\r\n\t\t\trenderSuggestion={this.renderSuggestion}\r\n\t\t\trenderSectionTitle={this.renderSectionTitle}\r\n\t\t\tgetSectionSuggestions={this.getSectionSuggestions}\r\n\t\t\t// onSuggestionHighlighted={this.onSuggestionHighlighted} (sl)\r\n\t\t\tonSuggestionHighlighted={this.onSuggestionHighlighted.bind(this)}\r\n\t\t\thighlightFirstSuggestion={true}\r\n\t\t\trenderInputComponent={this.renderInputComponent}\r\n\t\t\trenderSuggestionsContainer={this.renderSuggestionsContainer}\r\n\t\t\tinputProps={{\r\n\t\t\t\tplaceholder: `Type 'promocode'`,\r\n\t\t\t\tvalue,\r\n\t\t\t\tonChange: (e, changeEvent) => this.onChange(e, changeEvent),\r\n\t\t\t}}\r\n\r\n\t\t/>;\r\n\t}\r\n\r\n\tprotected onSuggestionsClearRequested = () => {\r\n\t\tthis.setState({\r\n\t\t\tsuggestions: []\r\n\t\t});\r\n\t};\r\n\r\n\r\n\r\n\tprotected onSuggestionSelected(event: React.FormEvent<any>, data: Autosuggest.SuggestionSelectedEventData<IQuestion>): void {\r\n\t\tconst question: IQuestion = data.suggestion;\r\n\t\t// alert(`Selected question is ${question.questionId} (${question.text}).`);\r\n\t\tthis.props.onSelectQuestion(question.categoryId, question.questionId);\r\n\t}\r\n\r\n\t/*\r\n\tprotected renderSuggestion(suggestion: Question, params: Autosuggest.RenderSuggestionParams): JSX.Element {\r\n\t\t const className = params.isHighlighted ? \"highlighted\" : undefined;\r\n\t\t return <span className={className}>{suggestion.name}</span>;\r\n\t}\r\n\t*/\r\n\r\n\tprotected renderSuggestion(suggestion: IQuestion, params: Autosuggest.RenderSuggestionParams): JSX.Element {\r\n\t\t// const className = params.isHighlighted ? \"highlighted\" : undefined;\r\n\t\t//return <span className={className}>{suggestion.name}</span>;\r\n\t\tconst matches = AutosuggestHighlightMatch(suggestion.text, params.query);\r\n\t\tconst parts = AutosuggestHighlightParse(suggestion.text, matches);\r\n\r\n\t\treturn (\r\n\t\t\t<span>\r\n\t\t\t\t{parts.map((part, index) => {\r\n\t\t\t\t\tconst className = part.highlight ? 'react-autosuggest__suggestion-match' : undefined;\r\n\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\t<span className={className} key={index}>\r\n\t\t\t\t\t\t\t{part.text}\r\n\t\t\t\t\t\t</span>\r\n\t\t\t\t\t);\r\n\t\t\t\t})}\r\n\t\t\t</span>\r\n\t\t);\r\n\t}\r\n\r\n\tprotected renderSectionTitle(section: ICategory): JSX.Element {\r\n\t\treturn <strong>{section.title}</strong>;\r\n\t}\r\n\r\n\t// protected renderInputComponent(inputProps: Autosuggest.InputProps<IQuestion>): JSX.Element {\r\n\t// \t const { onChange, onBlur, ...restInputProps } = inputProps;\r\n\t// \t return (\r\n\t// \t\t  <div>\r\n\t// \t\t\t\t<input {...restInputProps} />\r\n\t// \t\t  </div>\r\n\t// \t );\r\n\t// }\r\n\r\n\tprotected renderInputComponent(inputProps: Autosuggest.RenderInputComponentProps): JSX.Element {\r\n\t\tconst { ref, ...restInputProps } = inputProps;\r\n\t\t// if (ref !== undefined)\r\n\t\t// \tthis.inputAutosuggest = ref as React.RefObject<HTMLInputElement>;\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t<input {...restInputProps} ref={inputAutosuggest} />\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n\r\n\tprotected renderSuggestionsContainer({ containerProps, children, query }: Autosuggest.RenderSuggestionsContainerParams): JSX.Element {\r\n\t\treturn (\r\n\t\t\t<div {...containerProps}>\r\n\t\t\t\t<span>{children}</span>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n\t// endregion region Event handlers\r\n\r\n\tprotected onChange(event: /*React.ChangeEvent<HTMLInputElement>*/ React.FormEvent<any>, { newValue, method }: Autosuggest.ChangeEvent): void {\r\n\t\tthis.setState({ value: newValue });\r\n\t}\r\n\r\n\tprotected onSuggestionsFetchRequested({ value }: any): void {\r\n\t\tthis.setState({\r\n\t\t\tsuggestions: this.getSuggestions(value)\r\n\t\t});\r\n\t}\r\n\r\n\tprivate anyWord = (valueWordRegex: RegExp[], questionWords: string[]): boolean => {\r\n\t\tfor (let valWordRegex of valueWordRegex)\r\n\t\t\tfor (let questionWord of questionWords)\r\n\t\t\t\tif (valWordRegex.test(questionWord))\r\n\t\t\t\t\treturn true;\r\n\t\treturn false;\r\n\t}\r\n\t// endregion region Helper methods\r\n\tprotected getSuggestions(value: string): ICategory[] {\r\n\t\tconst escapedValue = escapeRegexCharacters(value.trim());\r\n\r\n\t\tif (escapedValue === '') {\r\n\t\t\treturn [];\r\n\t\t}\r\n\r\n\t\tconst valueWords = escapedValue.split(' ');\r\n\t\tconst valueWordRegex = valueWords.map(word => new RegExp(word, 'i'))\r\n\t\t// const regex = new RegExp('^' + escapedValue, 'i');\r\n\t\t// const regex = new RegExp(escapedValue, 'i');\r\n\r\n\t\t// return AutoSuggest.questions\t \r\n\t\t//  return this.props.categories\r\n\t\t// \t\t.map(section => {\r\n\t\t// \t\t\treturn {\r\n\t\t// \t\t\t\t\ttitle: section.title,\r\n\t\t// \t\t\t\t\tquestions: section\r\n\t\t// \t\t\t\t\t\t.questions\r\n\t\t// \t\t\t\t\t\t.filter(question => regex.test(question.text))\r\n\t\t// \t\t\t};\r\n\t\t// \t\t})\r\n\t\t// \t\t.filter(section => section.questions.length > 0);\r\n        const {categories, categoryQuestions} = this.props;\r\n\t\treturn categories\r\n\t\t\t.map(group => {\r\n\t\t\t\tconsole.log('categoryId:', group.categoryId, categoryQuestions.get(group.categoryId)!.questions)\r\n\t\t\t\treturn {\r\n\t\t\t\t\t...group,\r\n\t\t\t\t\tquestions: //.group.questions\r\n\t\t\t\t\t\tcategoryQuestions.get(group.categoryId)!.questions\r\n\t\t\t\t\t\t\t.filter(question => this.anyWord(valueWordRegex, question.words!))\r\n\t\t\t\t};\r\n\t\t\t})\r\n\t\t\t.filter(section => section.questions.length > 0);\r\n\t}\r\n\r\n\tprotected getSuggestionValue(suggestion: IQuestion) {\r\n\t\treturn suggestion.text;\r\n\t}\r\n\r\n\tprotected getSectionSuggestions(section: ICategory) {\r\n\t\treturn section.questions;\r\n\t}\r\n\r\n\tprotected onSuggestionHighlighted(params: Autosuggest.SuggestionHighlightedParams): void {\r\n\t\tthis.setState({\r\n\t\t\thighlighted: params.suggestion\r\n\t\t});\r\n\t}\r\n\t// endregion\r\n}\r\n\r\n","const palx = require('palx');\r\nexport const BASE_COLOR = '#666ee8';\r\nexport const COLORS = palx(BASE_COLOR);","import { connect } from 'react-redux';\r\nimport { IAppState } from '../../store/Store';\r\nimport {OptionName}  from '../components/OptionName'\r\n\r\ninterface IOwnProps {\r\n\tid: number\r\n}\r\n\r\nconst mapStateToProps = (store: IAppState, ownProps: IOwnProps ) => {\r\n\treturn {\r\n\t\toptions: store.usersState.userOptions,\r\n\t\tid: ownProps.id\r\n\t};\r\n};\r\n\r\n\r\nexport default connect(mapStateToProps)(OptionName);\r\n","import { IOption, OptionValue } from \"../types\";\r\n\r\ntype Props<T extends OptionValue> = {\r\n    options: IOption<T>[];\r\n    id: T;\r\n};\r\n\r\nexport interface IProps {\r\n\toptions: IOption<number>[];\r\n  id: number;\r\n}\r\n\r\nexport function OptionName<T extends OptionValue>(props: Props<T>) {\r\n    const { id } = props;\r\n    const option: IOption<T>|undefined = props.options.find(option => option.value === id);\r\n    return (\r\n        <span>\r\n            {option\r\n                ? option!.label\r\n                : \"Unknown\"\r\n            }\r\n        </span>\r\n    );\r\n}","import React, { useState } from 'react';\r\nimport { useFormik } from 'formik';\r\nimport * as Yup from 'yup'\r\nimport { ICategoryFormProps } from '../types';\r\nimport { IAnswer } from '../../Answers/types';\r\n\r\nimport { Select } from '../../common/Select';\r\nimport { COLORS } from '../../formik/theme';\r\n//import { MultiSelect } from '../../common/MultiSelect';\r\nimport { IOption } from '../../common/types';\r\nimport UserName from '../../common/containers/UserName';\r\n//import { number } from 'yup/lib/locale';\r\n\r\n\r\nconst Form: React.FC<ICategoryFormProps> = (props: ICategoryFormProps) => {\r\n\r\n  const category = props.category!;\r\n  const { categoryId, title, questions, isExpanded, createdBy, created } = category;\r\n\r\n  const formik = useFormik({\r\n    enableReinitialize: true,\r\n    initialValues: {\r\n      categoryId,\r\n      title,\r\n      questions,\r\n      isExpanded,\r\n      createdBy,\r\n      created\r\n    },\r\n    validationSchema: Yup.object({\r\n      title: Yup.string()\r\n        .max(150, 'Must be 150 characters or less')\r\n        .required('Required'),\r\n      /*answers: Yup.string()\r\n        .max(20, 'Must be 20 characters or less')\r\n        .required('Required'),\r\n      email: Yup.string()\r\n        .email('Invalid email address')\r\n        .required('Required'),*/\r\n    }),\r\n    onSubmit: values => {\r\n      // alert(JSON.stringify(values, null, 2));\r\n      props.saveForm(values, props.formMode)\r\n    }\r\n  });\r\n\r\n  const isEdit = () => props.formMode === 'edit';\r\n\r\n  console.log('RENDERING', formik.values)\r\n  return (\r\n    <>\r\n      <form onSubmit={formik.handleSubmit}>\r\n      \r\n        <label className=\"id\" htmlFor=\"categoryId\">CategoryId:</label>\r\n        {/* <input\r\n          id=\"categoryId\"\r\n          name=\"categoryId\"\r\n          type=\"text\"\r\n          onChange={formik.handleChange}\r\n          onBlur={formik.handleBlur}\r\n          value={formik.values.categoryId}\r\n          disabled\r\n          style={{ width: '50px' }}\r\n        />\r\n        {formik.touched.categoryId && formik.errors.categoryId ? (\r\n          <div>{formik.errors.categoryId}</div>\r\n        ) : null} */}\r\n        <span id=\"categoryId\">{formik.values.categoryId}</span>\r\n        \r\n        <label htmlFor=\"title\">Title</label>\r\n        <textarea\r\n          id=\"title\"\r\n          name=\"title\"\r\n          onChange={formik.handleChange}\r\n          //onBlur={formik.handleBlur}\r\n          onBlur={(e: React.FormEvent<HTMLTextAreaElement>): void => {\r\n            if (isEdit() && formik.initialValues.title !== formik.values.title)\r\n              formik.submitForm();\r\n          }}\r\n          value={formik.values.title}\r\n          style={{ width: '100%' }}\r\n          rows={2}\r\n        />\r\n        {formik.touched.title && formik.errors.title ? (\r\n          <div>{formik.errors.title}</div>\r\n        ) : null}\r\n\r\n        <br />\r\n\r\n   \r\n        <label className=\"id\" htmlFor=\"createdBy\">Created by:</label>\r\n        <UserName id={formik.values.createdBy} />\r\n\t\t\t  <br/>\r\n        {/* <Select\r\n          id=\"createdBy\"\r\n          name=\"createdBy\"\r\n          options={props.userOptions}\r\n          //onChange={formik.handleChange}\r\n          onChange={(e, value) => {\r\n            formik.setFieldValue(\"createdBy\", value);\r\n            if (isEdit()) formik.submitForm();\r\n          }}\r\n          value={formik.values.createdBy}\r\n        // onChange={(gradeId: number) =>\r\n        // \tdispatch({\r\n        // \t\ttype: StudentActionTypes.STUDENT_ASSIGN_GRADE,\r\n        // \t\tstudentGradeIds: {\r\n        // \t\t\tstudentId: student!.id,\r\n        // \t\t\tgradeId: gradeId,\r\n        // \t\t\tgradeName: gradesAll[gradeId].name\r\n        // \t\t}\r\n        // \t})\r\n        // }\r\n        /> */}\r\n\r\n        {/* \r\n      <label htmlFor=\"answers\">Answers</label>\r\n      <input\r\n        id=\"answers\"\r\n        name=\"answers\"\r\n        type=\"text\"\r\n        onChange={formik.handleChange}\r\n        onBlur={formik.handleBlur}\r\n        value={formik.values.answers}\r\n      />\r\n      {formik.touched.answers && formik.errors.answers ? (\r\n        <div>{formik.errors.answers}</div>\r\n      ) : null}\r\n\r\n\r\n\r\n      <label htmlFor=\"email\">Email Address</label>\r\n      <input\r\n        id=\"email\"\r\n        name=\"email\"\r\n        type=\"email\"\r\n        onChange={formik.handleChange}\r\n        onBlur={formik.handleBlur}\r\n        value={formik.values.email}\r\n      />\r\n      {formik.touched.email && formik.errors.email ? (\r\n        <div>{formik.errors.email}</div>\r\n      ) : null} */}\r\n\r\n        {/* <button type=\"submit\">Submit</button> */}\r\n\r\n        {/* <label htmlFor=\"features\">Features</label>\r\n        <MultiSelect\r\n          id=\"features\"\r\n          name=\"features\"\r\n          label=\"Select features...\"\r\n          options={props.featureOptions}\r\n          onChange={()=>{}} \r\n          value={[]}\r\n          // onChange={(e, value) => {\r\n          //   formik.setFieldValue(\"status\", value)\r\n          //   if (isEdit()) formik.submitForm();\r\n          // }}\r\n          // value={formik.values.status}\r\n        /> */}\r\n\r\n        {!isEdit() &&\r\n          <div className=\"buttons\">\r\n            {props.canEdit &&\r\n              <button onClick={() => props.cancel()}>Cancel</button>}\r\n            {props.canEdit &&\r\n              <button type=\"submit\">Save</button>}\r\n          </div>\r\n        }\r\n      </form>\r\n\r\n      <label className=\"id\" htmlFor=\"created\">Created:</label>\r\n      {/* <input\r\n        id=\"created\"\r\n        name=\"text\"\r\n        type=\"text\"\r\n        onChange={formik.handleChange}\r\n        onBlur={formik.handleBlur}\r\n        value={formik.values.created.toLocaleDateString()}\r\n        disabled={true}\r\n      />\r\n      {formik.touched.created && formik.errors.created ? (\r\n        <div>{formik.errors.created}</div>\r\n      ) : null} */}\r\n      <span>{formik.values.created.toLocaleDateString()}</span>\r\n\r\n    </>\r\n  );\r\n};\r\n\r\n\r\nconst color = 'blue';\r\n\r\nexport const CategoryForm: React.FC<ICategoryFormProps> = (props: ICategoryFormProps) => {\r\n  return (\r\n    <div style={{ height: '100%' }} className=\"formik-example formik-example--blue\">\r\n      <div\r\n        style={{\r\n          height: '100%',\r\n          background: COLORS[color][5],\r\n          padding: '1rem 1rem',\r\n        }}\r\n      >\r\n        <div\r\n          style={{\r\n            borderRadius: '4px',\r\n            boxShadow: '0 8px 16px rgba(0,0,0,.2)',\r\n            background: '#fff',\r\n            maxWidth: '90%',\r\n            margin: '0 auto',\r\n            padding: '1rem',\r\n          }}\r\n        >\r\n          <div className=\"formik-example formik-example--blue\">\r\n            <Form {...props} />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}","// import * as React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { IAppState } from '../../store/Store';\r\nimport { ICategory } from '../types'\r\nimport { IAnswer } from '../../Answers/types'\r\n\r\nimport { Dispatch } from 'redux';  // ActionCreatorsMapObject, \r\nimport {IOption} from '../../common/types';\r\n\r\nimport {\r\n\tgetCategory, \r\n\taddCategory, \r\n\teditCategory,\r\n\tremoveCategory,\r\n\tstoreCategory,\r\n\tupdateCategory,\r\n\tcancelCategory,\r\n\tsetIsDetail,\r\n\tQuestionActions\r\n} from '../actions'\r\n\r\nimport { CategoryForm } from '../components/CategoryForm';\r\n\r\n\r\n\r\ninterface IProps {\r\n\tcanEdit: boolean\r\n}\r\n\r\n// Grab the categories from the store and make them available on props\r\nconst mapStateToProps = (store: IAppState, ownProps: IProps ) => {\r\n\tconst {categoriesState } = store;\r\n\tconst { category, formMode } = categoriesState; \r\n\treturn {\r\n\t\tcategory,\r\n\t\tformMode,\r\n\t\tcanEdit: ownProps.canEdit\r\n\t};\r\n};\r\n\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch<QuestionActions>) => {\r\n\treturn {\r\n\t\tonSelectCategory: (categoryId: number, questionId: number) => dispatch<any>(getCategory(categoryId)),\r\n\t\tadd: (categoryId: number, text: string, canEdit?: boolean) => dispatch<any>(addCategory(categoryId, text, canEdit)),\r\n\t\tedit: (categoryId: number) => dispatch<any>(editCategory(categoryId)),\r\n\t\tremove: (categoryId: number) => dispatch<any>(removeCategory(true, categoryId)),\r\n\t\tsaveForm: (category: ICategory, formMode: string) => \r\n\t\t\tdispatch<any>(formMode==='add'?storeCategory(true, category):updateCategory(true, category)),\r\n\t\tcancel: () => dispatch<any>(cancelCategory()),\r\n\t\tsetIsDetail: (isDetail: boolean) => {\r\n\t\t\tdispatch<any>(setIsDetail(isDetail))\r\n\t\t},\r\n\r\n\t}\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CategoryForm);\r\n","import * as React from 'react';\r\n\r\nimport Autosuggest from 'react-autosuggest';\r\nimport AutosuggestHighlightMatch from \"autosuggest-highlight/match\";\r\nimport AutosuggestHighlightParse from \"autosuggest-highlight/parse\";\r\n\r\nimport { IAnswer }  from '../Answers/types'\r\nimport './AutoSuggest.css'\r\nimport { IQuestion } from '../Categories/types';\r\n\r\n// https://developer.mozilla.org/en/docs/Web/JavaScript/Guide/Regular_Expression\r\n// s#Using_Special_Characters\r\nfunction escapeRegexCharacters(str: string): string {\r\n\treturn str.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&');\r\n}\r\n\r\nconst QuestionAutosuggestMulti = Autosuggest as { new (): Autosuggest<IAnswer> };\r\n\r\ninterface IProps {\r\n\tanswersUnassigned: IAnswer[], \r\n\tquestion: IQuestion,\r\n\tassignQuestionAnswer: (categoryId: number, questionId: number, answerId: number) => void\r\n\tsetAnswerText?: (val: string) => void\r\n}\r\n\r\nexport class AutoSuggestAnswer extends React.Component<IProps, any> {\r\n\r\n\tstate: any;\r\n\r\n\tconstructor(props: any) {\r\n\t\t super(props);\r\n\r\n\t\t this.state = {\r\n\t\t\t  value: '',\r\n\t\t\t  suggestions: this.getSuggestions(''),\r\n\t\t\t  highlighted: ''\r\n\t\t };\r\n\t}\r\n\t// endregion region Rendering methods\r\n\trender(): JSX.Element {\r\n\t\t const {value, suggestions} = this.state;\r\n\r\n\t\t return <QuestionAutosuggestMulti\r\n\t\t \t  onSuggestionsClearRequested={this.onSuggestionsClearRequested}  // (sl) added\r\n\t\t\t  multiSection={false}\r\n\t\t\t  suggestions={suggestions}\r\n\t\t\t  onSuggestionsFetchRequested={this.onSuggestionsFetchRequested.bind(this)}\r\n\t\t\t  onSuggestionSelected={this.onSuggestionSelected.bind(this)}\r\n\t\t\t  getSuggestionValue={this.getSuggestionValue}\r\n\t\t\t  renderSuggestion={this.renderSuggestion}\r\n\t\t\t  // onSuggestionHighlighted={this.onSuggestionHighlighted} (sl)\r\n\t\t\t  onSuggestionHighlighted={this.onSuggestionHighlighted.bind(this)}  \r\n\t\t\t  highlightFirstSuggestion={true}\r\n\t\t\t  // renderInputComponent={this.renderInputComponent}\r\n\t\t\t  renderSuggestionsContainer={this.renderSuggestionsContainer}\r\n\t\t\t  inputProps={{\r\n\t\t\t\t\tplaceholder: `Search answers...`,\r\n\t\t\t\t\tvalue,\r\n\t\t\t\t\tonChange: (e, changeEvent) => this.onChange(e, changeEvent),\r\n\t\t\t  }}/>;\r\n\t}\r\n\r\n\tprotected onSuggestionsClearRequested = () => {\r\n\t\tthis.setState({\r\n\t\t  suggestions: []\r\n\t\t});\r\n\t };\r\n  \r\n  \r\n\r\n\tprotected onSuggestionSelected(event: React.FormEvent<any>, data: Autosuggest.SuggestionSelectedEventData<IAnswer>): void {\r\n\t\t const answer: IAnswer = data.suggestion;\r\n\t\t // alert(`Selected question is ${question.answerId} (${question.text}).`);\r\n\t\t this.props.assignQuestionAnswer(\r\n\t\t\t this.props.question.categoryId,\r\n\t\t\t this.props.question.questionId, \r\n\t\t\t answer.answerId);\r\n\t\tthis.setState({\r\n\t\t\tvalue: ''\r\n\t\t})\r\n\t}\r\n\r\n\t/*\r\n\tprotected renderSuggestion(suggestion: Question, params: Autosuggest.RenderSuggestionParams): JSX.Element {\r\n\t\t const className = params.isHighlighted ? \"highlighted\" : undefined;\r\n\t\t return <span className={className}>{suggestion.name}</span>;\r\n\t}\r\n\t*/\r\n\r\n\tprotected renderSuggestion(suggestion: IAnswer, params: Autosuggest.RenderSuggestionParams): JSX.Element {\r\n\t\t// const className = params.isHighlighted ? \"highlighted\" : undefined;\r\n\t\t//return <span className={className}>{suggestion.name}</span>;\r\n\t\tconst matches = AutosuggestHighlightMatch(suggestion.text, params.query);\r\n\t\tconst parts = AutosuggestHighlightParse(suggestion.text, matches);\r\n\t \r\n\t\treturn (\r\n\t\t  <span>\r\n\t\t\t {parts.map((part, index) => {\r\n\t\t\t\tconst className = part.highlight ? 'react-autosuggest__suggestion-match' : undefined;\r\n\t \r\n\t\t\t\treturn (\r\n\t\t\t\t  <span className={className} key={index}>\r\n\t\t\t\t\t {part.text}\r\n\t\t\t\t  </span>\r\n\t\t\t\t);\r\n\t\t\t })}\r\n\t\t  </span>\r\n\t\t);\r\n\t}\r\n\r\n\t// protected renderInputComponent(inputProps: Autosuggest.InputProps<IAnswer>): JSX.Element {\r\n\t// \t const { onChange, onBlur, ...restInputProps } = inputProps;\r\n\t// \t return (\r\n\t// \t\t  <div>\r\n\t// \t\t\t\t<input {...restInputProps} />\r\n\t// \t\t  </div>\r\n\t// \t );\r\n\t// }\r\n\r\n\tprotected renderSuggestionsContainer({containerProps, children, query}: Autosuggest.RenderSuggestionsContainerParams): JSX.Element {\r\n\t\t return (\r\n\t\t\t  <div {...containerProps}>\r\n\t\t\t\t\t<span>{children}</span>\r\n\t\t\t  </div>\r\n\t\t );\r\n\t}\r\n\t// endregion region Event handlers\r\n\tprotected onChange(event: React.FormEvent<any>, {newValue, method}: Autosuggest.ChangeEvent): void {\r\n\t\tif (this.props.setAnswerText) {\r\n\t\t\tthis.props.setAnswerText(newValue);\r\n\t\t}\r\n\t\tthis.setState({value: newValue});\r\n\t}\r\n\r\n\tprotected onSuggestionsFetchRequested({value}: any): void {\r\n\t\t this.setState({\r\n\t\t\t  suggestions: this.getSuggestions(value)\r\n\t\t });\r\n\t}\r\n\r\n\tprivate anyWord = (valueWordRegex: RegExp[], questionWords: string[]) : boolean => {\r\n\t\tfor (let valWordRegex of valueWordRegex)\r\n\t\t\tfor (let questionWord of questionWords)\r\n\t\t\t\tif (valWordRegex.test(questionWord))\r\n\t\t\t\t\treturn true;\r\n\t\treturn false;\r\n\t} \r\n\t// endregion region Helper methods\r\n\tprotected getSuggestions(value: string): IAnswer[] {\r\n\t\tconst escapedValue = escapeRegexCharacters(value.trim());\r\n\r\n\t\tif (escapedValue === '') {\r\n\t\t\treturn [];\r\n\t\t}\r\n\r\n\t\tconst valueWords = escapedValue.split(' ');\r\n\t\tconst valueWordRegex = valueWords.map(word => new RegExp(word, 'i') )\r\n\t\t// const regex = new RegExp('^' + escapedValue, 'i');\r\n\t\t// const regex = new RegExp(escapedValue, 'i');\r\n\r\n\t\treturn this.props.answersUnassigned.filter(answer => this.anyWord(valueWordRegex, answer.words!))\r\n\t}\r\n\r\n\tprotected getSuggestionValue(suggestion: IAnswer) {\r\n\t\t return suggestion.text;\r\n\t}\r\n\r\n\r\n\tprotected onSuggestionHighlighted(params: Autosuggest.SuggestionHighlightedParams): void {\r\n\t\t this.setState({\r\n\t\t\t  highlighted: params.suggestion\r\n\t\t });\r\n\t}\r\n\t// endregion\r\n}\r\n\r\n","import { useRef, useState, useEffect } from 'react';\r\n\r\ninterface IHoverProps {\r\n\tisHovered: boolean;\r\n}\r\n\r\n// Hook\r\nexport function useHover() : [React.RefObject<HTMLDivElement>, IHoverProps] {\r\n\tconst [hoverProps, setValue] = useState({ isHovered: false });\r\n \r\n\tconst divRef = useRef<HTMLDivElement>(null);\r\n \r\n\tconst handleMouseOver = () => setValue({ isHovered: true });\r\n\tconst handleMouseOut = () => setValue({ isHovered: false });\r\n \r\n\tuseEffect(\r\n\t  () => {\r\n\t\t const node = divRef.current;\r\n\t\t if (node) {\r\n\t\t\tnode.addEventListener('mouseenter', () => handleMouseOver());\r\n\t\t\tnode.addEventListener('mouseleave', () => handleMouseOut());\r\n \r\n\t\t\treturn () => {\r\n\t\t\t\tnode.removeEventListener('mouseenter', () => handleMouseOver());\r\n\t\t\t\tnode.removeEventListener('mouseleave', () => handleMouseOut());\r\n\t\t\t};\r\n\t\t }\r\n\t  }, [divRef.current] // Recall only if ref changes\r\n\t);\r\n \r\n\treturn [divRef, hoverProps];\r\n}\r\n\r\n","import * as React from 'react';\r\n\r\nimport { useHover } from '../../common/useHover'\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faWindowClose, faEdit, faCopy } from '@fortawesome/free-solid-svg-icons'\r\n\r\nimport { IQuestion, IQuestionAnswer } from '../types';\r\n\r\n\r\ninterface IQuestionAnswerRowProps {\r\n\tquestion: IQuestion;\r\n\tquestionAnswer: IQuestionAnswer;\r\n\tselectQuestionAnswer: (categoryId: number, questionId: number, answerId: number) => void;\r\n\tcopyQuestionAnswer: (categoryId: number, questionId: number, answerId: number) => void;\r\n\tremoveQuestionAnswer: (categoryId: number, questionId: number, answerId: number) => void;\r\n}\r\n\r\nconst QuestionAnswerRow: React.FC<IQuestionAnswerRowProps> = (props: IQuestionAnswerRowProps) => {\r\n\r\n\tconst [hoverRef, hoverProps] = useHover();\r\n\r\n\tconst { question, questionAnswer, selectQuestionAnswer, copyQuestionAnswer, removeQuestionAnswer } = props;\r\n\tconst { categoryId, questionId } = question;\r\n\tconst { answerId, text } = questionAnswer;\r\n\tconst id = `inputQuestionAnswer${answerId}`;\r\n\r\n\treturn (\r\n\t\t<div ref={hoverRef} className=\"name\">\r\n\t\t\t{/* <input id={id} type=\"hidden\" value={questionAnswer.text}></input> */}\r\n\t\t\t<button\r\n\t\t\t\tclassName=\"question-button\"\r\n\t\t\t\tonClick={() => {\r\n\t\t\t\t\t// selectQuestionAnswer(categoryId, questionId, answerId)}\r\n\t\t\t\t\talert('No action for the time being')\r\n\t\t\t\t}}\r\n\t\t\t>\r\n\t\t\t\t{questionAnswer.text}\r\n\t\t\t</button>\r\n\t\t\t{hoverProps.isHovered &&\r\n\t\t\t\t<button className=\"button-edit\" title=\"Copy Answer to Cliboard\"\r\n\t\t\t\t\tonClick={(e) => {\r\n\t\t\t\t\t\t//const input = document.querySelector<HTMLInputElement>('#' + id);\r\n\t\t\t\t\t\tif (navigator.clipboard) {\r\n\t\t\t\t\t\t\tnavigator.clipboard.writeText(`${questionAnswer.text}`) // input!.value)\r\n\t\t\t\t\t\t\t\t.then(() => {\r\n\t\t\t\t\t\t\t\t\tconsole.log('Copied to clipboard successfully.');\r\n\t\t\t\t\t\t\t\t}, (err) => {\r\n\t\t\t\t\t\t\t\t\tconsole.log('Failed to copy the text to clipboard.', err);\r\n\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\te.stopPropagation();\r\n\t\t\t\t\t\t// copyQuestionAnswer(categoryId, questionId, answerId);\r\n\t\t\t\t\t}\r\n\t\t\t\t\t}>\r\n\t\t\t\t\t<FontAwesomeIcon icon={faCopy} color='lightblue' />\r\n\t\t\t\t</button>\r\n\t\t\t}\r\n\t\t\t{hoverProps.isHovered &&\r\n\t\t\t\t<button \r\n\t\t\t\t\tclassName=\"button-remove\"\r\n\t\t\t\t\ttitle=\"Remove\"\r\n\t\t\t\t\tonClick={(e) => {\r\n\t\t\t\t\t\t\tremoveQuestionAnswer(categoryId, questionId, answerId);\r\n\t\t\t\t\t\t\te.preventDefault();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t>\r\n\t\t\t\t\t<FontAwesomeIcon icon={faWindowClose} color='lightblue' />\r\n\t\t\t\t</button>\r\n\t\t\t}\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default QuestionAnswerRow\r\n\r\n","import * as React from 'react';\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faPlus, faWindowClose } from '@fortawesome/free-solid-svg-icons'\r\n\r\nimport { IQuestion, IQuestionAnswer } from '../types';\r\nimport { IAnswer } from '../../Answers/types';\r\nimport { AutoSuggestAnswer } from '../../components/AutoSuggestAnswer';\r\nimport QuestionAnswerRow from './QuestionAnswerRow';\r\n\r\ninterface IProps {\r\n\tquestion: IQuestion,\r\n\tquestionAnswers: IQuestionAnswer[],\r\n\tanswers?: IAnswer[],\r\n\tcanEdit: boolean,\r\n\tformMode: string,\r\n\tselectQuestionAnswer: (categoryId: number, questionId: number, answerId: number) => void,\r\n\tcopyQuestionAnswer: (categoryId: number, questionId: number, answerId: number) => void,\r\n\tremoveQuestionAnswer: (categoryId: number, questionId: number, answerId: number) => void,\r\n\tassignQuestionAnswer?: (categoryId: number, questionId: number, answerId: number, tekst?: string) => void,\r\n\tsetAnswerText?: (val: string) => void,\r\n\tsetIsDetail: (isDetail: boolean) => void\r\n}\r\n\r\nconst QuestionAnswers: React.FC<IProps> = (props: IProps) => {\r\n\tconst { \r\n\t\tquestion, \r\n\t\tquestionAnswers, \r\n\t\tanswers, \r\n\t\tcanEdit, \r\n\t\tformMode, \r\n\t\tselectQuestionAnswer, copyQuestionAnswer, removeQuestionAnswer, \r\n\t\tassignQuestionAnswer, setIsDetail \r\n\t} = props; \r\n\tconst answersUnassigned = answers?.filter(a => !question.answers.map(a=>a.answerId).includes(a.answerId))\r\n\r\n\tconst [tekst, setTekst] = React.useState('');\r\n\tconst setAnswerText = (val: string) => {\r\n\t\tsetTekst(val);\r\n\t}\r\n\r\n\tconst assignQuestionAnswerTekst = () => {\r\n\t\tif (assignQuestionAnswer) {\r\n\t\t\t//storeAnswer({ answerId: -1, text: tekst }, 'add')\r\n\t\t\tassignQuestionAnswer(\r\n\t\t\t\tquestion.categoryId,\r\n\t\t\t\tquestion.questionId, \r\n\t\t\t\t-1,\r\n\t\t\t\ttekst\r\n\t\t\t);\r\n\t\t}\r\n\t}\r\n\r\n\tconst goDetail = (isDetail: boolean) => {\r\n\t\tsetIsDetail(isDetail);\r\n\r\n\t\tconst divDetailView = document.getElementById('divDetailView');\r\n\t\tdivDetailView!.classList.add('detail-view-open');\r\n\t\tdivDetailView!.style.zIndex = '3';\r\n\t\t//document.body.classList.add('hide-scroll-bar');\r\n  \t}\t\r\n\r\n\r\n    return (\r\n      <div className=\"name-container question-answers\">\r\n\t\t\t{/* { questionAnswers.length === 0 && \r\n\t\t\t\t<div>\r\n\t\t\t\t\tNo answers yet\r\n\t\t\t\t</div>\r\n\t\t\t} */}\r\n\t\t\t{ questionAnswers.length > -1 && \r\n\t\t\t\t<>\r\n\t\t\t\t<table width=\"100%\">\r\n\t\t\t\t\t<thead>\r\n\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t<th>{ questionAnswers.length === 0 ? 'No answers yet' : 'Answers'}</th>\r\n\t\t\t\t\t\t\t{ canEdit && formMode !== 'display' && <th></th> }\r\n\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t</thead>\r\n\t\t\t\t\t<tbody>\r\n\t\t\t\t\t\t{ questionAnswers.map(qa => \r\n\t\t\t\t\t\t\t<tr key={qa.answerId}>\r\n\t\t\t\t\t\t\t\t<td className=\"name\" title={`AnswerId:${qa.answerId}\\nAssigned: ${qa.assigned.toLocaleDateString()} ${qa.assigned.toLocaleTimeString()}`}>\r\n\t\t\t\t\t\t\t\t\t<QuestionAnswerRow\r\n\t\t\t\t\t\t\t\t\t\tkey={qa.answerId}\r\n\t\t\t\t\t\t\t\t\t\tquestion={question}\r\n\t\t\t\t\t\t\t\t\t\tquestionAnswer={qa}\r\n\t\t\t\t\t\t\t\t\t\tselectQuestionAnswer={selectQuestionAnswer}\r\n\t\t\t\t\t\t\t\t\t\tcopyQuestionAnswer={copyQuestionAnswer}\r\n\t\t\t\t\t\t\t\t\t\tremoveQuestionAnswer={removeQuestionAnswer}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t{/* <td className=\"name\" title={`AnswerId:${qa.answerId}\\nAssigned: ${qa.assigned.toLocaleDateString()} ${qa.assigned.toLocaleTimeString()}`}>\r\n\t\t\t\t\t\t\t\t\t{qa.text}\r\n\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t{ canEdit && formMode !== 'display' &&\r\n\t\t\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t\t\t\t<button className=\"button-remove\" title=\"Remove Answer\" \r\n\t\t\t\t\t\t\t\t\t\t\tonClick={(e) => { \r\n\t\t\t\t\t\t\t\t\t\t\t\te.stopPropagation();\r\n\t\t\t\t\t\t\t\t\t\t\t\te.preventDefault();\r\n\t\t\t\t\t\t\t\t\t\t\t\tremoveQuestionAnswer!(question.categoryId, question.questionId, qa.answerId)\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\t\t\t<FontAwesomeIcon icon={faWindowClose}  color='lightblue' />\r\n\t\t\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t} */}\r\n\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t{canEdit && formMode !== 'display' && <tr>\r\n\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t\t<AutoSuggestAnswer\r\n\t\t\t\t\t\t\t\t\tquestion={question}\r\n\t\t\t\t\t\t\t\t\tanswersUnassigned={answersUnassigned!}\r\n\t\t\t\t\t\t\t\t\tassignQuestionAnswer={assignQuestionAnswer!}\r\n\t\t\t\t\t\t\t\t\tsetAnswerText={setAnswerText}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t<td width=\"35px\">\r\n\t\t\t\t\t\t\t\t<button className=\"button-edit\" title=\"Add a new Answer\" onClick={\r\n\t\t\t\t\t\t\t\t\t(e) => {\r\n\t\t\t\t\t\t\t\t\t\tgoDetail(true);\r\n\t\t\t\t\t\t\t\t\t\te.preventDefault()\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}>\r\n\t\t\t\t\t\t\t\t\t<FontAwesomeIcon icon={faPlus} color='lightblue' />\r\n\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t</tr>}\r\n\t\t\t\t\t</tbody>\r\n\t\t\t\t</table>\r\n\t\t\t\t</>\r\n\t\t\t}\r\n      </div>\r\n    );\r\n  }\r\n\r\nexport default QuestionAnswers\r\n\r\n","import React from \"react\";\r\nimport { IOption, OptionValue } from \"./types\";\r\n\r\ntype Props<T extends OptionValue> = {\r\n    options: IOption<T>[];\r\n    value: T;\r\n    onChange: (e: React.FormEvent<HTMLSelectElement>, value: T) => void;\r\n    id: string,\r\n    name: string,\r\n    disabled?: boolean\r\n};\r\n\r\nexport function Select<T extends OptionValue>(props: Props<T>) {\r\n    const disabled = props.disabled ? true : false;\r\n    function handleOnChange(e: React.FormEvent<HTMLSelectElement>) {\r\n        const { selectedIndex } = e.currentTarget;\r\n        const selectedOption: IOption<T> = props.options[selectedIndex];\r\n        props.onChange(e, selectedOption.value);\r\n    }\r\n\r\n    return (\r\n        <select\r\n            id={props.id}\r\n            value={props.value}\r\n            onChange={handleOnChange}\r\n            disabled={disabled}\r\n        >\r\n            {props.options.map(option => (\r\n                <option key={option.value} value={option.value}>\r\n                    {option.label}\r\n                </option>\r\n            ))}\r\n        </select>\r\n    );\r\n}","export const sourceOptions = [\r\n    { label: \"Unknown\", value: 0 },\r\n    { label: \"Gmail\", value: 1 },\r\n    { label: \"Outlook\", value: 2 },\r\n    { label: \"Phone\", value: 3 },\r\n    { label: \"Chat\", value: 4 },\r\n    { label: \"Slack\", value: 5 }\r\n]","export const statusOptions = [\r\n    { label: \"Unknown\", value: 0 },\r\n    { label: \"In progress\", value: 1 },\r\n    { label: \"Can't reproduce\", value: 2 },\r\n    { label: \"Blocked\", value: 3 },\r\n    { label: \"Complete\", value: 4 }\r\n]","import React, { useState } from 'react';\r\nimport { useFormik } from 'formik';\r\nimport * as Yup from 'yup'\r\nimport { IQuestion, IQuestionAnswer, IQuestionFormProps } from '../types';\r\nimport { IAnswer } from '../../Answers/types';\r\n\r\nimport QuestionAnswers from './QuestionAnswers'\r\nimport { Select } from '../../common/Select';\r\nimport { COLORS } from '../../formik/theme';\r\n//import { MultiSelect } from '../../common/MultiSelect';\r\nimport { IOption } from '../../common/types';\r\nimport UserName from '../../common/containers/UserName';\r\n//import { number } from 'yup/lib/locale';\r\n\r\nimport { sourceOptions } from '../sourceOptions'\r\nimport { statusOptions } from '../statusOptions'\r\n\r\n\r\nconst Form: React.FC<IQuestionFormProps> = (props: IQuestionFormProps) => {\r\n\r\n  const formik = useFormik({\r\n    enableReinitialize: true,\r\n    initialValues: {\r\n      categoryId: props.question.categoryId,\r\n      questionId: props.question.questionId,\r\n      text: props.question.text,\r\n      source: props.question.source,\r\n      status: props.question.status,\r\n      answers: props.question.answers,\r\n      createdBy: props.question.createdBy,\r\n      created: props.question.created\r\n    },\r\n    validationSchema: Yup.object({\r\n      text: Yup.string()\r\n        .max(150, 'Must be 150 characters or less')\r\n        .required('Required'),\r\n      /*answers: Yup.string()\r\n        .max(20, 'Must be 20 characters or less')\r\n        .required('Required'),\r\n      email: Yup.string()\r\n        .email('Invalid email address')\r\n        .required('Required'),*/\r\n    }),\r\n    onSubmit: values => {\r\n      // alert(JSON.stringify(values, null, 2));\r\n      props.saveForm(values, props.formMode)\r\n    }\r\n  });\r\n\r\n  const isEdit = () => props.formMode === 'edit';\r\n\r\n  console.log('RENDERING', formik.values)\r\n  return (\r\n    <>\r\n      <form onSubmit={formik.handleSubmit}>\r\n      \r\n        <label className=\"id\" htmlFor=\"questionId\">QuestionId:</label>\r\n        {/* <input\r\n          id=\"questionId\"\r\n          name=\"questionId\"\r\n          type=\"text\"\r\n          onChange={formik.handleChange}\r\n          onBlur={formik.handleBlur}\r\n          value={formik.values.questionId}\r\n          disabled\r\n          style={{ width: '50px' }}\r\n        />\r\n        {formik.touched.questionId && formik.errors.questionId ? (\r\n          <div>{formik.errors.questionId}</div>\r\n        ) : null} */}\r\n        <span id=\"questionId\">{formik.values.questionId}</span>\r\n\r\n        <label htmlFor=\"categoryId\">Category</label>\r\n        <Select\r\n          id=\"categoryId\"\r\n          name=\"categoryId\"\r\n          options={props.categoryOptions}\r\n          //onChange={formik.handleChange}\r\n          onChange={(e, value) => {\r\n            formik.setFieldValue(\"categoryId\", value);\r\n            if (isEdit()) formik.submitForm();\r\n          }}\r\n          value={formik.values.categoryId}\r\n        />\r\n\r\n        <label htmlFor=\"text\">Name</label>\r\n        <textarea\r\n          id=\"text\"\r\n          name=\"text\"\r\n          onChange={formik.handleChange}\r\n          //onBlur={formik.handleBlur}\r\n          onBlur={(e: React.FormEvent<HTMLTextAreaElement>): void => {\r\n            if (isEdit() && formik.initialValues.text !== formik.values.text)\r\n              formik.submitForm();\r\n          }}\r\n          value={formik.values.text}\r\n          style={{ width: '100%' }}\r\n          rows={2}\r\n        />\r\n        {formik.touched.text && formik.errors.text ? (\r\n          <div>{formik.errors.text}</div>\r\n        ) : null}\r\n\r\n        <label htmlFor=\"source\">Source</label>\r\n        <Select\r\n          id=\"source\"\r\n          name=\"source\"\r\n          options={sourceOptions}\r\n          // onChange={formik.handleChange}\r\n          onChange={(e, value) => {\r\n            formik.setFieldValue(\"source\", value)\r\n            if (isEdit()) formik.submitForm();\r\n          }}\r\n          value={formik.values.source}\r\n        />\r\n\r\n        <br />\r\n        <QuestionAnswers\r\n          question={props.question}\r\n          questionAnswers={props.questionAnswers}\r\n          answers={props.answers}\r\n          canEdit={props.canEdit}\r\n          formMode={props.formMode}\r\n          selectQuestionAnswer={props.selectQuestionAnswer}\r\n          copyQuestionAnswer={props.copyQuestionAnswer}\r\n          removeQuestionAnswer={props.removeQuestionAnswer}\r\n          assignQuestionAnswer={props.assignQuestionAnswer}\r\n          setIsDetail={props.setIsDetail}\r\n        />\r\n        <br />\r\n\r\n        <label htmlFor=\"status\">Status</label>\r\n        <Select\r\n          id=\"status\"\r\n          name=\"status\"\r\n          options={statusOptions}\r\n          //onChange={formik.handleChange}\r\n          onChange={(e, value) => {\r\n            formik.setFieldValue(\"status\", value)\r\n            if (isEdit()) formik.submitForm();\r\n          }}\r\n          value={formik.values.status}\r\n        />\r\n\r\n        <label className=\"id\" htmlFor=\"createdBy\">Created by:</label>\r\n        <UserName id={formik.values.createdBy} />\r\n\t\t\t  <br/>\r\n        {/* <Select\r\n          id=\"createdBy\"\r\n          name=\"createdBy\"\r\n          options={props.userOptions}\r\n          //onChange={formik.handleChange}\r\n          onChange={(e, value) => {\r\n            formik.setFieldValue(\"createdBy\", value);\r\n            if (isEdit()) formik.submitForm();\r\n          }}\r\n          value={formik.values.createdBy}\r\n        // onChange={(gradeId: number) =>\r\n        // \tdispatch({\r\n        // \t\ttype: StudentActionTypes.STUDENT_ASSIGN_GRADE,\r\n        // \t\tstudentGradeIds: {\r\n        // \t\t\tstudentId: student!.id,\r\n        // \t\t\tgradeId: gradeId,\r\n        // \t\t\tgradeName: gradesAll[gradeId].name\r\n        // \t\t}\r\n        // \t})\r\n        // }\r\n        /> */}\r\n\r\n        {/* \r\n      <label htmlFor=\"answers\">Answers</label>\r\n      <input\r\n        id=\"answers\"\r\n        name=\"answers\"\r\n        type=\"text\"\r\n        onChange={formik.handleChange}\r\n        onBlur={formik.handleBlur}\r\n        value={formik.values.answers}\r\n      />\r\n      {formik.touched.answers && formik.errors.answers ? (\r\n        <div>{formik.errors.answers}</div>\r\n      ) : null}\r\n\r\n\r\n\r\n      <label htmlFor=\"email\">Email Address</label>\r\n      <input\r\n        id=\"email\"\r\n        name=\"email\"\r\n        type=\"email\"\r\n        onChange={formik.handleChange}\r\n        onBlur={formik.handleBlur}\r\n        value={formik.values.email}\r\n      />\r\n      {formik.touched.email && formik.errors.email ? (\r\n        <div>{formik.errors.email}</div>\r\n      ) : null} */}\r\n\r\n        {/* <button type=\"submit\">Submit</button> */}\r\n\r\n        {/* <label htmlFor=\"features\">Features</label>\r\n        <MultiSelect\r\n          id=\"features\"\r\n          name=\"features\"\r\n          label=\"Select features...\"\r\n          options={props.featureOptions}\r\n          onChange={()=>{}} \r\n          value={[]}\r\n          // onChange={(e, value) => {\r\n          //   formik.setFieldValue(\"status\", value)\r\n          //   if (isEdit()) formik.submitForm();\r\n          // }}\r\n          // value={formik.values.status}\r\n        /> */}\r\n\r\n        {!isEdit() &&\r\n          <div className=\"buttons\">\r\n            {props.canEdit &&\r\n              <button onClick={() => props.cancel()}>Cancel</button>}\r\n            {props.canEdit &&\r\n              <button type=\"submit\">Save</button>}\r\n          </div>\r\n        }\r\n      </form>\r\n\r\n      <label className=\"id\" htmlFor=\"created\">Created:</label>\r\n      {/* <input\r\n        id=\"created\"\r\n        name=\"text\"\r\n        type=\"text\"\r\n        onChange={formik.handleChange}\r\n        onBlur={formik.handleBlur}\r\n        value={formik.values.created.toLocaleDateString()}\r\n        disabled={true}\r\n      />\r\n      {formik.touched.created && formik.errors.created ? (\r\n        <div>{formik.errors.created}</div>\r\n      ) : null} */}\r\n      <span>{formik.values.created.toLocaleDateString()}</span>\r\n\r\n    </>\r\n  );\r\n};\r\n\r\n\r\nconst color = 'blue';\r\n\r\nexport const QuestionForm: React.FC<IQuestionFormProps> = (props: IQuestionFormProps) => {\r\n  return (\r\n    <div style={{ height: '100%' }} className=\"formik-example formik-example--blue\">\r\n      <div\r\n        style={{\r\n          height: '100%',\r\n          background: COLORS[color][5],\r\n          padding: '1rem 1rem',\r\n        }}\r\n      >\r\n        <div\r\n          style={{\r\n            borderRadius: '4px',\r\n            boxShadow: '0 8px 16px rgba(0,0,0,.2)',\r\n            background: '#fff',\r\n            maxWidth: '90%',\r\n            margin: '0 auto',\r\n            padding: '1rem',\r\n          }}\r\n        >\r\n          <div className=\"formik-example formik-example--blue\">\r\n            <Form {...props} />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}","// import * as React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { IAppState } from '../../store/Store';\r\nimport { IQuestion, IQuestionAnswer, ICategory } from '../types'\r\nimport { IAnswer } from '../../Answers/types'\r\n\r\nimport { Dispatch } from 'redux';  // ActionCreatorsMapObject, \r\nimport {IOption} from '../../common/types';\r\n\r\nimport { QuestionActions,  \r\n\tgetQuestion, \r\n\taddQuestion, \r\n\teditQuestion,\r\n\tremoveQuestion,\r\n\tstoreQuestion,\r\n\tupdateQuestion,\r\n\tcancelQuestion,\r\n\tremoveQuestionAnswer,\r\n\tassignQuestionAnswer,\r\n\tsetIsDetail,\r\n\taddAndAssignNewAnswer,\r\n\tselectQuestionAnswer,\r\n\tcopyQuestionAnswer,\r\n\ttoggleCategory\r\n} from '../actions'\r\n\r\nimport { QuestionForm } from '../components/QuestionForm';\r\n\r\nconst joinQuestionAnswers = (question: IQuestion | undefined, answers: IAnswer[]) : IQuestionAnswer[]=> {\r\n\tif (question === undefined || question.answers.length === 0 || answers === undefined)\r\n\t\treturn [];\r\n\tconst questionAnswers = question.answers.map(qa => ({\r\n\t\t\t...qa, text: answers.find(a => a.answerId === qa.answerId)!.text\r\n\t\t})\r\n\t);\r\n\treturn questionAnswers.sort((a,b) => a.assigned < b.assigned ? 1 : -1);\r\n}\r\n\r\ninterface IProps {\r\n\tcanEdit: boolean\r\n}\r\n\r\n// Grab the categories from the store and make them available on props\r\nconst mapStateToProps = (store: IAppState, ownProps: IProps ) => {\r\n\tconst {categoriesState, answerState } = store;\r\n\tconst { category, question, categoryOptions, formMode } = categoriesState; \r\n\tconst { answers } = answerState;\r\n\treturn {\r\n\t\tcategoryOptions,\r\n\t\tquestion: question!,\r\n\t\tquestionAnswers: joinQuestionAnswers(question, answers),\r\n\t\tanswers,\r\n\t\tformMode,\r\n\t\tcanEdit: ownProps.canEdit\r\n\t};\r\n};\r\n\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch<QuestionActions>) => {\r\n\treturn {\r\n\t\tonSelectQuestion: (categoryId: number, questionId: number) => dispatch<any>(getQuestion(categoryId, questionId)),\r\n\t\tadd: (categoryId: number, text: string, canEdit?: boolean) => dispatch<any>(addQuestion(categoryId, text, canEdit)),\r\n\t\tedit: (categoryId: number, questionId: number) => dispatch<any>(editQuestion(categoryId, questionId)),\r\n\t\tremove: (categoryId: number, questionId: number) => dispatch<any>(removeQuestion(true, categoryId, questionId)),\r\n\t\tsaveForm: (question: IQuestion, formMode: string) => \r\n\t\t\tdispatch<any>(formMode==='add'?storeQuestion(true, question):updateQuestion(true, question)),\r\n\t\tcancel: () => dispatch<any>(cancelQuestion()),\r\n\r\n\t\t// question answers\r\n\t\tselectQuestionAnswer: (categoryId: number, questionId: number, answerId: number) => \r\n\t\t\tdispatch<any>(selectQuestionAnswer(categoryId, questionId, answerId)),\r\n\t\tcopyQuestionAnswer: (categoryId: number, questionId: number, answerId: number) => \r\n\t\t\tdispatch<any>(copyQuestionAnswer(categoryId, questionId, answerId)),\r\n\t\tremoveQuestionAnswer: (categoryId: number, questionId: number, answerId: number) => \r\n\t\t\tdispatch<any>(removeQuestionAnswer(categoryId, questionId, answerId)),\r\n\r\n\t\tassignQuestionAnswer: (categoryId: number, questionId: number, answerId: number) => \r\n\t\t\tdispatch<any>(assignQuestionAnswer(categoryId, questionId, answerId)),\r\n\t\t\r\n\t\tsetIsDetail: (isDetail: boolean) => {\r\n\t\t\tdispatch<any>(setIsDetail(isDetail))\r\n\t\t},\r\n\r\n\t\taddAndAssignNewAnswer: (categoryId: number, questionId: number, answer: IAnswer, formMode: string) => {\r\n\t\t\tdispatch<any>(addAndAssignNewAnswer(categoryId, questionId, answer, formMode))\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(QuestionForm);\r\n\r\n","import * as React from 'react';\r\n\r\nimport { useHover } from '../../common/useHover'\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faWindowClose, faEdit } from '@fortawesome/free-solid-svg-icons'\r\n\r\nimport { IQuestion } from '../types';\r\n\r\n\r\ninterface IQuestionRowProps {\r\n\tquestion: IQuestion;\r\n\tonSelectQuestion: (categoryId: number, questionId: number) => IQuestion;\r\n\tedit: (categoryId: number, questionId: number) => void;\r\n\tremove: (categoryId: number, questionId: number) => void;\r\n}\r\n\r\nconst QuestionRow: React.FC<IQuestionRowProps> = (props: IQuestionRowProps) => {\r\n\r\n\tconst [hoverRef, hoverProps] = useHover();\r\n\r\n\tconst { question, onSelectQuestion, edit, remove } = props;\r\n\tconst { categoryId, questionId } = question;\r\n\r\n   return (\r\n\t\t<div ref={hoverRef} className=\"name\">\r\n\t\t\t<button\r\n\t\t\t\tclassName=\"question-button\"\r\n\t\t\t\tonClick={() => onSelectQuestion(categoryId, questionId)}>\r\n\t\t\t\t{question.text}\r\n\t\t\t</button>\r\n\t\t\t{hoverProps.isHovered && \r\n\t\t\t\t<button className=\"button-edit\" title=\"Edit\" onClick={() => edit(categoryId, questionId)}>\r\n\t\t\t\t\t<FontAwesomeIcon icon={faEdit} color='lightblue' />\r\n\t\t\t\t</button>\r\n\t\t\t}\r\n\t\t\t{hoverProps.isHovered &&\r\n\t\t\t\t<button className=\"button-remove\" title=\"Remove\" onClick={() => remove(categoryId, questionId)}>\r\n\t\t\t\t\t<FontAwesomeIcon icon={faWindowClose}  color='lightblue' />\r\n\t\t\t\t</button>\r\n\t\t\t}\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default QuestionRow\r\n\r\n","import * as React from 'react';\r\n\r\nimport { useHover } from '../../common/useHover'\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faWindowClose, faEdit, faCaretRight, faCaretDown } from '@fortawesome/free-solid-svg-icons'\r\n\r\nimport { ICategory } from '../types';\r\n\r\n\r\ninterface ICategoryRowProps {\r\n\tcategory: ICategory;\r\n\ttoggleCategory: (categoryId: number) => void;\r\n\teditCategory: (categoryId: number) => void;\r\n\tremoveCategory: (categoryId: number) => void;\r\n\tonSelectCategory: (categoryId: number) => void;\r\n}\r\n\r\nconst CategoryRow: React.FC<ICategoryRowProps> = (props: ICategoryRowProps) => {\r\n\r\n\tconst [hoverRef, hoverProps] = useHover();\r\n\tconst { category, toggleCategory, editCategory, removeCategory, onSelectCategory } = props;\r\n\tconst {categoryId, title, questions: categories, isExpanded} = category;\r\n\r\n\treturn (\r\n\t\t<div ref={hoverRef} key={categoryId} className=\"name\">\r\n\t\t\t<button\r\n\t\t\t\tclassName=\"button-edit\"\r\n\t\t\t\ttitle=\"Expand\"\r\n\t\t\t\tonClick={() => toggleCategory(categoryId)} \r\n\t\t\t\tstyle={{ marginLeft: '5px' }}\r\n\t\t\t>\r\n\t\t\t\t<FontAwesomeIcon icon={isExpanded?faCaretDown:faCaretRight} color='orange' size='lg' />\r\n\t\t\t</button>\r\n\t\t\t<span className='question-group-title' onClick={() => onSelectCategory(categoryId)}>{title}</span>\r\n\t\t\t{hoverProps.isHovered &&\r\n\t\t\t\t<button className=\"button-edit\" title=\"Edit Section\" onClick={() => editCategory(categoryId)}>\r\n\t\t\t\t\t<FontAwesomeIcon icon={faEdit} color='lightblue' />\r\n\t\t\t\t</button>\r\n\t\t\t}\r\n\t\t\t{hoverProps.isHovered && categories.length === 0 &&\r\n\t\t\t\t<button className=\"button-remove\" title=\"Remove Section\" onClick={() => removeCategory(categoryId)}>\r\n\t\t\t\t\t<FontAwesomeIcon icon={faWindowClose} color='lightblue' />\r\n\t\t\t\t</button>\r\n\t\t\t}\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default CategoryRow\r\n\r\n","import * as React from 'react';\r\nimport { useRef } from 'react'\r\nimport { faPlus, faWindowClose } from '@fortawesome/free-solid-svg-icons'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nimport { ICategoriesProps } from '../types'\r\n\r\n\r\nimport { AutoSuggest } from '../../components/AutoSuggest';\r\nimport ContainerQuestionForm from '../containers/ContainerQuestionForm';\r\nimport QuestionRow from './QuestionRow';\r\nimport CategoryRow from './CategoryRow';\r\nimport { useParams } from 'react-router-dom' // useRouteMatch\r\nimport { DetailView } from './DetailView';\r\n\r\nimport { COLORS } from '../../formik/theme';\r\nimport { updateCategory } from '../actions';\r\nconst color = 'blue';\r\n\r\nconst CategoryList: React.FC<ICategoriesProps> = (props: ICategoriesProps) => {\r\n\r\n\tconst { categories, categoryQuestions, question,\r\n\t\tformMode, categoryIdEditing, onSelectCategory, onSelectQuestion, add, edit, remove, canEdit,\r\n\t\taddCategory, toggleCategory, editCategory, removeCategory, storeCategory, updateCategory,\r\n\t\taddAndAssignNewAnswer,\r\n\t\twho } = props;\r\n\r\n\r\n\tconst inputEl = useRef<HTMLInputElement>(null);\r\n\tsetTimeout(() => {\r\n\t\tif (inputEl.current !== null) {\r\n\t\t\tinputEl.current!.select();\r\n\t\t\tinputEl.current!.focus()\r\n\t\t}\r\n\t}, 100)\r\n\r\n\t// const expandCategory = (categoryId: number): void => {\r\n\t// \tconst div = document.querySelector<HTMLDivElement>(\"#divCategory\" + categoryId);\r\n\t// \tconsole.log(div)\r\n\t// \tdiv!.style.display = 'block';\r\n\t// }\r\n\r\n\tconsole.log('RENDERUJEM Categories ----------->>>>>>>>>>')\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{categories.map(category => {\r\n\t\t\t\tconst { categoryId, title, isExpanded } = category;\r\n\t\t\t\tconst categoryState = categoryQuestions.get(categoryId);\r\n\t\t\t\tconst { questions } = categoryState!;\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<div key={categoryId} style={{ paddingBottom: '5px' }}>\r\n\t\t\t\t\t\t<div style={{ textAlign: 'start' }}>\r\n\t\t\t\t\t\t\t{categoryIdEditing === categoryId &&\r\n\t\t\t\t\t\t\t\t<input ref={inputEl} name=\"groupTitle\" type=\"text\"\r\n\t\t\t\t\t\t\t\t\tonBlur={(e) => updateCategory({ ...category, title: e.target.value })}\r\n\t\t\t\t\t\t\t\t\tdefaultValue={title}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t{categoryIdEditing !== categoryId && (\r\n\t\t\t\t\t\t\t\t<CategoryRow\r\n\t\t\t\t\t\t\t\t\tkey={category.categoryId}\r\n\t\t\t\t\t\t\t\t\tcategory={category}\r\n\t\t\t\t\t\t\t\t\tonSelectCategory={onSelectCategory}\r\n\t\t\t\t\t\t\t\t\ttoggleCategory={toggleCategory}\r\n\t\t\t\t\t\t\t\t\teditCategory={editCategory}\r\n\t\t\t\t\t\t\t\t\tremoveCategory={removeCategory}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t{isExpanded &&\r\n\t\t\t\t\t\t\t<div className=\"group-categories\" style={{ textAlign: 'start' }}>\r\n\t\t\t\t\t\t\t\t{questions.map(question =>\r\n\t\t\t\t\t\t\t\t\t<QuestionRow\r\n\t\t\t\t\t\t\t\t\t\tkey={question.questionId}\r\n\t\t\t\t\t\t\t\t\t\tquestion={question}\r\n\t\t\t\t\t\t\t\t\t\tonSelectQuestion={onSelectQuestion}\r\n\t\t\t\t\t\t\t\t\t\tedit={edit}\r\n\t\t\t\t\t\t\t\t\t\tremove={remove}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t<div style={{ marginLeft: '0%' }}>\r\n\t\t\t\t\t\t\t\t\t<button className=\"button-add\" title=\"Add a new Question\" onClick={() => add(category.categoryId, '')}>\r\n\t\t\t\t\t\t\t\t\t\t<FontAwesomeIcon icon={faPlus} size='xs' color='lightblue' />\r\n\t\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t);\r\n\t\t\t})\r\n\t\t\t}\r\n\r\n\t\t\t<div style={{ marginLeft: '1rem', textAlign: 'start' }}>\r\n\t\t\t\t<button className=\"button-add-category\" title=\"Add a new Category\" onClick={() => addCategory()}>\r\n\t\t\t\t\t<FontAwesomeIcon icon={faPlus} size='xs' color='lightblue' />\r\n\t\t\t\t</button>\r\n\t\t\t</div>\r\n\t\t</>\r\n\r\n\t)\r\n}\r\n\r\nexport default CategoryList\r\n\r\n","import * as React from 'react';\r\nimport { useRef, useState } from 'react'\r\n\r\nimport { ICategoriesProps } from '../types'\r\n\r\nimport { AutoSuggest } from '../../components/AutoSuggest';\r\nimport ContainerCategoryForm from '../containers/ContainerCategoryForm';\r\nimport ContainerQuestionForm from '../containers/ContainerQuestionForm';\r\nimport QuestionRow from './QuestionRow';\r\nimport CategoryRow from './CategoryRow';\r\nimport { useParams } from 'react-router-dom' // useRouteMatch\r\nimport { DetailView } from './DetailView';\r\n\r\nimport { COLORS } from '../../formik/theme';\r\nimport { Col, Collapse, Container, Row } from 'react-bootstrap';\r\nimport CategoryList from './CategoryList';\r\nconst color = 'blue';\r\n\r\ntype SupportParams = {\r\n\ttekst: string;\r\n};\r\n\r\nconst Page: React.FC<ICategoriesProps> = (props: ICategoriesProps) => {\r\n\r\n\tlet { tekst } = useParams<SupportParams>();\r\n\t\r\n\t// const { categories, categoryQuestions, category, question,\r\n\t// \tformMode, categoryIdEditing, onSelectQuestion, add, edit, remove, canEdit,\r\n\t// \taddCategory, toggleCategory, editCategory, removeCategory, storeCategory, updateCategory,\r\n\t// \taddAndAssignNewAnswer,\r\n\t// \twho } = props;\r\n\r\n\tconst { categories, categoryQuestions, category, question,\r\n\t\tformMode, categoryIdEditing, onSelectCategory, onSelectQuestion, add, edit, remove, canEdit,\r\n\t\taddCategory, toggleCategory, editCategory, removeCategory, storeCategory, updateCategory,\r\n\t\taddAndAssignNewAnswer,\r\n\t\twho } = props;\r\n\r\n\r\n\t//const [open, setOpen] = useState(false);\r\n\tconst open = categories && (category||question)\r\n\r\n\tconst inputEl = useRef<HTMLInputElement>(null);\r\n\tsetTimeout(() => {\r\n\t\tif (inputEl.current !== null) {\r\n\t\t\tinputEl.current!.select();\r\n\t\t\tinputEl.current!.focus()\r\n\t\t}\r\n\t}, 100)\r\n\r\n\tconsole.log('RENDERUJEM Categories ----------->>>>>>>>>>')\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Container fluid>\r\n\t\t\t\t<Row style={{ border: '3px solid lightblue' }}>\r\n\t\t\t\t\t<Col md={open?6:12} lg={open?6:12} style={{ padding: '10px', backgroundColor: '#eff3f6', color: '#686c71' }}>\r\n\t\t\t\t\t\t<div style={{ border: '0px solid silver', backgroundColor: 'white' }}>\r\n\t\t\t\t\t\t\t<AutoSuggest\r\n\t\t\t\t\t\t\t\tcategories={categories}\r\n\t\t\t\t\t\t\t\tcategoryQuestions={categoryQuestions}\r\n\t\t\t\t\t\t\t\ttekst={tekst}\r\n\t\t\t\t\t\t\t\tonSelectQuestion={onSelectQuestion}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<hr />\r\n\t\t\t\t\t\t\t<h3>Categories</h3>\r\n\t\t\t\t\t\t\t{categories &&\r\n\t\t\t\t\t\t\t\t<CategoryList {...props} />\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t\t{/* <Collapse\r\n\t\t\t\t\t\tin={open}\r\n\t\t\t\t\t\tdimension=\"width\"\r\n\t\t\t\t\t\tonEnter={() => { console.log('onEnter'); }}\r\n\t\t\t\t\t\tonEntering={() => { console.log('onEntering'); }}\r\n\t\t\t\t\t\tonEntered={() => { console.log('onEntered'); }}\r\n\t\t\t\t\t\tonExit={() => { console.log('onExit'); }}\r\n\t\t\t\t\t\tonExiting={() => { console.log('onExiting'); }}\r\n\t\t\t\t\t\tonExited={() => { console.log('onExited'); }}\r\n\t\t\t\t\t> */}\r\n\t\t\t\t\t\t<Col md={open?6:0} lg={open?6:0} style={{ backgroundColor: '#eff3f6', color: '#686c71', padding: '10px' }}>\r\n\t\t\t\t\t\t\t<div style={{ border: '0px solid silver', backgroundColor: 'white' }}>\r\n\t\t\t\t\t\t\t\t{/* {categories && question &&\r\n\t\t\t\t\t\t\t\t\t<div style={{ border: '1px solid silver', borderRadius: '5px', padding: '5px 5px 15px 5px', background: COLORS[color][5] }}>\r\n\t\t\t\t\t\t\t\t\t\t<h4 style={{ marginTop: 0, color: 'white' }}>Question</h4>\r\n\t\t\t\t\t\t\t\t\t\t{formMode === 'display' ?\r\n\t\t\t\t\t\t\t\t\t\t\t<ContainerQuestionForm canEdit={false} />\r\n\t\t\t\t\t\t\t\t\t\t\t:\r\n\t\t\t\t\t\t\t\t\t\t\t<ContainerQuestionForm canEdit={canEdit} />\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t} */}\r\n\t\t\t\t\t\t\t\t{categories && question &&\r\n\t\t\t\t\t\t\t\t\t<div style={{ border: '1px solid silver', borderRadius: '5px', padding: '5px 5px 15px 5px', background: COLORS[color][5] }}>\r\n\t\t\t\t\t\t\t\t\t\t<h4 style={{ marginTop: 0, color: 'white' }}>Question</h4>\r\n\t\t\t\t\t\t\t\t\t\t{formMode === 'display' ?\r\n\t\t\t\t\t\t\t\t\t\t\t<ContainerQuestionForm canEdit={false} />\r\n\t\t\t\t\t\t\t\t\t\t\t:\r\n\t\t\t\t\t\t\t\t\t\t\t<ContainerQuestionForm canEdit={canEdit} />\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t{categories && category &&\r\n\t\t\t\t\t\t\t\t\t<div style={{ border: '1px solid silver', borderRadius: '5px', padding: '5px 5px 15px 5px', background: COLORS[color][5] }}>\r\n\t\t\t\t\t\t\t\t\t\t<h4 style={{ marginTop: 0, color: 'white' }}>Category</h4>\r\n\t\t\t\t\t\t\t\t\t\t{formMode === 'display' ?\r\n\t\t\t\t\t\t\t\t\t\t\t<ContainerCategoryForm canEdit={false} />\r\n\t\t\t\t\t\t\t\t\t\t\t:\r\n\t\t\t\t\t\t\t\t\t\t\t<ContainerCategoryForm canEdit={canEdit} />\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t{/* </Collapse> */}\r\n\t\t\t\t</Row>\r\n\t\t\t</Container>\r\n\t\t\t{/* <DetailView\r\n\t\t\t\tcategoryId={question ? question!.categoryId : 0}\r\n\t\t\t\tquestionId={question ? question!.questionId : 0}\r\n\t\t\t\taddAndAssignNewAnswer={addAndAssignNewAnswer}\r\n\t\t\t\twho={who}\r\n\t\t\t/>\t */}\r\n\t\t\t{/* visible={isDetail} */}\r\n\t\t</>\r\n\t);\r\n}\r\n\r\nexport default Page;","import * as React from 'react';\r\nimport { useParams } from 'react-router-dom' // useRouteMatch\r\n\r\nimport { IQuestion, ICategoriesProps, initialQuestion } from '../types';\r\n\r\nimport { AutoSuggest } from '../../components/AutoSuggest';\r\nimport ContainerQuestionForm from '../containers/ContainerQuestionForm'\r\n\r\nimport { COLORS } from '../../formik/theme';\r\nimport { faPlus, faWindowClose } from '@fortawesome/free-solid-svg-icons'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nconst color = 'blue';\r\n\r\ntype SupportParams = {\r\n\ttekst: string;\r\n};\r\n\r\nconst SupportPage: React.FC<ICategoriesProps> = (props: ICategoriesProps) => {\r\n\tlet { tekst } = useParams<SupportParams>();\r\n\tconst { categories, categoryQuestions, question, onSelectQuestion, add, canEdit } = props;\r\n\tconsole.log('tekst:', tekst)\r\n\treturn (\r\n\t\t<div className=\"name-container\">\r\n\t\t\t<div className=\"two-columns\">\r\n\t\t\t\t<div className=\"a\">\r\n\t\t\t\t\t<div style={{ display: 'flex' }}>\r\n\t\t\t\t\t\t{/* Support Page tekst: {tekst} */}\r\n\t\t\t\t\t\t<AutoSuggest\r\n\t\t\t\t\t\t\tcategories={categories}\r\n\t\t\t\t\t\t\tcategoryQuestions={categoryQuestions}\r\n\t\t\t\t\t\t\ttekst={tekst}\r\n\t\t\t\t\t\t\tonSelectQuestion={onSelectQuestion}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\tclassName=\"button-edit\"\r\n\t\t\t\t\t\t\ttitle=\"Create a new Question\"\r\n\t\t\t\t\t\t\tonClick={() => { add(0, tekst ?? ''); }\r\n\t\t\t\t\t\t\t}>\r\n\t\t\t\t\t\t\t<FontAwesomeIcon icon={faPlus} color='lightblue' />\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"b\">\r\n\t\t\t\t\t{categories && question &&\r\n\t\t\t\t\t\t<div style={{ border: '1px solid silver', borderRadius: '5px', padding: '5px 5px 15px 5px', background: COLORS[color][5] }}>\r\n\t\t\t\t\t\t\t<h4 style={{ marginTop: 0, color: 'white' }}>Question</h4>\r\n\t\t\t\t\t\t\t<ContainerQuestionForm canEdit={canEdit} />\r\n\t\t\t\t\t\t\t{/* <QuestionForm \r\n\t\t\t\t\t\t\t\tquestion={question}\r\n\t\t\t\t\t\t\t\tquestionAnswers={questionAnswers}\r\n\t\t\t\t\t\t\t\tanswers={answers}\r\n\t\t\t\t\t\t\t\tformMode={formMode}\r\n\t\t\t\t\t\t\t\tcancel={cancel}\r\n\t\t\t\t\t\t\t\tsaveForm={(question: IQuestion) => saveForm(question, formMode)}\r\n\t\t\t\t\t\t\t\tcanEdit={canEdit}\r\n\t\t\t\t\t\t\t\tselectQuestionAnswer={selectQuestionAnswer}\r\n\t\t\t\t\t\t\t\tcopyQuestionAnswer={copyQuestionAnswer}\r\n\t\t\t\t\t\t\t\tremoveQuestionAnswer={removeQuestionAnswer}\r\n\t\t\t\t\t\t\t\tassignQuestionAnswer={assignQuestionAnswer}\r\n\t\t\t\t\t\t\t\tsetIsDetail={setIsDetail}\r\n\t\t\t\t\t\t\t\tsourceOptions={sourceOptions}\r\n\t\t\t\t\t\t\t\tstatusOptions={statusOptions}\r\n\t\t\t\t\t\t\t\tgroupOptions={groupOptions}\r\n\t\t\t\t\t\t\t/> */}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t}\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default SupportPage\r\n\r\n","// import * as React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { IAppState } from '../../store/Store';\r\nimport { IQuestion, IQuestionAnswer, ICategory } from '../types'\r\nimport { IAnswer } from '../../Answers/types'\r\n\r\nimport { Dispatch } from 'redux';  // ActionCreatorsMapObject, \r\n\r\nimport { QuestionActions,  \r\n\tgetQuestion, \r\n\taddQuestion, \r\n\teditQuestion,\r\n\tremoveQuestion,\r\n\taddCategory,\r\n\teditCategory,\r\n\tremoveCategory,\r\n\tstoreCategory,\r\n\tupdateCategory,\r\n\taddAndAssignNewAnswer,\r\n\ttoggleCategory,\r\n\tgetCategory\r\n} from '../actions'\r\n\r\nimport CategoriesPage from '../components/CategoriesPage'\r\nimport SupportPage from '../components/SuportPage'\r\n\r\ninterface IProps {\r\n\tcanEdit: boolean\r\n}\r\n\r\n// Grab the categories from the store and make them available on props\r\nconst mapStateToProps = (store: IAppState, ownProps: IProps ) => {\r\n\tconst {categoriesState, tagState, topState} = store;\r\n\t\r\n\tconst { \r\n\t\tcategories,\r\n\t\tcategoryQuestions,\r\n\t\tcategory,\r\n\t\tquestion,\r\n\t\tcategoryOptions,\r\n\t\tformMode,\r\n\t\tcategoryIdEditing,\r\n\t\tisDetail\r\n\t} = categoriesState;\r\n\r\n\treturn {\r\n\t\tcategories,\r\n\t\tcategoryQuestions,\r\n\t\tcategoryOptions,\r\n\t\tcategory,\r\n\t\tquestion,\r\n\t\tformMode,\r\n\t\tcategoryIdEditing,\r\n\t\tcanEdit: ownProps.canEdit,\r\n\t\tisDetail,\r\n\t\ttagOptions: tagState.tags.map(f => ({ label: f.name, value: f.tagId, color: f.color })),\r\n\t\twho: topState.top.auth!.who,\r\n\t\tnavbarOpen: topState.top.navbarOpen\r\n\t};\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch<QuestionActions>) => {\r\n\treturn {\r\n\t\tonSelectQuestion: (categoryId: number, questionId: number) => dispatch<any>(getQuestion(categoryId, questionId)),\r\n\t\tadd: (categoryId: number, text: string, canEdit?: boolean) => {\r\n\t\t\tdispatch<any>(addQuestion(categoryId, text, canEdit))\r\n\t\t},\r\n\t\tedit: (categoryId: number, questionId: number) => dispatch<any>(editQuestion(categoryId, questionId)),\r\n\t\tremove: (categoryId: number, questionId: number) => dispatch<any>(removeQuestion(categoryId, questionId)),\r\n\r\n\t\t// groups\r\n\t\tonSelectCategory: (categoryId: number) => dispatch<any>(getCategory(categoryId)),\r\n\t\taddCategory: () => dispatch<any>(addCategory()),\r\n\t\ttoggleCategory: (categoryId: number) =>  dispatch<any>(toggleCategory(categoryId)),\r\n\t\teditCategory: (categoryId: number) =>  dispatch<any>(editCategory(categoryId)),\r\n\t\tremoveCategory: (categoryId: number) => dispatch<any>(removeCategory(true, categoryId)),\r\n\t\tstoreCategory: (group: ICategory) => dispatch<any>(storeCategory(true, group)),\r\n\t\tupdateCategory: (group: ICategory) => dispatch<any>(updateCategory(true, group)),\r\n\r\n\t\taddAndAssignNewAnswer: (categoryId: number, questionId: number, answer: IAnswer, formMode: string) => {\r\n\t\t\tdispatch<any>(addAndAssignNewAnswer(categoryId, questionId, answer, formMode))\r\n\t\t}\r\n\t}\r\n}\r\n\r\n\r\nexport default {\r\n\tcategories: connect(mapStateToProps, mapDispatchToProps)(CategoriesPage),\r\n\tsupporter: connect(mapStateToProps, mapDispatchToProps)(SupportPage)\r\n};","import * as React from 'react';\r\n\r\nimport containers from '../Categories/containers/CategoriesPage'\r\n\r\n// type TParams = { id: string };\r\n\r\n// function Product({ match }: RouteComponentProps<TParams>) {\r\n//   return <h2>This is a page for product with ID: {match.params.id} </h2>;\r\n// }\r\n\r\nsetTimeout(() => {\r\n  const div = document.querySelector('#divKnowledge');\r\n  if (div)\r\n    div!.setAttribute('style', 'display:none')\r\n}, 10000)\r\n\r\nconst Support: React.FC<{}> = () => {\r\n  return (\r\n    <>\r\n      <h2 style={{textAlign: 'center', marginBlockStart: '0.66rem', marginBlockEnd: '0.1rem' }}>Questions &amp; Answers</h2>\r\n      <div id='divKnowledge' className='knowledge'>\r\n        <h5 style={{textAlign: 'center', color: 'blue', fontSize:'15px'}}><i>A knowledge base for sharing information. \r\n          <br/>When you record your experiences and insights, <br/>other members of your team can share info.\r\n          </i></h5>\r\n      </div>\r\n      <containers.supporter canEdit={true} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Support;","import React from 'react';\r\nimport { useFormik } from 'formik';\r\nimport * as Yup from 'yup'\r\nimport { IAnswer } from '../types';\r\nimport { COLORS } from '../../formik/theme';\r\nimport { Select } from '../../common/Select';\r\nimport { IOption } from '../../common/types';\r\nimport UserName from '../../common/containers/UserName'\r\n\r\ninterface IProps {\r\n\tanswer: IAnswer;\r\n\tformMode: string;\r\n\toptions?: string[];\r\n\tcancel: () => void;\r\n\tsaveForm: (answer: IAnswer, formMode: string) => void;\r\n}\r\n\r\n\r\nconst Form: React.FC<IProps> = (props: IProps) => {\r\n\tconst formik = useFormik({\r\n\t\tenableReinitialize: true,\r\n\t\tinitialValues: {\r\n\t\t\tanswerId: props.answer.answerId,\r\n\t\t\ttext: props.answer.text,\r\n\t\t\tcreatedBy: props.answer.createdBy,\r\n\t\t\tcreated: props.answer.created,\r\n\t\t},\r\n\t\tvalidationSchema: Yup.object({\r\n\t\t\ttext: Yup.string()\r\n\t\t\t\t.max(150, 'Must be 150 characters or less')\r\n\t\t\t\t.required('Required'),\r\n\t\t}),\r\n\t\tonSubmit: (values) => {\r\n\t\t\t// alert(JSON.stringify(values, null, 2));\r\n\t\t\tprops.saveForm(values, props.formMode)\r\n\t\t},\r\n\t});\r\n\r\n\tconst isEdit = () => props.formMode === 'edit';\r\n\tconsole.log('RENDERING', formik.values)\r\n\r\n\treturn (\r\n\t\t<form onSubmit={formik.handleSubmit}>\r\n\t\t\t{props.formMode !== 'add' &&\r\n\t\t\t\t<>\r\n\t\t\t\t\t<label className=\"id\" htmlFor=\"answerId\">Answer Id: </label>\r\n\t\t\t\t\t{/* <input\r\n\t\t\t\t\t\tid=\"answerId\"\r\n\t\t\t\t\t\tname=\"answerId\"\r\n\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\tonChange={formik.handleChange}\r\n\t\t\t\t\t\tonBlur={formik.handleBlur}\r\n\t\t\t\t\t\tvalue={formik.values.answerId}\r\n\t\t\t\t\t\tdisabled\r\n\t\t\t\t\t\tstyle={{ width: '50px' }}\r\n\t\t\t\t\t/> */}\r\n\t\t\t\t\t<span id=\"answerId\">{formik.values.answerId}</span>\r\n\t\t\t\t\t{/* {formik.touched.answerId && formik.errors.answerId ? (\r\n\t\t\t\t\t\t<div>{formik.errors.answerId}</div>\r\n\t\t\t\t\t) : null} */}\r\n\t\t\t\t</>\r\n\t\t\t}\r\n\r\n\t\t\t<label htmlFor=\"text\">Answer</label>\r\n\t\t\t<textarea\r\n\t\t\t\tid=\"text\"\r\n\t\t\t\tname=\"text\"\r\n\t\t\t\tonChange={formik.handleChange}\r\n\t\t\t\tonBlur={(e: React.FormEvent<HTMLTextAreaElement>): void => {\r\n\t\t\t\t\tif (isEdit()) formik.submitForm();\r\n\t\t\t\t}}\r\n\t\t\t\tvalue={formik.values.text}\r\n\t\t\t\trows={2}\r\n\t\t\t\tstyle={{ width: '100%' }}\r\n\t\t\t/>\r\n\t\t\t{formik.touched.text && formik.errors.text ? (\r\n\t\t\t\t<div>{formik.errors.text}</div>\r\n\t\t\t) : null}\r\n\r\n\t\t\t<label className=\"id\" htmlFor=\"createdBy\">Created by:</label>\r\n\t\t\t{/* <span>{formik.values.createdBy.toLocaleDateString()}</span> */}\r\n\t\t\t<UserName id={formik.values.createdBy} />\r\n\t\t\t<br/>\r\n\t\t\t{/* <Select\r\n\t\t\t\tid=\"createdBy\"\r\n\t\t\t\tname=\"createdBy\"\r\n\t\t\t\toptions={props.userOptions}\r\n\t\t\t\t//onChange={formik.handleChange}\r\n\t\t\t\tonChange={(e, value) => {\r\n\t\t\t\t\tformik.setFieldValue(\"createdBy\", value)\r\n\t\t\t\t\tif (isEdit()) formik.submitForm();\r\n\t\t\t\t}}\r\n\t\t\t\tvalue={formik.values.createdBy}\r\n\t\t\t// onChange={(gradeId: number) =>\r\n\t\t\t// \tdispatch({\r\n\t\t\t// \t\ttype: StudentActionTypes.STUDENT_ASSIGN_GRADE,\r\n\t\t\t// \t\tstudentGradeIds: {\r\n\t\t\t// \t\t\tstudentId: student!.id,\r\n\t\t\t// \t\t\tgradeId: gradeId,\r\n\t\t\t// \t\t\tgradeName: gradesAll[gradeId].name\r\n\t\t\t// \t\t}\r\n\t\t\t// \t})\r\n\t\t\t// }\r\n\t\t\t/> */}\r\n\r\n\t\t\t<label className=\"id\" htmlFor=\"created\">Created:</label>\r\n\t\t\t{/* <input\r\n\t\t\t\tid=\"created\"\r\n\t\t\t\tname=\"text\"\r\n\t\t\t\ttype=\"text\"\r\n\t\t\t\tonChange={formik.handleChange}\r\n\t\t\t\tonBlur={formik.handleBlur}\r\n\t\t\t\tvalue={formik.values.created.toLocaleDateString()}\r\n\t\t\t\tdisabled={true}\r\n\t\t\t/>\r\n\t\t\t{formik.touched.created && formik.errors.created ? (\r\n\t\t\t\t<div>{formik.errors.created}</div>\r\n\t\t\t) : null} */}\r\n\t\t\t<span>{formik.values.created.toLocaleDateString()}</span>\r\n\r\n\t\t\t{/* \r\n      <label htmlFor=\"answers\">Answers</label>\r\n      <input\r\n        id=\"answers\"\r\n        name=\"answers\"\r\n        type=\"text\"\r\n        onChange={formik.handleChange}\r\n        onBlur={formik.handleBlur}\r\n        value={formik.values.answers}\r\n      />\r\n      {formik.touched.answers && formik.errors.answers ? (\r\n        <div>{formik.errors.answers}</div>\r\n      ) : null}\r\n\r\n      <label htmlFor=\"email\">Email Address</label>\r\n      <input\r\n        id=\"email\"\r\n        name=\"email\"\r\n        type=\"email\"\r\n        onChange={formik.handleChange}\r\n        onBlur={formik.handleBlur}\r\n        value={formik.values.email}\r\n      />\r\n      {formik.touched.email && formik.errors.email ? (\r\n        <div>{formik.errors.email}</div>\r\n      ) : null} */}\r\n\r\n\t\t\t{!isEdit() &&\r\n\t\t\t\t<div className=\"buttons\">\r\n\t\t\t\t\t<button onClick={() => props.cancel()}>Cancel</button>\r\n\t\t\t\t\t<button type=\"submit\">Save</button>\r\n\t\t\t\t</div>\r\n\t\t\t}\r\n\t\t</form>\r\n\t);\r\n};\r\n\r\nconst color = 'blue';\r\n\r\nexport const AnswerForm: React.FC<IProps> = (props: IProps) => {\r\n\treturn (\r\n\t\t<div style={{ height: '100%' }} className=\"formik-example formik-example--blue\">\r\n\t\t\t<div\r\n\t\t\t\tstyle={{\r\n\t\t\t\t\theight: '100%',\r\n\t\t\t\t\tbackground: COLORS[color][5],\r\n\t\t\t\t\tpadding: '0.1rem 0.1rem',\r\n\t\t\t\t}}\r\n\t\t\t>\r\n\t\t\t\t<div\r\n\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\tborderRadius: '4px',\r\n\t\t\t\t\t\tboxShadow: '0 8px 16px rgba(0,0,0,.2)',\r\n\t\t\t\t\t\tbackground: '#fff',\r\n\t\t\t\t\t\tmaxWidth: '90%',\r\n\t\t\t\t\t\tmargin: '0 auto',\r\n\t\t\t\t\t\tpadding: '0.5rem',\r\n\t\t\t\t\t}}\r\n\t\t\t\t>\r\n\t\t\t\t\t<div className=\"formik-example formik-example--blue\">\r\n\t\t\t\t\t\t<Form {...props} />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}","import * as React from 'react';\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faWindowClose, faEdit } from '@fortawesome/free-solid-svg-icons'\r\n\r\nimport { IAnswer } from '../types';\r\nimport { IQuestionAnswer } from '../../Categories/types';\r\n\r\ninterface IProps {\r\n\tanswer: IAnswer,\r\n\tusedAnswers: IQuestionAnswer[],\r\n\tedit: (answerId: number) => void;\r\n\tremove: (answerId: number) => void;\r\n}\r\n\r\nexport const ListRow: React.FC<IProps> = (props: IProps) => {\r\n\tconst { answer, usedAnswers, edit, remove } = props;\r\n\treturn (\r\n\t\t<tr key={answer.answerId} >\r\n\t\t\t<td className=\"name\">\r\n\t\t\t\t{answer.answerId}\r\n\t\t\t</td>\r\n\t\t\t<td className=\"name\">\r\n\t\t\t\t{answer.text}\r\n\t\t\t</td>\r\n\t\t\t<td>\r\n\t\t\t\t<button\r\n\t\t\t\t\tclassName=\"button-edit\"\r\n\t\t\t\t\ttitle=\"Add a new Answer\"\r\n\t\t\t\t\tonClick={() => edit(answer.answerId)}>\r\n\t\t\t\t\t\t<FontAwesomeIcon icon={faEdit} color='lightblue' />\r\n\t\t\t\t</button>\r\n\t\t\t</td>\r\n\t\t\t<td>\r\n\t\t\t\t<button \r\n\t\t\t\t\tdisabled={usedAnswers.map(a=>a.answerId).includes(answer.answerId)}\r\n\t\t\t\t\tclassName=\"button-remove\"\r\n\t\t\t\t\ttitle=\"Remove Answer\"\r\n\t\t\t\t\tonClick={() => remove(answer.answerId)}>\r\n\t\t\t\t\t\t<FontAwesomeIcon icon={faWindowClose}  color='lightblue' />\r\n\t\t\t\t</button>\r\n\t\t\t</td>\r\n\t\t</tr>\r\n\t);\r\n  }\r\n\r\n","import * as React from 'react';\r\nimport { IQuestionAnswer } from '../../Categories/types';\r\n\r\nimport { IAnswer } from '../types';\r\nimport { ListRow } from './ListRow';\r\n\r\ninterface IProps {\r\n\tanswers: IAnswer[],\r\n\tusedAnswers: IQuestionAnswer[],\r\n\tedit: (answerId: number) => void;\r\n\tremove: (answerId: number) => void;\r\n}\r\n\r\nconst List: React.FC<IProps> = (props: IProps) => {\r\n\tconst { answers, usedAnswers, edit, remove } = props;\r\n\treturn (\r\n\t\t<table width=\"100%\">\r\n\t\t\t<thead>\r\n\t\t\t\t<tr>\r\n\t\t\t\t\t<th>Id</th>\r\n\t\t\t\t\t<th>Answer</th>\r\n\t\t\t\t\t<th></th>\r\n\t\t\t\t\t<th></th>\r\n\t\t\t\t</tr>\r\n\t\t\t</thead>\r\n\t\t\t<tbody>\r\n\t\t\t\t{ answers.map(answer => \r\n\t\t\t\t\t<ListRow\r\n\t\t\t\t\t\tkey={answer.answerId}\r\n\t\t\t\t\t\tanswer={answer}\r\n\t\t\t\t\t\tusedAnswers={usedAnswers}\r\n\t\t\t\t\t\tedit={edit}\r\n\t\t\t\t\t\tremove={remove}\r\n\t\t\t\t\t/>\r\n\t\t\t\t)}\r\n\t\t\t</tbody>\r\n\t\t</table>\r\n\t);\r\n  }\r\n\r\nexport default List\r\n\r\n","import * as React from 'react';\r\nimport { useParams } from 'react-router-dom' // useRouteMatch\r\n\r\nimport { IAnswer } from '../types';\r\nimport { AnswerForm } from './Form'\r\nimport { ListRow } from './ListRow';\r\nimport List from './List';\r\nimport { COLORS } from '../../formik/theme';\r\nimport { IQuestionAnswer } from '../../Categories/types';\r\nimport { IOption } from '../../common/types';\r\nconst color = 'blue';\r\n\r\ninterface IProps {\r\n\tanswers: IAnswer[],\r\n\tanswer: IAnswer,\r\n\tusedAnswers: IQuestionAnswer[],\r\n\r\n\tformMode: string,\r\n\tadd: () => void;\r\n\tedit: (answerId: number) => void;\r\n\tremove: (answerId: number) => void;\r\n\tcancel: () => void;\r\n\tsaveForm: (answer: IAnswer, formMode: string) => void;\r\n}\r\n\r\ntype MyParams = {\r\n\tslug: string;\r\n  };\r\n\r\nconst Page: React.FC<IProps> = (props: IProps) => {\r\n\tlet { slug } = useParams<MyParams>();\r\n\t// slug = ''\r\n\tconst { answers, answer, usedAnswers, formMode, add, edit, remove, cancel, saveForm } = props;\r\n\treturn (\r\n\t\t<div className=\"name-container\">\r\n\t\t\t{slug}\r\n\t\t\t{ answers.length === 0 && \r\n\t\t\t\t<div>\r\n\t\t\t\t\tNo answers at all\r\n\t\t\t\t</div>\r\n\t\t\t}\r\n\t\t\t{ answers.length > 0 && \r\n\t\t\t\t<div className=\"two-columns\">\r\n\t\t\t\t\t<div className=\"a\">\r\n\t\t\t\t\t\t<List answers={answers} usedAnswers={usedAnswers} edit={edit} remove={remove} />\r\n\t\t\t\t\t\t<button onClick={() => add()}>Add new</button>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"b\">\r\n\t\t\t\t\t\t{formMode === 'add' &&\r\n\t\t\t\t\t\t\t<div style={{border: '1px solid silver', borderRadius: '5px', padding: '5px 5px 15px 5px', background: COLORS[color][5]}}>\r\n\t\t\t\t\t\t\t\t<h4 style={{marginTop: 0, color: 'white'}}>New Answer</h4>\r\n\t\t\t\t\t\t\t\t<AnswerForm \r\n\t\t\t\t\t\t\t\t\tanswer={answer}\r\n\t\t\t\t\t\t\t\t\tformMode={formMode}\r\n\t\t\t\t\t\t\t\t\tcancel={cancel}\r\n\t\t\t\t\t\t\t\t\tsaveForm={(answer: IAnswer) => saveForm(answer, formMode)} \r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t{formMode === 'edit' &&\r\n\t\t\t\t\t\t\t<div style={{border: '1px solid silver', borderRadius: '5px', padding: '5px 5px 15px 5px', background: COLORS[color][5]}}>\r\n\t\t\t\t\t\t\t\t<h4 style={{marginTop: 0, color: 'white'}}>Edit Answer</h4>\r\n\t\t\t\t\t\t\t\t<AnswerForm\r\n\t\t\t\t\t\t\t\t\tanswer={answer}\r\n\t\t\t\t\t\t\t\t\tformMode={formMode}\r\n\t\t\t\t\t\t\t\t\tcancel={cancel}\r\n\t\t\t\t\t\t\t\t\tsaveForm={(answer: IAnswer) => saveForm(answer, formMode)}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t}\t\t\t\t\t\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\r\n\t\t\t}\r\n\r\n\t\t</div>\r\n\t);\r\n  }\r\n\r\nexport default Page\r\n\r\n","// import * as React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Dispatch } from 'redux';\r\n\r\nimport { IAppState } from '../../store/Store';\r\n\r\nimport { AnswerActions,  addAnswer, editAnswer, removeAnswer, storeAnswer, cancelAnswer } from '../actions' // , IAddAnswer\r\n\r\nimport { IAnswer } from '../types'\r\n\r\nimport Page from '../components/Page'\r\nimport { IQuestionAnswer, ICategory } from '../../Categories/types';\r\n\r\nconst getUsedAnswers = (categories: ICategory[]) : IQuestionAnswer[]=> {\r\n\tlet questionAnswers: IQuestionAnswer[] = [];\r\n\tfor (let category of categories)\r\n\t\tfor (let question of category.questions)\r\n\t\tquestionAnswers = questionAnswers.concat(question.answers)\r\n\treturn questionAnswers;\r\n}\r\n\r\nconst mapStateToProps = (store: IAppState) => {\r\n  return {\r\n\tanswers: store.answerState.answers,\r\n\tanswer: store.answerState.answer!,\r\n\tformMode: store.answerState.formMode,\r\n\tusedAnswers: getUsedAnswers(store.categoriesState.categories),\r\n\twho: store.topState.top.auth!.who\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch<AnswerActions>) => {\r\n\treturn {\r\n\t\t//setFormMode: (formMode: string) => dispatch<any>(setFormMode(formMode)),\r\n\t\tadd: () => dispatch<any>(addAnswer()),\r\n\t\tedit: (answerId: number) => dispatch<any>(editAnswer(answerId)),\r\n\t\tremove: (answerId: number) => dispatch<any>(removeAnswer(answerId)),\r\n\t\tsaveForm: (answer: IAnswer, formMode: string) => dispatch<any>(storeAnswer(answer, formMode)),\r\n\t\tcancel: () => dispatch<any>(cancelAnswer()),\r\n\t}\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Page);","import React from 'react';\r\nimport { useFormik } from 'formik';\r\nimport * as Yup from 'yup'\r\nimport { IUser } from '../types';\r\n\r\nimport { Select } from '../../common/Select';\r\nimport { COLORS } from '../../formik/theme';\r\nimport { IFormProps } from '../types'\r\nimport UserName from '../../common/containers/UserName';\r\n\r\nconst Form: React.FC<IFormProps> = (props: IFormProps) => {\r\n  const formik = useFormik({\r\n    enableReinitialize: true,\r\n    initialValues: {\r\n      roleId: props.user.roleId,\r\n      userId: props.user.userId,\r\n      userName: props.user.userName,\r\n      pwd: props.user.pwd,\r\n      department: props.user.department,\r\n      createdBy: props.user.createdBy,\r\n      created: props.user.created\r\n    },\r\n    validationSchema: Yup.object({\r\n      name: Yup.string()\r\n        .max(150, 'Must be 150 characters or less')\r\n        .required('Required'),\r\n      /*answers: Yup.string()\r\n        .max(20, 'Must be 20 characters or less')\r\n        .required('Required'),\r\n      email: Yup.string()\r\n        .email('Invalid email address')\r\n        .required('Required'),*/\r\n    }),\r\n    onSubmit: values => {\r\n      //alert(JSON.stringify(values, null, 2));\r\n      props.saveForm(values, props.formMode)\r\n    }\r\n  });\r\n\r\n  const isEdit = () => props.formMode === 'edit';\r\n\r\n  console.log('RENDERING user', formik.values)\r\n  return (\r\n    <>\r\n      <form onSubmit={formik.handleSubmit}>\r\n      \r\n        <label className=\"id\" htmlFor=\"userId\">UserId:</label>\r\n        {/* <input\r\n          id=\"userId\"\r\n          name=\"userId\"\r\n          type=\"text\"\r\n          onChange={formik.handleChange}\r\n          onBlur={formik.handleBlur}\r\n          value={formik.values.userId}\r\n          disabled\r\n          style={{ width: '50px' }}\r\n        />\r\n        {formik.touched.userId && formik.errors.userId ? (\r\n          <div>{formik.errors.userId}</div>\r\n        ) : null} */}\r\n        <span id=\"userId\">{formik.values.userId}</span>\r\n\r\n        <label htmlFor=\"roleId\">Role</label>\r\n        <Select\r\n          id=\"roleId\"\r\n          name=\"roleId\"\r\n          options={props.roleOptions}\r\n          //onChange={formik.handleChange}\r\n          onChange={(e, value) => {\r\n            formik.setFieldValue(\"roleId\", value);\r\n            if (isEdit()) formik.submitForm();\r\n          }}\r\n          value={formik.values.roleId}\r\n        />\r\n\r\n        <label htmlFor=\"userName\">Name</label>\r\n        <textarea\r\n          id=\"userName\"\r\n          name=\"userName\"\r\n          onChange={formik.handleChange}\r\n          //onBlur={formik.handleBlur}\r\n          onBlur={(e: React.FormEvent<HTMLTextAreaElement>): void => {\r\n            if (isEdit()) formik.submitForm();\r\n          }}\r\n          value={formik.values.userName}\r\n          style={{ width: '100%' }}\r\n          rows={2}\r\n        />\r\n        {formik.touched.userName && formik.errors.userName ? (\r\n          <div>{formik.errors.userName}</div>\r\n        ) : null}\r\n\r\n        <label className=\"id\" htmlFor=\"createdBy\">Created by:</label>\r\n        <UserName id={formik.values.createdBy} />\r\n\t\t\t  <br/>\r\n\r\n        {/* <Select\r\n          id=\"createdBy\"\r\n          name=\"createdBy\"\r\n          options={props.userOptions}\r\n          //onChange={formik.handleChange}\r\n          onChange={(e, value) => {\r\n            formik.setFieldValue(\"createdBy\", value);\r\n            if (isEdit()) formik.submitForm();\r\n          }}\r\n          value={formik.values.createdBy}\r\n        // onChange={(gradeId: number) =>\r\n        // \tdispatch({\r\n        // \t\ttype: StudentActionTypes.STUDENT_ASSIGN_GRADE,\r\n        // \t\tstudentGradeIds: {\r\n        // \t\t\tstudentId: student!.id,\r\n        // \t\t\tgradeId: gradeId,\r\n        // \t\t\tgradeName: gradesAll[gradeId].name\r\n        // \t\t}\r\n        // \t})\r\n        // }\r\n        /> */}\r\n\r\n      {/* <label htmlFor=\"email\">Email Address</label>\r\n      <input\r\n        id=\"email\"\r\n        name=\"email\"\r\n        type=\"email\"\r\n        onChange={formik.handleChange}\r\n        onBlur={formik.handleBlur}\r\n        value={formik.values.email}\r\n      />\r\n      {formik.touched.email && formik.errors.email ? (\r\n        <div>{formik.errors.email}</div>\r\n      ) : null} */} \r\n\r\n        {/* <button type=\"submit\">Submit</button> */}\r\n\r\n        {!isEdit() &&\r\n          <div className=\"buttons\">\r\n            {props.canEdit &&\r\n              <button onClick={() => props.cancel()}>Cancel</button>}\r\n            {props.canEdit &&\r\n              <button type=\"submit\">Save</button>}\r\n          </div>\r\n        }\r\n      </form>\r\n\r\n      <label className=\"id\" htmlFor=\"created\">Created:</label>\r\n      {/* <input\r\n        id=\"created\"\r\n        name=\"text\"\r\n        type=\"text\"\r\n        onChange={formik.handleChange}\r\n        onBlur={formik.handleBlur}\r\n        value={formik.values.created.toLocaleDateString()}\r\n        disabled={true}\r\n      />\r\n      {formik.touched.created && formik.errors.created ? (\r\n        <div>{formik.errors.created}</div>\r\n      ) : null} */}\r\n      <span>{formik.values.created.toLocaleDateString()}</span>\r\n\r\n    </>\r\n  );\r\n};\r\n\r\n\r\nconst color = 'blue';\r\n\r\nexport const UserForm: React.FC<IFormProps> = (props: IFormProps) => {\r\n  return (\r\n    <div style={{ height: '100%' }} className=\"formik-example formik-example--blue\">\r\n      <div\r\n        style={{\r\n          height: '100%',\r\n          background: COLORS[color][5],\r\n          padding: '1rem 1rem',\r\n        }}\r\n      >\r\n        <div\r\n          style={{\r\n            borderRadius: '4px',\r\n            boxShadow: '0 8px 16px rgba(0,0,0,.2)',\r\n            background: '#fff',\r\n            maxWidth: '90%',\r\n            margin: '0 auto',\r\n            padding: '1rem',\r\n          }}\r\n        >\r\n          <div className=\"formik-example formik-example--blue\">\r\n            <Form {...props} />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}","// import * as React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { IAppState } from '../../store/Store';\r\nimport { IUser, IRole } from '../types'\r\n\r\nimport { Dispatch } from 'redux';  // ActionCreatorsMapObject, \r\n\r\nimport { UserActions,  \r\n\tgetUser, \r\n\taddUser, \r\n\teditUser,\r\n\tremoveUser,\r\n\tstoreUser,\r\n\tcancelUser,\r\n\tsetIsDetail\r\n} from '../actions'\r\n\r\nimport {UserForm}  from '../components/UserForm'\r\n\r\ninterface IProps {\r\n\tcanEdit: boolean\r\n}\r\n\r\n// Grab the users from the store and make them available on props\r\nconst mapStateToProps = (store: IAppState, ownProps: IProps ) => {\r\n\tconst {usersState, tagState} = store;\r\n\tconst { roles, user, roleOptions, formMode, roleIdEditing, isDetail } = usersState; \r\n\treturn {\r\n\t\troles,\r\n\t\troleOptions,\r\n\t\tuser: user!,\r\n\t\tformMode,\r\n\t\troleIdEditing,\r\n\t\tcanEdit: ownProps.canEdit,\r\n\t\tisDetail\r\n\t};\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch<UserActions>) => {\r\n\treturn {\r\n\t\tonSelectUser: (userId: number) => dispatch<any>(getUser(userId)),\r\n\t\tadd: (userRoleId: number, text: string, canEdit?: boolean) => dispatch<any>(addUser(userRoleId, text, canEdit)),\r\n\t\tedit: (userRoleId: number, userId: number) => dispatch<any>(editUser(userRoleId, userId)),\r\n\t\tremove: (userRoleId: number, userId: number) => dispatch<any>(removeUser(userRoleId, userId)),\r\n\t\tsaveForm: (user: IUser, formMode: string) => dispatch<any>(storeUser(user, formMode)),\r\n\t\tcancel: () => dispatch<any>(cancelUser()),\r\n\t\t\r\n\t\tsetIsDetail: (isDetail: boolean) => {\r\n\t\t\tdispatch<any>(setIsDetail(isDetail))\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(UserForm);\r\n","import * as React from 'react';\r\n\r\nimport { useHover } from '../../common/useHover'\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faWindowClose, faEdit } from '@fortawesome/free-solid-svg-icons'\r\n\r\nimport { IUser } from '../types';\r\n\r\n\r\ninterface IRowProps {\r\n\tuser: IUser;\r\n\tonSelectUser: (userId: number) => IUser;\r\n\tedit: (roleId: number, userId: number) => void;\r\n\tremove: (roleId: number, userId: number) => void;\r\n}\r\n\r\nconst UserRow: React.FC<IRowProps> = (props: IRowProps) => {\r\n\r\n\tconst [hoverRef, hoverProps] = useHover();\r\n\r\n\tconst { user, onSelectUser, edit, remove } = props;\r\n\tconst { roleId: roleId, userId } = user;\r\n\r\n   return (\r\n\t\t<div ref={hoverRef} className=\"name\">\r\n\t\t\t<button\r\n\t\t\t\tclassName=\"user-button\"\r\n\t\t\t\tonClick={() => onSelectUser(userId)}>\r\n\t\t\t\t{user.userName}\r\n\t\t\t</button>\r\n\t\t\t{hoverProps.isHovered && \r\n\t\t\t\t<button className=\"button-edit\" title=\"Edit\" onClick={() => edit(roleId, userId)}>\r\n\t\t\t\t\t<FontAwesomeIcon icon={faEdit} color='lightblue' />\r\n\t\t\t\t</button>\r\n\t\t\t}\r\n\t\t\t{hoverProps.isHovered &&\r\n\t\t\t\t<button className=\"button-remove\" title=\"Remove\" onClick={() => remove(roleId, userId)}>\r\n\t\t\t\t\t<FontAwesomeIcon icon={faWindowClose}  color='lightblue' />\r\n\t\t\t\t</button>\r\n\t\t\t}\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default UserRow\r\n\r\n","import * as React from 'react';\r\n\r\nimport { useHover } from '../../common/useHover'\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faWindowClose, faEdit, faCaretRight, faCaretDown } from '@fortawesome/free-solid-svg-icons'\r\n\r\nimport { IRole } from '../types';\r\n\r\n\r\ninterface IUserRowProps {\r\n\tuserRole: IRole;\r\n\ttoggleRole: (roleId: number) => void;\r\n\teditRole: (roleId: number) => void;\r\n\tremoveRole: (roleId: number) => void;\r\n}\r\n\r\nconst RoleRow: React.FC<IUserRowProps> = (props: IUserRowProps) => {\r\n\r\n\tconst [hoverRef, hoverProps] = useHover();\r\n\tconst { userRole, toggleRole, editRole, removeRole } = props;\r\n\tconst {roleId: roleId, title, users, isExpanded, color} = userRole;\r\n\r\n\treturn (\r\n\t\t<div ref={hoverRef} key={roleId} className=\"name\" >\r\n\t\t\t<button\r\n\t\t\t\tclassName=\"button-edit\"\r\n\t\t\t\ttitle=\"Expand\"\r\n\t\t\t\tonClick={() => toggleRole(roleId)} \r\n\t\t\t\tstyle={{ marginLeft: '5px' }}\r\n\t\t\t>\r\n\t\t\t\t<FontAwesomeIcon icon={isExpanded?faCaretDown:faCaretRight} color={color} size='lg' />\r\n\t\t\t</button>\r\n\t\t\t<span className='role-title' style={{color}}>{title}</span>\r\n\t\t\t{hoverProps.isHovered &&\r\n\t\t\t\t<button className=\"button-edit\" title=\"Edit Section\" onClick={() => editRole(roleId)}>\r\n\t\t\t\t\t<FontAwesomeIcon icon={faEdit} color='lightblue' />\r\n\t\t\t\t</button>\r\n\t\t\t}\r\n\t\t\t{hoverProps.isHovered && users.length === 0 &&\r\n\t\t\t\t<button className=\"button-remove\" title=\"Remove Section\" onClick={() => removeRole(roleId)}>\r\n\t\t\t\t\t<FontAwesomeIcon icon={faWindowClose} color='lightblue' />\r\n\t\t\t\t</button>\r\n\t\t\t}\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default RoleRow\r\n\r\n","import * as React from 'react';\r\nimport { useRef } from 'react'\r\n\r\nimport { IRolesProps } from '../types'\r\n\r\nimport { IUser } from '../types';\r\n\r\nimport { AutoSuggest } from '../../components/AutoSuggest';\r\nimport UserForm from '../containers/UserForm'\r\nimport UserRow from './UserRow';\r\nimport RoleRow from './RoleRow';\r\nimport { useParams } from 'react-router-dom' // useRouteMatch\r\n\r\nimport { COLORS } from '../../formik/theme';\r\nconst color = 'blue';\r\n\r\ntype SupportParams = {\r\n\ttekst: string;\r\n};\r\n\r\nconst UserPage: React.FC<IRolesProps> = (props: IRolesProps) => {\r\n\r\n\tlet { tekst } = useParams<SupportParams>();\r\n\tconst { roles: userRoles, user,\r\n\t\tformMode, roleIdEditing: roleIdEditing, \r\n\t\tonSelectUser, add, edit, remove, canEdit,\r\n\t\taddRole: addRole, toggleRole: toggleRole, editRole: editRole, removeRole: removeRole, storeRole: storeRole,\r\n\t\tsetIsDetail, isDetail } = props;\r\n\r\n\tconst inputEl = useRef<HTMLInputElement>(null);\r\n\tsetTimeout(() => {\r\n\t\tif (inputEl.current !== null) {\r\n\t\t\tinputEl.current!.select();\r\n\t\t\tinputEl.current!.focus()\r\n\t\t}\r\n\t}, 100)\r\n\r\n\t// const expandRole = (roleId: number): void => {\r\n\t// \tconst div = document.querySelector<HTMLDivElement>(\"#divRole\" + roleId);\r\n\t// \tconsole.log(div)\r\n\t// \tdiv!.style.display = 'block';\r\n\t// }\r\n\treturn (\r\n\t\t<div className=\"name-container\">\r\n\t\t\t<hr />\r\n\t\t\t{/* <h4 style={{ textAlign: 'center' }}>Maintenance (visible only for Admins) </h4> */}\r\n\t\t\t<div className=\"two-columns\">\r\n\t\t\t\t<div className=\"a\">\r\n\t\t\t\t\t<h3>Users by Role</h3>\r\n\t\t\t\t\t{userRoles &&\r\n\t\t\t\t\t\tuserRoles.map(role => {\r\n\t\t\t\t\t\t\tconst { roleId: roleId, title, isExpanded, users } = role;\r\n\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t<div key={roleId} style={{ paddingBottom: '5px' }}>\r\n\t\t\t\t\t\t\t\t\t<div style={{textAlign: 'start'}}>\r\n\t\t\t\t\t\t\t\t\t\t{roleIdEditing === roleId &&\r\n\t\t\t\t\t\t\t\t\t\t\t<input ref={inputEl} name=\"groupTitle\" type=\"text\"\r\n\t\t\t\t\t\t\t\t\t\t\t\tonBlur={(e) => storeRole({ ...role, title: e.target.value })}\r\n\t\t\t\t\t\t\t\t\t\t\t\tdefaultValue={title}\r\n\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t{roleIdEditing !== roleId && (\r\n\t\t\t\t\t\t\t\t\t\t\t<RoleRow\r\n\t\t\t\t\t\t\t\t\t\t\t\tuserRole={role}\r\n\t\t\t\t\t\t\t\t\t\t\t\ttoggleRole={toggleRole}\r\n\t\t\t\t\t\t\t\t\t\t\t\teditRole={editRole}\r\n\t\t\t\t\t\t\t\t\t\t\t\tremoveRole={removeRole}\r\n\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t{isExpanded &&\r\n\t\t\t\t\t\t\t\t\t\t<div className=\"group-users\" style={{marginLeft: '20px', textAlign: 'start'}}>\r\n\t\t\t\t\t\t\t\t\t\t\t{users.map(user =>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<UserRow\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tkey={user.userId}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tuser={user}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonSelectUser={onSelectUser}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tedit={edit}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tremove={remove}\r\n\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t\t\t<div style={{ marginLeft: '0%' }}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<button className=\"button-add\" title=\"Add a new User\" onClick={() => add(role.roleId, '')}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tAdd a new User\r\n\t\t\t\t\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t})}\r\n\t\t\t\t\t<div style={{ marginLeft: '1%' }}>\r\n\t\t\t\t\t\t<button className=\"button-add-category\" title=\"Add a new Section\" onClick={() => addRole()}>\r\n\t\t\t\t\t\t\tAdd a new Role\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"b\">\r\n\t\t\t\t\t{userRoles && user &&\r\n\t\t\t\t\t\t<div style={{ border: '1px solid silver', borderRadius: '5px', padding: '5px 5px 15px 5px', background: COLORS[color][5] }}>\r\n\t\t\t\t\t\t\t<h4 style={{ marginTop: 0, color: 'white' }}>User</h4>\r\n\t\t\t\t\t\t\t{formMode === 'display' ?\r\n\t\t\t\t\t\t\t\t<span>DisplayForm</span>\r\n\t\t\t\t\t\t\t\t:\r\n\t\t\t\t\t\t\t\t<UserForm canEdit={canEdit}\t/>\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t}\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default UserPage\r\n\r\n","// import * as React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { IAppState } from '../../store/Store';\r\nimport { IUser, IRole } from '../types'\r\n\r\nimport { Dispatch } from 'redux';  // ActionCreatorsMapObject, \r\n\r\nimport { UserActions,  \r\n\tgetUser, \r\n\taddUser, \r\n\teditUser,\r\n\tremoveUser,\r\n\tstoreUser,\r\n\tcancelUser,\r\n\taddRole,\r\n\teditRole,\r\n\tremoveRole,\r\n\tstoreRole,\r\n\tsetIsDetail,\r\n\ttoggleRole\r\n} from '../actions'\r\n\r\nimport UserPage from '../components/UserPage'\r\n\r\ninterface IProps {\r\n\tcanEdit: boolean\r\n}\r\n\r\n// Grab the users from the store and make them available on props\r\nconst mapStateToProps = (store: IAppState, ownProps: IProps ) => {\r\n\tconst { usersState,  tagState} = store;\r\n\tconst { roles, user, formMode, roleIdEditing, isDetail } = usersState; \r\n\treturn {\r\n\t\troles,\r\n\t\tuser: user!,\r\n\t\tformMode,\r\n\t\troleIdEditing,\r\n\t\tcanEdit: ownProps.canEdit,\r\n\t\tisDetail,\r\n\t\twho: store.topState.top.auth!.who\r\n\t};\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch<UserActions>) => {\r\n\treturn {\r\n\t\t// user\r\n\t\tonSelectUser: (userId: number) => dispatch<any>(getUser(userId)),\r\n\t\tadd: (userRoleId: number, text: string, canEdit?: boolean) => dispatch<any>(addUser(userRoleId, text, canEdit)),\r\n\t\tedit: (userRoleId: number, userId: number) => dispatch<any>(editUser(userRoleId, userId)),\r\n\t\tremove: (userRoleId: number, userId: number) => dispatch<any>(removeUser(userRoleId, userId)),\r\n\t\t// groups\r\n\t\taddRole: () => dispatch<any>(addRole()),\r\n\t\ttoggleRole: (roleId: number) =>  dispatch<any>(toggleRole(roleId)),\r\n\t\teditRole: (roleId: number) =>  dispatch<any>(editRole(roleId)),\r\n\t\tremoveRole: (roleId: number) => dispatch<any>(removeRole(roleId)),\r\n\t\tstoreRole: (role: IRole) => dispatch<any>(storeRole(role)),\r\n\t\t\r\n\t\tsetIsDetail: (isDetail: boolean) => {\r\n\t\t\tdispatch<any>(setIsDetail(isDetail))\r\n\t\t}\r\n\t}\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(UserPage);\r\n","import React, { useState } from 'react';\r\nimport { useFormik } from 'formik';\r\nimport * as Yup from 'yup'\r\n\r\nimport { COLORS } from '../../formik/theme';\r\nimport { IFormProps } from '../types';\r\n//import { number } from 'yup/lib/locale';\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\n\r\nconst Form: React.FC<IFormProps> = (props: IFormProps) => {\r\n\r\n  let { who, formMode, authError } = props;\r\n  const { userName, pwd } = who;\r\n\r\n  let navigate = useNavigate();\r\n  if (props.isAuthenticated) {\r\n    navigate('/questions');\r\n  }\r\n\r\n  const formik = useFormik({\r\n    enableReinitialize: true,\r\n    initialValues: {\r\n      userName,\r\n      pwd\r\n      //createdBy: props.top.createdBy,\r\n      //created: props.top.created\r\n    },\r\n    validationSchema: Yup.object({\r\n      userName: Yup\r\n        .string()\r\n        .max(20, 'Must be 20 characters or less')\r\n        .required('Required'),\r\n      pwd: Yup\r\n        .string()\r\n        .min(7)\r\n        .max(16)\r\n        //.matches(/^(?=.*[a-z])(?=.*[A-Z])(?=.*d)[a-zA-Zd]$/)\r\n        .required()\r\n      /*answers: Yup.string()\r\n        .max(20, 'Must be 20 characters or less')\r\n        .required('Required'),\r\n      email: Yup.string()\r\n        .email('Invalid email address')\r\n        .required('Required'),*/\r\n    }),\r\n    onSubmit: values => {\r\n      // alert(JSON.stringify(values, null, 2));\r\n      props.saveForm(values, props.formMode, props.isRegister)\r\n    }\r\n  });\r\n\r\n  const isEdit = () => props.formMode === 'edit';\r\n\r\n  console.log('RENDERING LoginForm', formik.values)\r\n\r\n  return (\r\n    <>\r\n      <form onSubmit={formik.handleSubmit}>\r\n\r\n        {/* <label htmlFor=\"name\">User name</label> */}\r\n        <input\r\n          id=\"userName\"\r\n          name=\"userName\"\r\n          onChange={formik.handleChange}\r\n          onBlur={formik.handleBlur}\r\n          // onBlur={(e: React.FormEvent<HTMLInputElement>): void => {\r\n          //   if (isEdit() && formik.initialValues.name !== formik.values.name)\r\n          //     formik.submitForm();\r\n          // }}\r\n          value={formik.values.userName}\r\n          placeholder=\"User name\"\r\n          maxLength={16}\r\n          size={16}\r\n        // style={{ width: '40%' }}\r\n        />\r\n        {formik.touched.userName && formik.errors.userName ? (\r\n          <div>{formik.errors.userName}</div>\r\n        ) : null}\r\n\r\n        {/* <label htmlFor=\"username\">Password</label> */}\r\n        <br />\r\n        <input\r\n          id=\"pwd\"\r\n          name=\"pwd\"\r\n          type=\"password\"\r\n          onChange={formik.handleChange}\r\n          onBlur={formik.handleBlur}\r\n          value={formik.values.pwd}\r\n          placeholder=\"password\"\r\n          // style={{ width: '40%' }}\r\n          maxLength={16}\r\n          size={16}\r\n        />\r\n        {formik.touched.pwd && formik.errors.pwd ? (\r\n          <div>{formik.errors.pwd}</div>\r\n        ) : null}\r\n\r\n        {authError &&\r\n          <div>{authError}</div>\r\n        }\r\n\r\n\r\n        {/* <button type=\"submit\">Submit</button> */}\r\n\r\n        <div className=\"buttons\">\r\n          {props.canEdit &&\r\n            <button onClick={() => props.cancel()}>Cancel</button>}\r\n          {props.canEdit &&\r\n            <button type=\"submit\">Save</button>}\r\n        </div>\r\n\r\n      </form>\r\n\r\n      {/* <label className=\"id\" htmlFor=\"created\">Created:</label>\r\n      <span>{formik.values.created.toLocaleDateString()}</span> */}\r\n\r\n    </>\r\n  );\r\n};\r\n\r\n\r\nconst color = 'blue';\r\n\r\nexport const LoginForm: React.FC<IFormProps> = (props: IFormProps) => {\r\n\r\n  return (\r\n    <div style={{ height: '100%', padding: '5%', display: 'flex', alignItems: 'center', justifyContent: 'cen0ter'  }} className=\"formik-example formik-example--blue\">\r\n      <div\r\n        style={{\r\n          height: '100%',\r\n          background: COLORS[color][5],\r\n          padding: '1rem 1rem',\r\n          width: '300px'\r\n        }}\r\n      >\r\n        <div\r\n          style={{\r\n            borderRadius: '4px',\r\n            boxShadow: '0 8px 16px rgba(0,0,0,.2)',\r\n            background: '#fff',\r\n            maxWidth: '90%',\r\n            margin: '0 auto',\r\n            padding: '1rem',\r\n            width: '250px'\r\n          }}\r\n        >\r\n          <div className=\"formik-example formik-example--blue\">\r\n            {props.isRegister ? (\r\n              <span>Register</span>\r\n            ) : (\r\n              <span>Register</span>\r\n            )}\r\n            <Form {...props} />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}","// import * as React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { IAppState } from '../../store/Store';\r\n\r\nimport { Dispatch } from 'redux'; \r\n\r\nimport { register, authenticate, cancelLogin, TopActions } from '../actions'\r\n\r\nimport { LoginForm } from '../components/LoginForm';\r\nimport { ILogin, ITop } from '../types';\r\n\r\n\r\ninterface IProps {\r\n\tcanEdit: boolean,\r\n\tisRegister: boolean\r\n}\r\n\r\nconst mapStateToProps = (store: IAppState, ownProps: IProps) => {\r\n\tconst { topState } = store;\r\n\tconst { top } = topState;\r\n\tconst { auth } = top\r\n\treturn {\r\n\t\tisAuthenticated: top.isAuthenticated,\r\n\t\tuuid: top.uuid,\r\n\t\twho: !auth\r\n\t\t\t? { userName: '', pwd:'' } \r\n\t\t\t: { userName: auth.who.userName, pwd: auth.who.pwd },\r\n\t\tauthError: top.authError,\r\n\t\tcanEdit: ownProps.canEdit,\r\n\t\tisRegister: ownProps.isRegister,\r\n\t\tformMode: 'edit'\r\n\t};\r\n};\r\n\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch<TopActions>) => {\r\n\treturn {\r\n\t\tsaveForm: (login: ILogin, formMode: string, isRegister: boolean) => dispatch<any>(isRegister?register(login):authenticate(login)),\r\n\t\tcancel: () => dispatch<any>(cancelLogin())\r\n\t}\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(LoginForm);\r\n\r\n","import * as React from \"react\";\r\n\r\ninterface ILanding {\r\n}\r\n\r\nconst Landing: React.FC<ILanding> = (props: ILanding) => {\r\n  return (\r\n    <p>Landing page</p>\r\n   )\r\n}\r\n\r\nexport default Landing;\r\n","import * as React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\nimport { IAppState } from \"./store/Store\";\r\n\r\nimport logo from './logo.svg'\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faQuestion, faHome, faPlus, faSurprise, faUser, faUserFriends, faSignOutAlt, faSignInAlt, faRegistered, faAnchor } from '@fortawesome/free-solid-svg-icons'\r\n\r\n\r\ninterface IProps {\r\n  isAuthenticated: boolean | null;\r\n  uuid: string | null;\r\n  signOut: () => void\r\n}\r\n\r\nfunction Navig({ isAuthenticated, uuid, signOut }: IProps) {\r\n\r\n  let navigate = useNavigate();\r\n\r\n  const otkaciMe = () => {\r\n    signOut();\r\n    navigate('/landing');\r\n  }\r\n\r\n  {/* <Navbar.Brand href=\"#\">Navbar Offcanvas</Navbar.Brand> \r\n           <Navbar.Toggle aria-controls=\"offcanvasNavbar\" /> \r\n         <Nav className=\"justify-content-end flex-grow-1 pe-3\"> */}\r\n\r\n  /// defaultActiveKey=\"/questions\"\r\n  return (\r\n    <div className=\"position-sticky pt-3\">\r\n      {isAuthenticated ? (\r\n        <>\r\n          <ul className=\"nav flex-column\">\r\n            <li className=\"nav-item\">\r\n              <a className=\"nav-link active\" aria-current=\"page\" href=\"#/supporter/promo\">\r\n                <FontAwesomeIcon icon={faSurprise} color='lightblue' />\r\n                {' '}Supporter\r\n              </a>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <a className=\"nav-link active\" aria-current=\"page\" href=\"#/questions\">\r\n                <FontAwesomeIcon icon={faQuestion} color='lightblue' />\r\n                {' '}Questions\r\n              </a>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <a className=\"nav-link\" href=\"#/answers/pera\">\r\n                <FontAwesomeIcon icon={faAnchor} color='lightblue' />\r\n                {' '}Answers\r\n              </a>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <a className=\"nav-link\" href=\"#/users/2\">\r\n                <FontAwesomeIcon icon={faUserFriends} color='lightblue' />\r\n                {' '}Users\r\n              </a>\r\n            </li>\r\n            {/* <li className=\"nav-item\">\r\n              <a className=\"nav-link\" href=\"#\" onClick={() => otkaciMe()}>\r\n                <FontAwesomeIcon icon={faSignOutAlt} color='lightblue' />\r\n                {' '}Sign out\r\n              </a>\r\n            </li> */}\r\n          </ul>\r\n            {/*\r\n          <h6 className=\"sidebar-heading d-flex justify-content-between align-items-center px-3 mt-4 mb-1 text-muted\">\r\n            <span>Saved reports</span>\r\n            <a className=\"link-secondary\" href=\"#\" aria-label=\"Add a new report\">\r\n              <FontAwesomeIcon icon={faPlus} />\r\n            </a>\r\n          </h6>\r\n          <ul className=\"nav flex-column mb-2\">\r\n            <li className=\"nav-item\">\r\n              <a className=\"nav-link\" href=\"#\">\r\n                <FontAwesomeIcon icon={faHome} color='lightblue' />\r\n                {' '}Current month\r\n              </a>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <a className=\"nav-link\" href=\"#\">\r\n                <FontAwesomeIcon icon={faHome} color='lightblue' />\r\n                {' '}Last quarter\r\n              </a>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <a className=\"nav-link\" href=\"#\">\r\n                <FontAwesomeIcon icon={faHome} color='lightblue' />\r\n                {' '}Social engagement\r\n              </a>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <a className=\"nav-link\" href=\"#\">\r\n              {' '}Year-end sale\r\n              </a>\r\n            </li>\r\n          </ul> */}\r\n        </>\r\n      ) : (\r\n        <ul className=\"nav flex-column\">\r\n          <li className=\"nav-item\">\r\n            <a className=\"nav-link active\" aria-current=\"page\" href=\"#/landing\">\r\n              <FontAwesomeIcon icon={faSurprise} color='lightblue' />\r\n              {' '}Landing\r\n            </a>\r\n          </li>\r\n          <li className=\"nav-item\">\r\n            <a className=\"nav-link active\" aria-current=\"page\" href=\"#/About\">\r\n              <FontAwesomeIcon icon={faQuestion} color='lightblue' />\r\n              {' '}About\r\n            </a>\r\n          </li>\r\n          {/* <li className=\"nav-item\">\r\n            <a className=\"nav-link\" href=\"#/Register\">\r\n              <FontAwesomeIcon icon={faRegistered} color='lightblue' />\r\n              {' '}Register\r\n            </a>\r\n          </li> */}\r\n          {/* <li className=\"nav-item\">\r\n            <a className=\"nav-link\" href=\"#\" onClick={() => otkaciMe()}>\r\n              <FontAwesomeIcon icon={faSignInAlt} color='lightblue' />\r\n              {' '}Sign in\r\n            </a>\r\n          </li> */}\r\n        </ul>\r\n      )}\r\n    </div>\r\n\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (store: IAppState) => ({\r\n  isAuthenticated: store.topState.top.isAuthenticated,\r\n  uuid: store.topState.top.uuid\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps\r\n)(Navig);","import * as React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\nimport { IAppState } from \"./store/Store\";\r\n\r\nimport logo from './logo.svg'\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faQuestion, faHome, faPlus, faSurprise, faUserFriends, faSignOutAlt, faSignInAlt, faAnchor } from '@fortawesome/free-solid-svg-icons'\r\nimport { faAngleDoubleLeft, faAngleDoubleRight, faRegistered, faUser, faCog } from '@fortawesome/free-solid-svg-icons';\r\nimport { Button, Col, Collapse, Container, Form, FormControl, Nav, Navbar, NavDropdown, Row } from 'react-bootstrap';\r\nimport { IUser } from \"./user/types\";\r\nimport { IAuth } from \"./Top/types\";\r\n\r\n\r\ninterface IProps {\r\n  isAuthenticated: boolean | null;\r\n  uuid: string | null;\r\n  auth?: IAuth,\r\n  open: boolean,\r\n  setOpen: (open: boolean) => void\r\n  register: () => void\r\n  signIn: () => void\r\n  signOut: () => void\r\n}\r\n\r\nfunction Header({ isAuthenticated, uuid, auth, open, setOpen, register, signIn, signOut }: IProps) {\r\n\r\n  let navigate = useNavigate();\r\n\r\n  const otkaciMe = () => {\r\n    signOut();\r\n    navigate('/landing');\r\n  }\r\n\r\n  {/* <Navbar.Brand href=\"#\">Navbar Offcanvas</Navbar.Brand> \r\n           <Navbar.Toggle aria-controls=\"offcanvasNavbar\" /> \r\n         <Nav className=\"justify-content-end flex-grow-1 pe-3\"> */}\r\n\r\n  /// defaultActiveKey=\"/questions\"\r\n  console.log('isAuthenticated', isAuthenticated);\r\n  return (\r\n    <Navbar as=\"header\" bg=\"light\" expand=\"lg\" className=\"navbar navbar-dark sticky-top bg-dark flex-md-nowrap p-y-0 shadow\">\r\n      <Container fluid>\r\n        <Button\r\n          onClick={() => setOpen(!open)}\r\n          aria-controls=\"example-collapse-text\"\r\n          aria-expanded={open}\r\n          size='sm'\r\n          variant=\"secondary\"\r\n        >\r\n          <FontAwesomeIcon icon={open ? faAngleDoubleLeft : faAngleDoubleRight} color='lightblue' />\r\n        </Button>\r\n        <Navbar.Brand href=\"#\">Support <i>Knowledge</i></Navbar.Brand>\r\n        <Navbar.Toggle aria-controls=\"navbarScroll\" />\r\n        <Navbar.Collapse id=\"navbarScroll\">\r\n          <Form className=\"d-flex\">\r\n            <FormControl\r\n              type=\"search\"\r\n              placeholder=\"Search\"\r\n              className=\"me-2\"\r\n              aria-label=\"Search\"\r\n            />\r\n            <Button variant=\"outline-success\">Search</Button>\r\n          </Form>\r\n          <Nav\r\n            className=\"me-auto my-2 my-lg-0\"\r\n            style={{ maxHeight: '100px' }}\r\n            navbarScroll\r\n          >\r\n            {!isAuthenticated &&\r\n              <Nav.Link href=\"#/Register\">\r\n                Register\r\n              </Nav.Link>\r\n            }\r\n            {!isAuthenticated &&\r\n              <Nav.Link href=\"#action2\" onClick={() => signIn()}>\r\n                Sign In\r\n              </Nav.Link>\r\n            }\r\n\r\n            {isAuthenticated &&\r\n              <>\r\n                <Nav.Link href=\"#\" disabled>\r\n                  <FontAwesomeIcon icon={faUser} />\r\n                  {' '}{auth?.who.userName}\r\n                </Nav.Link>\r\n\r\n                <Nav.Link href=\"#\" disabled>\r\n                  <FontAwesomeIcon icon={faCog} color='lightblue' />\r\n                </Nav.Link>\r\n                <NavDropdown title=\"\" id=\"navbarScrollingDropdown\">\r\n                  <NavDropdown.Item href=\"#action3\">Action</NavDropdown.Item>\r\n                  <NavDropdown.Item href=\"#action4\">Another action</NavDropdown.Item>\r\n                  <NavDropdown.Divider />\r\n                  {isAuthenticated &&\r\n                    <NavDropdown.Item href=\"#action5\" onClick={() => otkaciMe()}>\r\n                      Sign out\r\n                    </NavDropdown.Item>\r\n                  }\r\n                </NavDropdown>\r\n              </>\r\n            }\r\n\r\n          </Nav>\r\n\r\n        </Navbar.Collapse>\r\n        <Button\r\n          id='btnSync'\r\n          aria-controls=\"example-collapse-text\"\r\n          size='sm'\r\n          variant=\"secondary\"\r\n        >\r\n          Sync\r\n        </Button>\r\n      </Container>\r\n    </Navbar>\r\n\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (store: IAppState) => ({\r\n  isAuthenticated: store.topState.top.isAuthenticated,\r\n  uuid: store.topState.top.uuid,\r\n  auth: store.topState.top.auth\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps\r\n)(Header);","import React, { useCallback, useRef, useState, useEffect } from 'react';\r\n\r\n\r\nimport { HashRouter as Router, Route, Routes } from 'react-router-dom' // useRouteMatch\r\n\r\nimport { connect, Provider } from 'react-redux';\r\nimport { Store, Dispatch } from 'redux';\r\n\r\nimport { IAppState } from './store/Store';\r\n\r\nimport Support from './components/Support';\r\nimport AnswersPage from './Answers/containers/Page'\r\nimport containers from './Categories/containers/CategoriesPage'\r\n\r\nimport UsersPage from './user/containers/UsersPage';\r\nimport { authenticate, unAuthenticate, TopActions, navbarToggle } from './Top/actions';\r\nimport LoginForm from './Top/containers/LoginForm';\r\nimport Landing from './components/Landing';\r\nimport { ILogin, IAuth } from './Top/types';\r\nimport Navig from './Navig';\r\nimport Navv from './Navv';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faAngleDoubleLeft, faAngleDoubleRight, faRegistered } from '@fortawesome/free-solid-svg-icons';\r\nimport { Button, Col, Collapse, Container, Form, FormControl, Nav, Row } from 'react-bootstrap';\r\nimport Header from './Header';\r\n\r\n\r\ninterface IProps {\r\n\tnavbarOpen: boolean,\r\n\tisAuthenticated: boolean | null;\r\n\tuuid: string | null;\r\n\tauth?: IAuth,\r\n\ttoggleNavbar: () => void,\r\n\tcheckAuthentication: (login: ILogin) => void;\r\n\tsignOut: () => void\r\n}\r\n\r\nconst App = ({ navbarOpen, isAuthenticated, uuid, auth, toggleNavbar, checkAuthentication, signOut }: IProps) => {\r\n\r\n\t//const [navbarOpen, setNavbarOpen] = useState(true);\r\n\tlet main: null | HTMLDivElement = null;\r\n\r\n\tconst [open, setOpen] = useState(navbarOpen);\r\n\tconst [mainMd, setMainMd] = useState(9);\r\n\tconst [mainLg, setMainLg] = useState(10);\r\n\r\n\tuseEffect(() => {\r\n\t\tconst login = {\r\n\t\t\tuserName: 'Jack',\r\n\t\t\tpwd: 'Daniels'\r\n\t\t}\r\n\t\tcheckAuthentication(login);\r\n\t}, []);\r\n\r\n\tconst signIn = () => {\r\n\t\tconst login = {\r\n\t\t\tuserName: 'Jack',\r\n\t\t\tpwd: 'Daniels'\r\n\t\t}\r\n\t\tcheckAuthentication(login);\r\n\t}\r\n\r\n\tconst register = () => {\r\n\t\t\r\n\t}\r\n\r\n\t\r\n\t// null is the third state false/true/null in reducer\r\n\tconst app = //isAuthenticated !== null ? (  \r\n\t\t<Router>\r\n\t\t\t<Header open={open} setOpen={setOpen} register={register} signIn={signIn} signOut={signOut} />\r\n\r\n\t\t\t<Container fluid>\r\n\t\t\t\t<Row>\r\n\t\t\t\t\t<Collapse\r\n\t\t\t\t\t\tin={open}\r\n\t\t\t\t\t\tdimension=\"width\"\r\n\t\t\t\t\t\tonEnter={() => { console.log('onEnter'); setMainMd(9); setMainLg(10) }}\r\n\t\t\t\t\t\tonEntering={() => { console.log('onEntering'); }}\r\n\t\t\t\t\t\tonEntered={() => { console.log('onEntered'); }}\r\n\t\t\t\t\t\tonExit={() => { console.log('onExit'); }}\r\n\t\t\t\t\t\tonExiting={() => { console.log('onExiting'); }}\r\n\t\t\t\t\t\tonExited={() => { console.log('onExited'); setMainMd(12); setMainLg(12) }}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t{/* <Col id=\"example-collapse-text\" className=\"position-sticky pt-3\"> */}\r\n\t\t\t\t\t\t{/* <Col id=\"example-collapse-text\" className=\"position-sticky p-0 m-0 col-md-3 ms-sm-auto col-lg-2\"> */}\r\n\t\t\t\t\t\t<Col\r\n\t\t\t\t\t\t\tid=\"example-collapse-text\"\r\n\t\t\t\t\t\t\tmd={3}\r\n\t\t\t\t\t\t\tlg={2}\r\n\t\t\t\t\t\t\tclassName=\"p-3 m-3 ms-sm-auto sidebar\"\r\n\t\t\t\t\t\t\tstyle={{ border: '1px solid silver', backgroundColor: 'yellow' }}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<Navig signOut={signOut} />\r\n\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t</Collapse>\r\n\r\n\t\t\t\t\t<Col id=\"main\" md={mainMd} lg={mainLg} className=\"ms-sm-auto px-md-4\">\r\n\t\t\t\t\t\t<div className=\"d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pt-3 pb-2 mb-3 border-bottom\">\r\n\t\t\t\t\t\t\t<h1 className=\"h2\">Dashboard</h1>\r\n\t\t\t\t\t\t\t<div className=\"btn-toolbar mb-2 mb-md-0\">\r\n\t\t\t\t\t\t\t\t<div className=\"btn-group me-2\">\r\n\t\t\t\t\t\t\t\t\t<button type=\"button\" className=\"btn btn-sm btn-outline-secondary\">Share</button>\r\n\t\t\t\t\t\t\t\t\t<button type=\"button\" className=\"btn btn-sm btn-outline-secondary\">Export</button>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<button type=\"button\" className=\"btn btn-sm btn-outline-secondary dropdown-toggle\">\r\n\t\t\t\t\t\t\t\t\t<span data-feather=\"calendar\"></span>\r\n\t\t\t\t\t\t\t\t\tThis week\r\n\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t<div style={{ border: '1px solid navy' }}>\r\n\t\t\t\t\t\t\t<Routes>\r\n\t\t\t\t\t\t\t\t<Route path=\"/\" element={<Landing />} />\r\n\t\t\t\t\t\t\t\t<Route path=\"/sign-in\" element={\r\n\t\t\t\t\t\t\t\t\t<LoginForm canEdit={true} isRegister={false} />\r\n\t\t\t\t\t\t\t\t} />\r\n\t\t\t\t\t\t\t\t<Route path=\"/register\" element={\r\n\t\t\t\t\t\t\t\t\t<LoginForm canEdit={true} isRegister={true} />\r\n\t\t\t\t\t\t\t\t} />\r\n\t\t\t\t\t\t\t\t<Route path=\"/supporter/:tekst\" element={<Support />} />\r\n\t\t\t\t\t\t\t\t<Route path=\"/questions\" element={<containers.categories canEdit={true} />} />\r\n\t\t\t\t\t\t\t\t<Route path=\"/answers/:slug\" element={<AnswersPage />} />\r\n\t\t\t\t\t\t\t\t<Route path=\"/users/:slug\" element={<UsersPage canEdit={true} />} />\r\n\t\t\t\t\t\t\t</Routes>\r\n\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t</Row>\r\n\r\n\t\t\t</Container>\r\n\r\n\t\t</Router>\r\n\t// )\r\n\t// : (\r\n\t// \tnull\r\n\t// );\r\n\r\n\treturn (\r\n\t\t<div className=\"App\">\r\n\t\t\t{app}\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nconst mapStateToProps = (store: IAppState) => ({\r\n\tnavbarOpen: store.topState.top.navbarOpen,\r\n\tisAuthenticated: store.topState.top.isAuthenticated,\r\n\tauth: store.topState.top.auth,\r\n\tuuid: store.topState.top.uuid\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch<TopActions>) => {\r\n\treturn {\r\n\t\ttoggleNavbar: () => dispatch<any>(navbarToggle()),\r\n\t\tcheckAuthentication: async(login: ILogin) => await dispatch<any>(authenticate(login)),\r\n\t\tsignOut: () => dispatch<any>(unAuthenticate())\r\n\t}\r\n};\r\n\r\nexport default connect(\r\n\tmapStateToProps,\r\n\tmapDispatchToProps\r\n)(App);\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport * as ReactDOM from 'react-dom';\r\n\r\nimport { HashRouter as Router, Route, Link } from 'react-router-dom' // useRouteMatch\r\n\r\nimport { Provider } from 'react-redux';\r\n\r\nimport { Store } from 'redux';\r\n\r\nimport configureStore, { IAppState } from './store/Store';\r\nimport { loadCategories, \r\n\tremoveCategory, storeCategory, updateCategory,\r\n\tremoveQuestion, storeQuestion, editQuestion, updateQuestion \r\n} from './Categories/actions';\r\nimport { getAllAnswers } from './Answers/actions';\r\n\r\nimport 'bootstrap/dist/css/bootstrap.css'\r\n// import './formik/formikStyles.css';\r\nimport './index.css';\r\nimport './App.css';\r\nimport './dashboard.css';\r\n\r\nimport './formik/formikStyles.css';\r\nimport { getAllUsers, storeUser } from './user/actions';\r\nimport { getAllTags } from './roleTags/actions';\r\nimport { loadTop } from './Top/actions';\r\nimport { IUser } from './user/types';\r\nimport App from './App';\r\nimport { coolColors } from './cool-colors';\r\nimport { IQuestion } from './Categories/types';\r\n\r\ninterface IProps {\r\n\tstore: Store<IAppState>;\r\n}\r\n\r\n// coolColors();\r\n\r\n// Generate the store\r\nlocalStorage.clear(); // !!!!!!!!!!!!\r\n\r\ninterface IEvt {\r\n\ttype: string;\r\n\tentity: IQuestion;\r\n}\r\n\r\n\r\nconst store = configureStore();\r\nstore.dispatch(loadCategories());\r\nstore.dispatch(getAllAnswers());\r\nstore.dispatch(getAllUsers())\r\nstore.dispatch(loadTop());\r\nstore.dispatch(getAllTags());\r\n\r\nconst sessionId = Math.floor((Math.random() * 10000) + 1);\r\nsessionStorage.setItem('sessionId', sessionId.toString())\r\n\r\nwindow.addEventListener(\"PassToBackground\", function (evt: any) {\r\n\t// alert('Dobio')\r\n\tconst { detail } = evt;\r\n\tconst sessionId = sessionStorage.getItem('sessionId');\r\n\tconsole.log('Session breeeeeee:', sessionId, ' detail:', detail)\r\n\tif (sessionId !== detail.sessionId) {\r\n\t\tswitch (detail.type) {\r\n\t\t\tcase \"STORE_CATEGORY\":\r\n\t\t\t\tdetail.entity.created = new Date(detail.entity.created);\r\n\t\t\t\tstore.dispatch(storeCategory(false, detail.entity));\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"UPDATE_CATEGORY\":\r\n\t\t\t\tdetail.entity.created = new Date(detail.entity.created);\r\n\t\t\t\tstore.dispatch(updateCategory(false, detail.entity));\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"REMOVE_CATEGORY\":\r\n\t\t\t\tstore.dispatch(removeCategory(false, detail.entity));\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"STORE_QUESTION\":\r\n\t\t\t\tdetail.entity.created = new Date(detail.entity.created);\r\n\t\t\t\tstore.dispatch(storeQuestion(false, detail.entity));\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"UPDATE_QUESTION\": {\r\n\t\t\t\t\tconst question = detail.entity;\r\n\t\t\t\t\tquestion.created = new Date(question.created);\r\n\t\t\t\t\tfor (let i=0; i < question.answers.length; i++) {\r\n\t\t\t\t\t\tconst a = question.answers[i];\r\n\t\t\t\t\t\ta.assigned = new Date(a.assigned);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tstore.dispatch(updateQuestion(false, question));\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\t\t\t\r\n\t\t\tcase \"REMOVE_Question\": {\r\n\t\t\t\t\tconst { categoryId, questionId } = detail.entity\r\n\t\t\t\t\tstore.dispatch(removeQuestion(false, categoryId, questionId));\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n\r\n}, false);\r\n\r\n\r\nconst userIdOwner = 101;\r\nconst state = store.getState();\r\nif (state.usersState.allUsers.length === 0) {\r\n\r\n\tconst treatFirstUserAsTheOwner = async () => {\r\n\t\treturn await store.dispatch(storeUser(user, 'add'))\r\n\t};\r\n\r\n\tconst user: IUser = {\r\n\t\troleId: 11,\r\n\t\tuserId: userIdOwner,\r\n\t\tuserName: \"Jack\",\r\n\t\tpwd: \"Daniels\",\r\n\t\tdepartment: \"dept1\",\r\n\t\tcreatedBy: userIdOwner,\r\n\t\tcreated: new Date()\r\n\t}\r\n\r\n\ttreatFirstUserAsTheOwner()\r\n\t\t.then((res) => {\r\n\t\t\tReactDOM.render(\r\n\t\t\t\t<React.StrictMode>\r\n\t\t\t\t\t<Provider store={store} >\r\n\t\t\t\t\t\t<App />\r\n\t\t\t\t\t</Provider>\r\n\t\t\t\t</React.StrictMode>,\r\n\t\t\t\tdocument.getElementById('root')\r\n\t\t\t);\r\n\t\t})\r\n\t// store.dispatch(authenticate(user))\r\n}\r\nelse {\r\n\tReactDOM.render(\r\n\t\t<React.StrictMode>\r\n\t\t\t<Provider store={store} >\r\n\t\t\t\t<App />\r\n\t\t\t</Provider>\r\n\t\t</React.StrictMode>,\r\n\t\tdocument.getElementById('root')\r\n\t);\r\n}\r\n\r\n// Render the App\r\n// ReactDOM.render(<Root store={store} />, document.getElementById(\r\n//   'root'\r\n// ) as HTMLElement);\r\n\r\n// React.StrictMode\r\n\r\n"],"sourceRoot":""}